#include "box_matrix.h"
using namespace std;

//  evaluator and quantum number setup subroutines
//  on-axis (0,0,n) total momentum

#if (OA_LMAX >= 0)

#if (OA_SX2MAX >= 0)
void BoxMatrix::setup___oa_0_A1(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 0)
  if (lmax >= 0) {
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 0, 1, 0, 0, 1));
  }
#endif
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 0, 1, 2, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 2, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 0, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 0, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 0, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 0, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 2));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 0, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 0, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 2));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 0, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 0, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 0)
void BoxMatrix::evaluate___oa_0_A1(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 0)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 1)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = wr_1_0;
  results[k++] = wr_0_0 + 0.894427190999915880e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  results[k++] = wr_2_0;
  results[k++] =
      0.894427190999915880e0 * wr_1_0 + 0.878310065653679863e0 * wr_3_0;
  results[k++] = wr_0_0 + 0.638876564999939914e0 * wr_2_0 +
                 0.857142857142857143e0 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  results[k++] = wr_3_0;
  results[k++] =
      0.878310065653679863e0 * wr_2_0 + 0.872871560943969525e0 * wr_4_0;
  results[k++] = 0.878310065653679863e0 * wr_1_0 +
                 0.596284793999943921e0 * wr_3_0 +
                 0.849411985729375908e0 * wr_5_0;
  results[k++] = wr_0_0 + 0.596284793999943921e0 * wr_2_0 +
                 0.545454545454545455e0 * wr_4_0 +
                 0.840454842765498668e0 * wr_6_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] = 0.141421356237309505e1 * wr_4_4;
  results[k++] = wr_4_0;
  results[k++] = 0.738548945875996397e0 * wr_5_4;
  results[k++] =
      0.872871560943969523e0 * wr_3_0 + 0.870388279778489189e0 * wr_5_0;
  results[k++] =
      -0.114991914915213794e1 * wr_4_4 + 0.534862186740501905e0 * wr_6_4;
  results[k++] = 0.857142857142857143e0 * wr_2_0 +
                 0.580796877272672649e0 * wr_4_0 +
                 0.845691372199148565e0 * wr_6_0;
  results[k++] =
      -0.104137121504818377e1 * wr_5_4 + 0.433904672936743237e0 * wr_7_4;
  results[k++] =
      0.872871560943969523e0 * wr_1_0 + 0.545454545454545455e0 * wr_3_0 +
      0.525971891352175149e0 * wr_5_0 + 0.835998314239128075e0 * wr_7_0;
  results[k++] =
      wr_0_0 - 0.813115628181741708e0 * wr_2_0 +
      0.377622377622377622e0 * wr_4_0 - 0.100854581131859840e0 * wr_6_0 +
      0.118723732535267889e-1 * wr_8_0 + 0.134687352214546113e1 * wr_8_8;
  results[k++] = 0.534038687889140788e0 * wr_4_4 -
                 0.956790566516759144e0 * wr_6_4 +
                 0.373555503512326385e0 * wr_8_4;
  results[k++] = 0.534038687889140788e0 * wr_4_4 -
                 0.956790566516759144e0 * wr_6_4 +
                 0.373555503512326385e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.580796877272672649e0 * wr_2_0 +
                 0.485514485514485514e0 * wr_4_0 +
                 0.504272905659299201e0 * wr_6_0 +
                 0.831066127746875225e0 * wr_8_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] = 0.141421356237309505e1 * wr_5_4;
  results[k++] = wr_5_0;
  results[k++] =
      0.738548945875996397e0 * wr_4_4 + 0.916057224828688942e0 * wr_6_4;
  results[k++] =
      0.870388279778489190e0 * wr_4_0 + 0.869048189253481640e0 * wr_6_0;
  results[k++] =
      -0.486504255410519898e0 * wr_5_4 + 0.729756383115779847e0 * wr_7_4;
  results[k++] = 0.849411985729375908e0 * wr_3_0 +
                 0.573350763461484538e0 * wr_5_0 +
                 0.843607101939151060e0 * wr_7_0;
  results[k++] = -0.104137121504818377e1 * wr_4_4 -
                 0.699650262281441238e0 * wr_6_4 +
                 0.624368807625713674e0 * wr_8_4;
  results[k++] =
      0.849411985729375908e0 * wr_2_0 + 0.525971891352175149e0 * wr_4_0 +
      0.516247292013494740e0 * wr_6_0 + 0.833437219948194515e0 * wr_8_0;
  results[k++] =
      0.522232967867093514e0 * wr_1_0 - 0.736360647893045208e0 * wr_3_0 +
      0.461538461538461538e0 * wr_5_0 - 0.147950025587257759e0 * wr_7_0 +
      0.197185571147342549e-1 * wr_9_0 + 0.102481708589288520e1 * wr_9_8;
  results[k++] = -0.652713951864505407e0 * wr_5_4 -
                 0.767898766899418127e0 * wr_7_4 +
                 0.555785099057811678e0 * wr_9_4;
  results[k++] = 0.652713951864505407e0 * wr_5_4 -
                 0.895881894715987815e0 * wr_7_4 +
                 0.333471059434687007e0 * wr_9_4;
  results[k++] =
      0.870388279778489189e0 * wr_1_0 + 0.525971891352175149e0 * wr_3_0 +
      0.461538461538461538e0 * wr_5_0 + 0.493166751957525863e0 * wr_7_0 +
      0.828179398818838705e0 * wr_9_0;
  results[k++] =
      wr_0_0 - 0.344010458076890723e0 * wr_2_0 -
      0.461538461538461538e0 * wr_4_0 + 0.522070772917862704e0 * wr_6_0 -
      0.213077856813296580e0 * wr_8_0 + 0.327404788875149322e-1 * wr_10_0 +
      0.779768881242109072e0 * wr_8_8 + 0.102095712081799881e1 * wr_10_8;
  results[k++] =
      0.652713951864505407e0 * wr_4_4 - 0.412733185556249043e0 * wr_6_4 -
      0.792986244298096358e0 * wr_8_4 + 0.507466861201776168e0 * wr_10_4;
  results[k++] =
      0.652713951864505407e0 * wr_4_4 - 0.412733185556249043e0 * wr_6_4 -
      0.792986244298096358e0 * wr_8_4 + 0.507466861201776168e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.573350763461484538e0 * wr_2_0 +
      0.461538461538461538e0 * wr_4_0 + 0.435058977431552251e0 * wr_6_0 +
      0.481143547642927761e0 * wr_8_0 + 0.825060067965376290e0 * wr_10_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  results[k++] = 0.141421356237309505e1 * wr_6_4;
  results[k++] = wr_6_0;
  results[k++] =
      0.916057224828688946e0 * wr_5_4 + 0.100766294731155784e1 * wr_7_4;
  results[k++] =
      0.869048189253481640e0 * wr_5_0 + 0.868243142124459192e0 * wr_7_0;
  results[k++] = 0.534862186740501905e0 * wr_4_4 -
                 0.114991914915213794e0 * wr_6_4 +
                 0.846606213920004136e0 * wr_8_4;
  results[k++] = 0.845691372199148565e0 * wr_4_0 +
                 0.569180939727219195e0 * wr_6_0 +
                 0.842319572634661574e0 * wr_8_0;
  results[k++] = -0.699650262281441238e0 * wr_5_4 -
                 0.395096618700107993e0 * wr_7_4 +
                 0.748944501013427356e0 * wr_9_4;
  results[k++] =
      0.840454842765498668e0 * wr_3_0 + 0.516247292013494740e0 * wr_5_0 +
      0.510646834705236677e0 * wr_7_0 + 0.831822968539419118e0 * wr_9_0;
  results[k++] =
      0.378204679244474401e0 * wr_2_0 - 0.676553097759318853e0 * wr_4_0 +
      0.502218476229899290e0 * wr_6_0 - 0.181360673533778808e0 * wr_8_0 +
      0.263962179593872341e-1 * wr_10_0 - 0.457214378521911670e0 * wr_8_8 +
      0.823121945799548941e0 * wr_10_8;
  results[k++] =
      -0.956790566516759144e0 * wr_4_4 - 0.726013379613995319e0 * wr_6_4 -
      0.525349304214994071e0 * wr_8_4 + 0.681888105621460760e0 * wr_10_4;
  results[k++] =
      -0.142629916464133841e0 * wr_4_4 + 0.710244180358673433e0 * wr_6_4 -
      0.850656961355028079e0 * wr_8_4 + 0.304949631443628547e0 * wr_10_4;
  results[k++] =
      0.845691372199148565e0 * wr_2_0 + 0.504272905659299201e0 * wr_4_0 +
      0.449197860962566845e0 * wr_6_0 + 0.486641753360011698e0 * wr_8_0 +
      0.826332327885268940e0 * wr_10_0;
  results[k++] =
      0.647750275631295721e0 * wr_1_0 - 0.494727444918153652e0 * wr_3_0 -
      0.291846434327549309e0 * wr_5_0 + 0.533626081120558902e0 * wr_7_0 -
      0.257389859811435579e0 * wr_9_0 + 0.438184658439394570e-1 * wr_11_0 +
      0.472133685218780226e0 * wr_9_8 + 0.937830571682249486e0 * wr_11_8;
  results[k++] =
      -0.412733185556249043e0 * wr_5_4 - 0.651683977194077436e0 * wr_7_4 -
      0.597451029502362555e0 * wr_9_4 + 0.632676629197174697e0 * wr_11_4;
  results[k++] =
      0.738319567579045770e0 * wr_5_4 - 0.255011692749341465e0 * wr_7_4 -
      0.801564669116709009e0 * wr_9_4 + 0.471569316886770272e0 * wr_11_4;
  results[k++] =
      0.869048189253481640e0 * wr_1_0 + 0.516247292013494740e0 * wr_3_0 +
      0.435058977431552251e0 * wr_5_0 + 0.421137950100842420e0 * wr_7_0 +
      0.473975125035597423e0 * wr_9_0 + 0.823040973693131059e0 * wr_11_0;
  results[k++] =
      wr_0_0 - 0.813115628181741708e-1 * wr_2_0 -
      0.513368983957219251e0 * wr_4_0 - 0.811832541618686021e-1 * wr_6_0 +
      0.516403603546259200e0 * wr_8_0 - 0.307191101909814016e0 * wr_10_0 +
      0.586350787454569929e-1 * wr_12_0 + 0.658246458191390775e0 * wr_8_8 +
      0.577062720462347156e0 * wr_10_8 + 0.935380857689642068e0 * wr_12_8;
  results[k++] =
      0.710244180358673433e0 * wr_4_4 - 0.114810459073296591e0 * wr_6_4 -
      0.571517973152389586e0 * wr_8_4 - 0.641369355377525554e0 * wr_10_4 +
      0.594935142098570023e0 * wr_12_4;
  results[k++] =
      0.710244180358673433e0 * wr_4_4 - 0.114810459073296591e0 * wr_6_4 -
      0.571517973152389586e0 * wr_8_4 - 0.641369355377525554e0 * wr_10_4 +
      0.594935142098570023e0 * wr_12_4;
  results[k++] =
      wr_0_0 + 0.569180939727219195e0 * wr_2_0 +
      0.449197860962566845e0 * wr_4_0 + 0.405916270809343010e0 * wr_6_0 +
      0.406160137620653305e0 * wr_8_0 + 0.466338299284777904e0 * wr_10_0 +
      0.820891102436397900e0 * wr_12_0;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 0)
void BoxMatrix::setup___oa_0_A2(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 0)
void BoxMatrix::evaluate___oa_0_A2(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 4)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] =
      wr_0_0 - 0.813115628181741708e0 * wr_2_0 +
      0.377622377622377622e0 * wr_4_0 - 0.100854581131859840e0 * wr_6_0 +
      0.118723732535267889e-1 * wr_8_0 - 0.134687352214546113e1 * wr_8_8;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] =
      0.522232967867093514e0 * wr_1_0 - 0.736360647893045208e0 * wr_3_0 +
      0.461538461538461538e0 * wr_5_0 - 0.147950025587257759e0 * wr_7_0 +
      0.197185571147342549e-1 * wr_9_0 - 0.102481708589288520e1 * wr_9_8;
  results[k++] =
      wr_0_0 - 0.344010458076890723e0 * wr_2_0 -
      0.461538461538461538e0 * wr_4_0 + 0.522070772917862704e0 * wr_6_0 -
      0.213077856813296580e0 * wr_8_0 + 0.327404788875149322e-1 * wr_10_0 -
      0.779768881242109072e0 * wr_8_8 - 0.102095712081799881e1 * wr_10_8;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  results[k++] =
      0.378204679244474401e0 * wr_2_0 - 0.676553097759318853e0 * wr_4_0 +
      0.502218476229899290e0 * wr_6_0 - 0.181360673533778808e0 * wr_8_0 +
      0.263962179593872341e-1 * wr_10_0 + 0.457214378521911670e0 * wr_8_8 -
      0.823121945799548941e0 * wr_10_8;
  results[k++] =
      0.647750275631295721e0 * wr_1_0 - 0.494727444918153652e0 * wr_3_0 -
      0.291846434327549309e0 * wr_5_0 + 0.533626081120558902e0 * wr_7_0 -
      0.257389859811435579e0 * wr_9_0 + 0.438184658439394570e-1 * wr_11_0 -
      0.472133685218780226e0 * wr_9_8 - 0.937830571682249486e0 * wr_11_8;
  results[k++] =
      wr_0_0 - 0.813115628181741708e-1 * wr_2_0 -
      0.513368983957219251e0 * wr_4_0 - 0.811832541618686021e-1 * wr_6_0 +
      0.516403603546259200e0 * wr_8_0 - 0.307191101909814016e0 * wr_10_0 +
      0.586350787454569929e-1 * wr_12_0 - 0.658246458191390775e0 * wr_8_8 -
      0.577062720462347156e0 * wr_10_8 - 0.935380857689642068e0 * wr_12_8;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 0)
void BoxMatrix::setup___oa_0_B1(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 0)
void BoxMatrix::evaluate___oa_0_B1(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 2)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] = wr_0_0 - 0.638876564999939914e0 * wr_2_0 +
                 0.142857142857142857e0 * wr_4_0 +
                 0.119522860933439364e1 * wr_4_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] =
      0.654653670707977142e0 * wr_1_0 - 0.666666666666666667e0 * wr_3_0 +
      0.189934294099396581e0 * wr_5_0 + 0.953462589245592318e0 * wr_5_4;
  results[k++] = wr_0_0 - 0.636363636363636364e0 * wr_4_0 +
                 0.252136452829649601e0 * wr_6_0 +
                 0.760600024121886864e0 * wr_4_4 +
                 0.943408221205037868e0 * wr_6_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  results[k++] =
      0.553283335172488125e0 * wr_2_0 - 0.674824989961900242e0 * wr_4_0 +
      0.218356573370573363e0 * wr_6_0 - 0.376399396004920483e0 * wr_4_4 +
      0.817015485702651929e0 * wr_6_4;
  results[k++] =
      0.755928946018454454e0 * wr_1_0 - 0.157459164324443390e0 * wr_3_0 -
      0.607340026116709834e0 * wr_5_0 + 0.289598311060820366e0 * wr_7_0 +
      0.508137122366012587e0 * wr_5_4 + 0.889239964140522027e0 * wr_7_4;
  results[k++] =
      wr_0_0 + 0.232318750909069060e0 * wr_2_0 -
      0.296703296703296703e0 * wr_4_0 - 0.554700196225229121e0 * wr_6_0 +
      0.332426451098750089e0 * wr_8_0 + 0.677017603888712483e0 * wr_4_4 +
      0.566044932723022720e0 * wr_6_4 + 0.883993664877948693e0 * wr_8_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  results[k++] =
      0.502518907629606037e0 * wr_3_0 - 0.678397772067843740e0 * wr_5_0 +
      0.237659377174355642e0 * wr_7_0 - 0.486504255410519898e0 * wr_5_4 +
      0.729756383115779847e0 * wr_7_4;
  results[k++] =
      0.674199862463242087e0 * wr_2_0 - 0.231931803521356633e0 * wr_4_0 -
      0.585369407004963538e0 * wr_6_0 + 0.315009659623994742e0 * wr_8_0 -
      0.388096137776548475e0 * wr_4_4 + 0.312893109387371941e0 * wr_6_4 +
      0.837678658128950905e0 * wr_8_4;
  results[k++] =
      0.797724035217465642e0 * wr_1_0 + 0.803435335180143866e-1 * wr_3_0 -
      0.352505822688910769e0 * wr_5_0 - 0.516565479104199649e0 * wr_7_0 +
      0.361447122294319006e0 * wr_9_0 + 0.421325044234743165e0 * wr_5_4 +
      0.495676522629109606e0 * wr_7_4 + 0.861018573088457655e0 * wr_9_4;
  results[k++] =
      wr_0_0 + 0.344010458076890723e0 * wr_2_0 -
      0.769230769230769231e-1 * wr_4_0 - 0.391553079688397026e0 * wr_6_0 -
      0.467396589138844110e0 * wr_8_0 + 0.392885746650179185e0 * wr_10_0 +
      0.643584635795442731e0 * wr_4_4 + 0.488352490976725484e0 * wr_6_4 +
      0.511785805981970295e0 * wr_8_4 + 0.857775553756813406e0 * wr_10_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] =
      0.125436301501063615e1 * wr_4_4 - 0.269679944985296835e0 * wr_6_4 +
      0.300828418798093419e-1 * wr_8_4 + 0.128337789583949581e1 * wr_8_8;
  results[k++] =
      0.471704110602518933e0 * wr_4_0 - 0.680301343049807525e0 * wr_6_0 +
      0.251691112853816832e0 * wr_8_0 + 0.563794248132765711e-1 * wr_4_4 -
      0.545454545454545455e0 * wr_6_4 + 0.669300979309740273e0 * wr_8_4;
  results[k++] =
      0.733799385705342806e0 * wr_5_4 - 0.258988018484238638e0 * wr_7_4 +
      0.357045281568755290e-1 * wr_9_4 + 0.778980837704520116e0 * wr_9_8;
  results[k++] =
      0.628938814136691911e0 * wr_3_0 - 0.275945784794905222e0 * wr_5_0 -
      0.568650446758208528e0 * wr_7_0 + 0.333471059434687007e0 * wr_9_0 -
      0.494727444918153653e0 * wr_5_4 + 0.174609686441701289e0 * wr_7_4 +
      0.794375603098454394e0 * wr_9_4;
  results[k++] =
      -0.579365459502321093e0 * wr_4_4 + 0.618219749775327064e0 * wr_6_4 -
      0.246813207972113431e0 * wr_8_4 + 0.375367048079942447e-1 * wr_10_4 -
      0.701960753969951116e0 * wr_8_8 + 0.536131381659262361e0 * wr_10_8;
  results[k++] =
      0.730760865880454899e0 * wr_2_0 - 0.381220041082815308e0 * wr_6_0 -
      0.488087943036693361e0 * wr_8_0 + 0.382517539124012198e0 * wr_10_0 -
      0.390608113112417935e0 * wr_4_4 + 0.213032987027188115e0 * wr_6_4 +
      0.410456862809979086e0 * wr_8_4 + 0.835138960222810244e0 * wr_10_4;
  results[k++] =
      -0.572644055006565595e0 * wr_5_4 + 0.565109264809110783e0 * wr_7_4 -
      0.236837046426071546e0 * wr_9_4 + 0.380001384677121045e-1 * wr_11_4 -
      0.738167759297893656e0 * wr_9_8 + 0.399892299405694503e0 * wr_11_8;
  results[k++] =
      0.819346490398702645e0 * wr_1_0 + 0.208595406258247960e0 * wr_3_0 -
      0.153816576578967868e0 * wr_5_0 - 0.406978983786120319e0 * wr_7_0 -
      0.430908460748244887e0 * wr_9_0 + 0.415698466923422743e0 * wr_11_0 +
      0.386076543125819761e0 * wr_5_4 + 0.411476315699886850e0 * wr_7_4 +
      0.479026512379973751e0 * wr_9_4 + 0.845449708241016637e0 * wr_11_4;
  results[k++] =
      wr_0_0 - 0.894427190999915880e0 * wr_2_0 +
      0.529411764705882353e0 * wr_4_0 - 0.223253948945138656e0 * wr_6_0 +
      0.638251644832455195e-1 * wr_8_0 - 0.111032928401137596e-1 * wr_10_0 +
      0.888410284022075649e-3 * wr_12_0 + 0.146093013739009249e1 * wr_12_12;
  results[k++] =
      0.199085673465093956e0 * wr_4_4 - 0.563185969638311832e0 * wr_6_4 +
      0.533999638100939328e0 * wr_8_4 - 0.228810463449621380e0 * wr_10_4 +
      0.379008780322601093e-1 * wr_12_4 + 0.325445759158338055e0 * wr_8_8 -
      0.700300092183081781e0 * wr_10_8 + 0.315316822802553051e0 * wr_12_8;
  results[k++] =
      0.199085673465093956e0 * wr_4_4 - 0.563185969638311832e0 * wr_6_4 +
      0.533999638100939328e0 * wr_8_4 - 0.228810463449621380e0 * wr_10_4 +
      0.379008780322601093e-1 * wr_12_4 + 0.325445759158338055e0 * wr_8_8 -
      0.700300092183081781e0 * wr_10_8 + 0.315316822802553051e0 * wr_12_8;
  results[k++] =
      wr_0_0 + 0.406557814090870854e0 * wr_2_0 +
      0.588235294117647059e-1 * wr_4_0 - 0.223253948945138656e0 * wr_6_0 -
      0.411962425300948352e0 * wr_8_0 - 0.388615249403981585e0 * wr_10_0 +
      0.439763090590927446e0 * wr_12_0 + 0.626376490453318594e0 * wr_4_4 +
      0.455639883925652964e0 * wr_6_4 + 0.432026979075689210e0 * wr_8_4 +
      0.484829660819068447e0 * wr_10_4 + 0.843241302967334005e0 * wr_12_4;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 0)
void BoxMatrix::setup___oa_0_B2(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 0)
void BoxMatrix::evaluate___oa_0_B2(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 2)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] = wr_0_0 - 0.638876564999939914e0 * wr_2_0 +
                 0.142857142857142857e0 * wr_4_0 -
                 0.119522860933439364e1 * wr_4_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] =
      0.654653670707977142e0 * wr_1_0 - 0.666666666666666667e0 * wr_3_0 +
      0.189934294099396581e0 * wr_5_0 - 0.953462589245592318e0 * wr_5_4;
  results[k++] = wr_0_0 - 0.636363636363636364e0 * wr_4_0 +
                 0.252136452829649601e0 * wr_6_0 -
                 0.760600024121886864e0 * wr_4_4 -
                 0.943408221205037868e0 * wr_6_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  results[k++] =
      0.553283335172488125e0 * wr_2_0 - 0.674824989961900242e0 * wr_4_0 +
      0.218356573370573363e0 * wr_6_0 + 0.376399396004920483e0 * wr_4_4 -
      0.817015485702651929e0 * wr_6_4;
  results[k++] =
      0.755928946018454454e0 * wr_1_0 - 0.157459164324443390e0 * wr_3_0 -
      0.607340026116709834e0 * wr_5_0 + 0.289598311060820366e0 * wr_7_0 -
      0.508137122366012587e0 * wr_5_4 - 0.889239964140522027e0 * wr_7_4;
  results[k++] =
      wr_0_0 + 0.232318750909069060e0 * wr_2_0 -
      0.296703296703296703e0 * wr_4_0 - 0.554700196225229121e0 * wr_6_0 +
      0.332426451098750089e0 * wr_8_0 - 0.677017603888712483e0 * wr_4_4 -
      0.566044932723022720e0 * wr_6_4 - 0.883993664877948693e0 * wr_8_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  results[k++] =
      0.502518907629606037e0 * wr_3_0 - 0.678397772067843740e0 * wr_5_0 +
      0.237659377174355642e0 * wr_7_0 + 0.486504255410519898e0 * wr_5_4 -
      0.729756383115779847e0 * wr_7_4;
  results[k++] =
      0.674199862463242087e0 * wr_2_0 - 0.231931803521356633e0 * wr_4_0 -
      0.585369407004963538e0 * wr_6_0 + 0.315009659623994742e0 * wr_8_0 +
      0.388096137776548475e0 * wr_4_4 - 0.312893109387371941e0 * wr_6_4 -
      0.837678658128950905e0 * wr_8_4;
  results[k++] =
      0.797724035217465642e0 * wr_1_0 + 0.803435335180143866e-1 * wr_3_0 -
      0.352505822688910769e0 * wr_5_0 - 0.516565479104199649e0 * wr_7_0 +
      0.361447122294319006e0 * wr_9_0 - 0.421325044234743165e0 * wr_5_4 -
      0.495676522629109606e0 * wr_7_4 - 0.861018573088457655e0 * wr_9_4;
  results[k++] =
      wr_0_0 + 0.344010458076890723e0 * wr_2_0 -
      0.769230769230769231e-1 * wr_4_0 - 0.391553079688397026e0 * wr_6_0 -
      0.467396589138844110e0 * wr_8_0 + 0.392885746650179185e0 * wr_10_0 -
      0.643584635795442731e0 * wr_4_4 - 0.488352490976725484e0 * wr_6_4 -
      0.511785805981970295e0 * wr_8_4 - 0.857775553756813406e0 * wr_10_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] =
      0.125436301501063615e1 * wr_4_4 - 0.269679944985296835e0 * wr_6_4 +
      0.300828418798093419e-1 * wr_8_4 - 0.128337789583949581e1 * wr_8_8;
  results[k++] =
      -0.471704110602518933e0 * wr_4_0 + 0.680301343049807525e0 * wr_6_0 -
      0.251691112853816832e0 * wr_8_0 + 0.563794248132765711e-1 * wr_4_4 -
      0.545454545454545455e0 * wr_6_4 + 0.669300979309740273e0 * wr_8_4;
  results[k++] =
      0.733799385705342806e0 * wr_5_4 - 0.258988018484238638e0 * wr_7_4 +
      0.357045281568755290e-1 * wr_9_4 - 0.778980837704520116e0 * wr_9_8;
  results[k++] =
      -0.628938814136691911e0 * wr_3_0 + 0.275945784794905222e0 * wr_5_0 +
      0.568650446758208528e0 * wr_7_0 - 0.333471059434687007e0 * wr_9_0 -
      0.494727444918153653e0 * wr_5_4 + 0.174609686441701289e0 * wr_7_4 +
      0.794375603098454394e0 * wr_9_4;
  results[k++] =
      -0.579365459502321093e0 * wr_4_4 + 0.618219749775327064e0 * wr_6_4 -
      0.246813207972113431e0 * wr_8_4 + 0.375367048079942447e-1 * wr_10_4 +
      0.701960753969951116e0 * wr_8_8 - 0.536131381659262361e0 * wr_10_8;
  results[k++] =
      -0.730760865880454899e0 * wr_2_0 + 0.381220041082815308e0 * wr_6_0 +
      0.488087943036693361e0 * wr_8_0 - 0.382517539124012198e0 * wr_10_0 -
      0.390608113112417935e0 * wr_4_4 + 0.213032987027188115e0 * wr_6_4 +
      0.410456862809979086e0 * wr_8_4 + 0.835138960222810244e0 * wr_10_4;
  results[k++] =
      -0.572644055006565595e0 * wr_5_4 + 0.565109264809110783e0 * wr_7_4 -
      0.236837046426071546e0 * wr_9_4 + 0.380001384677121045e-1 * wr_11_4 +
      0.738167759297893656e0 * wr_9_8 - 0.399892299405694503e0 * wr_11_8;
  results[k++] =
      -0.819346490398702645e0 * wr_1_0 - 0.208595406258247960e0 * wr_3_0 +
      0.153816576578967868e0 * wr_5_0 + 0.406978983786120319e0 * wr_7_0 +
      0.430908460748244887e0 * wr_9_0 - 0.415698466923422743e0 * wr_11_0 +
      0.386076543125819761e0 * wr_5_4 + 0.411476315699886850e0 * wr_7_4 +
      0.479026512379973751e0 * wr_9_4 + 0.845449708241016637e0 * wr_11_4;
  results[k++] =
      wr_0_0 - 0.894427190999915880e0 * wr_2_0 +
      0.529411764705882353e0 * wr_4_0 - 0.223253948945138656e0 * wr_6_0 +
      0.638251644832455195e-1 * wr_8_0 - 0.111032928401137596e-1 * wr_10_0 +
      0.888410284022075649e-3 * wr_12_0 - 0.146093013739009249e1 * wr_12_12;
  results[k++] =
      -0.199085673465093956e0 * wr_4_4 + 0.563185969638311832e0 * wr_6_4 -
      0.533999638100939328e0 * wr_8_4 + 0.228810463449621380e0 * wr_10_4 -
      0.379008780322601093e-1 * wr_12_4 + 0.325445759158338055e0 * wr_8_8 -
      0.700300092183081781e0 * wr_10_8 + 0.315316822802553051e0 * wr_12_8;
  results[k++] =
      -0.199085673465093956e0 * wr_4_4 + 0.563185969638311832e0 * wr_6_4 -
      0.533999638100939328e0 * wr_8_4 + 0.228810463449621380e0 * wr_10_4 -
      0.379008780322601093e-1 * wr_12_4 + 0.325445759158338055e0 * wr_8_8 -
      0.700300092183081781e0 * wr_10_8 + 0.315316822802553051e0 * wr_12_8;
  results[k++] =
      wr_0_0 + 0.406557814090870854e0 * wr_2_0 +
      0.588235294117647059e-1 * wr_4_0 - 0.223253948945138656e0 * wr_6_0 -
      0.411962425300948352e0 * wr_8_0 - 0.388615249403981585e0 * wr_10_0 +
      0.439763090590927446e0 * wr_12_0 - 0.626376490453318594e0 * wr_4_4 -
      0.455639883925652964e0 * wr_6_4 - 0.432026979075689210e0 * wr_8_4 -
      0.484829660819068447e0 * wr_10_4 - 0.843241302967334005e0 * wr_12_4;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 0)
void BoxMatrix::setup___oa_0_E(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 2, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 3, 2));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 2));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 5, 3));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 12, 6, 3));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 0)
void BoxMatrix::evaluate___oa_0_E(WZetaRGLCalculator& wzeta, uint n_elems,
                                  vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 1)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  results[k++] =
      0.774596669241483376e0 * wr_1_0 - 0.507092552837109947e0 * wr_3_0;
  results[k++] = wr_0_0 + 0.319438282499969957e0 * wr_2_0 -
                 0.571428571428571429e0 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = 0.115470053837925153e1 * wr_4_4;
  results[k++] =
      -0.717137165600636186e0 * wr_2_0 + 0.534522483824848769e0 * wr_4_0;
  results[k++] = 0.778498944161522970e0 * wr_5_4;
  results[k++] = -0.828078671210825063e0 * wr_1_0 -
                 0.210818510677891956e0 * wr_3_0 +
                 0.600624975130372640e0 * wr_5_0;
  results[k++] = wr_0_0 - 0.745355992499929899e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 -
                 0.420227421382749334e-1 * wr_6_0;
  results[k++] =
      0.589158245309805476e0 * wr_4_4 - 0.608967388233712415e0 * wr_6_4;
  results[k++] =
      0.589158245309805476e0 * wr_4_4 - 0.608967388233712415e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.447213595499957940e0 * wr_2_0 +
                 0.909090909090909091e-1 * wr_4_0 -
                 0.630341132074124001e0 * wr_6_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  results[k++] = 0.104446593573418703e1 * wr_5_4;
  results[k++] =
      -0.690065559342354218e0 * wr_3_0 + 0.550481882563180302e0 * wr_5_0;
  results[k++] =
      0.704178790219530341e0 * wr_4_4 + 0.873426293482293452e0 * wr_6_4;
  results[k++] = -0.782460796435951592e0 * wr_2_0 -
                 0.159057775505401175e0 * wr_4_0 +
                 0.617605654987961318e0 * wr_6_0;
  results[k++] =
      0.577350269189625763e0 * wr_1_0 - 0.721568539381251978e0 * wr_3_0 +
      0.347897705282034949e0 * wr_5_0 - 0.631955324555988768e-1 * wr_7_0;
  results[k++] =
      -0.150308987833599140e0 * wr_5_4 - 0.751544939167995699e0 * wr_7_4;
  results[k++] =
      0.660089484862333144e0 * wr_5_4 - 0.513402932670703555e0 * wr_7_4;
  results[k++] =
      0.845154254728516578e0 * wr_1_0 + 0.352089395109765171e0 * wr_3_0 +
      0.339513395963365203e-1 * wr_5_0 - 0.647561509701123570e0 * wr_7_0;
  results[k++] = wr_0_0 - 0.203278907045435427e0 * wr_2_0 -
                 0.566433566433566434e0 * wr_4_0 +
                 0.428631969810404321e0 * wr_6_0 -
                 0.949789860282143113e-1 * wr_8_0;
  results[k++] = 0.597073404367456238e0 * wr_4_4 +
                 0.106972437348100381e0 * wr_6_4 -
                 0.668236399378178593e0 * wr_8_4;
  results[k++] = 0.597073404367456238e0 * wr_4_4 +
                 0.106972437348100381e0 * wr_6_4 -
                 0.668236399378178593e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.493677345681771751e0 * wr_2_0 +
                 0.242757242757242757e0 * wr_4_0 -
                 0.252136452829649601e-1 * wr_6_0 -
                 0.664852902197500178e0 * wr_8_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] =
      0.116774841624228445e1 * wr_4_4 - 0.144841364875580273e0 * wr_6_4;
  results[k++] =
      0.174077655955697838e0 * wr_4_4 - 0.971625413446943584e0 * wr_6_4;
  results[k++] =
      -0.674199862463242087e0 * wr_4_0 + 0.560968194005074306e0 * wr_6_0;
  results[k++] =
      0.666173387526491265e0 * wr_5_4 - 0.133234677505298253e0 * wr_7_4;
  results[k++] =
      -0.695150857011587644e0 * wr_5_4 - 0.893765387586326971e0 * wr_7_4;
  results[k++] = -0.759737176397586326e0 * wr_3_0 -
                 0.128205128205128205e0 * wr_5_0 +
                 0.628787608745845475e0 * wr_7_0;
  results[k++] = 0.133182418363258342e1 * wr_8_8;
  results[k++] = 0.672202228850233051e0 * wr_4_4 -
                 0.541946762797134628e0 * wr_6_4 +
                 0.120908499691288574e0 * wr_8_4;
  results[k++] =
      -0.449466574975494725e0 * wr_2_0 + 0.695795410564069898e0 * wr_4_0 -
      0.390246271336642359e0 * wr_6_0 + 0.787524149059986856e-1 * wr_8_0;
  results[k++] = 0.601235951334396559e0 * wr_4_4 +
                 0.403943267266782366e0 * wr_6_4 +
                 0.811078873101700769e0 * wr_8_4;
  results[k++] = -0.179653602498812993e0 * wr_4_4 +
                 0.675926369419374609e0 * wr_6_4 -
                 0.452398180993664705e0 * wr_8_4;
  results[k++] = 0.805822964025380299e0 * wr_2_0 +
                 0.304932679681573802e0 * wr_4_0 -
                 0.658889975448753873e0 * wr_8_0;
  results[k++] = 0.916624267423892825e0 * wr_9_8;
  results[k++] = 0.652713951864505407e0 * wr_5_4 -
                 0.479936729312136329e0 * wr_7_4 +
                 0.111157019811562335e0 * wr_9_4;
  results[k++] =
      -0.696310623822791351e0 * wr_1_0 + 0.368180323946522604e0 * wr_3_0 +
      0.461538461538461538e0 * wr_5_0 - 0.468508414359649570e0 * wr_7_0 +
      0.118311342688405529e0 * wr_9_0;
  results[k++] =
      0.186016332951081138e0 * wr_7_4 + 0.745663957424832741e0 * wr_9_4;
  results[k++] = 0.595843591724217982e0 * wr_5_4 +
                 0.245347361298207405e0 * wr_7_4 -
                 0.608832071758413404e0 * wr_9_4;
  results[k++] =
      0.852802865422441737e0 * wr_1_0 + 0.407981538405483379e0 * wr_3_0 +
      0.188422287906398315e0 * wr_5_0 - 0.604003450200827713e-1 * wr_7_0 -
      0.676205647530361430e0 * wr_9_0;
  results[k++] =
      wr_0_0 - 0.860026145192226807e0 * wr_2_0 +
      0.461538461538461538e0 * wr_4_0 - 0.163147116536832095e0 * wr_6_0 +
      0.343673962602091258e-1 * wr_8_0 - 0.327404788875149322e-2 * wr_10_0;
  results[k++] =
      0.581205408398772177e0 * wr_8_8 - 0.684878857278453314e0 * wr_10_8;
  results[k++] =
      -0.266469355010596506e0 * wr_4_4 + 0.631866065328911367e0 * wr_6_4 -
      0.441457198085532380e0 * wr_8_4 + 0.103586239276343787e0 * wr_10_4;
  results[k++] =
      0.581205408398772177e0 * wr_8_8 - 0.684878857278453314e0 * wr_10_8;
  results[k++] =
      wr_0_0 + 0.573350763461484538e-1 * wr_2_0 -
      0.461538461538461538e0 * wr_4_0 - 0.315417758637875383e0 * wr_6_0 +
      0.501763985399053238e0 * wr_8_0 - 0.147332154993817195e0 * wr_10_0;
  results[k++] =
      -0.595843591724217981e0 * wr_4_4 - 0.244901882290133262e0 * wr_6_4 +
      0.394851321630336169e-1 * wr_8_4 + 0.694877617666389993e0 * wr_10_4;
  results[k++] =
      -0.266469355010596506e0 * wr_4_4 + 0.631866065328911367e0 * wr_6_4 -
      0.441457198085532380e0 * wr_8_4 + 0.103586239276343787e0 * wr_10_4;
  results[k++] =
      -0.595843591724217981e0 * wr_4_4 - 0.244901882290133262e0 * wr_6_4 +
      0.394851321630336169e-1 * wr_8_4 + 0.694877617666389993e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.516015687115336084e0 * wr_2_0 +
      0.307692307692307692e0 * wr_4_0 + 0.130517693229465676e0 * wr_6_0 -
      0.962287095285855521e-1 * wr_8_0 - 0.687550056637813577e0 * wr_10_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  results[k++] =
      0.107417231105914932e1 * wr_5_4 - 0.214834462211829864e0 * wr_7_4;
  results[k++] =
      0.250872603002127231e0 * wr_5_4 - 0.919866211007799846e0 * wr_7_4;
  results[k++] =
      -0.663746518303064666e0 * wr_5_0 + 0.568398560058805106e0 * wr_7_0;
  results[k++] = 0.724206824377901366e0 * wr_4_4 +
                 0.700649049745370673e0 * wr_6_4 -
                 0.208420042287562453e0 * wr_8_4;
  results[k++] = 0.169138274439829713e0 * wr_4_4 -
                 0.636363636363636364e0 * wr_6_4 -
                 0.892401305746320364e0 * wr_8_4;
  results[k++] = -0.745829685583969992e0 * wr_4_0 -
                 0.107565086965447564e0 * wr_6_0 +
                 0.636733746752434716e0 * wr_8_0;
  results[k++] = 0.110164526551048719e1 * wr_9_8;
  results[k++] =
      -0.614698846005323828e0 * wr_7_4 + 0.195561754765990796e0 * wr_9_4;
  results[k++] =
      -0.385144793516510629e0 * wr_3_0 + 0.675926369419374609e0 * wr_5_0 -
      0.417871030968991056e0 * wr_7_0 + 0.907593266222561522e-1 * wr_9_0;
  results[k++] = 0.625786218774743878e0 * wr_5_4 +
                 0.496947879615237786e0 * wr_7_4 +
                 0.837345407820341848e0 * wr_9_4;
  results[k++] = -0.255476154010634166e0 * wr_5_4 +
                 0.676260407675208084e0 * wr_7_4 -
                 0.410213797524504903e0 * wr_9_4;
  results[k++] =
      0.786173517670864890e0 * wr_3_0 + 0.275945784794905222e0 * wr_5_0 -
      0.227460178703283411e-1 * wr_7_0 - 0.666942118869374014e0 * wr_9_0;
  results[k++] =
      0.758204271156354859e0 * wr_8_8 + 0.992722418517948294e0 * wr_10_8;
  results[k++] =
      0.709574875186899142e0 * wr_4_4 + 0.168258103984516291e0 * wr_6_4 -
      0.570979397904930776e0 * wr_8_4 + 0.183891546810123814e0 * wr_10_4;
  results[k++] =
      -0.585912169668626903e0 * wr_2_0 + 0.436713146741146727e0 * wr_4_0 +
      0.389016758919213080e0 * wr_6_0 - 0.491684807777299887e0 * wr_8_0 +
      0.136309483412757177e0 * wr_10_0;
  results[k++] =
      0.552403291136545429e0 * wr_4_4 + 0.275076388226987914e0 * wr_6_4 +
      0.337302263144113066e0 * wr_8_4 + 0.787376562675508669e0 * wr_10_4;
  results[k++] =
      -0.231086876109906377e0 * wr_4_4 + 0.547965281602117561e0 * wr_6_4 +
      0.328148047014136476e0 * wr_8_4 - 0.564656996417485955e0 * wr_10_4;
  results[k++] =
      0.817015485702651929e0 * wr_2_0 + 0.365380432940227450e0 * wr_4_0 +
      0.154987986590261376e0 * wr_6_0 - 0.839536784329301142e-1 * wr_8_0 -
      0.684268176053781307e0 * wr_10_0;
  results[k++] =
      0.480384461415261399e0 * wr_1_0 - 0.733799385705342806e0 * wr_3_0 +
      0.541097771181058733e0 * wr_5_0 - 0.232792760910651556e0 * wr_7_0 +
      0.561427732037450977e-1 * wr_9_0 - 0.590848072906685055e-2 * wr_11_0;
  results[k++] =
      -0.260981714126409885e0 * wr_9_8 - 0.848299669962143316e0 * wr_11_8;
  results[k++] =
      0.562325298928723415e0 * wr_5_4 + 0.246633903038913779e0 * wr_7_4 -
      0.542661846308621677e0 * wr_9_4 + 0.174138510947093946e0 * wr_11_4;
  results[k++] =
      0.681466275636381995e0 * wr_9_8 - 0.541456733015007364e0 * wr_11_8;
  results[k++] =
      0.752617809006381693e0 * wr_1_0 - 0.127738077005317083e0 * wr_3_0 -
      0.470965158250256274e0 * wr_5_0 - 0.218829697971019699e0 * wr_7_0 +
      0.517979724982496469e0 * wr_9_0 - 0.169708188469936041e0 * wr_11_0;
  results[k++] =
      -0.729616085818873273e-1 * wr_5_4 + 0.345607619598413655e-1 * wr_7_4 +
      0.211230837194002314e0 * wr_9_4 + 0.745616558005948456e0 * wr_11_4;
  results[k++] =
      -0.334352094152238298e0 * wr_5_4 + 0.615911752385702127e0 * wr_7_4 -
      0.414849128807318165e0 * wr_9_4 + 0.976241233278483040e-1 * wr_11_4;
  results[k++] =
      -0.548264941358797485e0 * wr_5_4 - 0.354142426236543830e0 * wr_7_4 -
      0.618420568279819779e-1 * wr_9_4 + 0.654882528014675382e0 * wr_11_4;
  results[k++] =
      0.856893070496975287e0 * wr_1_0 + 0.436308595337280016e0 * wr_3_0 +
      0.257384362083879840e0 * wr_5_0 + 0.949137414280993807e-1 * wr_7_0 -
      0.120174628067794740e0 * wr_9_0 - 0.695596580732650796e0 * wr_11_0;
  results[k++] =
      wr_0_0 - 0.447213595499957940e0 * wr_2_0 -
      0.352941176470588235e0 * wr_4_0 + 0.558134872362846640e0 * wr_6_0 -
      0.319125822416227597e0 * wr_8_0 + 0.906768915275957033e-1 * wr_10_0 -
      0.106609234082649078e-1 * wr_12_0;
  results[k++] = 0.563688589970065770e0 * wr_8_8 +
                 0.673864077892370009e-1 * wr_10_8 -
                 0.728193010100286130e0 * wr_12_8;
  results[k++] =
      -0.363479047443132160e0 * wr_4_4 + 0.462704489461984481e0 * wr_6_4 +
      0.292483647487479634e0 * wr_8_4 - 0.522186050935703976e0 * wr_10_4 +
      0.166073326780166998e0 * wr_12_4;
  results[k++] = 0.563688589970065770e0 * wr_8_8 +
                 0.673864077892370009e-1 * wr_10_8 -
                 0.728193010100286130e0 * wr_12_8;
  results[k++] =
      wr_0_0 + 0.203278907045435427e0 * wr_2_0 -
      0.288770053475935829e0 * wr_4_0 - 0.436359991120043736e0 * wr_6_0 -
      0.110243465925605897e0 * wr_8_0 + 0.527406409905403583e0 * wr_10_0 -
      0.195450262484856643e0 * wr_12_0;
  results[k++] =
      -0.594232914784560452e0 * wr_4_4 - 0.300179130420792875e0 * wr_6_4 -
      0.113849105376756987e0 * wr_8_4 + 0.114987450404636455e0 * wr_10_4 +
      0.711083502534633723e0 * wr_12_4;
  results[k++] =
      -0.363479047443132160e0 * wr_4_4 + 0.462704489461984481e0 * wr_6_4 +
      0.292483647487479634e0 * wr_8_4 - 0.522186050935703976e0 * wr_10_4 +
      0.166073326780166998e0 * wr_12_4;
  results[k++] =
      -0.594232914784560452e0 * wr_4_4 - 0.300179130420792875e0 * wr_6_4 -
      0.113849105376756987e0 * wr_8_4 + 0.114987450404636455e0 * wr_10_4 +
      0.711083502534633723e0 * wr_12_4;
  results[k++] =
      wr_0_0 + 0.528525158318132112e0 * wr_2_0 +
      0.342245989304812834e0 * wr_4_0 + 0.202958135404671505e0 * wr_6_0 +
      0.580228768029504719e-1 * wr_8_0 - 0.144342806921478875e0 * wr_10_0 -
      0.703620944945483914e0 * wr_12_0;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 1)
void BoxMatrix::setup___oa_1_G1(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 0)
  if (lmax >= 0) {
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 1, 0, 1));
  }
#endif
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 1, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 3, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 1, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 1, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 3, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 3, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 3, 2));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 4, 3));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 3));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 0, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 3));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 1)
void BoxMatrix::evaluate___oa_1_G1(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 0)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 1)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = -0.577350269189625763e0 * wr_1_0;
  results[k++] = 0.816496580927726033e0 * wr_1_0;
  results[k++] = wr_0_0;
  results[k++] = -0.632455532033675868e0 * wr_2_0;
  results[k++] = -0.632455532033675868e0 * wr_2_0;
  results[k++] = wr_0_0 + 0.447213595499957940e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  results[k++] = -0.632455532033675868e0 * wr_2_0;
  results[k++] = 0.774596669241483376e0 * wr_2_0;
  results[k++] = 0.816496580927726033e0 * wr_1_0;
  results[k++] =
      -0.115470053837925153e0 * wr_1_0 - 0.680336051416609009e0 * wr_3_0;
  results[k++] = -0.654653670707977142e0 * wr_3_0;
  results[k++] =
      0.848528137423857030e0 * wr_1_0 + 0.370328039909020585e0 * wr_3_0;
  results[k++] = wr_0_0 + 0.447213595499957940e0 * wr_2_0;
  results[k++] =
      -0.156492159287190318e0 * wr_2_0 - 0.699854212223765171e0 * wr_4_0;
  results[k++] =
      -0.156492159287190318e0 * wr_2_0 - 0.699854212223765171e0 * wr_4_0;
  results[k++] = wr_0_0 + 0.511101251999951930e0 * wr_2_0 +
                 0.285714285714285714e0 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = -0.654653670707977142e0 * wr_3_0;
  results[k++] = 0.755928946018454454e0 * wr_3_0;
  results[k++] = 0.774596669241483376e0 * wr_2_0;
  results[k++] =
      -0.156492159287190318e0 * wr_2_0 - 0.699854212223765171e0 * wr_4_0;
  results[k++] = -0.666666666666666667e0 * wr_4_0;
  results[k++] =
      0.813157112614726116e0 * wr_2_0 + 0.336717514850736916e0 * wr_4_0;
  results[k++] = -0.942809041582063367e0 * wr_4_4;
  results[k++] = -0.666666666666666667e0 * wr_4_4;
  results[k++] =
      0.848528137423857030e0 * wr_1_0 + 0.370328039909020585e0 * wr_3_0;
  results[k++] = -0.494871659305393511e-1 * wr_1_0 -
                 0.201581052271587855e0 * wr_3_0 -
                 0.717884153756580053e0 * wr_5_0;
  results[k++] =
      -0.178174161274949590e0 * wr_3_0 - 0.710669054518701448e0 * wr_5_0;
  results[k++] = 0.857142857142857143e0 * wr_1_0 +
                 0.436435780471984762e0 * wr_3_0 +
                 0.248682365650996911e0 * wr_5_0;
  results[k++] = -0.603022689155527245e0 * wr_5_4;
  results[k++] = -0.492365963917330931e0 * wr_5_4;
  results[k++] = wr_0_0 + 0.511101251999951930e0 * wr_2_0 +
                 0.285714285714285714e0 * wr_4_0;
  results[k++] = -0.737711113563317500e-1 * wr_2_0 -
                 0.224941663320633414e0 * wr_4_0 -
                 0.727855244568577877e0 * wr_6_0;
  results[k++] =
      0.445361771415123290e0 * wr_4_4 - 0.460336075947121188e0 * wr_6_4;
  results[k++] = -0.737711113563317500e-1 * wr_2_0 -
                 0.224941663320633414e0 * wr_4_0 -
                 0.727855244568577877e0 * wr_6_0;
  results[k++] = wr_0_0 + 0.532397137499949928e0 * wr_2_0 +
                 0.350649350649350649e0 * wr_4_0 +
                 0.210113710691374667e0 * wr_6_0;
  results[k++] =
      -0.398662736048649643e0 * wr_6_4 + 0.385694607919935013e0 * wr_4_4;
  results[k++] =
      0.445361771415123290e0 * wr_4_4 - 0.460336075947121188e0 * wr_6_4;
  results[k++] =
      -0.398662736048649643e0 * wr_6_4 + 0.385694607919935013e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.745355992499929899e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 -
                 0.420227421382749334e-1 * wr_6_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] = -0.666666666666666667e0 * wr_4_0;
  results[k++] = -0.942809041582063367e0 * wr_4_4;
  results[k++] = wr_4_4;
  results[k++] = 0.745355992499929899e0 * wr_4_0;
  results[k++] = 0.333333333333333333e0 * wr_4_4;
  results[k++] = 0.755928946018454454e0 * wr_3_0;
  results[k++] =
      -0.178174161274949590e0 * wr_3_0 - 0.710669054518701448e0 * wr_5_0;
  results[k++] = -0.603022689155527245e0 * wr_5_4;
  results[k++] = -0.301511344577763623e0 * wr_5_4;
  results[k++] = 0.426401432711220869e0 * wr_5_4;
  results[k++] = -0.674199862463242087e0 * wr_5_0;
  results[k++] =
      0.796819072889595762e0 * wr_3_0 + 0.317820863081864106e0 * wr_5_0;
  results[k++] = -0.904534033733290867e0 * wr_5_4;
  results[k++] = -0.426401432711220869e0 * wr_5_4;
  results[k++] =
      0.813157112614726116e0 * wr_2_0 + 0.336717514850736916e0 * wr_4_0;
  results[k++] = -0.737711113563317500e-1 * wr_2_0 -
                 0.224941663320633414e0 * wr_4_0 -
                 0.727855244568577877e0 * wr_6_0;
  results[k++] = -0.666666666666666667e0 * wr_4_4;
  results[k++] =
      0.445361771415123290e0 * wr_4_4 - 0.460336075947121188e0 * wr_6_4;
  results[k++] =
      0.514259477226580018e0 * wr_4_4 - 0.239197641629189786e0 * wr_6_4;
  results[k++] =
      -0.629836657297773559e0 * wr_4_4 + 0.292956084834313451e0 * wr_6_4;
  results[k++] =
      -0.191653191525356324e0 * wr_4_0 - 0.717592924887569358e0 * wr_6_0;
  results[k++] = 0.824786098842322518e0 * wr_2_0 +
                 0.402387880125445909e0 * wr_4_0 +
                 0.227854732648910462e0 * wr_6_0;
  results[k++] =
      -0.342839651484386678e0 * wr_4_4 - 0.717592924887569358e0 * wr_6_4;
  results[k++] =
      -0.629836657297773559e0 * wr_4_4 - 0.423158789205119430e0 * wr_6_4;
  results[k++] = 0.857142857142857143e0 * wr_1_0 +
                 0.436435780471984762e0 * wr_3_0 +
                 0.248682365650996911e0 * wr_5_0;
  results[k++] =
      -0.274928699614107506e-1 * wr_1_0 - 0.103081219911607425e0 * wr_3_0 -
      0.248498360915739250e0 * wr_5_0 - 0.737281211981986896e0 * wr_7_0;
  results[k++] =
      0.492001653128331772e0 * wr_5_4 - 0.382667952433146934e0 * wr_7_4;
  results[k++] = -0.492365963917330931e0 * wr_5_4;
  results[k++] =
      0.492001653128331772e0 * wr_5_4 - 0.382667952433146934e0 * wr_7_4;
  results[k++] =
      0.192450089729875254e0 * wr_1_0 - 0.240522846460417326e0 * wr_3_0 +
      0.115965901760678316e0 * wr_5_0 - 0.210651774851996256e-1 * wr_7_0;
  results[k++] =
      0.482061201108086320e0 * wr_5_4 - 0.200858833795035967e0 * wr_7_4;
  results[k++] =
      -0.556636328451255918e0 * wr_5_4 + 0.231931803521356633e0 * wr_7_4;
  results[k++] = -0.887181884498666528e-1 * wr_3_0 -
                 0.239538136665083990e0 * wr_5_0 -
                 0.734265734265734266e0 * wr_7_0;
  results[k++] =
      0.860662965823870417e0 * wr_1_0 + 0.460993229851918134e0 * wr_3_0 +
      0.311169167290727117e0 * wr_5_0 + 0.188412675260017731e0 * wr_7_0;
  results[k++] =
      0.440059656574888762e0 * wr_5_4 - 0.342268621780469037e0 * wr_7_4;
  results[k++] =
      0.535623556786762578e-1 * wr_5_4 - 0.602576501385107900e0 * wr_7_4;
  results[k++] =
      -0.278318164225627959e0 * wr_5_4 - 0.386553005868927721e0 * wr_7_4;
  results[k++] =
      0.544331053951817355e0 * wr_1_0 - 0.680301343049807525e0 * wr_3_0 +
      0.328001102085554515e0 * wr_5_0 - 0.595813193867313567e-1 * wr_7_0;
  results[k++] = wr_0_0 + 0.532397137499949928e0 * wr_2_0 +
                 0.350649350649350649e0 * wr_4_0 +
                 0.210113710691374667e0 * wr_6_0;
  results[k++] =
      -0.398662736048649643e0 * wr_6_4 + 0.385694607919935013e0 * wr_4_4;
  results[k++] = -0.251748251748251748e0 * wr_4_4 +
                 0.451035398506212569e0 * wr_6_4 -
                 0.176095753122080771e0 * wr_8_4;
  results[k++] =
      -0.432900432900432900e-1 * wr_2_0 - 0.120627043741247397e0 * wr_4_0 -
      0.743328142175814856e0 * wr_8_0 - 0.263103982461957331e0 * wr_6_0;
  results[k++] = 0.335664335664335664e0 * wr_4_4 +
                 0.225517699253106284e0 * wr_6_4 -
                 0.528287259366242316e0 * wr_8_4;
  results[k++] =
      -0.398662736048649643e0 * wr_6_4 + 0.385694607919935013e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.745355992499929899e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 -
                 0.420227421382749334e-1 * wr_6_0;
  results[k++] = -0.126984453454622020e1 * wr_8_8;
  results[k++] = -0.132682978748323609e0 * wr_4_4 +
                 0.499204707624468445e0 * wr_6_4 -
                 0.334118199689089298e0 * wr_8_4;
  results[k++] =
      0.191653191525356324e0 * wr_2_0 - 0.296688159938411549e0 * wr_4_0 +
      0.166401569208156148e0 * wr_6_0 - 0.335801425453863458e-1 * wr_8_0;
  results[k++] = -0.251748251748251748e0 * wr_4_4 +
                 0.451035398506212569e0 * wr_6_4 -
                 0.176095753122080771e0 * wr_8_4;
  results[k++] = -0.126984453454622020e1 * wr_8_8;
  results[k++] = wr_0_0 - 0.813115628181741708e0 * wr_2_0 +
                 0.377622377622377622e0 * wr_4_0 -
                 0.100854581131859840e0 * wr_6_0 +
                 0.118723732535267889e-1 * wr_8_0;
  results[k++] = 0.196881037264996714e0 * wr_8_4 -
                 0.504272905659299201e0 * wr_6_4 +
                 0.281463102062910591e0 * wr_4_4;
  results[k++] = 0.448957840715153709e0 * wr_8_8;
  results[k++] =
      -0.432900432900432900e-1 * wr_2_0 - 0.120627043741247397e0 * wr_4_0 -
      0.743328142175814856e0 * wr_8_0 - 0.263103982461957331e0 * wr_6_0;
  results[k++] = -0.132682978748323609e0 * wr_4_4 +
                 0.499204707624468445e0 * wr_6_4 -
                 0.334118199689089298e0 * wr_8_4;
  results[k++] = 0.196881037264996714e0 * wr_8_4 -
                 0.504272905659299201e0 * wr_6_4 +
                 0.281463102062910591e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.542077085454494472e0 * wr_2_0 +
                 0.377622377622377622e0 * wr_4_0 +
                 0.268945549684959574e0 * wr_6_0 +
                 0.166213225549375045e0 * wr_8_0;
  results[k++] = 0.469105170104850986e0 * wr_4_4 -
                 0.100854581131859840e0 * wr_6_4 -
                 0.354385867076994085e0 * wr_8_4;
  results[k++] = 0.335664335664335664e0 * wr_4_4 +
                 0.225517699253106284e0 * wr_6_4 -
                 0.528287259366242316e0 * wr_8_4;
  results[k++] =
      0.191653191525356324e0 * wr_2_0 - 0.296688159938411549e0 * wr_4_0 +
      0.166401569208156148e0 * wr_6_0 - 0.335801425453863458e-1 * wr_8_0;
  results[k++] = 0.448957840715153709e0 * wr_8_8;
  results[k++] = 0.469105170104850986e0 * wr_4_4 -
                 0.100854581131859840e0 * wr_6_4 -
                 0.354385867076994085e0 * wr_8_4;
  results[k++] = wr_0_0 - 0.271038542727247236e0 * wr_2_0 -
                 0.461538461538461538e0 * wr_4_0 +
                 0.369800130816819414e0 * wr_6_0 -
                 0.831066127746875225e-1 * wr_8_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] = -0.301511344577763623e0 * wr_5_4;
  results[k++] = -0.674199862463242087e0 * wr_5_0;
  results[k++] = -0.904534033733290867e0 * wr_5_4;
  results[k++] = 0.953462589245592318e0 * wr_5_4;
  results[k++] = 0.738548945875996396e0 * wr_5_0;
  results[k++] = 0.426401432711220869e0 * wr_5_4;
  results[k++] = wr_4_4;
  results[k++] =
      0.514259477226580018e0 * wr_4_4 - 0.239197641629189786e0 * wr_6_4;
  results[k++] = 0.745355992499929899e0 * wr_4_0;
  results[k++] =
      -0.191653191525356324e0 * wr_4_0 - 0.717592924887569358e0 * wr_6_0;
  results[k++] = 0.333333333333333333e0 * wr_4_4;
  results[k++] =
      -0.342839651484386678e0 * wr_4_4 - 0.717592924887569358e0 * wr_6_4;
  results[k++] = -0.392232270276368064e0 * wr_6_4;
  results[k++] =
      0.609836721136306281e0 * wr_4_4 + 0.479059260376334241e0 * wr_6_4;
  results[k++] = -0.679366220486757450e0 * wr_6_0;
  results[k++] =
      0.787295821622216949e0 * wr_4_0 + 0.305699202718802708e0 * wr_6_0;
  results[k++] = -0.877058019307029216e0 * wr_6_4;
  results[k++] =
      -0.281897124066382855e0 * wr_6_4 + 0.272727272727272727e0 * wr_4_4;
  results[k++] = 0.426401432711220869e0 * wr_5_4;
  results[k++] =
      0.482061201108086320e0 * wr_5_4 - 0.200858833795035967e0 * wr_7_4;
  results[k++] =
      0.796819072889595762e0 * wr_3_0 + 0.317820863081864106e0 * wr_5_0;
  results[k++] = -0.887181884498666528e-1 * wr_3_0 -
                 0.239538136665083990e0 * wr_5_0 -
                 0.734265734265734266e0 * wr_7_0;
  results[k++] = -0.426401432711220869e0 * wr_5_4;
  results[k++] =
      0.535623556786762578e-1 * wr_5_4 - 0.602576501385107900e0 * wr_7_4;
  results[k++] =
      0.363030695172514970e0 * wr_5_4 - 0.342286084019799829e0 * wr_7_4;
  results[k++] =
      -0.127034280591503147e0 * wr_5_4 + 0.355695985656208811e0 * wr_7_4;
  results[k++] =
      -0.200858833795035967e0 * wr_5_0 - 0.722421961961470519e0 * wr_7_0;
  results[k++] = 0.809882551249770863e0 * wr_3_0 +
                 0.382667952433146934e0 * wr_5_0 +
                 0.214492749792232884e0 * wr_7_0;
  results[k++] =
      -0.394284065986306275e0 * wr_5_4 - 0.765374951620476888e0 * wr_7_4;
  results[k++] =
      -0.511303116375689813e0 * wr_5_4 - 0.340868744250459874e0 * wr_7_4;
  results[k++] =
      -0.629836657297773559e0 * wr_4_4 + 0.292956084834313451e0 * wr_6_4;
  results[k++] = -0.251748251748251748e0 * wr_4_4 +
                 0.451035398506212569e0 * wr_6_4 -
                 0.176095753122080771e0 * wr_8_4;
  results[k++] = -0.126984453454622020e1 * wr_8_8;
  results[k++] = 0.824786098842322518e0 * wr_2_0 +
                 0.402387880125445909e0 * wr_4_0 +
                 0.227854732648910462e0 * wr_6_0;
  results[k++] =
      -0.432900432900432900e-1 * wr_2_0 - 0.120627043741247397e0 * wr_4_0 -
      0.743328142175814856e0 * wr_8_0 - 0.263103982461957331e0 * wr_6_0;
  results[k++] = -0.132682978748323609e0 * wr_4_4 +
                 0.499204707624468445e0 * wr_6_4 -
                 0.334118199689089298e0 * wr_8_4;
  results[k++] =
      -0.629836657297773559e0 * wr_4_4 - 0.423158789205119430e0 * wr_6_4;
  results[k++] = 0.335664335664335664e0 * wr_4_4 +
                 0.225517699253106284e0 * wr_6_4 -
                 0.528287259366242316e0 * wr_8_4;
  results[k++] =
      0.191653191525356324e0 * wr_2_0 - 0.296688159938411549e0 * wr_4_0 +
      0.166401569208156148e0 * wr_6_0 - 0.335801425453863458e-1 * wr_8_0;
  results[k++] = 0.306418213988904121e0 * wr_4_4 +
                 0.432323958491572922e0 * wr_6_4 -
                 0.303133651121162464e0 * wr_8_4;
  results[k++] = -0.663414893741618043e0 * wr_4_4 -
                 0.249602353812234222e0 * wr_6_4 +
                 0.294342223535626286e0 * wr_8_4;
  results[k++] = -0.401560100348242596e0 * wr_8_8;
  results[k++] = -0.988960533128038497e-1 * wr_4_0 -
                 0.249602353812234222e0 * wr_6_0 -
                 0.738763135998499606e0 * wr_8_0;
  results[k++] =
      0.829882662886615325e0 * wr_2_0 + 0.428232472514541625e0 * wr_4_0 +
      0.174487539042043304e0 * wr_8_0 + 0.288215972327715282e0 * wr_6_0;
  results[k++] = -0.121122434095725685e0 * wr_4_4 +
                 0.455709465297820924e0 * wr_6_4 -
                 0.305006791404549644e0 * wr_8_4;
  results[k++] = -0.205551586806979980e0 * wr_4_4 -
                 0.138100822784136357e0 * wr_6_4 -
                 0.677827450174624608e0 * wr_8_4;
  results[k++] = -0.593376319876823097e0 * wr_4_4 -
                 0.398662736048649643e0 * wr_6_4 -
                 0.337978788892104824e0 * wr_8_4;
  results[k++] =
      0.352991033961509441e0 * wr_6_0 + 0.406557814090870854e0 * wr_2_0 -
      0.712342395211607337e-1 * wr_8_0 - 0.629370629370629371e0 * wr_4_0;
  results[k++] =
      -0.556636328451255918e0 * wr_5_4 + 0.231931803521356633e0 * wr_7_4;
  results[k++] =
      0.446086111451286189e-1 * wr_7_0 + 0.222021089040385224e0 * wr_3_0 -
      0.157459164324443390e0 * wr_1_0 - 0.594536866879695240e-2 * wr_9_0 -
      0.139159082112813980e0 * wr_5_0;
  results[k++] = -0.311169167290727117e0 * wr_5_4 +
                 0.427094935497076435e0 * wr_7_4 -
                 0.158976089883533741e0 * wr_9_4;
  results[k++] = -0.926981932541487866e0 * wr_9_8;
  results[k++] =
      0.860662965823870417e0 * wr_1_0 + 0.460993229851918134e0 * wr_3_0 +
      0.311169167290727117e0 * wr_5_0 + 0.188412675260017731e0 * wr_7_0;
  results[k++] =
      0.440059656574888762e0 * wr_5_4 - 0.342268621780469037e0 * wr_7_4;
  results[k++] = -0.311169167290727117e0 * wr_5_4 +
                 0.427094935497076435e0 * wr_7_4 -
                 0.158976089883533741e0 * wr_9_4;
  results[k++] =
      -0.174954627027159322e-1 * wr_1_0 - 0.634345968686814926e-1 * wr_3_0 -
      0.139159082112813980e0 * wr_5_0 - 0.277564691569689184e0 * wr_7_0 -
      0.749116452268416000e0 * wr_9_0;
  results[k++] = 0.313202952697856053e0 * wr_7_4 -
                 0.476928269650601221e0 * wr_9_4 +
                 0.311169167290727117e0 * wr_5_4;
  results[k++] =
      -0.278318164225627959e0 * wr_5_4 - 0.386553005868927721e0 * wr_7_4;
  results[k++] =
      0.544331053951817355e0 * wr_1_0 - 0.680301343049807525e0 * wr_3_0 +
      0.328001102085554515e0 * wr_5_0 - 0.595813193867313567e-1 * wr_7_0;
  results[k++] = -0.926981932541487867e0 * wr_9_8;
  results[k++] = 0.313202952697856053e0 * wr_7_4 -
                 0.476928269650601221e0 * wr_9_4 +
                 0.311169167290727117e0 * wr_5_4;
  results[k++] =
      0.122468238919011526e0 * wr_1_0 + 0.740070296801284080e-1 * wr_3_0 -
      0.324704524929899286e0 * wr_5_0 + 0.232956080424560566e0 * wr_7_0 -
      0.535083180191725716e-1 * wr_9_0;
  results[k++] = 0.453002587650620785e0 * wr_7_4 -
                 0.274787507385523743e0 * wr_9_4 +
                 0.146686552191629587e0 * wr_5_4;
  results[k++] = -0.101336625625981350e1 * wr_9_8;
  results[k++] =
      0.497929597731969195e0 * wr_1_0 - 0.702092329958664797e0 * wr_3_0 +
      0.440059656574888762e0 * wr_5_0 - 0.141064814475378418e0 * wr_7_0 +
      0.188009065228016189e-1 * wr_9_0;
  results[k++] = -0.459201542919776321e0 * wr_5_4 -
                 0.289412737134312807e0 * wr_7_4 +
                 0.256949119186916395e0 * wr_9_4;
  results[k++] = 0.651416501479035264e-1 * wr_9_8;
  results[k++] =
      -0.539522202664657029e-1 * wr_3_0 - 0.132560067208512173e0 * wr_5_0 -
      0.273170838599489783e0 * wr_7_0 - 0.747573471325840794e0 * wr_9_0;
  results[k++] = -0.187468244875366902e0 * wr_5_4 +
                 0.496239471728912389e0 * wr_7_4 -
                 0.301014632631337571e0 * wr_9_4;
  results[k++] = 0.340868744250459874e0 * wr_5_4 -
                 0.467859060735925318e0 * wr_7_4 +
                 0.174149581066360531e0 * wr_9_4;
  results[k++] =
      0.862439361864103456e0 * wr_1_0 + 0.472912061647207786e0 * wr_3_0 +
      0.338758081577341725e0 * wr_5_0 + 0.244331425831633041e0 * wr_7_0 +
      0.151965918187279077e0 * wr_9_0;
  results[k++] =
      0.492365963917330931e0 * wr_5_4 - 0.328949208680903224e0 * wr_9_4;
  results[k++] = 0.131200440834221806e0 * wr_5_4 +
                 0.289412737134312807e-1 * wr_7_4 -
                 0.614443545881756598e0 * wr_9_4;
  results[k++] =
      0.185017574200321020e0 * wr_3_0 - 0.324704524929899286e0 * wr_5_0 +
      0.200738750153078785e0 * wr_7_0 - 0.435993702378443175e-1 * wr_9_0;
  results[k++] = 0.436983473691664544e0 * wr_9_8;
  results[k++] = -0.284744483666104493e0 * wr_7_4 -
                 0.324748872364709878e0 * wr_9_4 -
                 0.146686552191629587e0 * wr_5_4;
  results[k++] =
      0.668042657122684936e0 * wr_1_0 - 0.418646980338343092e0 * wr_3_0 -
      0.328001102085554515e0 * wr_5_0 + 0.378516617280410972e0 * wr_7_0 -
      0.980935783884084458e-1 * wr_9_0;
  results[k++] = wr_0_0 - 0.813115628181741708e0 * wr_2_0 +
                 0.377622377622377622e0 * wr_4_0 -
                 0.100854581131859840e0 * wr_6_0 +
                 0.118723732535267889e-1 * wr_8_0;
  results[k++] = 0.196881037264996714e0 * wr_8_4 -
                 0.504272905659299201e0 * wr_6_4 +
                 0.281463102062910591e0 * wr_4_4;
  results[k++] = 0.448957840715153709e0 * wr_8_8;
  results[k++] =
      -0.148344079969205774e0 * wr_2_0 + 0.265365957496647217e0 * wr_4_0 -
      0.196986293106391589e0 * wr_6_0 + 0.711355087190052820e-1 * wr_8_0 -
      0.103534484969202943e-1 * wr_10_0;
  results[k++] =
      0.408642386229677994e0 * wr_8_4 + 0.685171956023266601e-1 * wr_4_4 -
      0.146493064459829962e0 * wr_10_4 - 0.341190268054925117e0 * wr_6_4;
  results[k++] =
      0.401003537225122169e0 * wr_8_8 - 0.721925703431100251e0 * wr_10_8;
  results[k++] = 0.196881037264996714e0 * wr_8_4 -
                 0.504272905659299201e0 * wr_6_4 +
                 0.281463102062910591e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.542077085454494472e0 * wr_2_0 +
                 0.377622377622377622e0 * wr_4_0 +
                 0.268945549684959574e0 * wr_6_0 +
                 0.166213225549375045e0 * wr_8_0;
  results[k++] = 0.469105170104850986e0 * wr_4_4 -
                 0.100854581131859840e0 * wr_6_4 -
                 0.354385867076994085e0 * wr_8_4;
  results[k++] =
      -0.237350527950729239e0 * wr_4_4 + 0.469014983586646639e-1 * wr_6_4 +
      0.458752372734435909e0 * wr_8_4 - 0.253733430600888084e0 * wr_10_4;
  results[k++] =
      -0.285488315009694417e-1 * wr_2_0 - 0.766045534972260299e-1 * wr_4_0 -
      0.151640119135522275e0 * wr_6_0 - 0.287490735755010690e0 * wr_8_0 -
      0.753173350868970131e0 * wr_10_0;
  results[k++] =
      0.265365957496647217e0 * wr_4_4 + 0.247504855040702842e0 * wr_6_4 +
      0.134819624435948313e0 * wr_8_4 - 0.567365198987811067e0 * wr_10_4;
  results[k++] = 0.448957840715153709e0 * wr_8_8;
  results[k++] = 0.469105170104850986e0 * wr_4_4 -
                 0.100854581131859840e0 * wr_6_4 -
                 0.354385867076994085e0 * wr_8_4;
  results[k++] = wr_0_0 - 0.271038542727247236e0 * wr_2_0 -
                 0.461538461538461538e0 * wr_4_0 +
                 0.369800130816819414e0 * wr_6_0 -
                 0.831066127746875225e-1 * wr_8_0;
  results[k++] =
      -0.597780778968827038e0 * wr_8_8 - 0.968564968545775992e0 * wr_10_8;
  results[k++] =
      -0.137034391204653320e0 * wr_4_4 + 0.265370208487163980e0 * wr_6_4 +
      0.363237676648602661e0 * wr_8_4 - 0.439479193379489887e0 * wr_10_4;
  results[k++] =
      0.154796808539710877e0 * wr_2_0 - 0.323014810815832523e0 * wr_6_0 +
      0.275710644056856313e0 * wr_8_0 - 0.694530439219704001e-1 * wr_10_0;
  results[k++] =
      -0.148344079969205774e0 * wr_2_0 + 0.265365957496647217e0 * wr_4_0 -
      0.196986293106391589e0 * wr_6_0 + 0.711355087190052820e-1 * wr_8_0 -
      0.103534484969202943e-1 * wr_10_0;
  results[k++] =
      -0.237350527950729239e0 * wr_4_4 + 0.469014983586646639e-1 * wr_6_4 +
      0.458752372734435909e0 * wr_8_4 - 0.253733430600888084e0 * wr_10_4;
  results[k++] =
      -0.597780778968827038e0 * wr_8_8 - 0.968564968545775992e0 * wr_10_8;
  results[k++] =
      wr_0_0 - 0.390920975087375821e0 * wr_2_0 -
      0.377622377622377622e0 * wr_4_0 + 0.459778237512890450e0 * wr_6_0 -
      0.190582833806614243e0 * wr_8_0 + 0.294664309987634390e-1 * wr_10_0;
  results[k++] =
      0.379173194733593261e0 * wr_4_4 - 0.333957112213818085e0 * wr_6_4 -
      0.305112384896168858e0 * wr_8_4 + 0.231625872555463331e0 * wr_10_4;
  results[k++] =
      0.475531697780813599e0 * wr_8_8 + 0.228292952426151104e0 * wr_10_8;
  results[k++] =
      0.408642386229677994e0 * wr_8_4 + 0.685171956023266601e-1 * wr_4_4 -
      0.146493064459829962e0 * wr_10_4 - 0.341190268054925117e0 * wr_6_4;
  results[k++] =
      -0.285488315009694417e-1 * wr_2_0 - 0.766045534972260299e-1 * wr_4_0 -
      0.151640119135522275e0 * wr_6_0 - 0.287490735755010690e0 * wr_8_0 -
      0.753173350868970131e0 * wr_10_0;
  results[k++] =
      -0.137034391204653320e0 * wr_4_4 + 0.265370208487163980e0 * wr_6_4 +
      0.363237676648602661e0 * wr_8_4 - 0.439479193379489887e0 * wr_10_4;
  results[k++] =
      0.379173194733593261e0 * wr_4_4 - 0.333957112213818085e0 * wr_6_4 -
      0.305112384896168858e0 * wr_8_4 + 0.231625872555463331e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.547289365122326150e0 * wr_2_0 +
      0.391608391608391608e0 * wr_4_0 + 0.296631120976058354e0 * wr_6_0 +
      0.218701612564967164e0 * wr_8_0 + 0.137510011327562715e0 * wr_10_0;
  results[k++] =
      0.508714223202047875e0 * wr_4_4 + 0.574423695753555788e-1 * wr_6_4 -
      0.200662362766151082e0 * wr_8_4 - 0.310758717829031361e0 * wr_10_4;
  results[k++] =
      0.401003537225122169e0 * wr_8_8 - 0.721925703431100251e0 * wr_10_8;
  results[k++] =
      0.265365957496647217e0 * wr_4_4 + 0.247504855040702842e0 * wr_6_4 +
      0.134819624435948313e0 * wr_8_4 - 0.567365198987811067e0 * wr_10_4;
  results[k++] =
      0.154796808539710877e0 * wr_2_0 - 0.323014810815832523e0 * wr_6_0 +
      0.275710644056856313e0 * wr_8_0 - 0.694530439219704001e-1 * wr_10_0;
  results[k++] =
      0.475531697780813599e0 * wr_8_8 + 0.228292952426151104e0 * wr_10_8;
  results[k++] =
      0.508714223202047875e0 * wr_4_4 + 0.574423695753555788e-1 * wr_6_4 -
      0.200662362766151082e0 * wr_8_4 - 0.310758717829031361e0 * wr_10_4;
  results[k++] =
      wr_0_0 - 0.156368390034950329e-1 * wr_2_0 -
      0.461538461538461538e0 * wr_4_0 - 0.163147116536832095e0 * wr_6_0 +
      0.371792741360444179e0 * wr_8_0 - 0.114591676106302263e0 * wr_10_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  results[k++] = -0.392232270276368064e0 * wr_6_4;
  results[k++] = -0.679366220486757450e0 * wr_6_0;
  results[k++] = -0.877058019307029216e0 * wr_6_4;
  results[k++] = 0.919866211007799846e0 * wr_6_4;
  results[k++] = 0.733799385705342806e0 * wr_6_0;
  results[k++] = 0.480384461415261399e0 * wr_6_4;
  results[k++] = 0.953462589245592318e0 * wr_5_4;
  results[k++] =
      0.363030695172514970e0 * wr_5_4 - 0.342286084019799829e0 * wr_7_4;
  results[k++] = 0.738548945875996396e0 * wr_5_0;
  results[k++] =
      -0.200858833795035967e0 * wr_5_0 - 0.722421961961470519e0 * wr_7_0;
  results[k++] = 0.426401432711220869e0 * wr_5_4;
  results[k++] =
      -0.394284065986306275e0 * wr_5_4 - 0.765374951620476888e0 * wr_7_4;
  results[k++] = -0.447213595499957940e0 * wr_7_4;
  results[k++] =
      0.729756383115779847e0 * wr_5_4 + 0.486504255410519898e0 * wr_7_4;
  results[k++] = -0.683130051063973227e0 * wr_7_0;
  results[k++] =
      0.781028411286137828e0 * wr_5_0 + 0.297259010178244894e0 * wr_7_0;
  results[k++] = -0.856348838577675267e0 * wr_7_4;
  results[k++] =
      0.381102841774509440e0 * wr_5_4 - 0.186316944867537949e0 * wr_7_4;
  results[k++] =
      0.609836721136306281e0 * wr_4_4 + 0.479059260376334241e0 * wr_6_4;
  results[k++] = 0.306418213988904121e0 * wr_4_4 +
                 0.432323958491572922e0 * wr_6_4 -
                 0.303133651121162464e0 * wr_8_4;
  results[k++] =
      0.787295821622216949e0 * wr_4_0 + 0.305699202718802708e0 * wr_6_0;
  results[k++] = -0.988960533128038497e-1 * wr_4_0 -
                 0.249602353812234222e0 * wr_6_0 -
                 0.738763135998499606e0 * wr_8_0;
  results[k++] =
      -0.281897124066382855e0 * wr_6_4 + 0.272727272727272727e0 * wr_4_4;
  results[k++] = -0.205551586806979980e0 * wr_4_4 -
                 0.138100822784136357e0 * wr_6_4 -
                 0.677827450174624608e0 * wr_8_4;
  results[k++] =
      0.260177454235196352e0 * wr_6_4 - 0.411596604342021211e0 * wr_8_4;
  results[k++] = 0.449134006247032482e0 * wr_4_4 +
                 0.115873091900464219e0 * wr_6_4 +
                 0.374844207109036470e0 * wr_8_4;
  results[k++] =
      -0.207549808665108331e0 * wr_6_0 - 0.725988170378424118e0 * wr_8_0;
  results[k++] = 0.801149597020251747e0 * wr_4_0 +
                 0.369739001775850204e0 * wr_6_0 +
                 0.205188528083524172e0 * wr_8_0;
  results[k++] =
      -0.407619732292054469e0 * wr_6_4 - 0.788147492915022409e0 * wr_8_4;
  results[k++] = 0.234552585052425493e0 * wr_4_4 -
                 0.383247408301067394e0 * wr_6_4 -
                 0.272258348675024027e0 * wr_8_4;
  results[k++] =
      -0.127034280591503147e0 * wr_5_4 + 0.355695985656208811e0 * wr_7_4;
  results[k++] = 0.453002587650620785e0 * wr_7_4 -
                 0.274787507385523743e0 * wr_9_4 +
                 0.146686552191629587e0 * wr_5_4;
  results[k++] = -0.101336625625981350e1 * wr_9_8;
  results[k++] = 0.809882551249770863e0 * wr_3_0 +
                 0.382667952433146934e0 * wr_5_0 +
                 0.214492749792232884e0 * wr_7_0;
  results[k++] =
      -0.539522202664657029e-1 * wr_3_0 - 0.132560067208512173e0 * wr_5_0 -
      0.273170838599489783e0 * wr_7_0 - 0.747573471325840794e0 * wr_9_0;
  results[k++] = -0.187468244875366902e0 * wr_5_4 +
                 0.496239471728912389e0 * wr_7_4 -
                 0.301014632631337571e0 * wr_9_4;
  results[k++] =
      -0.511303116375689813e0 * wr_5_4 - 0.340868744250459874e0 * wr_7_4;
  results[k++] = 0.131200440834221806e0 * wr_5_4 +
                 0.289412737134312807e-1 * wr_7_4 -
                 0.614443545881756598e0 * wr_9_4;
  results[k++] =
      0.185017574200321020e0 * wr_3_0 - 0.324704524929899286e0 * wr_5_0 +
      0.200738750153078785e0 * wr_7_0 - 0.435993702378443175e-1 * wr_9_0;
  results[k++] = 0.350496230426010577e0 * wr_7_4 -
                 0.376896044421874965e0 * wr_9_4 +
                 0.297921795862108991e0 * wr_5_4;
  results[k++] = -0.364246367375531354e-1 * wr_7_4 +
                 0.318032278566616812e0 * wr_9_4 -
                 0.344010458076890723e0 * wr_5_4;
  results[k++] = -0.432100823530390668e0 * wr_9_8;
  results[k++] = -0.106284504570424221e0 * wr_5_0 -
                 0.256988081075820426e0 * wr_7_0 -
                 0.742104681935783737e0 * wr_9_0;
  results[k++] =
      0.815850815850815851e0 * wr_3_0 + 0.409089248829469559e0 * wr_5_0 +
      0.273139617290901677e0 * wr_7_0 + 0.164790129954810134e0 * wr_9_0;
  results[k++] = -0.173561869174697295e0 * wr_5_4 +
                 0.459428477227139898e0 * wr_7_4 -
                 0.278685397215742875e0 * wr_9_4;
  results[k++] = -0.259307639408939264e0 * wr_5_4 -
                 0.241613706366917527e0 * wr_7_4 -
                 0.721700979471280155e0 * wr_9_4;
  results[k++] = -0.538960807496438978e0 * wr_5_4 -
                 0.386783638320973855e0 * wr_7_4 -
                 0.288466791765341658e0 * wr_9_4;
  results[k++] =
      0.337794329748005561e0 * wr_3_0 - 0.592826642760348018e0 * wr_5_0 -
      0.796011952409557072e-1 * wr_9_0 + 0.366497138747449560e0 * wr_7_0;
  results[k++] = -0.663414893741618043e0 * wr_4_4 -
                 0.249602353812234222e0 * wr_6_4 +
                 0.294342223535626286e0 * wr_8_4;
  results[k++] = -0.401560100348242595e0 * wr_8_8;
  results[k++] =
      -0.103534484969202943e-1 * wr_10_0 + 0.711355087190052820e-1 * wr_8_0 +
      0.265365957496647217e0 * wr_4_0 - 0.148344079969205774e0 * wr_2_0 -
      0.196986293106391589e0 * wr_6_0;
  results[k++] =
      -0.237350527950729239e0 * wr_4_4 + 0.469014983586646639e-1 * wr_6_4 +
      0.458752372734435909e0 * wr_8_4 - 0.253733430600888084e0 * wr_10_4;
  results[k++] =
      -0.597780778968827038e0 * wr_8_8 - 0.968564968545775992e0 * wr_10_8;
  results[k++] =
      0.829882662886615325e0 * wr_2_0 + 0.428232472514541625e0 * wr_4_0 +
      0.174487539042043304e0 * wr_8_0 + 0.288215972327715282e0 * wr_6_0;
  results[k++] = -0.121122434095725685e0 * wr_4_4 +
                 0.455709465297820924e0 * wr_6_4 -
                 0.305006791404549644e0 * wr_8_4;
  results[k++] =
      0.408642386229677994e0 * wr_8_4 + 0.685171956023266601e-1 * wr_4_4 -
      0.146493064459829962e0 * wr_10_4 - 0.341190268054925117e0 * wr_6_4;
  results[k++] =
      -0.285488315009694417e-1 * wr_2_0 - 0.766045534972260299e-1 * wr_4_0 -
      0.151640119135522275e0 * wr_6_0 - 0.287490735755010690e0 * wr_8_0 -
      0.753173350868970131e0 * wr_10_0;
  results[k++] =
      -0.137034391204653320e0 * wr_4_4 + 0.265370208487163980e0 * wr_6_4 +
      0.363237676648602661e0 * wr_8_4 - 0.439479193379489887e0 * wr_10_4;
  results[k++] = -0.593376319876823097e0 * wr_4_4 -
                 0.398662736048649643e0 * wr_6_4 -
                 0.337978788892104824e0 * wr_8_4;
  results[k++] =
      0.352991033961509441e0 * wr_6_0 + 0.406557814090870854e0 * wr_2_0 -
      0.712342395211607337e-1 * wr_8_0 - 0.629370629370629371e0 * wr_4_0;
  results[k++] =
      -0.721925703431100247e0 * wr_10_8 + 0.401003537225122169e0 * wr_8_8;
  results[k++] =
      0.265365957496647217e0 * wr_4_4 + 0.247504855040702842e0 * wr_6_4 +
      0.134819624435948313e0 * wr_8_4 - 0.567365198987811067e0 * wr_10_4;
  results[k++] =
      0.154796808539710877e0 * wr_2_0 - 0.323014810815832523e0 * wr_6_0 +
      0.275710644056856313e0 * wr_8_0 - 0.694530439219704000e-1 * wr_10_0;
  results[k++] =
      0.207446111527151411e0 * wr_4_4 + 0.265629814943428833e0 * wr_6_4 +
      0.394734094188687673e0 * wr_8_4 - 0.349447704260618251e0 * wr_10_4;
  results[k++] =
      0.297392182608896038e0 * wr_8_8 - 0.843651830600673614e0 * wr_10_8;
  results[k++] =
      0.242809889992375735e-1 * wr_10_0 - 0.166827555589339678e0 * wr_8_0 -
      0.622338334581454235e0 * wr_4_0 + 0.347897705282034949e0 * wr_2_0 +
      0.461973806827708254e0 * wr_6_0;
  results[k++] =
      -0.649409049859798571e0 * wr_4_4 - 0.395977548709464218e0 * wr_6_4 -
      0.105391315539428100e0 * wr_8_4 + 0.282502112319040838e0 * wr_10_4;
  results[k++] =
      -0.420576057989236871e0 * wr_8_8 - 0.114721525072727073e0 * wr_10_8;
  results[k++] =
      -0.616725247334403400e-1 * wr_4_0 - 0.141266191900493803e0 * wr_6_0 -
      0.280576544029687343e0 * wr_8_0 - 0.750734096159884893e0 * wr_10_0;
  results[k++] =
      0.174436241807642955e-1 * wr_4_4 - 0.223361461391995401e0 * wr_6_4 +
      0.490451936612230322e0 * wr_8_4 - 0.277050864658787537e0 * wr_10_4;
  results[k++] =
      -0.441384223922196322e0 * wr_8_4 - 0.740070296801284080e-1 * wr_4_4 +
      0.158230594146551019e0 * wr_10_4 + 0.368527609347373409e0 * wr_6_4;
  results[k++] =
      0.832579083901444590e0 * wr_2_0 + 0.441292664473631034e0 * wr_4_0 +
      0.315880808012034351e0 * wr_6_0 + 0.228141172851761336e0 * wr_8_0 +
      0.142043209172646392e0 * wr_10_0;
  results[k++] =
      -0.172683069253632952e0 * wr_4_4 + 0.473821212018051525e0 * wr_6_4 +
      0.630548891317423317e-1 * wr_8_4 - 0.308926398095647229e0 * wr_10_4;
  results[k++] =
      -0.144446931327083147e0 * wr_4_4 - 0.154134051790992962e-1 * wr_6_4 -
      0.101533196990657872e0 * wr_8_4 - 0.669141409604671844e0 * wr_10_4;
  results[k++] =
      0.178743958160194070e0 * wr_4_0 - 0.341190268054925119e0 * wr_6_0 +
      0.225885578093222686e0 * wr_8_0 - 0.518055743983947709e-1 * wr_10_0;
  results[k++] =
      0.395414992611998306e0 * wr_10_8 - 0.219638682977561996e0 * wr_8_8;
  results[k++] =
      -0.565238025780053194e0 * wr_4_4 - 0.344654217452133473e0 * wr_6_4 -
      0.330232917009437209e0 * wr_8_4 - 0.287739553545399407e0 * wr_10_4;
  results[k++] =
      0.545050953430765580e0 * wr_2_0 - 0.469452526813020227e0 * wr_4_0 -
      0.241257952216493431e0 * wr_6_0 + 0.377532347735544669e0 * wr_8_0 -
      0.108487292998016298e0 * wr_10_0;
  results[k++] =
      0.497929597731969195e0 * wr_1_0 - 0.702092329958664797e0 * wr_3_0 +
      0.440059656574888762e0 * wr_5_0 - 0.141064814475378418e0 * wr_7_0 +
      0.188009065228016189e-1 * wr_9_0;
  results[k++] = -0.459201542919776321e0 * wr_5_4 -
                 0.289412737134312807e0 * wr_7_4 +
                 0.256949119186916395e0 * wr_9_4;
  results[k++] = 0.651416501479035264e-1 * wr_9_8;
  results[k++] =
      -0.109010190686153116e0 * wr_1_0 - 0.185017574200321020e-1 * wr_3_0 +
      0.259217898053280943e0 * wr_5_0 - 0.264129934411945770e0 * wr_7_0 +
      0.111829553532133152e0 * wr_9_0 - 0.180258948089350176e-1 * wr_11_0;
  results[k++] =
      -0.264196474262960284e0 * wr_5_4 - 0.194671086299023367e-1 * wr_7_4 +
      0.458924441444861730e0 * wr_9_4 - 0.237591463857910457e0 * wr_11_4;
  results[k++] =
      -0.296113516439555893e0 * wr_9_8 - 0.862678654540629664e0 * wr_11_8;
  results[k++] = 0.340868744250459874e0 * wr_5_4 -
                 0.467859060735925318e0 * wr_7_4 +
                 0.174149581066360531e0 * wr_9_4;
  results[k++] =
      0.862439361864103456e0 * wr_1_0 + 0.472912061647207786e0 * wr_3_0 +
      0.338758081577341725e0 * wr_5_0 + 0.244331425831633041e0 * wr_7_0 +
      0.151965918187279077e0 * wr_9_0;
  results[k++] =
      0.492365963917330931e0 * wr_5_4 - 0.328949208680903224e0 * wr_9_4;
  results[k++] =
      -0.264196474262960284e0 * wr_5_4 - 0.194671086299023367e-1 * wr_7_4 +
      0.458924441444861730e0 * wr_9_4 - 0.237591463857910457e0 * wr_11_4;
  results[k++] =
      -0.121122434095725685e-1 * wr_1_0 - 0.431707673134082380e-1 * wr_3_0 -
      0.909536484397476992e-1 * wr_5_0 - 0.164347514745210701e0 * wr_7_0 -
      0.297268433439847619e0 * wr_9_0 - 0.757087581975270740e0 * wr_11_0;
  results[k++] =
      0.212674059312391024e0 * wr_5_4 + 0.287296536264107172e0 * wr_7_4 +
      0.205237249521366526e0 * wr_9_4 - 0.531270664059972218e0 * wr_11_4;
  results[k++] = 0.436983473691664545e0 * wr_9_8;
  results[k++] = -0.284744483666104493e0 * wr_7_4 -
                 0.324748872364709878e0 * wr_9_4 -
                 0.146686552191629587e0 * wr_5_4;
  results[k++] =
      0.668042657122684936e0 * wr_1_0 - 0.418646980338343092e0 * wr_3_0 -
      0.328001102085554515e0 * wr_5_0 + 0.378516617280410972e0 * wr_7_0 -
      0.980935783884084458e-1 * wr_9_0;
  results[k++] =
      -0.296113516439555893e0 * wr_9_8 - 0.862678654540629664e0 * wr_11_8;
  results[k++] =
      0.212674059312391024e0 * wr_5_4 + 0.287296536264107172e0 * wr_7_4 +
      0.205237249521366526e0 * wr_9_4 - 0.531270664059972218e0 * wr_11_4;
  results[k++] =
      0.847857038670079791e-1 * wr_1_0 + 0.129512301940224714e0 * wr_3_0 -
      0.955013308617350842e-1 * wr_5_0 - 0.294651615721770615e0 * wr_7_0 +
      0.321333020908787665e0 * wr_9_0 - 0.901294740446750878e-1 * wr_11_0;
  results[k++] =
      -0.137212705387053032e0 * wr_3_0 + 0.283302730180968830e0 * wr_5_0 -
      0.235060802397905868e0 * wr_7_0 + 0.923833095989213436e-1 * wr_9_0 -
      0.143627023102264690e-1 * wr_11_0;
  results[k++] =
      0.180995475113122172e-1 * wr_5_4 + 0.214336746844486783e0 * wr_7_4 +
      0.419199373254630062e0 * wr_9_4 - 0.327891974838717432e0 * wr_11_4;
  results[k++] =
      -0.436487746392329917e0 * wr_9_8 - 0.922198967426742782e0 * wr_11_8;
  results[k++] =
      0.624926031125843104e0 * wr_1_0 - 0.520685607524091885e0 * wr_3_0 -
      0.191974691724854532e0 * wr_5_0 + 0.440490384713571283e0 * wr_7_0 -
      0.219106257087815973e0 * wr_9_0 + 0.377325852828462841e-1 * wr_11_0;
  results[k++] =
      -0.346973565840376724e0 * wr_5_4 - 0.378279451480109962e0 * wr_7_4 -
      0.143503095514742942e0 * wr_9_4 + 0.257878321499194507e0 * wr_11_4;
  results[k++] =
      0.925930336136551429e-1 * wr_9_8 + 0.668813480482750641e-1 * wr_11_8;
  results[k++] =
      0.101069108534339538e0 * wr_5_4 - 0.359061306635153623e0 * wr_7_4 +
      0.394120668377836759e0 * wr_9_4 - 0.137011447720067581e0 * wr_11_4;
  results[k++] =
      -0.364859576748217433e-1 * wr_3_0 - 0.860942465173666079e-1 * wr_5_0 -
      0.160725987265982394e0 * wr_7_0 - 0.294785546079983846e0 * wr_9_0 -
      0.756193207673710943e0 * wr_11_0;
  results[k++] =
      -0.187699772992344857e0 * wr_5_4 + 0.222276046964618909e0 * wr_7_4 +
      0.394120668377836759e0 * wr_9_4 - 0.411034343160202744e0 * wr_11_4;
  results[k++] =
      0.433754506926730649e0 * wr_5_4 - 0.252322566356269906e0 * wr_7_4 -
      0.311579746255465849e0 * wr_9_4 + 0.213301287538460328e0 * wr_11_4;
  results[k++] =
      0.863459396947832628e0 * wr_1_0 + 0.479620369216286620e0 * wr_3_0 +
      0.353668206667292093e0 * wr_5_0 + 0.271707558033539008e0 * wr_7_0 +
      0.201825866518107184e0 * wr_9_0 + 0.127441254669255435e0 * wr_11_0;
  results[k++] =
      0.500266564091774557e0 * wr_5_4 + 0.161202974465663122e0 * wr_7_4 -
      0.139342698607871438e0 * wr_9_4 - 0.298097611640141304e0 * wr_11_4;
  results[k++] =
      0.501486240719388522e0 * wr_9_8 - 0.588625526772845198e0 * wr_11_8;
  results[k++] = 0.141782706208260683e0 * wr_5_4 +
                 0.126858210817917453e0 * wr_7_4 -
                 0.627865330252694440e0 * wr_11_4;
  results[k++] =
      0.167199662847825615e0 * wr_3_0 - 0.493166751957525863e-1 * wr_5_0 -
      0.313711056745112473e0 * wr_7_0 + 0.305555529703785198e0 * wr_9_0 -
      0.825074431946724225e-1 * wr_11_0;
  results[k++] =
      0.396459683977186141e0 * wr_9_8 + 0.286368823618248100e0 * wr_11_8;
  results[k++] =
      -0.604003450200827713e-1 * wr_5_4 - 0.183925862655139266e0 * wr_7_4 -
      0.274787507385523743e0 * wr_9_4 - 0.282171080578323317e0 * wr_11_4;
  results[k++] =
      0.729756383115779847e0 * wr_1_0 - 0.202676597848803337e0 * wr_3_0 -
      0.433411074959246030e0 * wr_5_0 - 0.642977436399034317e-1 * wr_7_0 +
      0.358205378584300683e0 * wr_9_0 - 0.125658771713605271e0 * wr_11_0;
  results[k++] =
      wr_0_0 - 0.390920975087375821e0 * wr_2_0 -
      0.377622377622377622e0 * wr_4_0 + 0.459778237512890450e0 * wr_6_0 -
      0.190582833806614243e0 * wr_8_0 + 0.294664309987634390e-1 * wr_10_0;
  results[k++] =
      0.379173194733593261e0 * wr_4_4 - 0.333957112213818085e0 * wr_6_4 -
      0.305112384896168858e0 * wr_8_4 + 0.231625872555463331e0 * wr_10_4;
  results[k++] =
      0.475531697780813599e0 * wr_8_8 + 0.228292952426151104e0 * wr_10_8;
  results[k++] =
      -0.132017896972466629e0 * wr_2_0 + 0.578825474268625612e-1 * wr_4_0 +
      0.230666755091716440e0 * wr_6_0 - 0.301460029794667035e0 * wr_8_0 +
      0.143551254365242415e0 * wr_10_0 - 0.250020815841981169e-1 * wr_12_0;
  results[k++] =
      0.825990976421958585e-1 * wr_4_4 - 0.265789932289964228e0 * wr_6_4 -
      0.664656890885675707e-1 * wr_8_4 + 0.456858718848737575e0 * wr_10_4 -
      0.224864347457955735e0 * wr_12_4;
  results[k++] = 0.330742143089880569e0 * wr_8_8 -
                 0.543657390275029129e-1 * wr_10_8 -
                 0.763735272168836624e0 * wr_12_8;
  results[k++] =
      0.379173194733593261e0 * wr_4_4 - 0.333957112213818085e0 * wr_6_4 -
      0.305112384896168858e0 * wr_8_4 + 0.231625872555463331e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.547289365122326150e0 * wr_2_0 +
      0.391608391608391608e0 * wr_4_0 + 0.296631120976058354e0 * wr_6_0 +
      0.218701612564967164e0 * wr_8_0 + 0.137510011327562715e0 * wr_10_0;
  results[k++] =
      0.508714223202047875e0 * wr_4_4 + 0.574423695753555788e-1 * wr_6_4 -
      0.200662362766151082e0 * wr_8_4 - 0.310758717829031361e0 * wr_10_4;
  results[k++] =
      -0.209232932738946359e0 * wr_4_4 - 0.824419843280428359e-1 * wr_6_4 +
      0.168365169251094418e0 * wr_8_4 + 0.433709825868446003e0 * wr_10_4 -
      0.310694744946567233e0 * wr_12_4;
  results[k++] =
      -0.202676597848803337e-1 * wr_2_0 - 0.533174882633308123e-1 * wr_4_0 -
      0.101178388322309837e0 * wr_6_0 - 0.173552870370270680e0 * wr_8_0 -
      0.304435838364586248e0 * wr_10_0 - 0.759997482360065668e0 * wr_12_0;
  results[k++] =
      0.218536670879591826e0 * wr_4_4 + 0.219685397649865592e0 * wr_6_4 +
      0.205160298054703953e0 * wr_8_4 + 0.740041563897144869e-1 * wr_10_4 -
      0.594935142098570023e0 * wr_12_4;
  results[k++] =
      0.475531697780813599e0 * wr_8_8 + 0.228292952426151104e0 * wr_10_8;
  results[k++] =
      0.508714223202047875e0 * wr_4_4 + 0.574423695753555788e-1 * wr_6_4 -
      0.200662362766151082e0 * wr_8_4 - 0.310758717829031361e0 * wr_10_4;
  results[k++] =
      wr_0_0 - 0.156368390034950329e-1 * wr_2_0 -
      0.461538461538461538e0 * wr_4_0 - 0.163147116536832095e0 * wr_6_0 +
      0.371792741360444179e0 * wr_8_0 - 0.114591676106302263e0 * wr_10_0;
  results[k++] = -0.424845975155565768e0 * wr_8_8 -
                 0.452863273616749547e0 * wr_10_8 -
                 0.891850654503529038e0 * wr_12_8;
  results[k++] =
      -0.129288038045664779e0 * wr_4_4 + 0.150213848304558311e0 * wr_6_4 +
      0.297243597946806256e0 * wr_8_4 + 0.254349372404137723e0 * wr_10_4 -
      0.502811966632121057e0 * wr_12_4;
  results[k++] =
      0.119905092304071655e0 * wr_2_0 + 0.946291543201027431e-1 * wr_4_0 -
      0.149644854410054876e0 * wr_6_0 - 0.264022104264805737e0 * wr_8_0 +
      0.351636833583753136e0 * wr_10_0 - 0.107052517633261704e0 * wr_12_0;
  results[k++] =
      -0.132017896972466629e0 * wr_2_0 + 0.578825474268625612e-1 * wr_4_0 +
      0.230666755091716440e0 * wr_6_0 - 0.301460029794667035e0 * wr_8_0 +
      0.143551254365242415e0 * wr_10_0 - 0.250020815841981169e-1 * wr_12_0;
  results[k++] =
      -0.209232932738946359e0 * wr_4_4 - 0.824419843280428359e-1 * wr_6_4 +
      0.168365169251094418e0 * wr_8_4 + 0.433709825868446003e0 * wr_10_4 -
      0.310694744946567233e0 * wr_12_4;
  results[k++] = -0.424845975155565768e0 * wr_8_8 -
                 0.452863273616749547e0 * wr_10_8 -
                 0.891850654503529038e0 * wr_12_8;
  results[k++] =
      0.171733806880875889e-1 * wr_6_0 + 0.387860614936645848e0 * wr_8_0 -
      0.137604183230756289e0 * wr_2_0 - 0.245980641380981751e0 * wr_10_0 +
      wr_0_0 - 0.488687782805429864e0 * wr_4_0 +
      0.479741553371920851e-1 * wr_12_0;
  results[k++] =
      0.435852122994168453e0 * wr_4_4 - 0.178095041030750065e0 * wr_6_4 -
      0.350720680037109179e0 * wr_8_4 - 0.166975896226041041e0 * wr_10_4 +
      0.239706199804365255e0 * wr_12_4;
  results[k++] = 0.484786925120797386e0 * wr_8_8 +
                 0.278179548140778932e0 * wr_10_8 +
                 0.162828907132443073e0 * wr_12_8;
  results[k++] =
      0.825990976421958585e-1 * wr_4_4 - 0.265789932289964228e0 * wr_6_4 -
      0.664656890885675707e-1 * wr_8_4 + 0.456858718848737575e0 * wr_10_4 -
      0.224864347457955735e0 * wr_12_4;
  results[k++] =
      -0.202676597848803337e-1 * wr_2_0 - 0.533174882633308123e-1 * wr_4_0 -
      0.101178388322309837e0 * wr_6_0 - 0.173552870370270680e0 * wr_8_0 -
      0.304435838364586248e0 * wr_10_0 - 0.759997482360065668e0 * wr_12_0;
  results[k++] =
      -0.129288038045664779e0 * wr_4_4 + 0.150213848304558311e0 * wr_6_4 +
      0.297243597946806256e0 * wr_8_4 + 0.254349372404137723e0 * wr_10_4 -
      0.502811966632121057e0 * wr_12_4;
  results[k++] =
      0.435852122994168453e0 * wr_4_4 - 0.178095041030750065e0 * wr_6_4 -
      0.350720680037109179e0 * wr_8_4 - 0.166975896226041041e0 * wr_10_4 +
      0.239706199804365255e0 * wr_12_4;
  results[k++] =
      0.312243285237956162e0 * wr_6_0 + 0.245481401858636613e0 * wr_8_0 +
      0.550416732923025157e0 * wr_2_0 + 0.184485481035736314e0 * wr_10_0 +
      wr_0_0 + 0.399835458658988071e0 * wr_4_0 +
      0.117270157490913986e0 * wr_12_0;
  results[k++] =
      0.531104811398975483e0 * wr_4_4 + 0.150242241433685261e0 * wr_6_4 -
      0.746198858485034469e-1 * wr_8_4 - 0.228381784841029894e0 * wr_10_4 -
      0.275401456307947590e0 * wr_12_4;
  results[k++] = 0.330742143089880569e0 * wr_8_8 -
                 0.543657390275029129e-1 * wr_10_8 -
                 0.763735272168836624e0 * wr_12_8;
  results[k++] =
      0.218536670879591826e0 * wr_4_4 + 0.219685397649865592e0 * wr_6_4 +
      0.205160298054703953e0 * wr_8_4 + 0.740041563897144869e-1 * wr_10_4 -
      0.594935142098570023e0 * wr_12_4;
  results[k++] =
      0.119905092304071655e0 * wr_2_0 + 0.946291543201027431e-1 * wr_4_0 -
      0.149644854410054876e0 * wr_6_0 - 0.264022104264805737e0 * wr_8_0 +
      0.351636833583753136e0 * wr_10_0 - 0.107052517633261704e0 * wr_12_0;
  results[k++] = 0.484786925120797386e0 * wr_8_8 +
                 0.278179548140778932e0 * wr_10_8 +
                 0.162828907132443073e0 * wr_12_8;
  results[k++] =
      0.531104811398975483e0 * wr_4_4 + 0.150242241433685261e0 * wr_6_4 -
      0.746198858485034469e-1 * wr_8_4 - 0.228381784841029894e0 * wr_10_4 -
      0.275401456307947590e0 * wr_12_4;
  results[k++] =
      -0.354396128745080244e0 * wr_6_0 + 0.343673962602091258e-1 * wr_8_0 +
      0.137604183230756289e0 * wr_2_0 + 0.334806984101891828e0 * wr_10_0 +
      wr_0_0 - 0.340600575894693542e0 * wr_4_0 -
      0.136815183739399650e0 * wr_12_0;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 1)
void BoxMatrix::setup___oa_1_G2(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 3, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 5, 2, 2));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 3, 2));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 4, 2));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 3));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 13, 6, 4));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 1)
void BoxMatrix::evaluate___oa_1_G2(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 1)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] =
      -0.226778683805536336e0 * wr_3_0 + 0.346410161513775458e0 * wr_1_0;
  results[k++] =
      -0.453557367611072674e0 * wr_3_0 + 0.692820323027550916e0 * wr_1_0;
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0;
  results[k++] = -0.106904496764969754e1 * wr_4_4;
  results[k++] =
      0.383325938999963950e0 * wr_2_0 - 0.285714285714285714e0 * wr_4_0;
  results[k++] = -0.106904496764969754e1 * wr_4_4;
  results[k++] = wr_0_0 - 0.638876564999939914e0 * wr_2_0 +
                 0.142857142857142857e0 * wr_4_0;
  results[k++] = 0.534522483824848769e0 * wr_4_4;
  results[k++] =
      0.383325938999963950e0 * wr_2_0 - 0.285714285714285714e0 * wr_4_0;
  results[k++] = 0.534522483824848769e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.127775312999987983e0 * wr_2_0 -
                 0.428571428571428571e0 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = -0.106904496764969754e1 * wr_4_4;
  results[k++] =
      0.383325938999963950e0 * wr_2_0 - 0.285714285714285714e0 * wr_4_0;
  results[k++] = -0.436435780471984762e0 * wr_4_4;
  results[k++] =
      0.606091526731326449e0 * wr_2_0 - 0.451753951452625620e0 * wr_4_0;
  results[k++] = -0.717884153756580053e-1 * wr_5_0 -
                 0.247435829652696755e0 * wr_1_0 +
                 0.251976315339484818e0 * wr_3_0;
  results[k++] = -0.805822964025380299e0 * wr_5_4;
  results[k++] =
      -0.453557367611072674e0 * wr_3_0 + 0.692820323027550916e0 * wr_1_0;
  results[k++] = -0.805822964025380299e0 * wr_5_4;
  results[k++] = 0.148461497791618053e0 * wr_1_0 +
                 0.352766841475278744e0 * wr_3_0 -
                 0.358942076878290027e0 * wr_5_0;
  results[k++] = -0.921132372943676582e0 * wr_5_4;
  results[k++] = 0.606091526731326449e0 * wr_1_0 -
                 0.617213399848367641e0 * wr_3_0 +
                 0.175844987113332475e0 * wr_5_0;
  results[k++] = 0.131590338991953797e0 * wr_5_4;
  results[k++] =
      0.398409536444797881e0 * wr_3_0 - 0.317820863081864106e0 * wr_5_0;
  results[k++] = 0.509647191437625545e0 * wr_5_4;
  results[k++] =
      0.782460796435951591e0 * wr_1_0 - 0.408626823962396707e0 * wr_5_0;
  results[k++] = wr_0_0 - 0.638876564999939914e0 * wr_2_0 +
                 0.142857142857142857e0 * wr_4_0;
  results[k++] = 0.534522483824848769e0 * wr_4_4;
  results[k++] = -0.260820265478650531e0 * wr_2_0 +
                 0.318115551010802350e0 * wr_4_0 -
                 0.102934275831326886e0 * wr_6_0;
  results[k++] =
      0.307328819901278756e0 * wr_4_4 - 0.667090350641220733e0 * wr_6_4;
  results[k++] = 0.534522483824848769e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.127775312999987983e0 * wr_2_0 -
                 0.428571428571428571e0 * wr_4_0;
  results[k++] =
      -0.476111760514892467e0 * wr_4_4 - 0.861209939483038039e0 * wr_6_4;
  results[k++] = 0.202030508910442150e0 * wr_2_0 +
                 0.328548328329182269e0 * wr_4_0 -
                 0.398662736048649643e0 * wr_6_0;
  results[k++] = -0.260820265478650531e0 * wr_2_0 +
                 0.318115551010802350e0 * wr_4_0 -
                 0.102934275831326886e0 * wr_6_0;
  results[k++] =
      -0.476111760514892467e0 * wr_4_4 - 0.861209939483038039e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.106479427499989986e0 * wr_2_0 -
                 0.506493506493506494e0 * wr_4_0 +
                 0.210113710691374667e0 * wr_6_0;
  results[k++] =
      0.564599094007380724e0 * wr_4_4 + 0.272338495234217310e0 * wr_6_4;
  results[k++] =
      0.307328819901278756e0 * wr_4_4 - 0.667090350641220733e0 * wr_6_4;
  results[k++] = 0.202030508910442150e0 * wr_2_0 +
                 0.328548328329182269e0 * wr_4_0 -
                 0.398662736048649643e0 * wr_6_0;
  results[k++] =
      0.564599094007380724e0 * wr_4_4 + 0.272338495234217310e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.319438282499969957e0 * wr_2_0 -
                 0.116883116883116883e0 * wr_4_0 -
                 0.378204679244474401e0 * wr_6_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  results[k++] = -0.921132372943676582e0 * wr_5_4;
  results[k++] =
      0.398409536444797881e0 * wr_3_0 - 0.317820863081864106e0 * wr_5_0;
  results[k++] = -0.492365963917330932e0 * wr_5_4;
  results[k++] =
      0.563436169819011052e0 * wr_3_0 - 0.449466574975494725e0 * wr_5_0;
  results[k++] = -0.436435780471984762e0 * wr_4_4;
  results[k++] = -0.260820265478650531e0 * wr_2_0 +
                 0.318115551010802350e0 * wr_4_0 -
                 0.102934275831326886e0 * wr_6_0;
  results[k++] =
      -0.476111760514892467e0 * wr_4_4 - 0.861209939483038039e0 * wr_6_4;
  results[k++] =
      0.606091526731326449e0 * wr_2_0 - 0.451753951452625620e0 * wr_4_0;
  results[k++] =
      0.307328819901278756e0 * wr_4_4 - 0.667090350641220733e0 * wr_6_4;
  results[k++] = 0.202030508910442150e0 * wr_2_0 +
                 0.328548328329182269e0 * wr_4_0 -
                 0.398662736048649643e0 * wr_6_0;
  results[k++] =
      -0.828604936704818139e0 * wr_6_4 + 0.148453923805041097e0 * wr_4_4;
  results[k++] = 0.487950036474266590e0 * wr_2_0 -
                 0.595139700643615584e0 * wr_4_0 +
                 0.192572396758255314e0 * wr_6_0;
  results[k++] =
      -0.445361771415123290e0 * wr_4_4 - 0.460336075947121188e-1 * wr_6_4;
  results[k++] =
      0.406557814090870854e0 * wr_4_0 - 0.338276548879659426e0 * wr_6_0;
  results[k++] =
      -0.217314292606253389e0 * wr_4_4 + 0.471704110602518933e0 * wr_6_4;
  results[k++] = 0.714285714285714286e0 * wr_2_0 -
                 0.580796877272672649e-1 * wr_4_0 -
                 0.394655973692935997e0 * wr_6_0;
  results[k++] = 0.606091526731326449e0 * wr_1_0 -
                 0.617213399848367641e0 * wr_3_0 +
                 0.175844987113332475e0 * wr_5_0;
  results[k++] = 0.131590338991953797e0 * wr_5_4;
  results[k++] =
      -0.137464349807053753e0 * wr_1_0 - 0.171802033186012376e0 * wr_3_0 +
      0.381030820070800182e0 * wr_5_0 - 0.147456242396397379e0 * wr_7_0;
  results[k++] =
      -0.240072224589368946e0 * wr_5_4 - 0.784235933658605225e0 * wr_7_4;
  results[k++] = 0.509647191437625545e0 * wr_5_4;
  results[k++] =
      0.782460796435951591e0 * wr_1_0 - 0.408626823962396707e0 * wr_5_0;
  results[k++] =
      -0.240072224589368946e0 * wr_5_4 - 0.784235933658605225e0 * wr_7_4;
  results[k++] =
      0.824786098842322518e-1 * wr_1_0 + 0.240522846460417326e0 * wr_3_0 +
      0.281631475704504483e0 * wr_5_0 - 0.442368727189192137e0 * wr_7_0;
  results[k++] = -0.262431940540738983e0 * wr_3_0 +
                 0.354281681901414070e0 * wr_5_0 -
                 0.124113561883208728e0 * wr_7_0;
  results[k++] =
      -0.416617354083895403e0 * wr_5_4 - 0.852171860626149686e0 * wr_7_4;
  results[k++] =
      0.720082299823095580e0 * wr_1_0 - 0.257129738613290009e0 * wr_3_0 -
      0.433904672936743237e0 * wr_5_0 + 0.225196219832003708e0 * wr_7_0;
  results[k++] =
      0.179653602498812993e0 * wr_5_4 + 0.119769068332541995e0 * wr_7_4;
  results[k++] =
      0.388096137776548475e0 * wr_5_4 - 0.582144206664822711e0 * wr_7_4;
  results[k++] = 0.230496614925959067e0 * wr_3_0 +
                 0.311169167290727117e0 * wr_5_0 -
                 0.423928519335039896e0 * wr_7_0;
  results[k++] =
      0.475318754348711286e0 * wr_5_4 + 0.316879169565807524e0 * wr_7_4;
  results[k++] =
      0.816496580927726033e0 * wr_1_0 + 0.194371812299945007e0 * wr_3_0 -
      0.164000551042777257e0 * wr_5_0 - 0.357487916320388141e0 * wr_7_0;
  results[k++] = wr_0_0 - 0.106479427499989986e0 * wr_2_0 -
                 0.506493506493506494e0 * wr_4_0 +
                 0.210113710691374667e0 * wr_6_0;
  results[k++] =
      0.564599094007380724e0 * wr_4_4 + 0.272338495234217310e0 * wr_6_4;
  results[k++] =
      -0.181095243838544491e0 * wr_2_0 - 0.112137584019199043e0 * wr_4_0 +
      0.408810229188849742e0 * wr_6_0 - 0.177689412330383525e0 * wr_8_0;
  results[k++] = 0.245681137245784577e0 * wr_4_4 -
                 0.770289587033021258e-1 * wr_6_4 -
                 0.721777804934615156e0 * wr_8_4;
  results[k++] =
      0.564599094007380724e0 * wr_4_4 + 0.272338495234217310e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.319438282499969957e0 * wr_2_0 -
                 0.116883116883116883e0 * wr_4_0 -
                 0.378204679244474401e0 * wr_6_0;
  results[k++] = -0.325005595485937081e0 * wr_4_4 -
                 0.378484727175660497e0 * wr_6_4 -
                 0.818419103015605878e0 * wr_8_4;
  results[k++] =
      0.123205623123443351e0 * wr_2_0 + 0.254304137090067042e0 * wr_4_0 -
      0.470121995635408841e0 * wr_8_0 + 0.249602353812234222e0 * wr_6_0;
  results[k++] =
      -0.181095243838544491e0 * wr_2_0 - 0.112137584019199043e0 * wr_4_0 +
      0.408810229188849742e0 * wr_6_0 - 0.177689412330383525e0 * wr_8_0;
  results[k++] = -0.325005595485937081e0 * wr_4_4 -
                 0.378484727175660497e0 * wr_6_4 -
                 0.818419103015605878e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.135519271363623618e0 * wr_2_0 -
                 0.356643356643356643e0 * wr_4_0 -
                 0.336181937106199468e0 * wr_6_0 +
                 0.237447465070535778e0 * wr_8_0;
  results[k++] = 0.574534151229195225e0 * wr_4_4 +
                 0.329389682660246036e0 * wr_6_4 +
                 0.192903232531648841e0 * wr_8_4;
  results[k++] = 0.245681137245784577e0 * wr_4_4 -
                 0.770289587033021258e-1 * wr_6_4 -
                 0.721777804934615156e0 * wr_8_4;
  results[k++] =
      0.123205623123443351e0 * wr_2_0 + 0.254304137090067042e0 * wr_4_0 -
      0.470121995635408841e0 * wr_8_0 + 0.249602353812234222e0 * wr_6_0;
  results[k++] = 0.574534151229195225e0 * wr_4_4 +
                 0.329389682660246036e0 * wr_6_4 +
                 0.192903232531648841e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.406557814090870854e0 * wr_2_0 +
                 0.629370629370629371e-1 * wr_4_0 -
                 0.201709162263719681e0 * wr_6_0 -
                 0.332426451098750089e0 * wr_8_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] =
      -0.828604936704818139e0 * wr_6_4 + 0.148453923805041097e0 * wr_4_4;
  results[k++] =
      0.406557814090870854e0 * wr_4_0 - 0.338276548879659426e0 * wr_6_0;
  results[k++] =
      -0.507414823319489140e0 * wr_6_4 + 0.909090909090909091e-1 * wr_4_4;
  results[k++] =
      0.537825434827237823e0 * wr_4_0 - 0.447497811350381995e0 * wr_6_0;
  results[k++] =
      0.116774841624228445e1 * wr_4_4 - 0.144841364875580273e0 * wr_6_4;
  results[k++] = -0.492365963917330931e0 * wr_5_4;
  results[k++] = -0.262431940540738983e0 * wr_3_0 +
                 0.354281681901414070e0 * wr_5_0 -
                 0.124113561883208728e0 * wr_7_0;
  results[k++] =
      -0.416617354083895403e0 * wr_5_4 - 0.852171860626149686e0 * wr_7_4;
  results[k++] =
      0.563436169819011052e0 * wr_3_0 - 0.449466574975494725e0 * wr_5_0;
  results[k++] =
      0.388096137776548475e0 * wr_5_4 - 0.582144206664822711e0 * wr_7_4;
  results[k++] = 0.230496614925959067e0 * wr_3_0 +
                 0.311169167290727117e0 * wr_5_0 -
                 0.423928519335039896e0 * wr_7_0;
  results[k++] =
      0.208738623169220970e0 * wr_5_4 - 0.765374951620476888e0 * wr_7_4;
  results[k++] = 0.428549564355483348e0 * wr_3_0 -
                 0.578539563915657650e0 * wr_5_0 +
                 0.202676597848803337e0 * wr_7_0;
  results[k++] =
      -0.510249967746984592e0 * wr_5_4 - 0.139159082112813980e0 * wr_7_4;
  results[k++] =
      0.411638116161159094e0 * wr_5_0 - 0.352505822688910769e0 * wr_7_0;
  results[k++] =
      -0.293373104383259175e0 * wr_5_4 + 0.440059656574888762e0 * wr_7_4;
  results[k++] = 0.677596356818118090e0 * wr_3_0 -
                 0.914751369247020209e-1 * wr_5_0 -
                 0.384551806569720839e0 * wr_7_0;
  results[k++] =
      0.297921795862108991e0 * wr_5_4 - 0.595843591724217981e-1 * wr_7_4;
  results[k++] =
      0.595843591724217981e0 * wr_5_4 - 0.119168718344843596e0 * wr_7_4;
  results[k++] = 0.487950036474266590e0 * wr_2_0 -
                 0.595139700643615584e0 * wr_4_0 +
                 0.192572396758255314e0 * wr_6_0;
  results[k++] =
      -0.445361771415123290e0 * wr_4_4 - 0.460336075947121188e-1 * wr_6_4;
  results[k++] =
      -0.181095243838544491e0 * wr_2_0 - 0.112137584019199043e0 * wr_4_0 +
      0.408810229188849742e0 * wr_6_0 - 0.177689412330383525e0 * wr_8_0;
  results[k++] = -0.325005595485937081e0 * wr_4_4 -
                 0.378484727175660497e0 * wr_6_4 -
                 0.818419103015605878e0 * wr_8_4;
  results[k++] =
      -0.217314292606253389e0 * wr_4_4 + 0.471704110602518933e0 * wr_6_4;
  results[k++] = 0.714285714285714286e0 * wr_2_0 -
                 0.580796877272672649e-1 * wr_4_0 -
                 0.394655973692935997e0 * wr_6_0;
  results[k++] = 0.245681137245784577e0 * wr_4_4 -
                 0.770289587033021258e-1 * wr_6_4 -
                 0.721777804934615156e0 * wr_8_4;
  results[k++] =
      0.123205623123443351e0 * wr_2_0 + 0.254304137090067042e0 * wr_4_0 -
      0.470121995635408841e0 * wr_8_0 + 0.249602353812234222e0 * wr_6_0;
  results[k++] = -0.261654362711464433e0 * wr_4_0 +
                 0.377363288482015146e0 * wr_6_0 -
                 0.139613109688158484e0 * wr_8_0;
  results[k++] = 0.111888111888111888e0 * wr_4_4 -
                 0.338276548879659426e0 * wr_6_4 -
                 0.830165693289809351e0 * wr_8_4;
  results[k++] =
      0.621027319149066570e0 * wr_2_0 - 0.320459838808100699e0 * wr_4_0 -
      0.385144793516510629e0 * wr_6_0 + 0.233168781913095650e0 * wr_8_0;
  results[k++] = -0.442276595827745362e0 * wr_4_4 -
                 0.356574791160334604e-1 * wr_6_4 +
                 0.238655856920778068e-1 * wr_8_4;
  results[k++] = -0.525042885225711752e0 * wr_8_4 -
                 0.442276595827745362e-1 * wr_4_4 +
                 0.427889749392401524e0 * wr_6_4;
  results[k++] = 0.248227123766417456e0 * wr_4_0 +
                 0.298331874233587997e0 * wr_6_0 -
                 0.441495417833501104e0 * wr_8_0;
  results[k++] = -0.270837996238280901e0 * wr_4_4 +
                 0.378484727175660497e0 * wr_6_4 +
                 0.331264875030126188e0 * wr_8_4;
  results[k++] =
      0.760600024121886864e0 * wr_2_0 + 0.130827181355732216e0 * wr_4_0 -
      0.342686723780025371e0 * wr_8_0 - 0.188681644241007573e0 * wr_6_0;
  results[k++] = -0.123302959857021528e1 * wr_8_8;
  results[k++] = -0.359307204997625986e0 * wr_4_4 +
                 0.289682729751160547e0 * wr_6_4 -
                 0.646283115705235293e-1 * wr_8_4;
  results[k++] = -0.503382225707633663e0 * wr_8_8;
  results[k++] = -0.568114573750766458e0 * wr_4_4 +
                 0.458028612414344472e0 * wr_6_4 -
                 0.102186332946934072e0 * wr_8_4;
  results[k++] =
      0.720082299823095580e0 * wr_1_0 - 0.257129738613290009e0 * wr_3_0 -
      0.433904672936743237e0 * wr_5_0 + 0.225196219832003708e0 * wr_7_0;
  results[k++] =
      0.179653602498812993e0 * wr_5_4 + 0.119769068332541995e0 * wr_7_4;
  results[k++] =
      -0.874773135135796610e-1 * wr_1_0 - 0.185017574200321020e0 * wr_3_0 -
      0.231931803521356633e-1 * wr_5_0 + 0.426260062053451249e0 * wr_7_0 -
      0.214033272076690286e0 * wr_9_0;
  results[k++] = -0.127034280591503147e0 * wr_5_4 -
                 0.278977243651928480e0 * wr_7_4 -
                 0.778820603034984922e0 * wr_9_4;
  results[k++] =
      0.475318754348711286e0 * wr_5_4 + 0.316879169565807524e0 * wr_7_4;
  results[k++] =
      0.816496580927726033e0 * wr_1_0 + 0.194371812299945007e0 * wr_3_0 -
      0.164000551042777257e0 * wr_5_0 - 0.357487916320388141e0 * wr_7_0;
  results[k++] = -0.127034280591503147e0 * wr_5_4 -
                 0.278977243651928480e0 * wr_7_4 -
                 0.778820603034984922e0 * wr_9_4;
  results[k++] =
      0.524863881081477966e-1 * wr_1_0 + 0.163872708577427189e0 * wr_3_0 +
      0.255124983873492296e0 * wr_5_0 + 0.208173518677266889e0 * wr_7_0 -
      0.499410968178943998e0 * wr_9_0;
  results[k++] =
      -0.201870723492876141e0 * wr_3_0 - 0.708563363802828139e-1 * wr_5_0 +
      0.423446269954476838e0 * wr_7_0 - 0.199797414367326391e0 * wr_9_0;
  results[k++] = -0.293373104383259175e0 * wr_5_4 -
                 0.401230863347692695e0 * wr_7_4 -
                 0.824362522156571229e0 * wr_9_4;
  results[k++] =
      0.771389215839870028e0 * wr_1_0 - 0.302132433492207936e-1 * wr_3_0 -
      0.378743049167177638e0 * wr_5_0 - 0.273170838599489783e0 * wr_7_0 +
      0.242718659521376881e0 * wr_9_0;
  results[k++] = 0.164736617977443768e0 * wr_7_4 +
                 0.105984059922355827e0 * wr_9_4 +
                 0.207446111527151411e0 * wr_5_4;
  results[k++] = 0.299422670831354988e0 * wr_5_4 +
                 0.317035769115552341e-1 * wr_7_4 -
                 0.673089180785797203e0 * wr_9_4;
  results[k++] =
      0.148344079969205774e0 * wr_3_0 + 0.260342803762045942e0 * wr_5_0 +
      0.226520903478074318e0 * wr_7_0 - 0.489401717127366374e0 * wr_9_0;
  results[k++] = 0.448134819233488700e0 * wr_5_4 +
                 0.355871768214829262e0 * wr_7_4 +
                 0.228951736840436269e0 * wr_9_4;
  results[k++] =
      0.833195580901061817e0 * wr_1_0 + 0.293706293706293706e0 * wr_3_0 -
      0.219186112640847024e0 * wr_7_0 - 0.314599339004637529e0 * wr_9_0;
  results[k++] = -0.808386619096794779e0 * wr_9_8;
  results[k++] = 0.277091599862350463e0 * wr_7_4 -
                 0.641765353105220785e-1 * wr_9_4 -
                 0.376844575812796630e0 * wr_5_4;
  results[k++] = -0.432100823530390669e0 * wr_9_8;
  results[k++] = -0.532938710021193012e0 * wr_5_4 +
                 0.391866698544994862e0 * wr_7_4 -
                 0.907593266222561522e-1 * wr_9_4;
  results[k++] = wr_0_0 + 0.135519271363623618e0 * wr_2_0 -
                 0.356643356643356643e0 * wr_4_0 -
                 0.336181937106199468e0 * wr_6_0 +
                 0.237447465070535778e0 * wr_8_0;
  results[k++] = 0.574534151229195225e0 * wr_4_4 +
                 0.329389682660246036e0 * wr_6_4 +
                 0.192903232531648841e0 * wr_8_4;
  results[k++] =
      -0.127674255828710050e0 * wr_2_0 - 0.171292989005816650e0 * wr_4_0 +
      0.339077614503194449e-1 * wr_6_0 + 0.431627070261896594e0 * wr_8_0 -
      0.240592401626331073e0 * wr_10_0;
  results[k++] =
      0.202676597848803337e0 * wr_4_4 + 0.128159291874925793e-1 * wr_6_4 -
      0.188032519087076448e0 * wr_8_4 - 0.742855420298664784e0 * wr_10_4;
  results[k++] =
      -0.584066651954312502e0 * wr_10_8 + 0.495653637681493396e0 * wr_8_8;
  results[k++] = 0.574534151229195225e0 * wr_4_4 +
                 0.329389682660246036e0 * wr_6_4 +
                 0.192903232531648841e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.406557814090870854e0 * wr_2_0 +
                 0.629370629370629371e-1 * wr_4_0 -
                 0.201709162263719681e0 * wr_6_0 -
                 0.332426451098750089e0 * wr_8_0;
  results[k++] =
      -0.250189424055920526e0 * wr_4_4 - 0.255102764039410184e0 * wr_6_4 -
      0.360603162990625561e0 * wr_8_4 - 0.802375559227072230e0 * wr_10_4;
  results[k++] =
      0.827423745888058188e-1 * wr_2_0 + 0.185017574200321020e0 * wr_4_0 +
      0.251139896711988982e0 * wr_6_0 + 0.178548709837073764e0 * wr_8_0 -
      0.519738989649151081e0 * wr_10_0;
  results[k++] =
      0.160687067036028773e0 * wr_4_4 - 0.381029573900762189e0 * wr_6_4 +
      0.266208706736602010e0 * wr_8_4 - 0.624648525679287269e-1 * wr_10_4;
  results[k++] =
      -0.127674255828710050e0 * wr_2_0 - 0.171292989005816650e0 * wr_4_0 +
      0.339077614503194449e-1 * wr_6_0 + 0.431627070261896594e0 * wr_8_0 -
      0.240592401626331073e0 * wr_10_0;
  results[k++] =
      -0.250189424055920526e0 * wr_4_4 - 0.255102764039410184e0 * wr_6_4 -
      0.360603162990625561e0 * wr_8_4 - 0.802375559227072230e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.265826263059415558e0 * wr_2_0 -
      0.181818181818181818e0 * wr_4_0 - 0.370788901220072944e0 * wr_6_0 -
      0.203080068810326653e0 * wr_8_0 + 0.245553591656361991e0 * wr_10_0;
  results[k++] =
      0.579196622121640732e0 * wr_4_4 + 0.353165479751234505e0 * wr_6_4 +
      0.246741282221504956e0 * wr_8_4 + 0.151634727699372172e0 * wr_10_4;
  results[k++] =
      -0.357666318265950235e0 * wr_10_8 + 0.303524625368496953e0 * wr_8_8;
  results[k++] =
      0.202676597848803337e0 * wr_4_4 + 0.128159291874925793e-1 * wr_6_4 -
      0.188032519087076448e0 * wr_8_4 - 0.742855420298664784e0 * wr_10_4;
  results[k++] =
      0.827423745888058188e-1 * wr_2_0 + 0.185017574200321020e0 * wr_4_0 +
      0.251139896711988982e0 * wr_6_0 + 0.178548709837073764e0 * wr_8_0 -
      0.519738989649151081e0 * wr_10_0;
  results[k++] =
      0.579196622121640732e0 * wr_4_4 + 0.353165479751234505e0 * wr_6_4 +
      0.246741282221504956e0 * wr_8_4 + 0.151634727699372172e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.453468331101355953e0 * wr_2_0 +
      0.167832167832167832e0 * wr_4_0 - 0.593262241952116707e-1 * wr_6_0 -
      0.231198847568679574e0 * wr_8_0 - 0.294664309987634390e0 * wr_10_0;
  results[k++] =
      0.352161017432586940e0 * wr_8_4 - 0.504054747351161933e0 * wr_6_4 -
      0.826332327885268935e-1 * wr_10_4 + 0.212569009140848442e0 * wr_4_4;
  results[k++] =
      -0.584066651954312502e0 * wr_10_8 + 0.495653637681493396e0 * wr_8_8;
  results[k++] =
      0.160687067036028773e0 * wr_4_4 - 0.381029573900762189e0 * wr_6_4 +
      0.266208706736602010e0 * wr_8_4 - 0.624648525679287269e-1 * wr_10_4;
  results[k++] =
      -0.357666318265950235e0 * wr_10_8 + 0.303524625368496953e0 * wr_8_8;
  results[k++] =
      0.352161017432586940e0 * wr_8_4 - 0.504054747351161933e0 * wr_6_4 -
      0.826332327885268935e-1 * wr_10_4 + 0.212569009140848442e0 * wr_4_4;
  results[k++] =
      wr_0_0 - 0.860026145192226807e0 * wr_2_0 +
      0.461538461538461538e0 * wr_4_0 - 0.163147116536832095e0 * wr_6_0 +
      0.343673962602091258e-1 * wr_8_0 - 0.327404788875149322e-2 * wr_10_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] =
      0.208738623169220970e0 * wr_5_4 - 0.765374951620476888e0 * wr_7_4;
  results[k++] =
      0.411638116161159094e0 * wr_5_0 - 0.352505822688910769e0 * wr_7_0;
  results[k++] =
      0.297921795862108991e0 * wr_5_4 - 0.595843591724217981e-1 * wr_7_4;
  results[k++] =
      0.139159082112813980e0 * wr_5_4 - 0.510249967746984592e0 * wr_7_4;
  results[k++] =
      -0.445888515267367341e0 * wr_7_0 + 0.520685607524091885e0 * wr_5_0;
  results[k++] =
      0.103203137423067217e1 * wr_5_4 - 0.206406274846134434e0 * wr_7_4;
  results[k++] =
      -0.507414823319489140e0 * wr_6_4 + 0.909090909090909091e-1 * wr_4_4;
  results[k++] = -0.261654362711464433e0 * wr_4_0 +
                 0.377363288482015146e0 * wr_6_0 -
                 0.139613109688158484e0 * wr_8_0;
  results[k++] = 0.111888111888111888e0 * wr_4_4 -
                 0.338276548879659426e0 * wr_6_4 -
                 0.830165693289809351e0 * wr_8_4;
  results[k++] =
      0.537825434827237823e0 * wr_4_0 - 0.447497811350381995e0 * wr_6_0;
  results[k++] = -0.525042885225711752e0 * wr_8_4 -
                 0.442276595827745362e-1 * wr_4_4 +
                 0.427889749392401524e0 * wr_6_4;
  results[k++] = 0.248227123766417456e0 * wr_4_0 +
                 0.298331874233587997e0 * wr_6_0 -
                 0.441495417833501104e0 * wr_8_0;
  results[k++] =
      0.116774841624228445e1 * wr_4_4 - 0.144841364875580273e0 * wr_6_4;
  results[k++] = -0.123302959857021528e1 * wr_8_8;
  results[k++] = -0.359307204997625986e0 * wr_4_4 +
                 0.289682729751160547e0 * wr_6_4 -
                 0.646283115705235293e-1 * wr_8_4;
  results[k++] = -0.114788808636710287e1 * wr_8_8;
  results[k++] = 0.125436301501063615e1 * wr_4_4 -
                 0.269679944985296835e0 * wr_6_4 +
                 0.300828418798093419e-1 * wr_8_4;
  results[k++] = 0.573944043183551436e0 * wr_8_8;
  results[k++] =
      0.248069469178416912e0 * wr_6_4 - 0.719476934184501439e0 * wr_8_4;
  results[k++] = 0.209419664532237726e0 * wr_8_0 +
                 0.392481544067196649e0 * wr_4_0 -
                 0.566044932723022720e0 * wr_6_0;
  results[k++] = 0.104895104895104895e0 * wr_4_4 -
                 0.518690708282144454e0 * wr_6_4 -
                 0.193705328434288849e0 * wr_8_4;
  results[k++] =
      0.415099617330216661e0 * wr_6_0 - 0.362994085189212060e0 * wr_8_0;
  results[k++] = 0.415082846644904676e0 * wr_8_4 +
                 0.349650349650349650e-1 * wr_4_4 -
                 0.338276548879659426e0 * wr_6_4;
  results[k++] = 0.654135906778661082e0 * wr_4_0 -
                 0.113208986544604544e0 * wr_6_0 -
                 0.376955396158027907e0 * wr_8_0;
  results[k++] =
      0.367946484403119938e0 * wr_6_4 - 0.970142500145331896e-1 * wr_8_4;
  results[k++] = 0.355944985326644994e0 * wr_8_8;
  results[k++] = 0.777922918226817792e0 * wr_4_4 +
                 0.568644566804821723e0 * wr_6_4 -
                 0.175371913487809996e0 * wr_8_4;
  results[k++] = 0.428549564355483348e0 * wr_3_0 -
                 0.578539563915657650e0 * wr_5_0 +
                 0.202676597848803337e0 * wr_7_0;
  results[k++] =
      -0.510249967746984592e0 * wr_5_4 - 0.139159082112813980e0 * wr_7_4;
  results[k++] =
      -0.201870723492876141e0 * wr_3_0 - 0.708563363802828139e-1 * wr_5_0 +
      0.423446269954476838e0 * wr_7_0 - 0.199797414367326391e0 * wr_9_0;
  results[k++] = -0.293373104383259175e0 * wr_5_4 -
                 0.401230863347692695e0 * wr_7_4 -
                 0.824362522156571229e0 * wr_9_4;
  results[k++] =
      -0.293373104383259175e0 * wr_5_4 + 0.440059656574888762e0 * wr_7_4;
  results[k++] = 0.677596356818118090e0 * wr_3_0 -
                 0.914751369247020209e-1 * wr_5_0 -
                 0.384551806569720839e0 * wr_7_0;
  results[k++] = 0.299422670831354988e0 * wr_5_4 +
                 0.317035769115552341e-1 * wr_7_4 -
                 0.673089180785797203e0 * wr_9_4;
  results[k++] =
      0.148344079969205774e0 * wr_3_0 + 0.260342803762045942e0 * wr_5_0 +
      0.226520903478074318e0 * wr_7_0 - 0.489401717127366374e0 * wr_9_0;
  results[k++] =
      0.595843591724217981e0 * wr_5_4 - 0.119168718344843596e0 * wr_7_4;
  results[k++] = -0.808386619096794775e0 * wr_9_8;
  results[k++] = 0.277091599862350463e0 * wr_7_4 -
                 0.641765353105220785e-1 * wr_9_4 -
                 0.376844575812796630e0 * wr_5_4;
  results[k++] = -0.277350098112614561e0 * wr_5_4 +
                 0.978882699220992568e-1 * wr_7_4 -
                 0.134950431688565744e-1 * wr_9_4;
  results[k++] = -0.658358969337959226e0 * wr_9_8;
  results[k++] = 0.679366220486757449e0 * wr_5_4 -
                 0.239776313112973217e0 * wr_7_4 +
                 0.330559698205303752e-1 * wr_9_4;
  results[k++] = 0.416382772221781500e0 * wr_9_8;
  results[k++] = -0.260342803762045942e0 * wr_5_0 +
                 0.393431042882971184e0 * wr_7_0 -
                 0.151481483872756258e0 * wr_9_0;
  results[k++] = 0.162352262464949643e0 * wr_5_4 -
                 0.270132335866050667e0 * wr_7_4 -
                 0.806886224762981326e0 * wr_9_4;
  results[k++] =
      0.565238025780053194e0 * wr_3_0 - 0.354281681901414070e0 * wr_5_0 -
      0.350438292376118762e0 * wr_7_0 + 0.237854064723007608e0 * wr_9_0;
  results[k++] = -0.513402932670703555e0 * wr_5_4 -
                 0.155315172908784270e0 * wr_7_4 -
                 0.392553581979319633e-1 * wr_9_4;
  results[k++] = -0.695795410564069898e-1 * wr_5_4 +
                 0.450220559776751111e0 * wr_7_4 -
                 0.484131734857788795e0 * wr_9_4;
  results[k++] = 0.260342803762045942e0 * wr_5_0 +
                 0.288516098114178868e0 * wr_7_0 -
                 0.454444451618268775e0 * wr_9_0;
  results[k++] = -0.359805896708818756e0 * wr_5_4 +
                 0.300766539044523419e0 * wr_7_4 +
                 0.334477766809994035e0 * wr_9_4;
  results[k++] =
      0.729719153496434866e0 * wr_3_0 + 0.914751369247020209e-1 * wr_5_0 -
      0.203586250536911033e0 * wr_7_0 - 0.331633739339981828e0 * wr_9_0;
  results[k++] = -0.106157194034136181e1 * wr_9_8;
  results[k++] = 0.376387912954715733e0 * wr_7_4 -
                 0.108800516351737330e0 * wr_9_4 -
                 0.172005229038445362e0 * wr_5_4;
  results[k++] = -0.200023813776353970e0 * wr_9_8;
  results[k++] = 0.460739260139650877e0 * wr_7_4 -
                 0.153502551168347987e0 * wr_9_4 +
                 0.108785658644084235e0 * wr_5_4;
  results[k++] =
      0.621027319149066570e0 * wr_2_0 - 0.320459838808100699e0 * wr_4_0 -
      0.385144793516510629e0 * wr_6_0 + 0.233168781913095650e0 * wr_8_0;
  results[k++] = -0.442276595827745362e0 * wr_4_4 -
                 0.356574791160334604e-1 * wr_6_4 +
                 0.238655856920778068e-1 * wr_8_4;
  results[k++] =
      -0.127674255828710050e0 * wr_2_0 - 0.171292989005816650e0 * wr_4_0 +
      0.339077614503194449e-1 * wr_6_0 + 0.431627070261896594e0 * wr_8_0 -
      0.240592401626331073e0 * wr_10_0;
  results[k++] =
      -0.250189424055920526e0 * wr_4_4 - 0.255102764039410184e0 * wr_6_4 -
      0.360603162990625561e0 * wr_8_4 - 0.802375559227072230e0 * wr_10_4;
  results[k++] = -0.270837996238280901e0 * wr_4_4 +
                 0.378484727175660497e0 * wr_6_4 +
                 0.331264875030126188e0 * wr_8_4;
  results[k++] =
      0.760600024121886864e0 * wr_2_0 + 0.130827181355732216e0 * wr_4_0 -
      0.342686723780025371e0 * wr_8_0 - 0.188681644241007573e0 * wr_6_0;
  results[k++] =
      0.202676597848803337e0 * wr_4_4 + 0.128159291874925793e-1 * wr_6_4 -
      0.188032519087076448e0 * wr_8_4 - 0.742855420298664784e0 * wr_10_4;
  results[k++] =
      0.827423745888058188e-1 * wr_2_0 + 0.185017574200321020e0 * wr_4_0 +
      0.251139896711988982e0 * wr_6_0 + 0.178548709837073764e0 * wr_8_0 -
      0.519738989649151081e0 * wr_10_0;
  results[k++] = -0.503382225707633664e0 * wr_8_8;
  results[k++] = -0.568114573750766458e0 * wr_4_4 +
                 0.458028612414344472e0 * wr_6_4 -
                 0.102186332946934072e0 * wr_8_4;
  results[k++] =
      0.495653637681493396e0 * wr_8_8 - 0.584066651954312500e0 * wr_10_8;
  results[k++] =
      0.160687067036028773e0 * wr_4_4 - 0.381029573900762189e0 * wr_6_4 +
      0.266208706736602010e0 * wr_8_4 - 0.624648525679287269e-1 * wr_10_4;
  results[k++] =
      0.116348862028991373e0 * wr_8_4 + 0.273115496799567549e0 * wr_4_4 -
      0.291431584886389572e0 * wr_6_4 - 0.176949723420869419e-1 * wr_10_4;
  results[k++] =
      0.573148555561913777e0 * wr_8_8 - 0.437749440052845482e0 * wr_10_8;
  results[k++] =
      -0.217668789526758857e0 * wr_8_4 - 0.510952308021268332e0 * wr_4_4 +
      0.545218571164698240e0 * wr_6_4 + 0.331042619862650980e-1 * wr_10_4;
  results[k++] =
      -0.405277230265103941e0 * wr_8_8 + 0.309535597521981114e0 * wr_10_8;
  results[k++] =
      -0.213639892538733799e0 * wr_4_0 - 0.407800369605717137e-1 * wr_6_0 +
      0.431975848596892994e0 * wr_8_0 - 0.216718266253869969e0 * wr_10_0;
  results[k++] =
      0.884553191655490724e-1 * wr_4_4 - 0.232822363639983182e0 * wr_6_4 -
      0.386873704903156028e0 * wr_8_4 - 0.819527509649060429e0 * wr_10_4;
  results[k++] =
      0.689440981475034270e0 * wr_2_0 - 0.114195326003877767e0 * wr_4_0 -
      0.381462316316093755e0 * wr_6_0 - 0.229588867160583295e0 * wr_8_0 +
      0.245047816471263130e0 * wr_10_0;
  results[k++] =
      -0.437831492097860920e0 * wr_4_4 - 0.222473340732043765e-1 * wr_6_4 +
      0.444092565259391085e-1 * wr_8_4 + 0.445764199570595682e-1 * wr_10_4;
  results[k++] =
      -0.456781304015511067e-1 * wr_4_4 + 0.316819534622430465e0 * wr_6_4 +
      0.107025386869677569e0 * wr_8_4 - 0.634803279325929836e0 * wr_10_4;
  results[k++] =
      0.165484749177611638e0 * wr_4_0 + 0.263234006676695291e0 * wr_6_0 +
      0.209129408447447891e0 * wr_8_0 - 0.503607741612109933e0 * wr_10_0;
  results[k++] =
      -0.299095849554227320e0 * wr_4_4 + 0.319154271690772921e0 * wr_6_4 +
      0.345845193532367709e0 * wr_8_4 + 0.247962149480909632e0 * wr_10_4;
  results[k++] =
      0.784963088134393298e0 * wr_2_0 + 0.234030776652888266e0 * wr_4_0 -
      0.372269102319992334e-1 * wr_6_0 - 0.228536908054388020e0 * wr_8_0 -
      0.301319149282432418e0 * wr_10_0;
  results[k++] =
      -0.550663320349089947e0 * wr_8_8 - 0.911248125643346552e0 * wr_10_8;
  results[k++] =
      -0.262400881668443612e0 * wr_4_4 - 0.233332008241740482e0 * wr_6_4 +
      0.372614569480503858e0 * wr_8_4 - 0.110505066858047968e0 * wr_10_4;
  results[k++] =
      -0.515098370052409406e0 * wr_8_8 - 0.318477092134366573e0 * wr_10_8;
  results[k++] =
      -0.649409049859798571e0 * wr_4_4 - 0.329981290591220179e-1 * wr_6_4 +
      0.408391347715283887e0 * wr_8_4 - 0.138245714539105091e0 * wr_10_4;
  results[k++] =
      0.771389215839870028e0 * wr_1_0 - 0.302132433492207936e-1 * wr_3_0 -
      0.378743049167177638e0 * wr_5_0 - 0.273170838599489783e0 * wr_7_0 +
      0.242718659521376881e0 * wr_9_0;
  results[k++] = 0.164736617977443768e0 * wr_7_4 +
                 0.105984059922355827e0 * wr_9_4 +
                 0.207446111527151411e0 * wr_5_4;
  results[k++] =
      -0.605612170478628422e-1 * wr_1_0 - 0.154181311833600850e0 * wr_3_0 -
      0.131882790237634164e0 * wr_5_0 + 0.974345980275177730e-1 * wr_7_0 +
      0.428915882534637279e0 * wr_9_0 - 0.270388422134025264e0 * wr_11_0;
  results[k++] =
      -0.807133561100311950e-1 * wr_5_4 - 0.160577097945219956e0 * wr_7_4 -
      0.300436570169486849e0 * wr_9_4 - 0.777700619717313828e0 * wr_11_4;
  results[k++] =
      0.567014215224565753e0 * wr_9_8 - 0.450519234076344119e0 * wr_11_8;
  results[k++] = 0.448134819233488700e0 * wr_5_4 +
                 0.355871768214829262e0 * wr_7_4 +
                 0.228951736840436269e0 * wr_9_4;
  results[k++] =
      0.833195580901061817e0 * wr_1_0 + 0.293706293706293706e0 * wr_3_0 -
      0.219186112640847024e0 * wr_7_0 - 0.314599339004637529e0 * wr_9_0;
  results[k++] =
      -0.807133561100311950e-1 * wr_5_4 - 0.160577097945219956e0 * wr_7_4 -
      0.300436570169486849e0 * wr_9_4 - 0.777700619717313828e0 * wr_11_4;
  results[k++] =
      0.363367302287177053e-1 * wr_1_0 + 0.117177796993536646e0 * wr_3_0 +
      0.200098026567444938e0 * wr_5_0 + 0.239477807200164165e0 * wr_7_0 +
      0.144387524813640272e0 * wr_9_0 - 0.540776844268050529e0 * wr_11_0;
  results[k++] =
      0.207356366287594570e0 * wr_5_4 - 0.381972253687674208e0 * wr_7_4 +
      0.257278507930900301e0 * wr_9_4 - 0.605439111323690905e-1 * wr_11_4;
  results[k++] = -0.432100823530390668e0 * wr_9_8;
  results[k++] = -0.532938710021193012e0 * wr_5_4 +
                 0.391866698544994862e0 * wr_7_4 -
                 0.907593266222561522e-1 * wr_9_4;
  results[k++] =
      0.567014215224565753e0 * wr_9_8 - 0.450519234076344119e0 * wr_11_8;
  results[k++] =
      0.207356366287594570e0 * wr_5_4 - 0.381972253687674208e0 * wr_7_4 +
      0.257278507930900301e0 * wr_9_4 - 0.605439111323690905e-1 * wr_11_4;
  results[k++] =
      -0.645650950784756326e-1 * wr_7_0 - 0.203519331620353122e0 * wr_3_0 +
      0.133234677505298253e0 * wr_1_0 + 0.155712036563729705e-1 * wr_9_0 -
      0.163871770990318341e-2 * wr_11_0 + 0.150073519925583704e0 * wr_5_0;
  results[k++] =
      -0.198449250913537995e-1 * wr_11_4 + 0.299053604377525901e0 * wr_5_4 -
      0.295118688530453190e0 * wr_7_4 + 0.123684113655963956e0 * wr_9_4;
  results[k++] =
      -0.319003698734301558e0 * wr_11_8 + 0.588854163614550622e0 * wr_9_8;
  results[k++] =
      0.324066269717144372e-1 * wr_11_4 - 0.488352490976725484e0 * wr_5_4 +
      0.481926800305979096e0 * wr_7_4 - 0.201975311830341679e0 * wr_9_4;
  results[k++] =
      0.241144129760209149e0 * wr_11_8 - 0.445131907259725780e0 * wr_9_8;
  results[k++] =
      -0.151066216746103968e0 * wr_3_0 - 0.155953020245308439e0 * wr_5_0 +
      0.733248040451262047e-1 * wr_7_0 + 0.432270374576166445e0 * wr_9_0 -
      0.260911444412124182e0 * wr_11_0;
  results[k++] =
      -0.231851536412698637e0 * wr_5_4 - 0.284676436329442300e0 * wr_7_4 -
      0.388608219715304698e0 * wr_9_4 - 0.810570655909901797e0 * wr_11_4;
  results[k++] =
      0.799408065031789518e0 * wr_1_0 + 0.111010544520192612e0 * wr_3_0 -
      0.245574850787318788e0 * wr_5_0 - 0.352173245882594360e0 * wr_7_0 -
      0.155712036563729705e0 * wr_9_0 + 0.245807656485477512e0 * wr_11_0;
  results[k++] =
      0.225997397108087346e0 * wr_5_4 + 0.191163211839547567e0 * wr_7_4 +
      0.146880100971749126e0 * wr_9_4 + 0.942667417839168276e-1 * wr_11_4;
  results[k++] =
      0.378009476816377168e0 * wr_9_8 - 0.300346156050896081e0 * wr_11_8;
  results[k++] =
      0.241745147650376660e0 * wr_5_4 + 0.103652071020692352e0 * wr_7_4 -
      0.113772836990569639e0 * wr_9_4 - 0.711932366009172201e0 * wr_11_4;
  results[k++] =
      0.103197872359807251e0 * wr_3_0 + 0.197852932984122752e0 * wr_5_0 +
      0.246242610268804146e0 * wr_7_0 + 0.156333643971702045e0 * wr_9_0 -
      0.534709345033288212e0 * wr_11_0;
  results[k++] =
      0.428799912078663905e0 * wr_5_4 + 0.362706692547742025e0 * wr_7_4 +
      0.278685397215742875e0 * wr_9_4 + 0.178858566984084782e0 * wr_11_4;
  results[k++] =
      0.842650088469486328e0 * wr_1_0 + 0.351046164979332398e0 * wr_3_0 +
      0.103543448605856179e0 * wr_5_0 - 0.928057989969594855e-1 * wr_7_0 -
      0.236354253429506066e0 * wr_9_0 - 0.279832341888852689e0 * wr_11_0;
  results[k++] =
      0.325434431228535694e0 * wr_9_4 + 0.262287361921980789e0 * wr_5_4 -
      0.483160929856280401e0 * wr_7_4 - 0.765826630532441685e-1 * wr_11_4;
  results[k++] =
      -0.106917225763855728e0 * wr_9_8 - 0.752972303839014870e0 * wr_11_8;
  results[k++] =
      -0.199095022624434389e0 * wr_5_4 - 0.267920933555608478e0 * wr_7_4 +
      0.366799451597801304e0 * wr_9_4 - 0.109297324946239144e0 * wr_11_4;
  results[k++] =
      -0.305541422474630941e0 * wr_9_8 - 0.331045783178830742e0 * wr_11_8;
  results[k++] =
      -0.526755917135031610e0 * wr_5_4 - 0.945136214955200259e-1 * wr_7_4 +
      0.376300866720213411e0 * wr_9_4 - 0.127109248691149362e0 * wr_11_4;
  results[k++] =
      -0.223660050142870130e0 * wr_7_0 - 0.705011645377821538e0 * wr_3_0 +
      0.461538461538461538e0 * wr_1_0 + 0.539402317356805169e-1 * wr_9_0 -
      0.567668466563046004e-2 * wr_11_0 + 0.519869922763622502e0 * wr_5_0;
  results[k++] =
      wr_0_0 + 0.265826263059415558e0 * wr_2_0 -
      0.181818181818181818e0 * wr_4_0 - 0.370788901220072944e0 * wr_6_0 -
      0.203080068810326653e0 * wr_8_0 + 0.245553591656361991e0 * wr_10_0;
  results[k++] =
      0.579196622121640732e0 * wr_4_4 + 0.353165479751234505e0 * wr_6_4 +
      0.246741282221504956e0 * wr_8_4 + 0.151634727699372172e0 * wr_10_4;
  results[k++] =
      -0.357666318265950235e0 * wr_10_8 + 0.303524625368496953e0 * wr_8_8;
  results[k++] =
      0.312399367869667504e0 * wr_6_4 - 0.296209704038792381e0 * wr_8_4 -
      0.110432862136719509e0 * wr_4_4 + 0.126921208973890595e0 * wr_10_4 -
      0.210236244816031584e-1 * wr_12_4;
  results[k++] =
      -0.983566348499561908e-1 * wr_6_0 + 0.139254904327081133e0 * wr_8_0 -
      0.938210340209701971e-1 * wr_2_0 + 0.422779227373562386e0 * wr_10_0 -
      0.160427807486631016e0 * wr_4_0 - 0.293175393727284964e0 * wr_12_0;
  results[k++] =
      0.172384050727553038e0 * wr_4_4 + 0.391862212968412985e-1 * wr_6_4 -
      0.743108994867015640e-1 * wr_8_4 - 0.241840386876065375e0 * wr_10_4 -
      0.754217949948181586e0 * wr_12_4;
  results[k++] = 0.400548626656416067e0 * wr_8_8 +
                 0.161607713580711180e0 * wr_10_8 -
                 0.630633645605106103e0 * wr_12_8;
  results[k++] =
      0.579196622121640732e0 * wr_4_4 + 0.353165479751234505e0 * wr_6_4 +
      0.246741282221504956e0 * wr_8_4 + 0.151634727699372172e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.453468331101355953e0 * wr_2_0 +
      0.167832167832167832e0 * wr_4_0 - 0.593262241952116707e-1 * wr_6_0 -
      0.231198847568679574e0 * wr_8_0 - 0.294664309987634390e0 * wr_10_0;
  results[k++] =
      0.352161017432586940e0 * wr_8_4 - 0.504054747351161933e0 * wr_6_4 -
      0.826332327885268935e-1 * wr_10_4 + 0.212569009140848442e0 * wr_4_4;
  results[k++] = -0.247354866528353290e0 * wr_12_8 +
                 0.549360590063440004e0 * wr_10_8 -
                 0.255300657932982077e0 * wr_8_8;
  results[k++] =
      -0.204422337219402611e0 * wr_4_4 - 0.194137749103017798e0 * wr_6_4 -
      0.242824753932274718e0 * wr_8_4 - 0.356011969381134665e0 * wr_10_4 -
      0.795015524673042499e0 * wr_12_4;
  results[k++] =
      0.593376319876823097e-1 * wr_2_0 + 0.137886232816885319e0 * wr_4_0 +
      0.207353992743570093e0 * wr_6_0 + 0.228649849453945550e0 * wr_8_0 +
      0.118839582747259030e0 * wr_10_0 - 0.556261198856917234e0 * wr_12_0;
  results[k++] =
      0.173261328916010637e0 * wr_4_4 - 0.153166391615527446e0 * wr_6_4 -
      0.290457511732566516e0 * wr_8_4 + 0.360923806079865744e0 * wr_10_4 -
      0.107199871478141500e0 * wr_12_4;
  results[k++] =
      -0.357666318265950235e0 * wr_10_8 + 0.303524625368496953e0 * wr_8_8;
  results[k++] =
      0.352161017432586940e0 * wr_8_4 - 0.504054747351161933e0 * wr_6_4 -
      0.826332327885268935e-1 * wr_10_4 + 0.212569009140848442e0 * wr_4_4;
  results[k++] =
      wr_0_0 - 0.860026145192226807e0 * wr_2_0 +
      0.461538461538461538e0 * wr_4_0 - 0.163147116536832095e0 * wr_6_0 +
      0.343673962602091258e-1 * wr_8_0 - 0.327404788875149322e-2 * wr_10_0;
  results[k++] = -0.140361627443092685e1 * wr_12_12;
  results[k++] = -0.173442643067712545e0 * wr_8_8 +
                 0.570192681293543851e0 * wr_10_8 -
                 0.364096505050143065e0 * wr_12_8;
  results[k++] =
      -0.395413075794254736e-1 * wr_4_4 + 0.234899525670584669e0 * wr_6_4 -
      0.381816314814595496e0 * wr_8_4 + 0.249947955337493054e0 * wr_10_4 -
      0.587157877702327741e-1 * wr_12_4;
  results[k++] =
      0.119168718344843596e0 * wr_2_0 - 0.235120019126996917e0 * wr_4_0 +
      0.208216175226429089e0 * wr_6_0 - 0.102044702479773993e0 * wr_8_0 +
      0.271213000813231377e-1 * wr_10_0 - 0.307754349978586354e-2 * wr_12_0;
  results[k++] =
      0.312399367869667504e0 * wr_6_4 - 0.296209704038792381e0 * wr_8_4 -
      0.110432862136719509e0 * wr_4_4 + 0.126921208973890595e0 * wr_10_4 -
      0.210236244816031584e-1 * wr_12_4;
  results[k++] = -0.247354866528353290e0 * wr_12_8 +
                 0.549360590063440004e0 * wr_10_8 -
                 0.255300657932982077e0 * wr_8_8;
  results[k++] = -0.140361627443092685e1 * wr_12_12;
  results[k++] =
      wr_0_0 - 0.894427190999915880e0 * wr_2_0 +
      0.529411764705882353e0 * wr_4_0 - 0.223253948945138656e0 * wr_6_0 +
      0.638251644832455195e-1 * wr_8_0 - 0.111032928401137596e-1 * wr_10_0 +
      0.888410284022075649e-3 * wr_12_0;
  results[k++] =
      -0.468599051804501255e0 * wr_6_4 + 0.444314556058188572e0 * wr_8_4 +
      0.165649293205079263e0 * wr_4_4 - 0.190381813460835893e0 * wr_10_4 +
      0.315354367224047376e-1 * wr_12_4;
  results[k++] = 0.195551192139135703e0 * wr_12_8 -
                 0.434307680333633823e0 * wr_10_8 +
                 0.201832891801939590e0 * wr_8_8;
  results[k++] = 0.405189116940817625e0 * wr_12_12;
  results[k++] =
      -0.983566348499561908e-1 * wr_6_0 + 0.139254904327081133e0 * wr_8_0 -
      0.938210340209701971e-1 * wr_2_0 + 0.422779227373562386e0 * wr_10_0 -
      0.160427807486631016e0 * wr_4_0 - 0.293175393727284964e0 * wr_12_0;
  results[k++] =
      -0.204422337219402611e0 * wr_4_4 - 0.194137749103017798e0 * wr_6_4 -
      0.242824753932274718e0 * wr_8_4 - 0.356011969381134665e0 * wr_10_4 -
      0.795015524673042499e0 * wr_12_4;
  results[k++] = -0.173442643067712545e0 * wr_8_8 +
                 0.570192681293543851e0 * wr_10_8 -
                 0.364096505050143065e0 * wr_12_8;
  results[k++] =
      -0.468599051804501255e0 * wr_6_4 + 0.444314556058188572e0 * wr_8_4 +
      0.165649293205079263e0 * wr_4_4 - 0.190381813460835893e0 * wr_10_4 +
      0.315354367224047376e-1 * wr_12_4;
  results[k++] =
      -0.288825038845109450e0 * wr_6_0 - 0.319125822416227597e0 * wr_8_0 +
      0.344010458076890723e0 * wr_2_0 - 0.106762431154939996e0 * wr_10_0 +
      wr_0_0 - 0.481283422459893048e-1 * wr_4_0 +
      0.244312828106070804e0 * wr_12_0;
  results[k++] =
      0.581796171205491505e0 * wr_4_4 + 0.365738065437185454e0 * wr_6_4 +
      0.272473298117905734e0 * wr_8_4 + 0.200143768449157552e0 * wr_10_4 +
      0.125702991658030264e0 * wr_12_4;
  results[k++] = 0.375514337490390062e0 * wr_8_8 -
                 0.125694888340553140e0 * wr_10_8 -
                 0.315316822802553051e0 * wr_12_8;
  results[k++] =
      0.172384050727553038e0 * wr_4_4 + 0.391862212968412985e-1 * wr_6_4 -
      0.743108994867015640e-1 * wr_8_4 - 0.241840386876065375e0 * wr_10_4 -
      0.754217949948181586e0 * wr_12_4;
  results[k++] =
      0.593376319876823097e-1 * wr_2_0 + 0.137886232816885319e0 * wr_4_0 +
      0.207353992743570093e0 * wr_6_0 + 0.228649849453945550e0 * wr_8_0 +
      0.118839582747259030e0 * wr_10_0 - 0.556261198856917234e0 * wr_12_0;
  results[k++] =
      -0.395413075794254736e-1 * wr_4_4 + 0.234899525670584669e0 * wr_6_4 -
      0.381816314814595496e0 * wr_8_4 + 0.249947955337493054e0 * wr_10_4 -
      0.587157877702327741e-1 * wr_12_4;
  results[k++] = 0.195551192139135703e0 * wr_12_8 -
                 0.434307680333633823e0 * wr_10_8 +
                 0.201832891801939590e0 * wr_8_8;
  results[k++] =
      0.581796171205491505e0 * wr_4_4 + 0.365738065437185454e0 * wr_6_4 +
      0.272473298117905734e0 * wr_8_4 + 0.200143768449157552e0 * wr_10_4 +
      0.125702991658030264e0 * wr_12_4;
  results[k++] =
      0.390304106547445202e-1 * wr_6_0 - 0.122740700929318306e0 * wr_8_0 +
      0.481614641307647013e0 * wr_2_0 - 0.238293746337826072e0 * wr_10_0 +
      wr_0_0 + 0.233237350884409708e0 * wr_4_0 -
      0.263857854354556468e0 * wr_12_0;
  results[k++] =
      0.308193991763729672e0 * wr_4_4 - 0.445606285814833104e0 * wr_6_4 -
      0.128591022081198604e0 * wr_8_4 + 0.354209365548404608e0 * wr_10_4 -
      0.118648515561886900e0 * wr_12_4;
  results[k++] = 0.400548626656416067e0 * wr_8_8 +
                 0.161607713580711180e0 * wr_10_8 -
                 0.630633645605106103e0 * wr_12_8;
  results[k++] =
      0.173261328916010637e0 * wr_4_4 - 0.153166391615527446e0 * wr_6_4 -
      0.290457511732566516e0 * wr_8_4 + 0.360923806079865744e0 * wr_10_4 -
      0.107199871478141500e0 * wr_12_4;
  results[k++] =
      0.119168718344843596e0 * wr_2_0 - 0.235120019126996917e0 * wr_4_0 +
      0.208216175226429089e0 * wr_6_0 - 0.102044702479773993e0 * wr_8_0 +
      0.271213000813231377e-1 * wr_10_0 - 0.307754349978586354e-2 * wr_12_0;
  results[k++] = 0.405189116940817625e0 * wr_12_12;
  results[k++] = 0.375514337490390062e0 * wr_8_8 -
                 0.125694888340553140e0 * wr_10_8 -
                 0.315316822802553051e0 * wr_12_8;
  results[k++] =
      0.308193991763729672e0 * wr_4_4 - 0.445606285814833104e0 * wr_6_4 -
      0.128591022081198604e0 * wr_8_4 + 0.354209365548404608e0 * wr_10_4 -
      0.118648515561886900e0 * wr_12_4;
  results[k++] =
      0.498028039954540077e0 * wr_6_0 - 0.289668054193191203e0 * wr_8_0 -
      0.481614641307647013e0 * wr_2_0 + 0.828476465762334372e-1 * wr_10_0 +
      wr_0_0 - 0.285067873303167421e0 * wr_4_0 -
      0.977251312424283214e-2 * wr_12_0;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 2)
void BoxMatrix::setup___oa_2_A1(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 2, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 1));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 1));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 1));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 1));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 2)
void BoxMatrix::evaluate___oa_2_A1(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 1)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  results[k++] =
      0.774596669241483376e0 * wr_1_0 - 0.507092552837109947e0 * wr_3_0;
  results[k++] = wr_0_0 + 0.319438282499969957e0 * wr_2_0 -
                 0.571428571428571429e0 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] =
      0.717137165600636186e0 * wr_2_0 - 0.534522483824848769e0 * wr_4_0;
  results[k++] = 0.115470053837925153e1 * wr_4_4;
  results[k++] = 0.828078671210825063e0 * wr_1_0 +
                 0.210818510677891956e0 * wr_3_0 -
                 0.600624975130372640e0 * wr_5_0;
  results[k++] = 0.778498944161522970e0 * wr_5_4;
  results[k++] = wr_0_0 + 0.447213595499957940e0 * wr_2_0 +
                 0.909090909090909091e-1 * wr_4_0 -
                 0.630341132074124001e0 * wr_6_0;
  results[k++] =
      0.608967388233712415e0 * wr_6_4 - 0.589158245309805476e0 * wr_4_4;
  results[k++] =
      0.608967388233712415e0 * wr_6_4 - 0.589158245309805476e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.745355992499929899e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 -
                 0.420227421382749334e-1 * wr_6_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] = -0.467099366496913781e0 * wr_5_4;
  results[k++] =
      0.690065559342354218e0 * wr_3_0 - 0.550481882563180302e0 * wr_5_0;
  results[k++] = 0.934198732993827564e0 * wr_5_4;
  results[k++] =
      -0.390608113112417935e0 * wr_6_4 - 0.314918328648886780e0 * wr_4_4;
  results[k++] = 0.782460796435951592e0 * wr_2_0 +
                 0.159057775505401175e0 * wr_4_0 -
                 0.617605654987961318e0 * wr_6_0;
  results[k++] =
      0.781216226224835872e0 * wr_6_4 + 0.629836657297773559e0 * wr_4_4;
  results[k++] =
      -0.672202228850233050e-1 * wr_5_4 - 0.336101114425116525e0 * wr_7_4;
  results[k++] =
      0.282619012890026597e-1 * wr_7_0 + 0.322695260896342694e0 * wr_3_0 -
      0.258198889747161125e0 * wr_1_0 - 0.155584583645363558e0 * wr_5_0;
  results[k++] =
      0.845154254728516578e0 * wr_1_0 + 0.352089395109765171e0 * wr_3_0 +
      0.339513395963365203e-1 * wr_5_0 - 0.647561509701123570e0 * wr_7_0;
  results[k++] =
      -0.660089484862333144e0 * wr_5_4 + 0.513402932670703555e0 * wr_7_4;
  results[k++] =
      0.134440445770046610e0 * wr_5_4 + 0.672202228850233050e0 * wr_7_4;
  results[k++] =
      -0.565238025780053194e-1 * wr_7_0 - 0.645390521792685388e0 * wr_3_0 +
      0.516397779494322249e0 * wr_1_0 + 0.311169167290727117e0 * wr_5_0;
  results[k++] =
      wr_0_0 - 0.691148283954480453e0 * wr_2_0 +
      0.188811188811188811e0 * wr_4_0 + 0.504272905659299201e-2 * wr_6_0 -
      0.949789860282143113e-2 * wr_8_0 - 0.107749881771636890e1 * wr_8_8;
  results[k++] = -0.298844402809861107e0 * wr_8_4 +
                 0.478395283258379572e-1 * wr_6_4 +
                 0.267019343944570394e0 * wr_4_4;
  results[k++] =
      -0.243934688454522513e0 * wr_2_0 + 0.377622377622377622e0 * wr_4_0 -
      0.211794620376905665e0 * wr_6_0 + 0.427405437126964402e-1 * wr_8_0 -
      0.538749408858184450e0 * wr_8_8;
  results[k++] = -0.298844402809861107e0 * wr_8_4 +
                 0.478395283258379572e-1 * wr_6_4 +
                 0.267019343944570394e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.493677345681771751e0 * wr_2_0 +
                 0.242757242757242757e0 * wr_4_0 -
                 0.252136452829649601e-1 * wr_6_0 -
                 0.664852902197500178e0 * wr_8_0;
  results[k++] = 0.597688805619722217e0 * wr_8_4 -
                 0.956790566516759144e-1 * wr_6_4 -
                 0.534038687889140788e0 * wr_4_4;
  results[k++] =
      -0.243934688454522513e0 * wr_2_0 + 0.377622377622377622e0 * wr_4_0 -
      0.211794620376905665e0 * wr_6_0 + 0.427405437126964402e-1 * wr_8_0 -
      0.538749408858184450e0 * wr_8_8;
  results[k++] = 0.597688805619722217e0 * wr_8_4 -
                 0.956790566516759144e-1 * wr_6_4 -
                 0.534038687889140788e0 * wr_4_4;
  results[k++] =
      wr_0_0 - 0.325246251272696685e0 * wr_2_0 -
      0.377622377622377622e0 * wr_4_0 + 0.322734659621951489e0 * wr_6_0 -
      0.736087141718660912e-1 * wr_8_0 - 0.269374704429092226e0 * wr_8_8;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] = 0.103279555898864450e1 * wr_4_4;
  results[k++] =
      0.572077553547355391e0 * wr_4_4 - 0.591312395989082618e0 * wr_6_4;
  results[k++] =
      0.674199862463242087e0 * wr_4_0 - 0.560968194005074306e0 * wr_6_0;
  results[k++] = 0.784464540552736127e0 * wr_6_4;
  results[k++] = 0.696310623822791351e0 * wr_5_4;
  results[k++] =
      -0.108785658644084235e0 * wr_5_4 - 0.543928293220421173e0 * wr_7_4;
  results[k++] = 0.759737176397586326e0 * wr_3_0 +
                 0.128205128205128205e0 * wr_5_0 -
                 0.628787608745845475e0 * wr_7_0;
  results[k++] =
      0.656002204171109029e0 * wr_5_4 + 0.721602424588219932e0 * wr_7_4;
  results[k++] =
      -0.526959154406888676e0 * wr_4_4 + 0.544676990468434620e0 * wr_6_4;
  results[k++] =
      0.526207964923914663e-1 * wr_6_0 + 0.606060606060606061e-1 * wr_2_0 -
      0.106189734596544979e-1 * wr_8_0 - 0.938210340209701971e-1 * wr_4_0 +
      0.120468030104472779e1 * wr_8_8;
  results[k++] =
      -0.603735903703033338e0 * wr_4_4 - 0.493606883015190697e0 * wr_8_4;
  results[k++] =
      -0.213746685793360753e0 * wr_6_0 - 0.246182981958665466e0 * wr_2_0 +
      0.431344741020215662e-1 * wr_8_0 + 0.381102841774509440e0 * wr_4_0 +
      0.543714946166432150e0 * wr_8_8;
  results[k++] = 0.805822964025380299e0 * wr_2_0 +
                 0.304932679681573802e0 * wr_4_0 -
                 0.658889975448753873e0 * wr_8_0;
  results[k++] = -0.675926369419374609e0 * wr_6_4 +
                 0.179653602498812993e0 * wr_4_4 +
                 0.452398180993664705e0 * wr_8_4;
  results[k++] = 0.413711872944029095e0 * wr_4_4 +
                 0.400254210384732439e0 * wr_6_4 +
                 0.654843529959295693e0 * wr_8_4;
  results[k++] =
      0.322235253162984833e0 * wr_6_0 + 0.371134809512602742e0 * wr_2_0 -
      0.650276664207762277e-1 * wr_8_0 - 0.574534151229195224e0 * wr_4_0 +
      0.163936224485667322e0 * wr_8_8;
  results[k++] =
      -0.230940107675850305e0 * wr_1_0 + 0.288627415752500792e0 * wr_3_0 -
      0.139159082112813980e0 * wr_5_0 + 0.252782129822395507e-1 * wr_7_0;
  results[k++] =
      -0.590401983753998126e0 * wr_5_4 + 0.459201542919776321e0 * wr_7_4;
  results[k++] =
      -0.104972776216295593e-1 * wr_1_0 + 0.888084356161540896e-1 * wr_3_0 -
      0.139159082112813980e0 * wr_5_0 + 0.832694074709067553e-1 * wr_7_0 -
      0.178361060063908571e-1 * wr_9_0 + 0.926981932541487867e0 * wr_9_8;
  results[k++] =
      0.511681719253465043e0 * wr_1_0 - 0.571174153767676731e0 * wr_3_0 +
      0.188422287906398315e0 * wr_5_0 + 0.181201035060248314e-1 * wr_7_0 -
      0.161001344650086055e-1 * wr_9_0 - 0.836759646707856497e0 * wr_9_8;
  results[k++] = -0.266469355010596506e0 * wr_5_4 +
                 0.940480076507987669e-1 * wr_7_4 -
                 0.453796633111280761e0 * wr_9_4;
  results[k++] =
      -0.170560573084488347e0 * wr_1_0 - 0.601235951334396559e-1 * wr_3_0 +
      0.376844575812796630e0 * wr_5_0 - 0.277841587092380748e0 * wr_7_0 +
      0.644005378600344218e-1 * wr_9_0;
  results[k++] = -0.272277979866768457e0 * wr_9_4 +
                 0.266469355010596506e0 * wr_5_4 +
                 0.109722675592598561e0 * wr_7_4;
  results[k++] =
      0.852802865422441737e0 * wr_1_0 + 0.407981538405483379e0 * wr_3_0 +
      0.188422287906398315e0 * wr_5_0 - 0.604003450200827713e-1 * wr_7_0 -
      0.676205647530361430e0 * wr_9_0;
  results[k++] = 0.544555959733536914e0 * wr_9_4 -
                 0.532938710021193012e0 * wr_5_4 -
                 0.219445351185197122e0 * wr_7_4;
  results[k++] =
      -0.226599325119155952e0 * wr_3_0 + 0.397680201625536520e0 * wr_5_0 -
      0.245853754739540804e0 * wr_7_0 + 0.533981050947029138e-1 * wr_9_0 -
      0.555043557568060598e0 * wr_9_8;
  results[k++] = -0.803435335180143868e-1 * wr_5_4 +
                 0.212674059312391024e0 * wr_7_4 +
                 0.602029265262675143e0 * wr_9_4;
  results[k++] =
      0.642824346533225022e0 * wr_1_0 - 0.453198650238311904e0 * wr_3_0 -
      0.227245829500306583e0 * wr_5_0 + 0.309593617079421754e0 * wr_7_0 -
      0.825243442372681396e-1 * wr_9_0 - 0.151375515700380163e0 * wr_9_8;
  results[k++] =
      wr_0_0 - 0.758907919636292262e0 * wr_2_0 +
      0.293706293706293706e0 * wr_4_0 - 0.537891099369919148e-1 * wr_6_0 +
      0.237447465070535778e-2 * wr_8_0 - 0.269374704429092226e0 * wr_8_8;
  results[k++] =
      -0.220192753025272121e0 * wr_2_0 + 0.340868744250459874e0 * wr_4_0 -
      0.191180847759697284e0 * wr_6_0 + 0.385806465063297679e-1 * wr_8_0 +
      0.486313432004312392e0 * wr_8_8;
  results[k++] = 0.160687067036028773e0 * wr_4_4 -
                 0.604566923922542673e0 * wr_6_4 +
                 0.404637234239635056e0 * wr_8_4;
  results[k++] =
      -0.127674255828710050e-1 * wr_2_0 + 0.102775793403489990e0 * wr_4_0 -
      0.169538807251597224e0 * wr_6_0 + 0.107141471341605537e0 * wr_8_0 -
      0.240592401626331073e-1 * wr_10_0 - 0.270106083523402465e0 * wr_8_8 +
      0.750247198579540199e0 * wr_10_8;
  results[k++] =
      -0.220192753025272121e0 * wr_2_0 + 0.340868744250459874e0 * wr_4_0 -
      0.191180847759697284e0 * wr_6_0 + 0.385806465063297679e-1 * wr_8_0 +
      0.486313432004312392e0 * wr_8_8;
  results[k++] =
      wr_0_0 - 0.309609412269201652e0 * wr_2_0 -
      0.307692307692307692e0 * wr_4_0 + 0.156621231875358811e0 * wr_6_0 +
      0.426155713626593160e-1 * wr_8_0 - 0.272837324062624434e-1 * wr_10_0 -
      0.155953776248421815e0 * wr_8_8 - 0.850797600681665680e0 * wr_10_8;
  results[k++] =
      0.435142634576336938e0 * wr_4_4 - 0.123819955666874713e0 * wr_6_4 +
      0.158597248859619272e0 * wr_8_4 - 0.422889051001480140e0 * wr_10_4;
  results[k++] =
      -0.207446111527151411e0 * wr_2_0 + 0.463863607042713265e-1 * wr_4_0 +
      0.344334945297037376e0 * wr_6_0 - 0.310864795681573759e0 * wr_8_0 +
      0.796311148793890448e-1 * wr_10_0 - 0.470218327686413579e0 * wr_8_8 -
      0.225742113119656531e0 * wr_10_8;
  results[k++] = 0.160687067036028773e0 * wr_4_4 -
                 0.604566923922542673e0 * wr_6_4 +
                 0.404637234239635056e0 * wr_8_4;
  results[k++] =
      0.435142634576336938e0 * wr_4_4 - 0.123819955666874713e0 * wr_6_4 +
      0.158597248859619272e0 * wr_8_4 - 0.422889051001480140e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.516015687115336084e0 * wr_2_0 +
      0.307692307692307692e0 * wr_4_0 + 0.130517693229465676e0 * wr_6_0 -
      0.962287095285855521e-1 * wr_8_0 - 0.687550056637813577e0 * wr_10_0;
  results[k++] =
      -0.459201542919776321e0 * wr_4_4 - 0.279998409890088578e0 * wr_6_4 +
      0.869433995454509002e-1 * wr_8_4 + 0.561025724048551224e0 * wr_10_4;
  results[k++] =
      -0.127674255828710050e-1 * wr_2_0 + 0.102775793403489990e0 * wr_4_0 -
      0.169538807251597224e0 * wr_6_0 + 0.107141471341605537e0 * wr_8_0 -
      0.240592401626331073e-1 * wr_10_0 - 0.270106083523402465e0 * wr_8_8 +
      0.750247198579540199e0 * wr_10_8;
  results[k++] =
      -0.207446111527151411e0 * wr_2_0 + 0.463863607042713265e-1 * wr_4_0 +
      0.344334945297037376e0 * wr_6_0 - 0.310864795681573759e0 * wr_8_0 +
      0.796311148793890448e-1 * wr_10_0 - 0.470218327686413579e0 * wr_8_8 -
      0.225742113119656531e0 * wr_10_8;
  results[k++] =
      -0.459201542919776321e0 * wr_4_4 - 0.279998409890088578e0 * wr_6_4 +
      0.869433995454509002e-1 * wr_8_4 + 0.561025724048551224e0 * wr_10_4;
  results[k++] =
      wr_0_0 - 0.781841950174751643e-1 * wr_2_0 -
      0.447552447552447552e0 * wr_4_0 - 0.593262241952116707e-1 * wr_6_0 +
      0.278063478832601109e0 * wr_8_0 - 0.905819915887913123e-1 * wr_10_0 -
      0.354440400564595033e0 * wr_8_8 - 0.170159520136333136e0 * wr_10_8;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  results[k++] = 0.852802865422441737e0 * wr_5_4;
  results[k++] =
      0.699650262281441238e0 * wr_5_4 - 0.659670247293930310e0 * wr_7_4;
  results[k++] =
      0.663746518303064666e0 * wr_5_0 - 0.568398560058805106e0 * wr_7_0;
  results[k++] = 0.676123403782813265e0 * wr_7_4;
  results[k++] =
      0.574959574576068970e0 * wr_4_4 + 0.713149582320669206e0 * wr_6_4;
  results[k++] = 0.471704110602518933e0 * wr_4_4 -
                 0.217314292606253389e-1 * wr_6_4 -
                 0.639974142981222909e0 * wr_8_4;
  results[k++] = 0.745829685583969992e0 * wr_4_0 +
                 0.107565086965447564e0 * wr_6_0 -
                 0.636733746752434716e0 * wr_8_0;
  results[k++] =
      0.621943073611393163e0 * wr_6_4 + 0.655936049352630209e0 * wr_8_4;
  results[k++] =
      0.613633873244204340e0 * wr_7_4 + 0.122726774648840868e0 * wr_5_4;
  results[k++] =
      0.755331083730519840e-1 * wr_3_0 - 0.132560067208512173e0 * wr_5_0 -
      0.177993683649009713e-1 * wr_9_0 + 0.819512515798469346e-1 * wr_7_0 +
      0.925072595946767659e0 * wr_9_8;
  results[k++] = 0.175990021648650763e-1 * wr_7_4 -
                 0.600491512392988733e0 * wr_9_4 -
                 0.373978796003382871e0 * wr_5_4;
  results[k++] =
      -0.230168037973560593e0 * wr_3_0 + 0.403943267266782366e0 * wr_5_0 +
      0.542390718714226158e-1 * wr_9_0 - 0.249725705613098259e0 * wr_7_0 +
      0.563784938759756705e0 * wr_9_8;
  results[k++] =
      0.786173517670864890e0 * wr_3_0 + 0.275945784794905222e0 * wr_5_0 -
      0.227460178703283411e-1 * wr_7_0 - 0.666942118869374014e0 * wr_9_0;
  results[k++] = 0.255476154010634166e0 * wr_5_4 -
                 0.676260407675208084e0 * wr_7_4 +
                 0.410213797524504903e0 * wr_9_4;
  results[k++] = 0.497951414361355662e0 * wr_7_4 +
                 0.615468663271290517e0 * wr_9_4 +
                 0.486504255410519898e0 * wr_5_4;
  results[k++] =
      0.299422670831354988e0 * wr_3_0 - 0.525484654664594790e0 * wr_5_0 -
      0.705589181979329165e-1 * wr_9_0 + 0.324864991717519944e0 * wr_7_0 +
      0.200023813776353970e0 * wr_9_8;
  results[k++] =
      -0.222680885707561645e0 * wr_2_0 + 0.344720490737517135e0 * wr_4_0 -
      0.193341151897790900e0 * wr_6_0 + 0.390165998524657367e-1 * wr_8_0 -
      0.491808673457001968e0 * wr_8_8;
  results[k++] = -0.487508393228905621e0 * wr_4_4 -
                 0.873426293482293452e-1 * wr_6_4 +
                 0.545612735343737252e0 * wr_8_4;
  results[k++] =
      0.171292989005816650e-1 * wr_2_0 + 0.766045534972260299e-1 * wr_4_0 -
      0.181968142962626730e0 * wr_6_0 + 0.127317325834361877e0 * wr_8_0 -
      0.298878313836892909e-1 * wr_10_0 + 0.465924006432949233e0 * wr_8_8 +
      0.932002075529241970e0 * wr_10_8;
  results[k++] =
      0.365380432940227450e0 * wr_2_0 - 0.490209291421591158e0 * wr_4_0 +
      0.173281836855825140e0 * wr_6_0 + 0.312876886561982924e-1 * wr_8_0 -
      0.218581450928006970e-1 * wr_10_0 + 0.788769739635224605e-1 * wr_8_8 -
      0.681609727122159257e0 * wr_10_8;
  results[k++] =
      -0.693260628329719132e0 * wr_4_4 - 0.250498414446682314e0 * wr_6_4 +
      0.906313653658091221e-1 * wr_8_4 - 0.564656996417485955e0 * wr_10_4;
  results[k++] =
      -0.208788818822987114e0 * wr_2_0 + 0.466865991830086817e-1 * wr_4_0 +
      0.346563673711650279e0 * wr_6_0 - 0.312876886561982924e0 * wr_8_0 +
      0.801465320069358891e-1 * wr_10_0 + 0.473261843781134763e0 * wr_8_8 +
      0.227203242374053086e0 * wr_10_8;
  results[k++] =
      0.146752267961481211e0 * wr_8_4 - 0.252522285592070763e0 * wr_10_4 -
      0.103345192737964565e0 * wr_4_4 + 0.245057523794429946e0 * wr_6_4;
  results[k++] =
      0.817015485702651929e0 * wr_2_0 + 0.365380432940227450e0 * wr_4_0 +
      0.154987986590261376e0 * wr_6_0 - 0.839536784329301142e-1 * wr_8_0 -
      0.684268176053781307e0 * wr_10_0;
  results[k++] =
      -0.293504535922962423e0 * wr_8_4 + 0.505044571184141527e0 * wr_10_4 +
      0.206690385475929130e0 * wr_4_4 - 0.490115047588859894e0 * wr_6_4;
  results[k++] =
      -0.212569009140848442e0 * wr_4_0 + 0.405756244605124852e0 * wr_6_0 -
      0.268631589054612408e0 * wr_8_0 + 0.616091292326080468e-1 * wr_10_0 +
      0.184698092552446252e0 * wr_8_8 - 0.523957565136289416e0 * wr_10_8;
  results[k++] =
      0.300617975667198279e0 * wr_4_4 + 0.183301986826943259e0 * wr_6_4 +
      0.365900243504526663e0 * wr_8_4 + 0.578740381203612265e0 * wr_10_4;
  results[k++] =
      0.509270093945047805e0 * wr_2_0 - 0.485872020893367867e0 * wr_4_0 -
      0.135252081535041617e0 * wr_6_0 + 0.293052642605031718e0 * wr_8_0 -
      0.876745300617883741e-1 * wr_10_0 + 0.246264123403261670e0 * wr_8_8 -
      0.604566421311103174e-1 * wr_10_8;
  results[k++] =
      0.517463617118462073e0 * wr_1_0 - 0.662076886306090900e0 * wr_3_0 +
      0.338758081577341725e0 * wr_5_0 - 0.732994277494899121e-1 * wr_7_0 +
      0.361823614731616851e-2 * wr_9_0 - 0.188047746241742629e0 * wr_9_8;
  results[k++] =
      -0.155699788832304594e0 * wr_1_0 - 0.548850821548212125e-1 * wr_3_0 +
      0.344010458076890723e0 * wr_5_0 - 0.253633507772555221e0 * wr_7_0 +
      0.587893788356772185e-1 * wr_9_0;
  results[k++] = -0.486504255410519898e0 * wr_5_4 -
                 0.200325281639625841e0 * wr_7_4 +
                 0.497109304949888494e0 * wr_9_4;
  results[k++] =
      -0.902793320794269668e-2 * wr_1_0 + 0.413711872944029095e-1 * wr_3_0 +
      0.610135622138680622e-1 * wr_5_0 - 0.208245588445282756e0 * wr_7_0 +
      0.161430160293118651e0 * wr_9_0 - 0.403071261480392827e-1 * wr_11_0 +
      0.296113516439555893e0 * wr_9_8 + 0.862678654540629664e0 * wr_11_8;
  results[k++] =
      -0.205868551662653773e0 * wr_3_0 + 0.361297841864756418e0 * wr_5_0 -
      0.223361461391995401e0 * wr_7_0 + 0.485129006963990808e-1 * wr_9_0 +
      0.504264579102948789e0 * wr_9_8;
  results[k++] =
      0.638690385026585414e0 * wr_1_0 - 0.418121005003545384e0 * wr_3_0 -
      0.172658678989492425e0 * wr_5_0 + 0.120265694104838637e0 * wr_7_0 +
      0.652602405430833588e-1 * wr_9_0 - 0.370333628436816109e-1 * wr_11_0 -
      0.119707737858991873e0 * wr_9_8 - 0.792611497871730207e0 * wr_11_8;
  results[k++] =
      -0.244176245488362742e0 * wr_5_4 - 0.146872929617060296e0 * wr_7_4 +
      0.151481483872756258e0 * wr_9_4 - 0.534709345033288212e0 * wr_11_4;
  results[k++] =
      -0.121045506533760484e0 * wr_1_0 - 0.151281871697789760e0 * wr_3_0 +
      0.167331055034386050e0 * wr_5_0 + 0.274627318163321728e0 * wr_7_0 -
      0.339519578995681272e0 * wr_9_0 + 0.982606154220647814e-1 * wr_11_0;
  results[k++] = 0.228504818799193410e0 * wr_5_4 -
                 0.604865696821394320e0 * wr_7_4 +
                 0.366906374629251168e0 * wr_9_4;
  results[k++] =
      0.436795746722124341e0 * wr_5_4 - 0.574731245687005710e-1 * wr_7_4 +
      0.203233737163212659e0 * wr_9_4 - 0.398548814566273997e0 * wr_11_4;
  results[k++] =
      0.856893070496975287e0 * wr_1_0 + 0.436308595337280016e0 * wr_3_0 +
      0.257384362083879840e0 * wr_5_0 + 0.949137414280993807e-1 * wr_7_0 -
      0.120174628067794740e0 * wr_9_0 - 0.695596580732650796e0 * wr_11_0;
  results[k++] = -0.411558977812612493e0 * wr_5_4 -
                 0.368236980148126967e0 * wr_7_4 +
                 0.528734751422904649e0 * wr_11_4;
  results[k++] =
      -0.133905889196690644e-1 * wr_3_0 + 0.110590062020050438e0 * wr_5_0 -
      0.191163211839547567e0 * wr_7_0 + 0.126219630007539970e0 * wr_9_0 -
      0.294347806878049618e-1 * wr_11_0 - 0.357813475778149118e0 * wr_9_8 +
      0.629981827709374186e0 * wr_11_8;
  results[k++] =
      -0.217571317288168469e0 * wr_3_0 + 0.112304738877745309e0 * wr_5_0 +
      0.310603454907608830e0 * wr_7_0 - 0.329597074800063068e0 * wr_9_0 +
      0.910968719008626281e-1 * wr_11_0 - 0.449875898165875134e0 * wr_9_8 -
      0.324952162700553057e0 * wr_11_8;
  results[k++] =
      -0.158822884839676417e0 * wr_5_4 - 0.179123554330462125e-1 * wr_7_4 +
      0.262747112251891172e0 * wr_9_4 + 0.548045790880270325e0 * wr_11_4;
  results[k++] =
      0.708599514072681659e0 * wr_1_0 - 0.262400881668443612e0 * wr_3_0 -
      0.386984603674098656e0 * wr_5_0 + 0.312168217732306370e-1 * wr_7_0 +
      0.248443142979661867e0 * wr_9_0 - 0.945489715331667654e-1 * wr_11_0 -
      0.182595924739202794e0 * wr_9_8 - 0.131891797018283023e0 * wr_11_8;
  results[k++] =
      0.355957345171270024e0 * wr_6_0 - 0.968535712787711725e-1 * wr_8_0 -
      0.328373619073395690e0 * wr_2_0 + 0.545674648125248870e-2 * wr_10_0 +
      wr_0_0 - 0.391608391608391608e0 * wr_4_0 -
      0.354440400564595033e0 * wr_8_8 - 0.170159520136333135e0 * wr_10_8;
  results[k++] =
      -0.190597243040348781e0 * wr_2_0 + 0.426188391762268567e-1 * wr_4_0 +
      0.316367902839551660e0 * wr_6_0 - 0.285616214153305046e0 * wr_8_0 +
      0.731634391433476314e-1 * wr_10_0 + 0.432026979075689210e0 * wr_8_8 +
      0.207407234977637475e0 * wr_10_8;
  results[k++] =
      0.188681644241007573e0 * wr_4_4 - 0.447411778895227566e0 * wr_6_4 -
      0.267931758425153132e0 * wr_8_4 + 0.461040506971796530e0 * wr_10_4;
  results[k++] =
      -0.123972763696212354e-1 * wr_2_0 + 0.587036174788056518e-1 * wr_4_0 +
      0.433219976644855256e-1 * wr_6_0 - 0.222932698460104694e0 * wr_8_0 +
      0.187909504565894209e0 * wr_10_0 - 0.493047697985605669e-1 * wr_12_0 -
      0.187339465961392102e0 * wr_8_8 + 0.129574434702624727e0 * wr_10_8 +
      0.786538346142175050e0 * wr_12_8;
  results[k++] =
      -0.190597243040348781e0 * wr_2_0 + 0.426188391762268567e-1 * wr_4_0 +
      0.316367902839551660e0 * wr_6_0 - 0.285616214153305046e0 * wr_8_0 +
      0.731634391433476314e-1 * wr_10_0 + 0.432026979075689210e0 * wr_8_8 +
      0.207407234977637475e0 * wr_10_8;
  results[k++] =
      -0.405916270809343010e-1 * wr_6_0 + 0.737719433637513146e-1 * wr_8_0 -
      0.755035940454474443e-1 * wr_2_0 + 0.950829601149424334e-1 * wr_10_0 +
      wr_0_0 - 0.391138273491214668e0 * wr_4_0 -
      0.502586389246774225e-1 * wr_12_0 + 0.940352083130558251e-1 * wr_8_8 -
      0.178614651571678882e0 * wr_10_8 - 0.801755020876836060e0 * wr_12_8;
  results[k++] =
      0.541138423130417855e0 * wr_4_4 - 0.574052295366482953e-1 * wr_6_4 -
      0.816454247360556551e-1 * wr_8_4 + 0.198519086188281719e0 * wr_10_4 -
      0.509944407513060020e0 * wr_12_4;
  results[k++] =
      -0.166221278252211315e0 * wr_2_0 - 0.894422111580124970e-1 * wr_4_0 +
      0.224421806690116247e0 * wr_6_0 + 0.213504027575059167e0 * wr_8_0 -
      0.350786070721911266e0 * wr_10_0 + 0.111609688846388867e0 * wr_12_0 -
      0.407764018456120625e0 * wr_8_8 - 0.233982404484047116e0 * wr_10_8 -
      0.136958663801832567e0 * wr_12_8;
  results[k++] =
      0.188681644241007573e0 * wr_4_4 - 0.447411778895227566e0 * wr_6_4 -
      0.267931758425153132e0 * wr_8_4 + 0.461040506971796530e0 * wr_10_4;
  results[k++] =
      0.541138423130417855e0 * wr_4_4 - 0.574052295366482953e-1 * wr_6_4 -
      0.816454247360556551e-1 * wr_8_4 + 0.198519086188281719e0 * wr_10_4 -
      0.509944407513060020e0 * wr_12_4;
  results[k++] =
      wr_0_0 + 0.528525158318132112e0 * wr_2_0 +
      0.342245989304812834e0 * wr_4_0 + 0.202958135404671505e0 * wr_6_0 +
      0.580228768029504719e-1 * wr_8_0 - 0.144342806921478875e0 * wr_10_0 -
      0.703620944945483914e0 * wr_12_0;
  results[k++] =
      -0.395977548709464218e0 * wr_4_4 - 0.317380362713435392e0 * wr_6_4 -
      0.141615325051855256e0 * wr_8_4 + 0.184206972974811051e0 * wr_10_4 +
      0.522663179008153152e0 * wr_12_4;
  results[k++] =
      -0.123972763696212354e-1 * wr_2_0 + 0.587036174788056518e-1 * wr_4_0 +
      0.433219976644855256e-1 * wr_6_0 - 0.222932698460104694e0 * wr_8_0 +
      0.187909504565894209e0 * wr_10_0 - 0.493047697985605669e-1 * wr_12_0 -
      0.187339465961392102e0 * wr_8_8 + 0.129574434702624727e0 * wr_10_8 +
      0.786538346142175050e0 * wr_12_8;
  results[k++] =
      -0.166221278252211315e0 * wr_2_0 - 0.894422111580124970e-1 * wr_4_0 +
      0.224421806690116247e0 * wr_6_0 + 0.213504027575059167e0 * wr_8_0 -
      0.350786070721911266e0 * wr_10_0 + 0.111609688846388867e0 * wr_12_0 -
      0.407764018456120625e0 * wr_8_8 - 0.233982404484047116e0 * wr_10_8 -
      0.136958663801832567e0 * wr_12_8;
  results[k++] =
      -0.395977548709464218e0 * wr_4_4 - 0.317380362713435392e0 * wr_6_4 -
      0.141615325051855256e0 * wr_8_4 + 0.184206972974811051e0 * wr_10_4 +
      0.522663179008153152e0 * wr_12_4;
  results[k++] =
      -0.274774091009401422e0 * wr_6_0 + 0.110115943119445566e0 * wr_8_0 +
      0.786309618461464509e-1 * wr_2_0 + 0.210352492926990346e0 * wr_10_0 +
      wr_0_0 - 0.372333548804137039e0 * wr_4_0 -
      0.972174682229871354e-1 * wr_12_0 - 0.397841265939851568e0 * wr_8_8 -
      0.228288548754335138e0 * wr_10_8 - 0.133625836812806010e0 * wr_12_8;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 2)
void BoxMatrix::setup___oa_2_A2(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 0)
  if (lmax >= 0) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 2, 0, 1));
  }
#endif
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 0, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 0, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 0, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 3, 2));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 4, 2));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 2));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 2));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 2)
void BoxMatrix::evaluate___oa_2_A2(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 0)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 1)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = -0.577350269189625763e0 * wr_1_0;
  results[k++] = 0.816496580927726033e0 * wr_1_0;
  results[k++] = wr_0_0;
  results[k++] = -0.632455532033675868e0 * wr_2_0;
  results[k++] = -0.632455532033675868e0 * wr_2_0;
  results[k++] = wr_0_0 + 0.447213595499957940e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  results[k++] = -0.632455532033675866e0 * wr_2_0;
  results[k++] = 0.774596669241483378e0 * wr_2_0;
  results[k++] = 0.816496580927726033e0 * wr_1_0;
  results[k++] =
      -0.115470053837925153e0 * wr_1_0 - 0.680336051416609009e0 * wr_3_0;
  results[k++] = -0.654653670707977142e0 * wr_3_0;
  results[k++] =
      0.848528137423857030e0 * wr_1_0 + 0.370328039909020585e0 * wr_3_0;
  results[k++] = wr_0_0 + 0.447213595499957940e0 * wr_2_0;
  results[k++] =
      -0.156492159287190318e0 * wr_2_0 - 0.699854212223765171e0 * wr_4_0;
  results[k++] =
      -0.156492159287190318e0 * wr_2_0 - 0.699854212223765171e0 * wr_4_0;
  results[k++] = wr_0_0 + 0.511101251999951930e0 * wr_2_0 +
                 0.285714285714285714e0 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = -0.654653670707977144e0 * wr_3_0;
  results[k++] = 0.755928946018454454e0 * wr_3_0;
  results[k++] = 0.774596669241483376e0 * wr_2_0;
  results[k++] =
      -0.156492159287190318e0 * wr_2_0 - 0.699854212223765171e0 * wr_4_0;
  results[k++] = -0.942809041582063367e0 * wr_4_4;
  results[k++] = -0.666666666666666667e0 * wr_4_4;
  results[k++] = -0.666666666666666667e0 * wr_4_0;
  results[k++] =
      0.813157112614726116e0 * wr_2_0 + 0.336717514850736916e0 * wr_4_0;
  results[k++] =
      0.848528137423857030e0 * wr_1_0 + 0.370328039909020585e0 * wr_3_0;
  results[k++] = -0.494871659305393511e-1 * wr_1_0 -
                 0.201581052271587855e0 * wr_3_0 -
                 0.717884153756580053e0 * wr_5_0;
  results[k++] = -0.603022689155527245e0 * wr_5_4;
  results[k++] = -0.492365963917330931e0 * wr_5_4;
  results[k++] =
      -0.178174161274949590e0 * wr_3_0 - 0.710669054518701448e0 * wr_5_0;
  results[k++] = 0.857142857142857143e0 * wr_1_0 +
                 0.436435780471984762e0 * wr_3_0 +
                 0.248682365650996911e0 * wr_5_0;
  results[k++] = wr_0_0 + 0.511101251999951930e0 * wr_2_0 +
                 0.285714285714285714e0 * wr_4_0;
  results[k++] =
      0.445361771415123290e0 * wr_4_4 - 0.460336075947121188e0 * wr_6_4;
  results[k++] = -0.737711113563317500e-1 * wr_2_0 -
                 0.224941663320633414e0 * wr_4_0 -
                 0.727855244568577877e0 * wr_6_0;
  results[k++] =
      0.445361771415123290e0 * wr_4_4 - 0.460336075947121188e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.745355992499929899e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 -
                 0.420227421382749334e-1 * wr_6_0;
  results[k++] =
      -0.398662736048649643e0 * wr_6_4 + 0.385694607919935013e0 * wr_4_4;
  results[k++] = -0.737711113563317500e-1 * wr_2_0 -
                 0.224941663320633414e0 * wr_4_0 -
                 0.727855244568577877e0 * wr_6_0;
  results[k++] =
      -0.398662736048649643e0 * wr_6_4 + 0.385694607919935013e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.532397137499949928e0 * wr_2_0 +
                 0.350649350649350649e0 * wr_4_0 +
                 0.210113710691374667e0 * wr_6_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] = -0.666666666666666667e0 * wr_4_0;
  results[k++] = 0.126491106406735174e1 * wr_4_4;
  results[k++] = 0.632455532033675868e0 * wr_4_4;
  results[k++] = 0.745355992499929899e0 * wr_4_0;
  results[k++] = 0.755928946018454454e0 * wr_3_0;
  results[k++] =
      -0.178174161274949590e0 * wr_3_0 - 0.710669054518701448e0 * wr_5_0;
  results[k++] = 0.809039834955890505e0 * wr_5_4;
  results[k++] = -0.953462589245592318e0 * wr_5_4;
  results[k++] = -0.269679944985296835e0 * wr_5_4;
  results[k++] = -0.674199862463242087e0 * wr_5_0;
  results[k++] =
      0.796819072889595762e0 * wr_3_0 + 0.317820863081864106e0 * wr_5_0;
  results[k++] =
      0.813157112614726116e0 * wr_2_0 + 0.336717514850736916e0 * wr_4_0;
  results[k++] = -0.737711113563317500e-1 * wr_2_0 -
                 0.224941663320633414e0 * wr_4_0 -
                 0.727855244568577877e0 * wr_6_0;
  results[k++] = 0.894427190999915880e0 * wr_4_4;
  results[k++] =
      -0.597515517278363035e0 * wr_4_4 + 0.617605654987961318e0 * wr_6_4;
  results[k++] =
      -0.162623125636348342e0 * wr_4_4 - 0.756409358488948801e0 * wr_6_4;
  results[k++] =
      -0.796687356371150715e0 * wr_4_4 - 0.308802827493980658e0 * wr_6_4;
  results[k++] =
      -0.191653191525356324e0 * wr_4_0 - 0.717592924887569358e0 * wr_6_0;
  results[k++] = 0.824786098842322518e0 * wr_2_0 +
                 0.402387880125445909e0 * wr_4_0 +
                 0.227854732648910462e0 * wr_6_0;
  results[k++] = 0.857142857142857143e0 * wr_1_0 +
                 0.436435780471984762e0 * wr_3_0 +
                 0.248682365650996911e0 * wr_5_0;
  results[k++] =
      0.492001653128331772e0 * wr_5_4 - 0.382667952433146934e0 * wr_7_4;
  results[k++] =
      -0.274928699614107506e-1 * wr_1_0 - 0.103081219911607425e0 * wr_3_0 -
      0.248498360915739250e0 * wr_5_0 - 0.737281211981986896e0 * wr_7_0;
  results[k++] = 0.660578259075816363e0 * wr_5_4;
  results[k++] =
      0.282619012890026597e-1 * wr_7_0 + 0.322695260896342694e0 * wr_3_0 -
      0.258198889747161125e0 * wr_1_0 - 0.155584583645363558e0 * wr_5_0;
  results[k++] =
      -0.660089484862333144e0 * wr_5_4 + 0.513402932670703555e0 * wr_7_4;
  results[k++] =
      0.203254848946405035e0 * wr_5_4 - 0.635171402957515734e0 * wr_7_4;
  results[k++] =
      -0.565238025780053194e-1 * wr_7_0 - 0.645390521792685388e0 * wr_3_0 +
      0.516397779494322249e0 * wr_1_0 + 0.311169167290727117e0 * wr_5_0;
  results[k++] =
      -0.440059656574888762e0 * wr_5_4 - 0.293373104383259175e0 * wr_7_4;
  results[k++] = -0.887181884498666528e-1 * wr_3_0 -
                 0.239538136665083990e0 * wr_5_0 -
                 0.734265734265734266e0 * wr_7_0;
  results[k++] =
      0.440059656574888762e0 * wr_5_4 - 0.342268621780469037e0 * wr_7_4;
  results[k++] =
      0.860662965823870417e0 * wr_1_0 + 0.460993229851918134e0 * wr_3_0 +
      0.311169167290727117e0 * wr_5_0 + 0.188412675260017731e0 * wr_7_0;
  results[k++] = wr_0_0 + 0.532397137499949928e0 * wr_2_0 +
                 0.350649350649350649e0 * wr_4_0 +
                 0.210113710691374667e0 * wr_6_0;
  results[k++] =
      -0.517463617118462073e0 * wr_4_4 + 0.534862186740501905e0 * wr_6_4;
  results[k++] = 0.238829361746982496e0 * wr_4_4 +
                 0.356574791160334604e0 * wr_6_4 -
                 0.556863666148482162e0 * wr_8_4;
  results[k++] =
      -0.432900432900432900e-1 * wr_2_0 - 0.120627043741247397e0 * wr_4_0 -
      0.743328142175814856e0 * wr_8_0 - 0.263103982461957331e0 * wr_6_0;
  results[k++] =
      -0.517463617118462073e0 * wr_4_4 + 0.534862186740501905e0 * wr_6_4;
  results[k++] =
      wr_0_0 - 0.691148283954480453e0 * wr_2_0 +
      0.188811188811188811e0 * wr_4_0 + 0.504272905659299201e-2 * wr_6_0 -
      0.949789860282143113e-2 * wr_8_0 + 0.107749881771636890e1 * wr_8_8;
  results[k++] =
      -0.243934688454522513e0 * wr_2_0 + 0.377622377622377622e0 * wr_4_0 -
      0.211794620376905665e0 * wr_6_0 + 0.427405437126964402e-1 * wr_8_0 +
      0.538749408858184450e0 * wr_8_8;
  results[k++] = 0.178012895963046929e0 * wr_4_4 -
                 0.669753396561731401e0 * wr_6_4 +
                 0.448266604214791662e0 * wr_8_4;
  results[k++] = 0.238829361746982496e0 * wr_4_4 +
                 0.356574791160334604e0 * wr_6_4 -
                 0.556863666148482162e0 * wr_8_4;
  results[k++] =
      -0.243934688454522513e0 * wr_2_0 + 0.377622377622377622e0 * wr_4_0 -
      0.211794620376905665e0 * wr_6_0 + 0.427405437126964402e-1 * wr_8_0 +
      0.538749408858184450e0 * wr_8_8;
  results[k++] =
      wr_0_0 - 0.325246251272696685e0 * wr_2_0 -
      0.377622377622377622e0 * wr_4_0 + 0.322734659621951489e0 * wr_6_0 -
      0.736087141718660912e-1 * wr_8_0 + 0.269374704429092226e0 * wr_8_8;
  results[k++] = 0.534038687889140788e0 * wr_4_4 -
                 0.255144151071135771e0 * wr_6_4 -
                 0.273940702575706015e0 * wr_8_4;
  results[k++] =
      -0.432900432900432900e-1 * wr_2_0 - 0.120627043741247397e0 * wr_4_0 -
      0.743328142175814856e0 * wr_8_0 - 0.263103982461957331e0 * wr_6_0;
  results[k++] = 0.178012895963046929e0 * wr_4_4 -
                 0.669753396561731401e0 * wr_6_4 +
                 0.448266604214791662e0 * wr_8_4;
  results[k++] = 0.534038687889140788e0 * wr_4_4 -
                 0.255144151071135771e0 * wr_6_4 -
                 0.273940702575706015e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.542077085454494472e0 * wr_2_0 +
                 0.377622377622377622e0 * wr_4_0 +
                 0.268945549684959574e0 * wr_6_0 +
                 0.166213225549375045e0 * wr_8_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] = -0.572077553547355391e0 * wr_5_4;
  results[k++] = -0.674199862463242086e0 * wr_5_0;
  results[k++] = 0.103279555898864451e1 * wr_5_4;
  results[k++] = 0.778498944161522970e0 * wr_5_4;
  results[k++] = 0.738548945875996396e0 * wr_5_0;
  results[k++] = 0.105409255338945978e1 * wr_4_4;
  results[k++] =
      0.379453959818146131e0 * wr_4_4 - 0.453845615093369281e0 * wr_6_4;
  results[k++] = 0.745355992499929899e0 * wr_4_0;
  results[k++] =
      -0.191653191525356324e0 * wr_4_0 - 0.717592924887569358e0 * wr_6_0;
  results[k++] =
      0.660578259075816363e0 * wr_4_4 + 0.819346490398702645e0 * wr_6_4;
  results[k++] = -0.960768922830522798e0 * wr_6_4;
  results[k++] =
      0.497929597731969196e0 * wr_4_4 - 0.617605654987961318e-1 * wr_6_4;
  results[k++] = -0.679366220486757450e0 * wr_6_0;
  results[k++] =
      0.787295821622216949e0 * wr_4_0 + 0.305699202718802708e0 * wr_6_0;
  results[k++] = 0.269679944985296835e0 * wr_5_4;
  results[k++] =
      0.474261314208278414e0 * wr_5_4 - 0.381102841774509440e0 * wr_7_4;
  results[k++] =
      0.796819072889595762e0 * wr_3_0 + 0.317820863081864106e0 * wr_5_0;
  results[k++] = -0.887181884498666528e-1 * wr_3_0 -
                 0.239538136665083990e0 * wr_5_0 -
                 0.734265734265734266e0 * wr_7_0;
  results[k++] = 0.730296743340221484e0 * wr_5_4;
  results[k++] =
      0.137604183230756289e0 * wr_5_4 + 0.688020916153781445e0 * wr_7_4;
  results[k++] =
      -0.211723800985838578e0 * wr_5_4 - 0.838426251903920768e0 * wr_7_4;
  results[k++] =
      -0.518615278817878529e0 * wr_5_4 - 0.165956889221721129e0 * wr_7_4;
  results[k++] =
      -0.200858833795035967e0 * wr_5_0 - 0.722421961961470519e0 * wr_7_0;
  results[k++] = 0.809882551249770863e0 * wr_3_0 +
                 0.382667952433146934e0 * wr_5_0 +
                 0.214492749792232884e0 * wr_7_0;
  results[k++] =
      -0.796687356371150715e0 * wr_4_4 + 0.144107986163857641e0 * wr_6_4;
  results[k++] =
      0.526207964923914663e-1 * wr_6_0 + 0.606060606060606061e-1 * wr_2_0 -
      0.106189734596544979e-1 * wr_8_0 - 0.938210340209701971e-1 * wr_4_0 -
      0.120468030104472779e1 * wr_8_8;
  results[k++] = -0.132682978748323609e0 * wr_4_4 +
                 0.499204707624468445e0 * wr_6_4 -
                 0.334118199689089298e0 * wr_8_4;
  results[k++] = 0.824786098842322518e0 * wr_2_0 +
                 0.402387880125445909e0 * wr_4_0 +
                 0.227854732648910462e0 * wr_6_0;
  results[k++] = -0.132682978748323609e0 * wr_4_4 +
                 0.499204707624468445e0 * wr_6_4 -
                 0.334118199689089298e0 * wr_8_4;
  results[k++] =
      -0.432900432900432900e-1 * wr_2_0 - 0.120627043741247397e0 * wr_4_0 -
      0.743328142175814856e0 * wr_8_0 - 0.263103982461957331e0 * wr_6_0;
  results[k++] =
      0.539359889970593670e0 * wr_4_4 + 0.668993608005672616e0 * wr_6_4;
  results[k++] =
      -0.213746685793360753e0 * wr_6_0 - 0.246182981958665466e0 * wr_2_0 +
      0.431344741020215662e-1 * wr_8_0 + 0.381102841774509440e0 * wr_4_0 -
      0.543714946166432150e0 * wr_8_8;
  results[k++] = -0.538960807496438978e0 * wr_4_4 -
                 0.965609099170535155e-1 * wr_6_4 +
                 0.603197574658219606e0 * wr_8_4;
  results[k++] = -0.625473560139801314e-1 * wr_4_4 +
                 0.504272905659299201e-1 * wr_6_4 -
                 0.742522769113701893e0 * wr_8_4;
  results[k++] =
      0.322235253162984833e0 * wr_6_0 + 0.371134809512602742e0 * wr_2_0 -
      0.650276664207762277e-1 * wr_8_0 - 0.574534151229195224e0 * wr_4_0 -
      0.163936224485667322e0 * wr_8_8;
  results[k++] = -0.812513988714842701e0 * wr_4_4 -
                 0.465827356523889842e0 * wr_6_4 -
                 0.188366301487718813e0 * wr_8_4;
  results[k++] = -0.988960533128038497e-1 * wr_4_0 -
                 0.249602353812234222e0 * wr_6_0 -
                 0.738763135998499606e0 * wr_8_0;
  results[k++] = -0.121122434095725685e0 * wr_4_4 +
                 0.455709465297820924e0 * wr_6_4 -
                 0.305006791404549644e0 * wr_8_4;
  results[k++] =
      0.829882662886615325e0 * wr_2_0 + 0.428232472514541625e0 * wr_4_0 +
      0.174487539042043304e0 * wr_8_0 + 0.288215972327715282e0 * wr_6_0;
  results[k++] =
      -0.616083519204844268e0 * wr_5_4 + 0.977910347944197249e-1 * wr_7_4;
  results[k++] =
      -0.230940107675850305e0 * wr_1_0 + 0.288627415752500792e0 * wr_3_0 -
      0.139159082112813980e0 * wr_5_0 + 0.252782129822395507e-1 * wr_7_0;
  results[k++] =
      -0.104972776216295593e-1 * wr_1_0 + 0.888084356161540896e-1 * wr_3_0 -
      0.139159082112813980e0 * wr_5_0 + 0.832694074709067553e-1 * wr_7_0 -
      0.178361060063908571e-1 * wr_9_0 - 0.926981932541487867e0 * wr_9_8;
  results[k++] = -0.196800661251332709e0 * wr_5_4 +
                 0.504221302029558315e0 * wr_7_4 -
                 0.301635922523771420e0 * wr_9_4;
  results[k++] =
      0.860662965823870417e0 * wr_1_0 + 0.460993229851918134e0 * wr_3_0 +
      0.311169167290727117e0 * wr_5_0 + 0.188412675260017731e0 * wr_7_0;
  results[k++] =
      -0.590401983753998126e0 * wr_5_4 + 0.459201542919776321e0 * wr_7_4;
  results[k++] = 0.196800661251332709e0 * wr_5_4 +
                 0.432189687453907125e0 * wr_7_4 -
                 0.502726537539619035e0 * wr_9_4;
  results[k++] =
      -0.174954627027159322e-1 * wr_1_0 - 0.634345968686814926e-1 * wr_3_0 -
      0.139159082112813980e0 * wr_5_0 - 0.277564691569689184e0 * wr_7_0 -
      0.749116452268416000e0 * wr_9_0;
  results[k++] =
      0.119168718344843596e0 * wr_5_4 + 0.595843591724217981e0 * wr_7_4;
  results[k++] =
      0.511681719253465043e0 * wr_1_0 - 0.571174153767676731e0 * wr_3_0 +
      0.188422287906398315e0 * wr_5_0 + 0.181201035060248314e-1 * wr_7_0 -
      0.161001344650086055e-1 * wr_9_0 + 0.836759646707856497e0 * wr_9_8;
  results[k++] =
      -0.170560573084488347e0 * wr_1_0 - 0.601235951334396559e-1 * wr_3_0 +
      0.376844575812796630e0 * wr_5_0 - 0.277841587092380748e0 * wr_7_0 +
      0.644005378600344218e-1 * wr_9_0;
  results[k++] = 0.544555959733536914e0 * wr_9_4 -
                 0.532938710021193012e0 * wr_5_4 -
                 0.219445351185197122e0 * wr_7_4;
  results[k++] = 0.179653602498812993e0 * wr_5_4 +
                 0.211357179410368227e0 * wr_7_4 -
                 0.673089180785797199e0 * wr_9_4;
  results[k++] =
      -0.226599325119155952e0 * wr_3_0 + 0.397680201625536520e0 * wr_5_0 -
      0.245853754739540804e0 * wr_7_0 + 0.533981050947029138e-1 * wr_9_0 +
      0.555043557568060598e0 * wr_9_8;
  results[k++] =
      0.642824346533225022e0 * wr_1_0 - 0.453198650238311904e0 * wr_3_0 -
      0.227245829500306583e0 * wr_5_0 + 0.309593617079421754e0 * wr_7_0 -
      0.825243442372681396e-1 * wr_9_0 + 0.151375515700380163e0 * wr_9_8;
  results[k++] = -0.321374134072057548e0 * wr_5_4 -
                 0.378087216555361821e0 * wr_7_4 -
                 0.191554766219942091e0 * wr_9_4;
  results[k++] =
      -0.539522202664657029e-1 * wr_3_0 - 0.132560067208512173e0 * wr_5_0 -
      0.273170838599489783e0 * wr_7_0 - 0.747573471325840794e0 * wr_9_0;
  results[k++] = 0.251515043498338190e0 * wr_5_4 -
                 0.665775115142659916e0 * wr_7_4 +
                 0.403853508471478322e0 * wr_9_4;
  results[k++] = 0.574891527996201577e0 * wr_5_4 -
                 0.147950025587257759e0 * wr_7_4 -
                 0.256997687209122568e0 * wr_9_4;
  results[k++] =
      0.862439361864103456e0 * wr_1_0 + 0.472912061647207786e0 * wr_3_0 +
      0.338758081577341725e0 * wr_5_0 + 0.244331425831633041e0 * wr_7_0 +
      0.151965918187279077e0 * wr_9_0;
  results[k++] =
      wr_0_0 - 0.758907919636292262e0 * wr_2_0 +
      0.293706293706293706e0 * wr_4_0 - 0.537891099369919148e-1 * wr_6_0 +
      0.237447465070535778e-2 * wr_8_0 + 0.269374704429092226e0 * wr_8_8;
  results[k++] = 0.415363423913776168e0 * wr_4_4 -
                 0.510288302142271543e0 * wr_6_4 +
                 0.747111007024652771e-1 * wr_8_4;
  results[k++] =
      -0.220192753025272121e0 * wr_2_0 + 0.340868744250459874e0 * wr_4_0 -
      0.191180847759697284e0 * wr_6_0 + 0.385806465063297679e-1 * wr_8_0 -
      0.486313432004312392e0 * wr_8_8;
  results[k++] =
      -0.127674255828710050e-1 * wr_2_0 + 0.102775793403489990e0 * wr_4_0 -
      0.169538807251597224e0 * wr_6_0 + 0.107141471341605537e0 * wr_8_0 -
      0.240592401626331073e-1 * wr_10_0 + 0.270106083523402465e0 * wr_8_8 -
      0.750247198579540199e0 * wr_10_8;
  results[k++] =
      0.216670396990624721e-1 * wr_4_4 - 0.239764080563766830e0 * wr_6_4 +
      0.502538045711336944e0 * wr_8_4 - 0.277951047066555997e0 * wr_10_4;
  results[k++] = 0.415363423913776168e0 * wr_4_4 -
                 0.510288302142271543e0 * wr_6_4 +
                 0.747111007024652771e-1 * wr_8_4;
  results[k++] = wr_0_0 + 0.542077085454494472e0 * wr_2_0 +
                 0.377622377622377622e0 * wr_4_0 +
                 0.268945549684959574e0 * wr_6_0 +
                 0.166213225549375045e0 * wr_8_0;
  results[k++] = -0.482061201108086320e0 * wr_4_4 -
                 0.863667034175060961e-1 * wr_6_4 +
                 0.539516312319513408e0 * wr_8_4;
  results[k++] =
      0.145346920914870822e0 * wr_4_4 + 0.245087443521517137e0 * wr_6_4 +
      0.310357787744980340e0 * wr_8_4 - 0.621517435658062722e0 * wr_10_4;
  results[k++] =
      -0.285488315009694417e-1 * wr_2_0 - 0.766045534972260299e-1 * wr_4_0 -
      0.151640119135522275e0 * wr_6_0 - 0.287490735755010690e0 * wr_8_0 -
      0.753173350868970131e0 * wr_10_0;
  results[k++] =
      -0.220192753025272121e0 * wr_2_0 + 0.340868744250459874e0 * wr_4_0 -
      0.191180847759697284e0 * wr_6_0 + 0.385806465063297679e-1 * wr_8_0 -
      0.486313432004312392e0 * wr_8_8;
  results[k++] = -0.482061201108086320e0 * wr_4_4 -
                 0.863667034175060961e-1 * wr_6_4 +
                 0.539516312319513408e0 * wr_8_4;
  results[k++] =
      wr_0_0 - 0.309609412269201652e0 * wr_2_0 -
      0.307692307692307692e0 * wr_4_0 + 0.156621231875358811e0 * wr_6_0 +
      0.426155713626593160e-1 * wr_8_0 - 0.272837324062624434e-1 * wr_10_0 +
      0.155953776248421815e0 * wr_8_8 + 0.850797600681665680e0 * wr_10_8;
  results[k++] =
      -0.207446111527151411e0 * wr_2_0 + 0.463863607042713265e-1 * wr_4_0 +
      0.344334945297037376e0 * wr_6_0 - 0.310864795681573759e0 * wr_8_0 +
      0.796311148793890448e-1 * wr_10_0 + 0.470218327686413579e0 * wr_8_8 +
      0.225742113119656531e0 * wr_10_8;
  results[k++] =
      0.205361173068281422e0 * wr_4_4 - 0.486963149638068040e0 * wr_6_4 -
      0.291617027367828793e0 * wr_8_4 + 0.501796662439439625e0 * wr_10_4;
  results[k++] =
      -0.127674255828710050e-1 * wr_2_0 + 0.102775793403489990e0 * wr_4_0 -
      0.169538807251597224e0 * wr_6_0 + 0.107141471341605537e0 * wr_8_0 -
      0.240592401626331073e-1 * wr_10_0 + 0.270106083523402465e0 * wr_8_8 -
      0.750247198579540199e0 * wr_10_8;
  results[k++] =
      0.145346920914870822e0 * wr_4_4 + 0.245087443521517137e0 * wr_6_4 +
      0.310357787744980340e0 * wr_8_4 - 0.621517435658062722e0 * wr_10_4;
  results[k++] =
      -0.207446111527151411e0 * wr_2_0 + 0.463863607042713265e-1 * wr_4_0 +
      0.344334945297037376e0 * wr_6_0 - 0.310864795681573759e0 * wr_8_0 +
      0.796311148793890448e-1 * wr_10_0 + 0.470218327686413579e0 * wr_8_8 +
      0.225742113119656531e0 * wr_10_8;
  results[k++] =
      wr_0_0 - 0.781841950174751643e-1 * wr_2_0 -
      0.447552447552447552e0 * wr_4_0 - 0.593262241952116707e-1 * wr_6_0 +
      0.278063478832601109e0 * wr_8_0 - 0.905819915887913123e-1 * wr_10_0 +
      0.354440400564595033e0 * wr_8_8 + 0.170159520136333136e0 * wr_10_8;
  results[k++] =
      0.619187234158843507e0 * wr_4_4 - 0.838999508612552007e-1 * wr_6_4 -
      0.307740447082055932e0 * wr_8_4 - 0.189121732995937022e0 * wr_10_4;
  results[k++] =
      0.216670396990624721e-1 * wr_4_4 - 0.239764080563766830e0 * wr_6_4 +
      0.502538045711336944e0 * wr_8_4 - 0.277951047066555997e0 * wr_10_4;
  results[k++] =
      -0.285488315009694417e-1 * wr_2_0 - 0.766045534972260299e-1 * wr_4_0 -
      0.151640119135522275e0 * wr_6_0 - 0.287490735755010690e0 * wr_8_0 -
      0.753173350868970131e0 * wr_10_0;
  results[k++] =
      0.205361173068281422e0 * wr_4_4 - 0.486963149638068040e0 * wr_6_4 -
      0.291617027367828793e0 * wr_8_4 + 0.501796662439439625e0 * wr_10_4;
  results[k++] =
      0.619187234158843507e0 * wr_4_4 - 0.838999508612552007e-1 * wr_6_4 -
      0.307740447082055932e0 * wr_8_4 - 0.189121732995937022e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.547289365122326150e0 * wr_2_0 +
      0.391608391608391608e0 * wr_4_0 + 0.296631120976058354e0 * wr_6_0 +
      0.218701612564967164e0 * wr_8_0 + 0.137510011327562715e0 * wr_10_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  results[k++] = -0.716114874039432883e0 * wr_6_4;
  results[k++] = -0.679366220486757450e0 * wr_6_0;
  results[k++] = 0.872871560943969525e0 * wr_6_4;
  results[k++] = 0.851630627252640128e0 * wr_6_4;
  results[k++] = 0.733799385705342807e0 * wr_6_0;
  results[k++] = 0.104446593573418703e1 * wr_5_4;
  results[k++] =
      0.170434372125229937e0 * wr_5_4 - 0.624926031125843104e0 * wr_7_4;
  results[k++] = 0.738548945875996396e0 * wr_5_0;
  results[k++] =
      -0.200858833795035967e0 * wr_5_0 - 0.722421961961470519e0 * wr_7_0;
  results[k++] =
      0.692474172457341198e0 * wr_5_4 + 0.761721589703075318e0 * wr_7_4;
  results[k++] = -0.966091783079295907e0 * wr_7_4;
  results[k++] =
      0.675623127425907587e0 * wr_5_4 + 0.600553891045251189e-1 * wr_7_4;
  results[k++] = -0.683130051063973227e0 * wr_7_0;
  results[k++] =
      0.781028411286137828e0 * wr_5_0 + 0.297259010178244894e0 * wr_7_0;
  results[k++] =
      0.668042657122684936e0 * wr_4_4 + 0.322235253162984832e0 * wr_6_4;
  results[k++] = 0.195804195804195804e0 * wr_4_4 +
                 0.338276548879659426e0 * wr_6_4 -
                 0.553443795526539568e0 * wr_8_4;
  results[k++] =
      0.787295821622216949e0 * wr_4_0 + 0.305699202718802708e0 * wr_6_0;
  results[k++] = -0.988960533128038497e-1 * wr_4_0 -
                 0.249602353812234222e0 * wr_6_0 -
                 0.738763135998499606e0 * wr_8_0;
  results[k++] = 0.617213399848367641e0 * wr_6_4;
  results[k++] = 0.426188391762268567e0 * wr_4_4 +
                 0.412324879646429702e0 * wr_6_4 +
                 0.674591978478308473e0 * wr_8_4;
  results[k++] =
      -0.240877516638597928e0 * wr_6_4 - 0.889150288361938085e0 * wr_8_4;
  results[k++] = 0.415817290474873366e0 * wr_4_4 -
                 0.286073700011311489e0 * wr_6_4 -
                 0.678120818485341208e-1 * wr_8_4;
  results[k++] =
      -0.207549808665108331e0 * wr_6_0 - 0.725988170378424118e0 * wr_8_0;
  results[k++] = 0.801149597020251747e0 * wr_4_0 +
                 0.369739001775850204e0 * wr_6_0 +
                 0.205188528083524172e0 * wr_8_0;
  results[k++] =
      -0.324704524929899286e0 * wr_5_4 + 0.185545442817085306e0 * wr_7_4;
  results[k++] =
      0.755331083730519840e-1 * wr_3_0 - 0.132560067208512173e0 * wr_5_0 -
      0.177993683649009713e-1 * wr_9_0 + 0.819512515798469346e-1 * wr_7_0 -
      0.925072595946767659e0 * wr_9_8;
  results[k++] = 0.425348118624782047e0 * wr_7_4 -
                 0.501691054385562619e0 * wr_9_4 +
                 0.187468244875366902e0 * wr_5_4;
  results[k++] = 0.809882551249770863e0 * wr_3_0 +
                 0.382667952433146934e0 * wr_5_0 +
                 0.214492749792232884e0 * wr_7_0;
  results[k++] = -0.187468244875366902e0 * wr_5_4 +
                 0.496239471728912389e0 * wr_7_4 -
                 0.301014632631337571e0 * wr_9_4;
  results[k++] =
      -0.539522202664657029e-1 * wr_3_0 - 0.132560067208512173e0 * wr_5_0 -
      0.273170838599489783e0 * wr_7_0 - 0.747573471325840794e0 * wr_9_0;
  results[k++] =
      0.621943073611393163e0 * wr_7_4 + 0.565402794192175603e0 * wr_5_4;
  results[k++] =
      -0.230168037973560593e0 * wr_3_0 + 0.403943267266782366e0 * wr_5_0 +
      0.542390718714226158e-1 * wr_9_0 - 0.249725705613098259e0 * wr_7_0 -
      0.563784938759756705e0 * wr_9_8;
  results[k++] = 0.216023463150497972e0 * wr_7_4 +
                 0.611510624382085280e0 * wr_9_4 -
                 0.816088638568547893e-1 * wr_5_4;
  results[k++] = -0.519194328036659682e-1 * wr_7_4 -
                 0.814188511384593957e0 * wr_9_4 -
                 0.919406622564918186e-1 * wr_5_4;
  results[k++] =
      0.299422670831354988e0 * wr_3_0 - 0.525484654664594790e0 * wr_5_0 -
      0.705589181979329165e-1 * wr_9_0 + 0.324864991717519944e0 * wr_7_0 -
      0.200023813776353970e0 * wr_9_8;
  results[k++] = -0.359708382064430797e0 * wr_7_4 -
                 0.108478143742845232e0 * wr_9_4 -
                 0.636983593239096202e0 * wr_5_4;
  results[k++] = -0.106284504570424221e0 * wr_5_0 -
                 0.256988081075820426e0 * wr_7_0 -
                 0.742104681935783737e0 * wr_9_0;
  results[k++] = -0.173561869174697295e0 * wr_5_4 +
                 0.459428477227139898e0 * wr_7_4 -
                 0.278685397215742875e0 * wr_9_4;
  results[k++] =
      0.815850815850815851e0 * wr_3_0 + 0.409089248829469559e0 * wr_5_0 +
      0.273139617290901677e0 * wr_7_0 + 0.164790129954810134e0 * wr_9_0;
  results[k++] = -0.847857038670079791e0 * wr_4_4 -
                 0.390608113112417935e0 * wr_6_4 +
                 0.130717196316235562e0 * wr_8_4;
  results[k++] =
      -0.222680885707561645e0 * wr_2_0 + 0.344720490737517135e0 * wr_4_0 -
      0.193341151897790900e0 * wr_6_0 + 0.390165998524657367e-1 * wr_8_0 +
      0.491808673457001968e0 * wr_8_8;
  results[k++] =
      0.171292989005816650e-1 * wr_2_0 + 0.766045534972260299e-1 * wr_4_0 -
      0.181968142962626730e0 * wr_6_0 + 0.127317325834361877e0 * wr_8_0 -
      0.298878313836892909e-1 * wr_10_0 - 0.465924006432949233e0 * wr_8_8 -
      0.932002075529241970e0 * wr_10_8;
  results[k++] =
      -0.108335198495312360e0 * wr_4_4 + 0.143858448338260098e0 * wr_6_4 +
      0.473821585956403404e0 * wr_8_4 - 0.463251745110926662e0 * wr_10_4;
  results[k++] =
      0.829882662886615325e0 * wr_2_0 + 0.428232472514541625e0 * wr_4_0 +
      0.174487539042043304e0 * wr_8_0 + 0.288215972327715282e0 * wr_6_0;
  results[k++] = 0.162502797742968540e0 * wr_4_4 -
                 0.611398405437605417e0 * wr_6_4 +
                 0.409209551507802940e0 * wr_8_4;
  results[k++] =
      -0.108335198495312360e0 * wr_4_4 + 0.143858448338260098e0 * wr_6_4 +
      0.473821585956403404e0 * wr_8_4 - 0.463251745110926662e0 * wr_10_4;
  results[k++] =
      -0.285488315009694417e-1 * wr_2_0 - 0.766045534972260299e-1 * wr_4_0 -
      0.151640119135522275e0 * wr_6_0 - 0.287490735755010690e0 * wr_8_0 -
      0.753173350868970131e0 * wr_10_0;
  results[k++] = 0.369089974064159161e0 * wr_4_4 +
                 0.357083820386169351e0 * wr_6_4 +
                 0.584213790551420441e0 * wr_8_4;
  results[k++] =
      0.365380432940227450e0 * wr_2_0 - 0.490209291421591158e0 * wr_4_0 +
      0.173281836855825140e0 * wr_6_0 + 0.312876886561982924e-1 * wr_8_0 -
      0.218581450928006970e-1 * wr_10_0 - 0.788769739635224605e-1 * wr_8_8 +
      0.681609727122159257e0 * wr_10_8;
  results[k++] =
      -0.208788818822987114e0 * wr_2_0 + 0.466865991830086817e-1 * wr_4_0 +
      0.346563673711650279e0 * wr_6_0 - 0.312876886561982924e0 * wr_8_0 +
      0.801465320069358891e-1 * wr_10_0 - 0.473261843781134763e0 * wr_8_8 -
      0.227203242374053086e0 * wr_10_8;
  results[k++] =
      -0.462173752219812755e0 * wr_4_4 - 0.281810716252517603e0 * wr_6_4 +
      0.875061458704363939e-1 * wr_8_4 + 0.564656996417485955e0 * wr_10_4;
  results[k++] =
      -0.320096299452491930e-1 * wr_4_4 + 0.109300187454884295e0 * wr_6_4 +
      0.927268193121160493e-1 * wr_8_4 - 0.754893319655660839e0 * wr_10_4;
  results[k++] =
      -0.212569009140848442e0 * wr_4_0 + 0.405756244605124852e0 * wr_6_0 -
      0.268631589054612408e0 * wr_8_0 + 0.616091292326080468e-1 * wr_10_0 -
      0.184698092552446252e0 * wr_8_8 + 0.523957565136289416e0 * wr_10_8;
  results[k++] =
      0.509270093945047805e0 * wr_2_0 - 0.485872020893367867e0 * wr_4_0 -
      0.135252081535041617e0 * wr_6_0 + 0.293052642605031718e0 * wr_8_0 -
      0.876745300617883741e-1 * wr_10_0 - 0.246264123403261670e0 * wr_8_8 +
      0.604566421311103174e-1 * wr_10_8;
  results[k++] =
      -0.801647935112528745e0 * wr_4_4 - 0.488805298205182023e0 * wr_6_4 -
      0.341506893937558219e0 * wr_8_4 - 0.124280786989237249e0 * wr_10_4;
  results[k++] =
      -0.616725247334403400e-1 * wr_4_0 - 0.141266191900493803e0 * wr_6_0 -
      0.280576544029687343e0 * wr_8_0 - 0.750734096159884893e0 * wr_10_0;
  results[k++] =
      -0.234030776652888266e-1 * wr_4_4 + 0.299670846735717911e0 * wr_6_4 -
      0.658010321976818952e0 * wr_8_4 + 0.371702739961285810e0 * wr_10_4;
  results[k++] =
      -0.187224621322310612e0 * wr_4_4 + 0.566044932723022720e0 * wr_6_4 -
      0.797588269062810850e-1 * wr_8_4 - 0.243036406897763798e0 * wr_10_4;
  results[k++] =
      0.832579083901444590e0 * wr_2_0 + 0.441292664473631034e0 * wr_4_0 +
      0.315880808012034351e0 * wr_6_0 + 0.228141172851761336e0 * wr_8_0 +
      0.142043209172646392e0 * wr_10_0;
  results[k++] =
      0.517463617118462073e0 * wr_1_0 - 0.662076886306090900e0 * wr_3_0 +
      0.338758081577341725e0 * wr_5_0 - 0.732994277494899121e-1 * wr_7_0 +
      0.361823614731616851e-2 * wr_9_0 + 0.188047746241742629e0 * wr_9_8;
  results[k++] = -0.479076273330167981e0 * wr_5_4 -
                 0.380442922938662809e0 * wr_7_4 +
                 0.101983209209969273e0 * wr_9_4;
  results[k++] =
      -0.155699788832304594e0 * wr_1_0 - 0.548850821548212125e-1 * wr_3_0 +
      0.344010458076890723e0 * wr_5_0 - 0.253633507772555221e0 * wr_7_0 +
      0.587893788356772185e-1 * wr_9_0;
  results[k++] =
      -0.902793320794269668e-2 * wr_1_0 + 0.413711872944029095e-1 * wr_3_0 +
      0.610135622138680622e-1 * wr_5_0 - 0.208245588445282756e0 * wr_7_0 +
      0.161430160293118651e0 * wr_9_0 - 0.403071261480392827e-1 * wr_11_0 -
      0.296113516439555893e0 * wr_9_8 - 0.862678654540629664e0 * wr_11_8;
  results[k++] =
      -0.154353459804966830e0 * wr_5_4 + 0.995173622426759829e-1 * wr_7_4 +
      0.502726537539619035e0 * wr_9_4 - 0.433780680752169856e0 * wr_11_4;
  results[k++] = 0.479076273330167981e0 * wr_5_4 -
                 0.443850076761773277e0 * wr_7_4 +
                 0.611899255259815640e-1 * wr_9_4;
  results[k++] =
      0.862439361864103456e0 * wr_1_0 + 0.472912061647207786e0 * wr_3_0 +
      0.338758081577341725e0 * wr_5_0 + 0.244331425831633041e0 * wr_7_0 +
      0.151965918187279077e0 * wr_9_0;
  results[k++] = -0.486504255410519898e0 * wr_5_4 -
                 0.200325281639625841e0 * wr_7_4 +
                 0.497109304949888494e0 * wr_9_4;
  results[k++] =
      0.862862071715468161e-1 * wr_5_4 + 0.254317242189822195e0 * wr_7_4 +
      0.374710237343896014e0 * wr_9_4 - 0.581977853692791842e0 * wr_11_4;
  results[k++] =
      -0.121122434095725685e-1 * wr_1_0 - 0.431707673134082380e-1 * wr_3_0 -
      0.909536484397476992e-1 * wr_5_0 - 0.164347514745210701e0 * wr_7_0 -
      0.297268433439847619e0 * wr_9_0 - 0.757087581975270740e0 * wr_11_0;
  results[k++] =
      -0.205868551662653773e0 * wr_3_0 + 0.361297841864756418e0 * wr_5_0 -
      0.223361461391995401e0 * wr_7_0 + 0.485129006963990808e-1 * wr_9_0 -
      0.504264579102948789e0 * wr_9_8;
  results[k++] = -0.729931868601811902e-1 * wr_5_4 +
                 0.193217259335773739e0 * wr_7_4 +
                 0.546951730032673204e0 * wr_9_4;
  results[k++] =
      0.638690385026585414e0 * wr_1_0 - 0.418121005003545384e0 * wr_3_0 -
      0.172658678989492425e0 * wr_5_0 + 0.120265694104838637e0 * wr_7_0 +
      0.652602405430833588e-1 * wr_9_0 - 0.370333628436816109e-1 * wr_11_0 +
      0.119707737858991873e0 * wr_9_8 + 0.792611497871730207e0 * wr_11_8;
  results[k++] =
      -0.121045506533760484e0 * wr_1_0 - 0.151281871697789760e0 * wr_3_0 +
      0.167331055034386050e0 * wr_5_0 + 0.274627318163321728e0 * wr_7_0 -
      0.339519578995681272e0 * wr_9_0 + 0.982606154220647814e-1 * wr_11_0;
  results[k++] = -0.411558977812612493e0 * wr_5_4 -
                 0.368236980148126967e0 * wr_7_4 +
                 0.528734751422904649e0 * wr_11_4;
  results[k++] =
      -0.133905889196690644e-1 * wr_3_0 + 0.110590062020050438e0 * wr_5_0 -
      0.191163211839547567e0 * wr_7_0 + 0.126219630007539970e0 * wr_9_0 -
      0.294347806878049618e-1 * wr_11_0 + 0.357813475778149118e0 * wr_9_8 -
      0.629981827709374186e0 * wr_11_8;
  results[k++] =
      0.134055399062088900e0 * wr_5_4 + 0.211666419571719315e0 * wr_7_4 +
      0.194051602785596323e0 * wr_9_4 - 0.708327622006200716e0 * wr_11_4;
  results[k++] =
      -0.217571317288168469e0 * wr_3_0 + 0.112304738877745309e0 * wr_5_0 +
      0.310603454907608830e0 * wr_7_0 - 0.329597074800063068e0 * wr_9_0 +
      0.910968719008626281e-1 * wr_11_0 + 0.449875898165875134e0 * wr_9_8 +
      0.324952162700553057e0 * wr_11_8;
  results[k++] =
      0.708599514072681659e0 * wr_1_0 - 0.262400881668443612e0 * wr_3_0 -
      0.386984603674098656e0 * wr_5_0 + 0.312168217732306370e-1 * wr_7_0 +
      0.248443142979661867e0 * wr_9_0 - 0.945489715331667654e-1 * wr_11_0 +
      0.182595924739202794e0 * wr_9_8 + 0.131891797018283023e0 * wr_11_8;
  results[k++] =
      -0.214156734229850355e0 * wr_5_4 - 0.338142211941868981e0 * wr_7_4 -
      0.310002117149968351e0 * wr_9_4 - 0.130743463495474627e0 * wr_11_4;
  results[k++] =
      0.365266953201457389e-1 * wr_5_4 - 0.270345606810289185e0 * wr_7_4 +
      0.498527594008745360e0 * wr_9_4 - 0.259960944187498525e0 * wr_11_4;
  results[k++] =
      -0.364859576748217433e-1 * wr_3_0 - 0.860942465173666079e-1 * wr_5_0 -
      0.160725987265982394e0 * wr_7_0 - 0.294785546079983846e0 * wr_9_0 -
      0.756193207673710943e0 * wr_11_0;
  results[k++] =
      0.284379930759663063e0 * wr_5_4 - 0.439259618450280474e0 * wr_7_4 -
      0.337504776624817614e0 * wr_9_4 + 0.469318376507702988e0 * wr_11_4;
  results[k++] =
      0.633758339131615048e0 * wr_5_4 + 0.441472527258864972e-1 * wr_7_4 -
      0.254403797503916314e0 * wr_9_4 - 0.185044757731549298e0 * wr_11_4;
  results[k++] =
      0.863459396947832628e0 * wr_1_0 + 0.479620369216286620e0 * wr_3_0 +
      0.353668206667292093e0 * wr_5_0 + 0.271707558033539008e0 * wr_7_0 +
      0.201825866518107184e0 * wr_9_0 + 0.127441254669255435e0 * wr_11_0;
  results[k++] =
      0.355957345171270024e0 * wr_6_0 - 0.968535712787711725e-1 * wr_8_0 -
      0.328373619073395690e0 * wr_2_0 + 0.545674648125248870e-2 * wr_10_0 +
      wr_0_0 - 0.391608391608391608e0 * wr_4_0 +
      0.354440400564595033e0 * wr_8_8 + 0.170159520136333135e0 * wr_10_8;
  results[k++] =
      0.553817898551701557e0 * wr_4_4 - 0.281408990151987984e0 * wr_6_4 -
      0.360448292862771073e0 * wr_8_4 + 0.845778102002960278e-1 * wr_10_4;
  results[k++] =
      -0.190597243040348781e0 * wr_2_0 + 0.426188391762268567e-1 * wr_4_0 +
      0.316367902839551660e0 * wr_6_0 - 0.285616214153305046e0 * wr_8_0 +
      0.731634391433476314e-1 * wr_10_0 - 0.432026979075689210e0 * wr_8_8 -
      0.207407234977637475e0 * wr_10_8;
  results[k++] =
      -0.123972763696212354e-1 * wr_2_0 + 0.587036174788056518e-1 * wr_4_0 +
      0.433219976644855256e-1 * wr_6_0 - 0.222932698460104694e0 * wr_8_0 +
      0.187909504565894209e0 * wr_10_0 - 0.493047697985605669e-1 * wr_12_0 +
      0.187339465961392102e0 * wr_8_8 - 0.129574434702624727e0 * wr_10_8 -
      0.786538346142175050e0 * wr_12_8;
  results[k++] =
      0.226206945041012258e-1 * wr_4_4 - 0.181307355680639587e0 * wr_6_4 +
      0.606745953565557384e-1 * wr_8_4 + 0.520890739641819318e0 * wr_10_4 -
      0.410544251604672713e0 * wr_12_4;
  results[k++] =
      0.553817898551701557e0 * wr_4_4 - 0.281408990151987984e0 * wr_6_4 -
      0.360448292862771073e0 * wr_8_4 + 0.845778102002960278e-1 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.547289365122326150e0 * wr_2_0 +
      0.391608391608391608e0 * wr_4_0 + 0.296631120976058354e0 * wr_6_0 +
      0.218701612564967164e0 * wr_8_0 + 0.137510011327562715e0 * wr_10_0;
  results[k++] =
      -0.421904982629324646e0 * wr_4_4 - 0.257256810396986039e0 * wr_6_4 +
      0.798818166892925870e-1 * wr_8_4 + 0.515458956984951381e0 * wr_10_4;
  results[k++] =
      0.968560273320374340e-1 * wr_4_4 + 0.156567069038022035e0 * wr_6_4 +
      0.259793096323784577e0 * wr_8_4 + 0.266366310646303565e0 * wr_10_4 -
      0.671177359452222714e0 * wr_12_4;
  results[k++] =
      -0.202676597848803337e-1 * wr_2_0 - 0.533174882633308123e-1 * wr_4_0 -
      0.101178388322309837e0 * wr_6_0 - 0.173552870370270680e0 * wr_8_0 -
      0.304435838364586248e0 * wr_10_0 - 0.759997482360065668e0 * wr_12_0;
  results[k++] =
      -0.190597243040348781e0 * wr_2_0 + 0.426188391762268567e-1 * wr_4_0 +
      0.316367902839551660e0 * wr_6_0 - 0.285616214153305046e0 * wr_8_0 +
      0.731634391433476314e-1 * wr_10_0 - 0.432026979075689210e0 * wr_8_8 -
      0.207407234977637475e0 * wr_10_8;
  results[k++] =
      -0.421904982629324646e0 * wr_4_4 - 0.257256810396986039e0 * wr_6_4 +
      0.798818166892925870e-1 * wr_8_4 + 0.515458956984951381e0 * wr_10_4;
  results[k++] =
      -0.405916270809343010e-1 * wr_6_0 + 0.737719433637513146e-1 * wr_8_0 -
      0.755035940454474443e-1 * wr_2_0 + 0.950829601149424334e-1 * wr_10_0 +
      wr_0_0 - 0.391138273491214668e0 * wr_4_0 -
      0.502586389246774225e-1 * wr_12_0 - 0.940352083130558251e-1 * wr_8_8 +
      0.178614651571678882e0 * wr_10_8 + 0.801755020876836060e0 * wr_12_8;
  results[k++] =
      -0.166221278252211315e0 * wr_2_0 - 0.894422111580124970e-1 * wr_4_0 +
      0.224421806690116247e0 * wr_6_0 + 0.213504027575059167e0 * wr_8_0 -
      0.350786070721911266e0 * wr_10_0 + 0.111609688846388867e0 * wr_12_0 +
      0.407764018456120625e0 * wr_8_8 + 0.233982404484047116e0 * wr_10_8 +
      0.136958663801832567e0 * wr_12_8;
  results[k++] =
      0.206792530471280084e0 * wr_4_4 - 0.334742908677351273e0 * wr_6_4 -
      0.406759053235114410e0 * wr_8_4 - 0.622463821284082170e-1 * wr_10_4 +
      0.500411895808509283e0 * wr_12_4;
  results[k++] =
      -0.123972763696212354e-1 * wr_2_0 + 0.587036174788056518e-1 * wr_4_0 +
      0.433219976644855256e-1 * wr_6_0 - 0.222932698460104694e0 * wr_8_0 +
      0.187909504565894209e0 * wr_10_0 - 0.493047697985605669e-1 * wr_12_0 +
      0.187339465961392102e0 * wr_8_8 - 0.129574434702624727e0 * wr_10_8 -
      0.786538346142175050e0 * wr_12_8;
  results[k++] =
      0.968560273320374340e-1 * wr_4_4 + 0.156567069038022035e0 * wr_6_4 +
      0.259793096323784577e0 * wr_8_4 + 0.266366310646303565e0 * wr_10_4 -
      0.671177359452222714e0 * wr_12_4;
  results[k++] =
      -0.166221278252211315e0 * wr_2_0 - 0.894422111580124970e-1 * wr_4_0 +
      0.224421806690116247e0 * wr_6_0 + 0.213504027575059167e0 * wr_8_0 -
      0.350786070721911266e0 * wr_10_0 + 0.111609688846388867e0 * wr_12_0 +
      0.407764018456120625e0 * wr_8_8 + 0.233982404484047116e0 * wr_10_8 +
      0.136958663801832567e0 * wr_12_8;
  results[k++] =
      -0.274774091009401422e0 * wr_6_0 + 0.110115943119445566e0 * wr_8_0 +
      0.786309618461464509e-1 * wr_2_0 + 0.210352492926990346e0 * wr_10_0 +
      wr_0_0 - 0.372333548804137039e0 * wr_4_0 -
      0.972174682229871354e-1 * wr_12_0 + 0.397841265939851568e0 * wr_8_8 +
      0.228288548754335138e0 * wr_10_8 + 0.133625836812806010e0 * wr_12_8;
  results[k++] =
      0.672534426660899012e0 * wr_4_4 + 0.507335288172571299e-1 * wr_6_4 -
      0.228495586840770996e0 * wr_8_4 - 0.279733635920808172e0 * wr_10_4 -
      0.133154890691385957e0 * wr_12_4;
  results[k++] =
      0.226206945041012258e-1 * wr_4_4 - 0.181307355680639587e0 * wr_6_4 +
      0.606745953565557384e-1 * wr_8_4 + 0.520890739641819318e0 * wr_10_4 -
      0.410544251604672713e0 * wr_12_4;
  results[k++] =
      -0.202676597848803337e-1 * wr_2_0 - 0.533174882633308123e-1 * wr_4_0 -
      0.101178388322309837e0 * wr_6_0 - 0.173552870370270680e0 * wr_8_0 -
      0.304435838364586248e0 * wr_10_0 - 0.759997482360065668e0 * wr_12_0;
  results[k++] =
      0.206792530471280084e0 * wr_4_4 - 0.334742908677351273e0 * wr_6_4 -
      0.406759053235114410e0 * wr_8_4 - 0.622463821284082170e-1 * wr_10_4 +
      0.500411895808509283e0 * wr_12_4;
  results[k++] =
      0.672534426660899012e0 * wr_4_4 + 0.507335288172571299e-1 * wr_6_4 -
      0.228495586840770996e0 * wr_8_4 - 0.279733635920808172e0 * wr_10_4 -
      0.133154890691385957e0 * wr_12_4;
  results[k++] =
      0.312243285237956162e0 * wr_6_0 + 0.245481401858636613e0 * wr_8_0 +
      0.550416732923025157e0 * wr_2_0 + 0.184485481035736314e0 * wr_10_0 +
      wr_0_0 + 0.399835458658988071e0 * wr_4_0 +
      0.117270157490913986e0 * wr_12_0;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 2)
void BoxMatrix::setup___oa_2_B1(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 1));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 1));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 2));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 2));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 2)
void BoxMatrix::evaluate___oa_2_B1(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 1)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] =
      -0.447213595499957940e0 * wr_1_0 + 0.292770021884559954e0 * wr_3_0;
  results[k++] =
      0.632455532033675868e0 * wr_1_0 - 0.414039335605412531e0 * wr_3_0;
  results[k++] = wr_0_0 - 0.319438282499969957e0 * wr_2_0 -
                 0.952380952380952381e-1 * wr_4_0 -
                 0.796819072889595762e0 * wr_4_4;
  results[k++] = -0.451753951452625620e0 * wr_2_0 +
                 0.336717514850736916e0 * wr_4_0 -
                 0.563436169819011052e0 * wr_4_4;
  results[k++] = -0.451753951452625620e0 * wr_2_0 +
                 0.336717514850736916e0 * wr_4_0 -
                 0.563436169819011052e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.333333333333333333e0 * wr_4_0 -
                 0.398409536444797881e0 * wr_4_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = 0.156492159287190318e0 * wr_2_0 -
                 0.116642368703960862e0 * wr_4_0 +
                 0.975900072948533181e0 * wr_4_4;
  results[k++] = -0.462910049886275731e0 * wr_2_0 +
                 0.345032779671177109e0 * wr_4_0 +
                 0.577350269189625763e0 * wr_4_4;
  results[k++] = 0.524890659167823879e0 * wr_2_0 -
                 0.391230398217975796e0 * wr_4_0 +
                 0.218217890235992381e0 * wr_4_4;
  results[k++] =
      -0.365148371670110743e0 * wr_1_0 + 0.239045721866878728e0 * wr_3_0;
  results[k++] =
      -0.368855556781658750e-1 * wr_1_0 + 0.225374467927604421e0 * wr_3_0 -
      0.160523776776962402e0 * wr_5_0 + 0.805822964025380299e0 * wr_5_4;
  results[k++] =
      0.617213399848367641e0 * wr_1_0 - 0.235702260395515842e0 * wr_3_0 -
      0.134303827337563383e0 * wr_5_0 - 0.674199862463242087e0 * wr_5_4;
  results[k++] = -0.218217890235992381e0 * wr_1_0 -
                 0.333333333333333333e0 * wr_3_0 +
                 0.379868588198793162e0 * wr_5_0;
  results[k++] = -0.445435403187373976e0 * wr_3_0 +
                 0.355334527259350724e0 * wr_5_0 -
                 0.594588390010563136e0 * wr_5_4;
  results[k++] =
      0.742307488958090266e0 * wr_1_0 - 0.125988157669742409e0 * wr_3_0 -
      0.287153661502632022e0 * wr_5_0 - 0.240249990052149056e0 * wr_5_4;
  results[k++] = wr_0_0 - 0.511101251999951930e0 * wr_2_0 +
                 0.476190476190476190e-1 * wr_4_0 -
                 0.398409536444797881e0 * wr_4_4;
  results[k++] = -0.377964473009227227e0 * wr_2_0 +
                 0.281718084909505526e0 * wr_4_0 +
                 0.471404520791031683e0 * wr_4_4;
  results[k++] =
      -0.476190476190476190e-1 * wr_2_0 + 0.261358594772702692e0 * wr_4_0 -
      0.187931416044255237e0 * wr_6_0 - 0.145778859224958755e0 * wr_4_4 +
      0.703174971048874412e0 * wr_6_4;
  results[k++] = -0.377964473009227227e0 * wr_2_0 +
                 0.281718084909505526e0 * wr_4_0 +
                 0.471404520791031683e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.106060606060606061e0 * wr_4_0 -
                 0.189102339622237201e0 * wr_6_0 +
                 0.126766670686981144e0 * wr_4_4 -
                 0.707556165903778401e0 * wr_6_4;
  results[k++] =
      -0.281718084909505526e0 * wr_2_0 - 0.257703049779018564e0 * wr_4_0 +
      0.389136037874045427e0 * wr_6_0 - 0.431219680932051729e0 * wr_4_4 -
      0.208001961510195185e0 * wr_6_4;
  results[k++] =
      -0.476190476190476190e-1 * wr_2_0 + 0.261358594772702692e0 * wr_4_0 -
      0.187931416044255237e0 * wr_6_0 - 0.145778859224958755e0 * wr_4_4 +
      0.703174971048874412e0 * wr_6_4;
  results[k++] =
      -0.281718084909505526e0 * wr_2_0 - 0.257703049779018564e0 * wr_4_0 +
      0.389136037874045427e0 * wr_6_0 - 0.431219680932051729e0 * wr_4_4 -
      0.208001961510195185e0 * wr_6_4;
  results[k++] =
      wr_0_0 + 0.212958854999979971e0 * wr_2_0 -
      0.214285714285714286e0 * wr_4_0 - 0.231125081760512134e0 * wr_6_0 -
      0.488957158364070127e0 * wr_4_4 - 0.235852055301259467e0 * wr_6_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  results[k++] = -0.158910431540932053e0 * wr_5_0 +
                 0.199204768222398940e0 * wr_3_0 +
                 0.797724035217465642e0 * wr_5_4;
  results[k++] = 0.369274472937998197e0 * wr_5_0 -
                 0.462910049886275731e0 * wr_3_0 +
                 0.617914380653324672e0 * wr_5_4;
  results[k++] = -0.376050716545177472e0 * wr_5_0 +
                 0.471404520791031683e0 * wr_3_0 +
                 0.269679944985296835e0 * wr_5_4;
  results[k++] = -0.391230398217975797e0 * wr_2_0 +
                 0.291605921759902156e0 * wr_4_0 -
                 0.487950036474266590e0 * wr_4_4;
  results[k++] =
      0.262431940540738983e0 * wr_4_0 - 0.218356573370573363e0 * wr_6_0 +
      0.313666163337433736e0 * wr_4_4 + 0.817015485702651929e0 * wr_6_4;
  results[k++] =
      0.505076272276105375e0 * wr_2_0 - 0.184808434685165026e0 * wr_4_0 -
      0.159465094419459857e0 * wr_6_0 - 0.103081219911607425e0 * wr_4_4 -
      0.596663748467175994e0 * wr_6_4;
  results[k++] =
      -0.285714285714285714e0 * wr_2_0 - 0.261358594772702692e0 * wr_4_0 +
      0.394655973692935997e0 * wr_6_0 + 0.437336577674876266e0 * wr_4_4 +
      0.210952491314662324e0 * wr_6_4;
  results[k++] =
      -0.439132628672407230e0 * wr_4_0 + 0.365380432940227451e0 * wr_6_0 +
      0.104972776216295593e0 * wr_4_4 - 0.585912169668626903e0 * wr_6_4;
  results[k++] =
      0.654653670707977142e0 * wr_2_0 - 0.177436376899733305e0 * wr_4_0 -
      0.258362981844911413e0 * wr_6_0 + 0.296907847610082194e0 * wr_4_4 -
      0.138100822784136357e0 * wr_6_4;
  results[k++] =
      0.638876564999939914e0 * wr_1_0 - 0.487950036474266590e0 * wr_3_0 +
      0.556070674401087835e-1 * wr_5_0 - 0.279145263119541259e0 * wr_5_4;
  results[k++] = -0.188982236504613614e0 * wr_1_0 -
                 0.288675134594812882e0 * wr_3_0 +
                 0.328975847479884493e0 * wr_5_0;
  results[k++] =
      -0.238095238095238095e-1 * wr_1_0 + 0.297569850321807792e-1 * wr_3_0 +
      0.286941191135765667e0 * wr_5_0 - 0.255401703723752203e0 * wr_7_0 +
      0.240072224589368946e0 * wr_5_4 + 0.784235933658605225e0 * wr_7_4;
  results[k++] = -0.377964473009227227e0 * wr_3_0 +
                 0.301511344577763623e0 * wr_5_0 +
                 0.504524979109513018e0 * wr_5_4;
  results[k++] =
      0.731925054711399886e0 * wr_1_0 - 0.101639453522717714e0 * wr_3_0 -
      0.392036301105865804e-1 * wr_5_0 - 0.224321887165670489e0 * wr_7_0 +
      0.328001102085554515e-1 * wr_5_4 - 0.688802314379664480e0 * wr_7_4;
  results[k++] =
      -0.129099444873580563e0 * wr_1_0 - 0.299645599403746787e0 * wr_3_0 -
      0.155584583645363558e0 * wr_5_0 + 0.395666618046037236e0 * wr_7_0;
  results[k++] =
      -0.524863881081477966e-1 * wr_3_0 + 0.283425345521131256e0 * wr_5_0 -
      0.206855936472014547e0 * wr_7_0 - 0.203254848946405035e0 * wr_5_4 +
      0.635171402957515734e0 * wr_7_4;
  results[k++] =
      -0.310513659574533285e0 * wr_3_0 - 0.209595869581948492e0 * wr_5_0 +
      0.391608391608391608e0 * wr_7_0 - 0.450926963500797419e0 * wr_5_4 -
      0.300617975667198279e0 * wr_7_4;
  results[k++] =
      0.788810637746615471e0 * wr_1_0 + 0.704178790219530341e-1 * wr_3_0 -
      0.237659377174355642e0 * wr_5_0 - 0.197352079147009088e0 * wr_7_0 -
      0.284057286875383229e0 * wr_5_4 - 0.189371524583588819e0 * wr_7_4;
  results[k++] = wr_0_0 - 0.409090909090909091e0 * wr_4_0 +
                 0.630341132074124001e-1 * wr_6_0 -
                 0.488957158364070127e0 * wr_4_4 -
                 0.235852055301259467e0 * wr_6_4;
  results[k++] =
      -0.247435829652696755e0 * wr_2_0 - 0.226343182570563324e0 * wr_4_0 +
      0.341782098973365693e0 * wr_6_0 + 0.378744586270589234e0 * wr_4_4 +
      0.182690216470113725e0 * wr_6_4;
  results[k++] =
      -0.343604066372024752e-1 * wr_2_0 + 0.531915265213751693e-1 * wr_4_0 +
      0.298331874233587997e0 * wr_6_0 - 0.280951629530409793e0 * wr_8_0 -
      0.890064479815234647e-1 * wr_4_4 + 0.159465094419459857e0 * wr_6_4 +
      0.747111007024652771e0 * wr_8_4;
  results[k++] =
      -0.247435829652696755e0 * wr_2_0 - 0.226343182570563324e0 * wr_4_0 +
      0.341782098973365693e0 * wr_6_0 + 0.378744586270589234e0 * wr_4_4 +
      0.182690216470113725e0 * wr_6_4;
  results[k++] =
      wr_0_0 + 0.197470938272708701e0 * wr_2_0 -
      0.148351648351648352e0 * wr_4_0 + 0.277350098112614561e-1 * wr_6_0 -
      0.265941160879000072e0 * wr_8_0 + 0.338508801944356241e0 * wr_4_4 -
      0.283022466361511360e-1 * wr_6_4 - 0.707194931902358954e0 * wr_8_4;
  results[k++] =
      -0.186308195744719971e0 * wr_2_0 - 0.288413854927290630e0 * wr_4_0 -
      0.924347504439625511e-1 * wr_6_0 + 0.391723553614000694e0 * wr_8_0 -
      0.344720490737517136e0 * wr_4_4 - 0.197633809596147621e0 * wr_6_4 -
      0.115741939518989304e0 * wr_8_4;
  results[k++] =
      -0.343604066372024752e-1 * wr_2_0 + 0.531915265213751693e-1 * wr_4_0 +
      0.298331874233587997e0 * wr_6_0 - 0.280951629530409793e0 * wr_8_0 -
      0.890064479815234647e-1 * wr_4_4 + 0.159465094419459857e0 * wr_6_4 +
      0.747111007024652771e0 * wr_8_4;
  results[k++] =
      -0.186308195744719971e0 * wr_2_0 - 0.288413854927290630e0 * wr_4_0 -
      0.924347504439625511e-1 * wr_6_0 + 0.391723553614000694e0 * wr_8_0 -
      0.344720490737517136e0 * wr_4_4 - 0.197633809596147621e0 * wr_6_4 -
      0.115741939518989304e0 * wr_8_4;
  results[k++] =
      wr_0_0 + 0.325246251272696685e0 * wr_2_0 -
      0.629370629370629371e-1 * wr_4_0 - 0.242050994716463617e0 * wr_6_0 -
      0.161464276247964329e0 * wr_8_0 - 0.526569247468998598e0 * wr_4_4 -
      0.301890630785612117e0 * wr_6_4 - 0.176798732975589738e0 * wr_8_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] =
      -0.185281696496388395e0 * wr_6_0 + 0.222680885707561645e0 * wr_4_0 +
      0.693260628329719132e0 * wr_6_4 - 0.124205463829813314e0 * wr_4_4;
  results[k++] =
      0.383214231015951249e0 * wr_6_0 - 0.460566186471838290e0 * wr_4_0 +
      0.614509867799026984e0 * wr_6_4 - 0.110096376512636061e0 * wr_4_4;
  results[k++] =
      0.116774841624228445e1 * wr_4_4 - 0.144841364875580273e0 * wr_6_4;
  results[k++] =
      0.365380432940227451e0 * wr_6_0 - 0.439132628672407230e0 * wr_4_0 -
      0.292956084834313451e0 * wr_6_4 + 0.524863881081477966e-1 * wr_4_4;
  results[k++] = -0.398409536444797881e0 * wr_3_0 +
                 0.317820863081864106e0 * wr_5_0 -
                 0.531816023478310428e0 * wr_5_4;
  results[k++] =
      0.256107349917732296e-1 * wr_3_0 + 0.276594815369535215e0 * wr_5_0 -
      0.254357111601023937e0 * wr_7_0 + 0.231415825566263060e0 * wr_5_4 +
      0.781028411286137828e0 * wr_7_4;
  results[k++] =
      0.449466574975494725e0 * wr_3_0 - 0.151694353412810668e0 * wr_5_0 -
      0.177140840950707035e0 * wr_7_0 - 0.108785658644084235e0 * wr_5_4 -
      0.543928293220421173e0 * wr_7_4;
  results[k++] =
      -0.317820863081864106e0 * wr_3_0 - 0.214528211931814243e0 * wr_5_0 +
      0.400823967556264373e0 * wr_7_0 + 0.461538461538461538e0 * wr_5_4 +
      0.307692307692307692e0 * wr_7_4;
  results[k++] =
      -0.384615384615384615e0 * wr_5_4 + 0.769230769230769231e-1 * wr_7_4;
  results[k++] =
      0.543928293220421173e0 * wr_5_4 - 0.108785658644084235e0 * wr_7_4;
  results[k++] =
      0.433904672936743237e0 * wr_5_0 - 0.371573762722806118e0 * wr_7_0 -
      0.155584583645363558e0 * wr_5_4 + 0.570476806699666382e0 * wr_7_4;
  results[k++] =
      -0.606060606060606061e0 * wr_3_0 + 0.204544624414734780e0 * wr_5_0 +
      0.238856661211179450e0 * wr_7_0 - 0.366716380479073968e0 * wr_5_4 +
      0.733432760958147937e-1 * wr_7_4;
  results[k++] =
      0.532397137499949928e0 * wr_2_0 - 0.467532467532467532e0 * wr_4_0 +
      0.588318389935849068e-1 * wr_6_0 + 0.260777151127504067e0 * wr_4_4 -
      0.220128584947842169e0 * wr_6_4;
  results[k++] =
      -0.251976315339484818e0 * wr_2_0 - 0.230496614925959067e0 * wr_4_0 +
      0.348053853272519330e0 * wr_6_0 - 0.385694607919935013e0 * wr_4_4 -
      0.186042610156036500e0 * wr_6_4;
  results[k++] =
      -0.173160173160173160e-1 * wr_2_0 + 0.289414380708153064e0 * wr_6_0 -
      0.297331256870325943e0 * wr_8_0 + 0.737165267307622977e-1 * wr_4_0 +
      0.168206376028798564e0 * wr_4_4 + 0.295333487840527253e0 * wr_6_4 +
      0.790667970538504641e0 * wr_8_4;
  results[k++] =
      -0.376050716545177472e0 * wr_4_0 + 0.312893109387371939e0 * wr_6_0 -
      0.898933149950989449e-1 * wr_4_4 + 0.501745206004254461e0 * wr_6_4;
  results[k++] =
      0.639602149066831305e0 * wr_2_0 - 0.134462672842327122e0 * wr_4_0 -
      0.249037002341550923e0 * wr_8_0 - 0.224999086856208258e0 * wr_4_4 -
      0.662243126750251654e0 * wr_8_4;
  results[k++] =
      -0.188025358272588736e0 * wr_2_0 - 0.291072103332411356e0 * wr_4_0 -
      0.932867016375254984e-1 * wr_6_0 + 0.395333985269252324e0 * wr_8_0 +
      0.347897705282034949e0 * wr_4_4 + 0.199455357868470865e0 * wr_6_4 +
      0.116808708056199477e0 * wr_8_4;
  results[k++] =
      0.118262479197816524e0 * wr_6_4 - 0.146686552191629587e0 * wr_4_4 -
      0.263843977142321289e-1 * wr_8_4 + 0.112559687534741105e1 * wr_8_8;
  results[k++] =
      -0.349825131140720619e0 * wr_6_4 + 0.433904672936743237e0 * wr_4_4 +
      0.780461009532142093e-1 * wr_8_4 + 0.665912091816291711e0 * wr_8_8;
  results[k++] =
      0.396664414010958819e0 * wr_6_4 - 0.492001653128331772e0 * wr_4_4 -
      0.884959602516196663e-1 * wr_8_4 + 0.251691112853816832e0 * wr_8_8;
  results[k++] =
      0.551615830592038793e-1 * wr_4_0 - 0.298331874233587997e0 * wr_6_0 +
      0.220747708916750552e0 * wr_8_0 - 0.659307022085358997e-2 * wr_4_4 +
      0.239197641629189786e0 * wr_6_4 - 0.587015791233655747e0 * wr_8_4;
  results[k++] =
      0.326340326340326340e0 * wr_4_0 + 0.176495516980754720e0 * wr_6_0 -
      0.391788317366384034e0 * wr_8_0 - 0.975128236053701106e-1 * wr_4_4 +
      0.424533699542267040e0 * wr_6_4 + 0.347283225487765557e0 * wr_8_4;
  results[k++] =
      -0.717100579769650430e0 * wr_2_0 + 0.244599795235114268e0 * wr_6_0 +
      0.175006076705385792e0 * wr_8_0 - 0.331707446870809021e0 * wr_4_4 +
      0.136687003278128265e0 * wr_6_4 + 0.147171111767813143e0 * wr_8_4;
  results[k++] =
      0.745355992499929899e0 * wr_1_0 - 0.133077282674799979e0 * wr_3_0 -
      0.359307204997625986e0 * wr_5_0 + 0.652680652680652681e-1 * wr_7_0 -
      0.300617975667198279e0 * wr_5_4 - 0.200411983778132186e0 * wr_7_4;
  results[k++] =
      -0.115470053837925153e0 * wr_1_0 - 0.268011171770179307e0 * wr_3_0 -
      0.139159082112813980e0 * wr_5_0 + 0.353894981751353710e0 * wr_7_0;
  results[k++] =
      -0.160348564306944884e-1 * wr_1_0 - 0.968979472765805478e-2 * wr_3_0 +
      0.106284504570424221e0 * wr_5_0 + 0.290733990712039269e0 * wr_7_0 -
      0.326941223510170457e0 * wr_9_0 + 0.127034280591503147e0 * wr_5_4 +
      0.278977243651928480e0 * wr_7_4 + 0.778820603034984922e0 * wr_9_4;
  results[k++] =
      -0.275240941281590151e0 * wr_3_0 - 0.185786881361403059e0 * wr_5_0 +
      0.347123738349394590e0 * wr_7_0 + 0.399704032515894759e0 * wr_5_4 +
      0.266469355010596506e0 * wr_7_4;
  results[k++] =
      0.781606736734715526e0 * wr_1_0 + 0.623202093962553577e-1 * wr_3_0 -
      0.143909899491305438e0 * wr_5_0 + 0.632660921270807578e-1 * wr_7_0 -
      0.295120339539477126e0 * wr_9_0 + 0.172005229038445362e0 * wr_5_4 -
      0.607077278959218923e-1 * wr_7_4 - 0.703018721041995059e0 * wr_9_4;
  results[k++] =
      -0.852802865422441737e-1 * wr_1_0 - 0.230473781344852014e0 * wr_3_0 -
      0.251229717208531087e0 * wr_5_0 - 0.241601380080331085e-1 * wr_7_0 +
      0.386403227160206533e0 * wr_9_0;
  results[k++] =
      -0.320882676552610393e-1 * wr_9_4 - 0.188422287906398315e0 * wr_5_4 +
      0.138545799931175232e0 * wr_7_4 + 0.700083348217238895e0 * wr_9_8;
  results[k++] =
      0.745663957424832741e-1 * wr_9_4 + 0.437853829869467910e0 * wr_5_4 -
      0.321951345492255816e0 * wr_7_4 + 0.542282229720498833e0 * wr_9_8;
  results[k++] =
      -0.759347006199916622e-1 * wr_9_4 - 0.445888515267367341e0 * wr_5_4 +
      0.327859202402475987e0 * wr_7_4 + 0.236671368164154040e0 * wr_9_8;
  results[k++] =
      0.403741446985752282e-1 * wr_3_0 - 0.708563363802828139e-1 * wr_5_0 -
      0.304199906576491981e0 * wr_7_0 + 0.299696121550989586e0 * wr_9_0 +
      0.127034280591503147e0 * wr_5_4 - 0.934075592584581963e-1 * wr_7_4 -
      0.713918886115402847e0 * wr_9_4;
  results[k++] =
      0.218915746048930460e0 * wr_3_0 + 0.274425410774106063e0 * wr_5_0 +
      0.508965626342277582e-1 * wr_7_0 - 0.386906029229978798e0 * wr_9_0 +
      0.360801212294109966e0 * wr_5_4 + 0.286518609762969679e0 * wr_7_4 +
      0.184333063764526980e0 * wr_9_4;
  results[k++] =
      -0.813115628181741708e0 * wr_1_0 - 0.191085328968943560e0 * wr_3_0 +
      0.119769068332541995e0 * wr_5_0 + 0.236116824352118470e0 * wr_7_0 +
      0.138157883047883738e0 * wr_9_0 + 0.300617975667198279e0 * wr_5_4 +
      0.238726039500422164e0 * wr_7_4 + 0.153585494142557525e0 * wr_9_4;
  results[k++] =
      wr_0_0 + 0.216830834181797789e0 * wr_2_0 -
      0.230769230769230769e0 * wr_4_0 - 0.295840104653455532e0 * wr_6_0 +
      0.664852902197500178e-1 * wr_8_0 - 0.526569247468998598e0 * wr_4_4 -
      0.301890630785612117e0 * wr_6_4 - 0.176798732975589738e0 * wr_8_4;
  results[k++] =
      -0.168174993036504340e0 * wr_2_0 - 0.260342803762045942e0 * wr_4_0 -
      0.834381625032991837e-1 * wr_6_0 + 0.353597465951179476e0 * wr_8_0 +
      0.311169167290727117e0 * wr_4_4 + 0.178398295468179364e0 * wr_6_4 +
      0.104476884631035743e0 * wr_8_4;
  results[k++] =
      0.145808513683914397e0 * wr_8_4 - 0.342134088026890654e-1 * wr_10_4 -
      0.208698492702029159e0 * wr_6_4 + 0.880119313149777525e-1 * wr_4_4 +
      0.488665220521763765e0 * wr_10_8 - 0.414693585654309334e0 * wr_8_8;
  results[k++] =
      0.246690098933761360e-1 * wr_2_0 - 0.128692181041939920e0 * wr_6_0 -
      0.288345093465420577e0 * wr_8_0 + 0.348651513423768417e0 * wr_10_0 +
      0.593376319876823097e-1 * wr_4_4 - 0.719156308166191514e-1 * wr_6_4 -
      0.242483397016773267e0 * wr_8_4 - 0.761200291802664250e0 * wr_10_4;
  results[k++] =
      -0.168174993036504340e0 * wr_2_0 - 0.260342803762045942e0 * wr_4_0 -
      0.834381625032991837e-1 * wr_6_0 + 0.353597465951179476e0 * wr_8_0 +
      0.311169167290727117e0 * wr_4_4 + 0.178398295468179364e0 * wr_6_4 +
      0.104476884631035743e0 * wr_8_4;
  results[k++] =
      wr_0_0 + 0.309609412269201652e0 * wr_2_0 -
      0.512820512820512821e-1 * wr_4_0 - 0.117465923906519108e0 * wr_6_0 +
      0.934793178277688221e-1 * wr_8_0 - 0.327404788875149321e0 * wr_10_0 +
      0.429056423863628488e0 * wr_4_4 + 0.146505747293017645e0 * wr_6_4 -
      0.102357161196394059e0 * wr_8_4 - 0.714812961464011172e0 * wr_10_4;
  results[k++] =
      -0.301572678270728280e0 * wr_8_4 + 0.707628729263736804e-1 * wr_10_4 +
      0.431646697473731063e0 * wr_6_4 - 0.182033224095372801e0 * wr_4_4 +
      0.433155422058660149e0 * wr_10_8 - 0.367586575789695321e0 * wr_8_8;
  results[k++] =
      0.131200440834221806e0 * wr_2_0 + 0.244477586986049312e0 * wr_4_0 +
      0.217776541025624450e0 * wr_6_0 - 0.196608159743329676e-1 * wr_8_0 -
      0.377723543456090708e0 * wr_10_0 + 0.286362474180628692e0 * wr_4_4 +
      0.174609686441701289e0 * wr_6_4 + 0.121992154927677936e0 * wr_8_4 +
      0.749702158770164477e-1 * wr_10_4;
  results[k++] =
      0.145808513683914397e0 * wr_8_4 - 0.342134088026890654e-1 * wr_10_4 -
      0.208698492702029159e0 * wr_6_4 + 0.880119313149777525e-1 * wr_4_4 +
      0.488665220521763765e0 * wr_10_8 - 0.414693585654309334e0 * wr_8_8;
  results[k++] =
      -0.301572678270728280e0 * wr_8_4 + 0.707628729263736804e-1 * wr_10_4 +
      0.431646697473731063e0 * wr_6_4 - 0.182033224095372801e0 * wr_4_4 +
      0.433155422058660149e0 * wr_10_8 - 0.367586575789695321e0 * wr_8_8;
  results[k++] =
      wr_0_0 - 0.860026145192226807e0 * wr_2_0 +
      0.461538461538461538e0 * wr_4_0 - 0.163147116536832095e0 * wr_6_0 +
      0.343673962602091258e-1 * wr_8_0 - 0.327404788875149322e-2 * wr_10_0;
  results[k++] =
      -0.287538266669736561e0 * wr_8_4 + 0.674697520428370734e-1 * wr_10_4 +
      0.411558977812612493e0 * wr_6_4 - 0.173561869174697295e0 * wr_4_4 -
      0.206498745130908731e0 * wr_10_8 + 0.175240024162182029e0 * wr_8_8;
  results[k++] =
      0.246690098933761360e-1 * wr_2_0 - 0.128692181041939920e0 * wr_6_0 -
      0.288345093465420577e0 * wr_8_0 + 0.348651513423768417e0 * wr_10_0 +
      0.593376319876823097e-1 * wr_4_4 - 0.719156308166191514e-1 * wr_6_4 -
      0.242483397016773267e0 * wr_8_4 - 0.761200291802664250e0 * wr_10_4;
  results[k++] =
      0.131200440834221806e0 * wr_2_0 + 0.244477586986049312e0 * wr_4_0 +
      0.217776541025624450e0 * wr_6_0 - 0.196608159743329676e-1 * wr_8_0 -
      0.377723543456090708e0 * wr_10_0 + 0.286362474180628692e0 * wr_4_4 +
      0.174609686441701289e0 * wr_6_4 + 0.121992154927677936e0 * wr_8_4 +
      0.749702158770164477e-1 * wr_10_4;
  results[k++] =
      -0.287538266669736561e0 * wr_8_4 + 0.674697520428370734e-1 * wr_10_4 +
      0.411558977812612493e0 * wr_6_4 - 0.173561869174697295e0 * wr_4_4 -
      0.206498745130908731e0 * wr_10_8 + 0.175240024162182029e0 * wr_8_8;
  results[k++] =
      wr_0_0 + 0.390920975087375821e0 * wr_2_0 +
      0.512820512820512821e-1 * wr_4_0 - 0.163147116536832095e0 * wr_6_0 -
      0.221825921315895266e0 * wr_8_0 - 0.114591676106302263e0 * wr_10_0 -
      0.546071812190072620e0 * wr_4_4 - 0.332967607484131012e0 * wr_6_4 -
      0.232629911809986498e0 * wr_8_4 - 0.142962592292802234e0 * wr_10_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] =
      -0.203519331620353122e0 * wr_7_0 + 0.237659377174355642e0 * wr_5_0 -
      0.170434372125229937e0 * wr_5_4 + 0.624926031125843104e0 * wr_7_4;
  results[k++] =
      -0.405998971470575075e0 * wr_5_4 + 0.811997942941150151e-1 * wr_7_4;
  results[k++] =
      0.392232270276368064e0 * wr_7_0 - 0.458028612414344471e0 * wr_5_0 -
      0.164234670435407678e0 * wr_5_4 + 0.602193791596494819e0 * wr_7_4;
  results[k++] =
      0.994490316197693808e0 * wr_5_4 - 0.198898063239538762e0 * wr_7_4;
  results[k++] =
      0.357506155034530789e0 * wr_7_0 - 0.417477246338441939e0 * wr_5_0 +
      0.831634580949746732e-1 * wr_5_4 - 0.304932679681573801e0 * wr_7_4;
  results[k++] =
      -0.400871410767362210e0 * wr_4_0 + 0.333545175320610366e0 * wr_6_0 +
      0.958265957626781617e-1 * wr_4_4 - 0.534862186740501905e0 * wr_6_4;
  results[k++] =
      0.436090604519107388e-1 * wr_4_0 + 0.283022466361511360e0 * wr_6_0 -
      0.279226219376316968e0 * wr_8_0 - 0.729719153496434866e-1 * wr_4_4 +
      0.151281871697789760e0 * wr_6_4 + 0.742522769113701893e0 * wr_8_4;
  results[k++] =
      0.110624419717177444e1 * wr_4_4 - 0.509647191437625545e-1 * wr_6_4 -
      0.227404909554440969e-1 * wr_8_4 - 0.970142500145331896e0 * wr_8_8;
  results[k++] =
      0.446990156267674201e0 * wr_4_4 - 0.360374985078223584e0 * wr_6_4 +
      0.803997768105293607e-1 * wr_8_4 - 0.685994340570035352e0 * wr_8_8;
  results[k++] =
      0.416003923020390371e0 * wr_4_0 - 0.128564869306645005e0 * wr_6_0 -
      0.190260597661797632e0 * wr_8_0 + 0.497219790389313328e-1 * wr_4_4 -
      0.103081219911607425e0 * wr_6_4 - 0.505943983858731355e0 * wr_8_4;
  results[k++] =
      -0.336181937106199468e0 * wr_4_0 - 0.181818181818181818e0 * wr_6_0 +
      0.403603676397787480e0 * wr_8_0 - 0.100453567292696344e0 * wr_4_4 +
      0.437336577674876266e0 * wr_6_4 + 0.357756421887046085e0 * wr_8_4;
  results[k++] = -0.457737708217063459e0 * wr_6_4 +
                 0.120688965239296890e0 * wr_8_4 -
                 0.396059017190669721e0 * wr_8_8;
  results[k++] =
      0.821173352177038390e0 * wr_4_4 + 0.470791909069199750e0 * wr_6_4 -
      0.150986128608243842e0 * wr_8_4 - 0.280056016805601960e0 * wr_8_8;
  results[k++] =
      0.429668924423659729e0 * wr_6_0 - 0.375734574651089695e0 * wr_8_0 -
      0.191389750587738188e0 * wr_6_4 + 0.555088505825620468e0 * wr_8_4;
  results[k++] =
      -0.574534151229195224e0 * wr_4_0 + 0.220961316454618172e0 * wr_6_0 +
      0.224809932483254958e0 * wr_8_0 + 0.686699654588787212e-1 * wr_4_4 -
      0.393695972335103103e0 * wr_6_4 + 0.301928343560003556e-1 * wr_8_4;
  results[k++] =
      0.479132978813390809e0 * wr_3_0 - 0.452778827405973221e0 * wr_5_0 +
      0.604264866984415872e-1 * wr_7_0 + 0.324704524929899286e0 * wr_5_4 -
      0.185545442817085306e0 * wr_7_4;
  results[k++] =
      -0.283458892937419802e0 * wr_3_0 - 0.191333976216573467e0 * wr_5_0 +
      0.357487916320388141e0 * wr_7_0 - 0.411638116161159094e0 * wr_5_4 -
      0.274425410774106063e0 * wr_7_4;
  results[k++] =
      -0.824133777606698748e-2 * wr_3_0 + 0.101244423685240089e0 * wr_5_0 +
      0.286131667551251770e0 * wr_7_0 - 0.326267811418244250e0 * wr_9_0 +
      0.121010231724171657e0 * wr_5_4 + 0.274561029962406280e0 * wr_7_4 +
      0.777216439430609397e0 * wr_9_4;
  results[k++] =
      -0.331496772065897936e0 * wr_5_4 + 0.662993544131795872e-1 * wr_7_4;
  results[k++] =
      0.392232270276368064e0 * wr_5_4 + 0.115362432434225901e-1 * wr_7_4 -
      0.286273096113110361e-1 * wr_9_4 - 0.624574158332672250e0 * wr_9_8;
  results[k++] =
      0.444749589996660708e0 * wr_5_4 - 0.327021757350485816e0 * wr_7_4 +
      0.757407419363781292e-1 * wr_9_4 - 0.550822632755243596e0 * wr_9_8;
  results[k++] =
      -0.373978796003382871e0 * wr_5_0 + 0.320256307610174266e0 * wr_7_0 -
      0.134097046880302260e0 * wr_5_4 + 0.491689171894441618e0 * wr_7_4;
  results[k++] =
      0.588318389935849068e0 * wr_3_0 - 0.147499226289569926e0 * wr_5_0 +
      0.253297041024422953e-1 * wr_7_0 - 0.267371668459099002e0 * wr_9_0 -
      0.264442942673972546e0 * wr_5_4 - 0.777773360805801606e-2 * wr_7_4 -
      0.636917430687072115e0 * wr_9_4;
  results[k++] =
      -0.222363450213740244e0 * wr_3_0 - 0.278747336669030256e0 * wr_5_0 -
      0.516981326178200209e-1 * wr_7_0 + 0.392999412426215684e0 * wr_9_0 +
      0.366483470718850172e0 * wr_5_4 + 0.291030991453204548e0 * wr_7_4 +
      0.187236125253356839e0 * wr_9_4;
  results[k++] =
      -0.135332990490191692e0 * wr_5_4 + 0.171952505564008267e0 * wr_7_4 -
      0.460943476452575738e-1 * wr_9_4 + 0.100565993714810302e1 * wr_9_8;
  results[k++] =
      0.160128153805087133e0 * wr_5_4 - 0.423868642425230647e0 * wr_7_4 +
      0.124661868900239416e0 * wr_9_4 + 0.339975109876292733e0 * wr_9_8;
  results[k++] = 0.181568259800640725e0 * wr_5_4 +
                 0.352456033730655526e0 * wr_7_4 -
                 0.123684113655963956e0 * wr_9_4;
  results[k++] =
      0.568114573750766458e-1 * wr_5_0 - 0.309073291672565582e0 * wr_7_0 +
      0.231391788743712627e0 * wr_9_0 - 0.113171131987788401e-1 * wr_5_4 +
      0.263622166277436512e0 * wr_7_4 - 0.551208227925152012e0 * wr_9_4;
  results[k++] =
      0.336101114425116526e0 * wr_5_0 + 0.152375187696676346e0 * wr_7_0 -
      0.391123509531981593e0 * wr_9_0 - 0.147296478116359709e0 * wr_5_4 +
      0.389902442072716877e0 * wr_7_4 + 0.372684783257846518e0 * wr_9_4;
  results[k++] =
      -0.675588659496011123e0 * wr_3_0 + 0.423447601971677156e-1 * wr_5_0 +
      0.246076650301858991e0 * wr_7_0 + 0.159202390481911414e0 * wr_9_0 -
      0.409954517628779138e0 * wr_5_4 + 0.401916193753705037e-1 * wr_7_4 +
      0.113772836990569639e0 * wr_9_4;
  results[k++] =
      0.658698943008610845e0 * wr_2_0 - 0.188832770932629960e0 * wr_4_0 -
      0.326806194281060772e0 * wr_6_0 + 0.659500907407028585e-1 * wr_8_0 +
      0.315977662277994384e0 * wr_4_4 - 0.174685258696458690e0 * wr_6_4 -
      0.175375522074772688e0 * wr_8_4;
  results[k++] =
      -0.170075335762451881e0 * wr_2_0 - 0.263284623734499299e0 * wr_4_0 -
      0.843809965258649291e-1 * wr_6_0 + 0.357593044367454197e0 * wr_8_0 -
      0.314685314685314685e0 * wr_4_4 - 0.180414159402485027e0 * wr_6_4 -
      0.105657451873248463e0 * wr_8_4;
  results[k++] =
      -0.171292989005816650e-1 * wr_2_0 + 0.127674255828710050e-1 * wr_4_0 +
      0.136476107221970047e0 * wr_6_0 + 0.279276714733438956e0 * wr_8_0 -
      0.358653976604271491e0 * wr_10_0 + 0.106819946269366900e0 * wr_4_4 +
      0.170215611568412224e0 * wr_6_4 + 0.305799960597040921e0 * wr_8_4 +
      0.783038366781819887e0 * wr_10_4;
  results[k++] =
      0.387104830569381877e0 * wr_4_4 - 0.312093891966179631e0 * wr_6_4 +
      0.696282491765174364e-1 * wr_8_4 - 0.594088525786004583e0 * wr_8_8;
  results[k++] =
      -0.419790157368864742e0 * wr_4_4 + 0.213306078712600668e0 * wr_6_4 +
      0.425793236030893137e-1 * wr_8_4 - 0.310833446390368626e-1 * wr_10_4 +
      0.121099735081163754e0 * wr_8_8 - 0.443958962118825686e0 * wr_10_8;
  results[k++] =
      -0.183211444965737788e0 * wr_4_4 + 0.434440556397644938e0 * wr_6_4 -
      0.303524625368496951e0 * wr_8_4 + 0.712208898303931168e-1 * wr_10_4 +
      0.369965801765688070e0 * wr_8_8 - 0.435959046292189514e0 * wr_10_8;
  results[k++] =
      -0.291142097827431151e0 * wr_4_0 - 0.157459164324443390e0 * wr_6_0 +
      0.349531036821277811e0 * wr_8_0 - 0.869953411762446308e-1 * wr_4_4 +
      0.378744586270589234e0 * wr_6_4 + 0.309826149721205069e0 * wr_8_4;
  results[k++] =
      0.705982067923018881e0 * wr_2_0 - 0.131533410441164100e0 * wr_6_0 +
      0.842031698549687320e-1 * wr_8_0 - 0.316754615512646809e0 * wr_10_0 -
      0.283022466361511360e0 * wr_4_4 + 0.735033636756445288e-1 * wr_6_4 -
      0.708105361552190422e-1 * wr_8_4 - 0.691560760457694795e0 * wr_10_4;
  results[k++] =
      -0.132049643491375073e0 * wr_2_0 - 0.246059982709439441e0 * wr_4_0 -
      0.219186112640847024e0 * wr_6_0 + 0.197880717751598961e-1 * wr_8_0 +
      0.380168381558255021e0 * wr_10_0 + 0.288215972327715282e0 * wr_4_4 +
      0.175739858023047951e0 * wr_6_4 + 0.122781756406588636e0 * wr_8_4 +
      0.754554650585383314e-1 * wr_10_4;
  results[k++] =
      -0.632139541241013967e-1 * wr_4_4 - 0.179875479330926663e0 * wr_6_4 +
      0.206459720516531933e0 * wr_8_4 - 0.573382637072821490e-1 * wr_10_4 +
      0.382950986899473116e0 * wr_8_8 + 0.818954212964942968e0 * wr_10_8;
  results[k++] =
      0.342757228198790117e0 * wr_4_4 + 0.208996420751926620e0 * wr_6_4 -
      0.396330942397569196e0 * wr_8_4 + 0.120552361952465864e0 * wr_10_4 +
      0.533938606083127460e0 * wr_8_8 + 0.453113718302803765e0 * wr_10_8;
  results[k++] =
      -0.598366073605412594e0 * wr_4_4 + 0.532078843372524040e-1 * wr_6_4 +
      0.297392182608896038e0 * wr_8_4 - 0.106611290568101428e0 * wr_10_4 +
      0.362490974642243012e0 * wr_8_8 + 0.988775196450236037e-1 * wr_10_8;
  results[k++] =
      0.442276595827745362e-1 * wr_4_0 - 0.844226970455963950e-1 * wr_6_0 -
      0.307407019821415683e0 * wr_8_0 + 0.314054604406582261e0 * wr_10_0 -
      0.528621640572345772e-2 * wr_4_4 + 0.150419432386683024e0 * wr_6_4 -
      0.412859393124503363e-1 * wr_8_4 - 0.685665907968387751e0 * wr_10_4;
  results[k++] =
      0.239810184608143310e0 * wr_4_0 + 0.261574159759607147e0 * wr_6_0 +
      0.216469503322835678e-1 * wr_8_0 - 0.382274593695170484e0 * wr_10_0 -
      0.859883980360246020e-1 * wr_4_4 + 0.332066015250369669e0 * wr_6_4 +
      0.326195500994886496e0 * wr_8_4 + 0.227620512224893128e0 * wr_10_4;
  results[k++] =
      -0.752241782098569426e0 * wr_2_0 - 0.119613422953812312e0 * wr_4_0 +
      0.149835423367858956e0 * wr_6_0 + 0.228457815853350248e0 * wr_8_0 +
      0.121920303939434204e0 * wr_10_0 - 0.350265193678288735e0 * wr_4_4 +
      0.129034537624585384e0 * wr_6_4 + 0.174084285581681305e0 * wr_8_4 +
      0.131182035873632444e0 * wr_10_4;
  results[k++] =
      0.790438731610333015e0 * wr_1_0 + 0.722385106518650758e-1 * wr_3_0 -
      0.258730758517698984e0 * wr_5_0 - 0.255923943663987899e0 * wr_7_0 +
      0.663233641092069281e-1 * wr_9_0 - 0.309242404695142177e0 * wr_5_4 -
      0.245574850787318788e0 * wr_7_4 - 0.157991708345199141e0 * wr_9_4;
  results[k++] =
      -0.778498944161522970e-1 * wr_1_0 - 0.210392814926814648e0 * wr_3_0 -
      0.229340305384593815e0 * wr_5_0 - 0.220550876323961062e-1 * wr_7_0 +
      0.352736273014063313e0 * wr_9_0;
  results[k++] =
      0.148539815810610557e0 * wr_9_4 + 0.119717253894325366e0 * wr_5_4 -
      0.220531783489546727e0 * wr_7_4 - 0.349550433900660744e-1 * wr_11_4 +
      0.367847414265512852e0 * wr_11_8 - 0.462965168068275716e0 * wr_9_8;
  results[k++] =
      0.114195326003877767e-1 * wr_1_0 + 0.174436241807642955e-1 * wr_3_0 -
      0.321569707927014230e-1 * wr_5_0 - 0.158822030934909282e0 * wr_7_0 -
      0.270257818008880411e0 * wr_9_0 + 0.382386973690600092e0 * wr_11_0 -
      0.807133561100311950e-1 * wr_5_4 - 0.160577097945219956e0 * wr_7_4 -
      0.300436570169486849e0 * wr_9_4 - 0.777700619717313828e0 * wr_11_4;
  results[k++] =
      0.397796126479077523e0 * wr_5_4 - 0.292497151822851120e0 * wr_7_4 +
      0.677445790544042196e-1 * wr_9_4 - 0.492670740154450786e0 * wr_9_8;
  results[k++] =
      -0.338780791673652718e0 * wr_5_4 + 0.127361199877313052e0 * wr_7_4 +
      0.600491512392988733e-1 * wr_9_4 - 0.321159787062596576e-1 * wr_11_4 +
      0.187159686742209097e0 * wr_9_8 - 0.337970678275892553e0 * wr_11_8;
  results[k++] =
      0.879873931979574467e-1 * wr_7_0 - 0.212199736872300795e-1 * wr_9_0 -
      0.204515733930916284e0 * wr_5_0 + 0.223319580504692685e-2 * wr_11_0 -
      0.181568259800640725e0 * wr_1_0 + 0.277350098112614561e0 * wr_3_0;
  results[k++] =
      0.230724864868451802e0 * wr_5_4 - 0.425019487915569110e0 * wr_7_4 +
      0.286273096113110361e0 * wr_9_4 - 0.673670452695386104e-1 * wr_11_4 -
      0.446124398809051608e0 * wr_9_8 + 0.354466637797823726e0 * wr_11_8;
  results[k++] =
      -0.198887916155725331e0 * wr_3_0 - 0.249319197335588581e0 * wr_5_0 -
      0.462402155372978887e-1 * wr_7_0 + 0.351509360520997529e0 * wr_9_0 +
      0.327792781262961079e0 * wr_5_4 + 0.260306032179410269e0 * wr_7_4 +
      0.167469081564068369e0 * wr_9_4;
  results[k++] =
      0.807886534533564731e0 * wr_1_0 + 0.176295295115981697e0 * wr_3_0 -
      0.909991139004425707e-1 * wr_5_0 - 0.917226719285140130e-1 * wr_7_0 +
      0.109255235699968545e0 * wr_9_0 - 0.351329328004452249e0 * wr_11_0 +
      0.228405963151564932e0 * wr_5_4 + 0.927362557156729800e-1 * wr_7_4 -
      0.121455388519709170e0 * wr_9_4 - 0.714535418078878195e0 * wr_11_4;
  results[k++] =
      -0.286273096113110361e0 * wr_9_4 - 0.230724864868451802e0 * wr_5_4 +
      0.425019487915569110e0 * wr_7_4 + 0.673670452695386104e-1 * wr_11_4 +
      0.354466637797823726e0 * wr_11_8 - 0.446124398809051608e0 * wr_9_8;
  results[k++] =
      0.605227532668802417e-1 * wr_1_0 + 0.176495516980754720e0 * wr_3_0 +
      0.241700412827446517e0 * wr_5_0 + 0.173308501753552547e0 * wr_7_0 -
      0.636599210616902385e-1 * wr_9_0 - 0.368477307832742930e0 * wr_11_0;
  results[k++] =
      -0.382116679031129482e-1 * wr_5_4 - 0.207398855395185410e0 * wr_7_4 +
      0.221252868697236355e0 * wr_9_4 - 0.621244421177216480e-1 * wr_11_4 +
      0.653763039017879260e0 * wr_11_8;
  results[k++] =
      0.276613358085525682e0 * wr_5_4 + 0.233977464546027363e0 * wr_7_4 -
      0.375896104504495802e0 * wr_9_4 + 0.115379381949958124e0 * wr_11_4 +
      0.254692073854196640e0 * wr_9_8 + 0.441523045225745219e0 * wr_11_8;
  results[k++] =
      -0.215524217132627142e0 * wr_7_0 + 0.519781078889990151e-1 * wr_9_0 +
      0.500959192501553017e0 * wr_5_0 - 0.547019021808886917e-2 * wr_11_0 +
      0.444749589996660708e0 * wr_1_0 - 0.679366220486757450e0 * wr_3_0;
  results[k++] =
      0.489803764580266524e0 * wr_5_4 - 0.264906471413008760e0 * wr_9_4 +
      0.950085709514409718e-1 * wr_11_4 - 0.267123300617087148e0 * wr_9_8 -
      0.131554908097668060e0 * wr_11_8;
  results[k++] =
      0.302132433492207936e-1 * wr_3_0 - 0.891160115687476798e-2 * wr_5_0 -
      0.144801083618526539e0 * wr_7_0 - 0.284789893838415540e0 * wr_9_0 +
      0.365276022176973855e0 * wr_11_0 + 0.862763453271610401e-1 * wr_5_4 -
      0.236503139602963378e-1 * wr_7_4 - 0.203523038003133051e0 * wr_9_4 -
      0.742900277363425860e0 * wr_11_4;
  results[k++] =
      0.160687067036028773e0 * wr_3_0 + 0.248827639545113484e0 * wr_5_0 +
      0.191163211839547567e0 * wr_7_0 - 0.495862832172478455e-1 * wr_9_0 -
      0.370037242932405233e0 * wr_11_0 + 0.300710423728326494e0 * wr_5_4 +
      0.254360320822832561e0 * wr_7_4 + 0.195437549129602293e0 * wr_9_4 +
      0.125430612157771478e0 * wr_11_4;
  results[k++] =
      -0.260928030753605745e0 * wr_9_4 - 0.210297738255606346e0 * wr_5_4 +
      0.387390570470853797e0 * wr_7_4 + 0.614027329097123244e-1 * wr_11_4 -
      0.179491159207821651e0 * wr_11_8 + 0.225903870645230098e0 * wr_9_8;
  results[k++] =
      0.827465960308426368e0 * wr_1_0 + 0.268115937240291104e0 * wr_3_0 -
      0.169462746768966316e-1 * wr_5_0 - 0.182266970929038692e0 * wr_7_0 -
      0.208455936398913267e0 * wr_9_0 - 0.983815708187048956e-1 * wr_11_0 -
      0.308771226853545486e0 * wr_5_4 - 0.261178669331006520e0 * wr_7_4 -
      0.200676421754225048e0 * wr_9_4 - 0.128792888256962962e0 * wr_11_4;
  results[k++] =
      -0.266968008878452518e0 * wr_6_0 - 0.212452995063110960e0 * wr_8_0 +
      0.328373619073395690e0 * wr_2_0 + 0.654809577750298641e-1 * wr_10_0 +
      wr_0_0 - 0.652680652680652681e-1 * wr_4_0 -
      0.546071812190072620e0 * wr_4_4 - 0.332967607484131012e0 * wr_6_4 -
      0.232629911809986498e0 * wr_8_4 - 0.142962592292802234e0 * wr_10_4;
  results[k++] =
      -0.167248402001418154e0 * wr_4_4 + 0.396588154390142404e0 * wr_6_4 -
      0.277078806787717623e0 * wr_8_4 + 0.650154798761609907e-1 * wr_10_4 +
      0.337731025220919950e0 * wr_8_8 - 0.397974339671118575e0 * wr_10_8;
  results[k++] =
      -0.120544280751235613e0 * wr_2_0 - 0.224621005048818540e0 * wr_4_0 -
      0.200088630308766919e0 * wr_6_0 + 0.180639554679772846e-1 * wr_8_0 +
      0.347044663716145446e0 * wr_10_0 + 0.263103982461957331e0 * wr_4_4 +
      0.160427807486631016e0 * wr_6_4 + 0.112083896056655070e0 * wr_8_4 +
      0.688811004993405228e-1 * wr_10_4;
  results[k++] =
      0.722952785645914100e-1 * wr_4_4 - 0.170427827418941270e-1 * wr_6_4 -
      0.226233898389705448e0 * wr_8_4 + 0.228495947199992250e0 * wr_10_4 -
      0.642282337128488035e-1 * wr_12_4 - 0.275756227366096749e0 * wr_8_8 -
      0.211920448459850738e0 * wr_10_8 + 0.534347583486514453e0 * wr_12_8;
  results[k++] =
      0.183119907890343257e-1 * wr_2_0 + 0.144518316026932104e-1 * wr_4_0 -
      0.479931235625222438e-1 * wr_6_0 - 0.173793748862835113e0 * wr_8_0 -
      0.261307176595489884e0 * wr_10_0 + 0.400553843375241268e0 * wr_12_0 +
      0.423194443426135255e-1 * wr_4_4 - 0.413304835989675372e-1 * wr_6_4 -
      0.132430402944803053e0 * wr_8_4 - 0.281157496385636387e0 * wr_10_4 -
      0.768057965807101596e0 * wr_12_4;
  results[k++] =
      -0.167248402001418154e0 * wr_4_4 + 0.396588154390142404e0 * wr_6_4 -
      0.277078806787717623e0 * wr_8_4 + 0.650154798761609907e-1 * wr_10_4 +
      0.337731025220919950e0 * wr_8_8 - 0.397974339671118575e0 * wr_10_8;
  results[k++] =
      -0.111626974472569328e0 * wr_6_0 + 0.911788064046364564e-2 * wr_8_0 -
      0.830539534499921890e0 * wr_2_0 + 0.343673349813044940e-2 * wr_10_0 +
      wr_0_0 + 0.403361344537815126e0 * wr_4_0 -
      0.761494529161779128e-3 * wr_12_0 - 0.125222583204865071e1 * wr_12_12;
  results[k++] =
      0.151684322640071586e0 * wr_4_4 - 0.281592984819155916e0 * wr_6_4 +
      0.762856625858484754e-1 * wr_8_4 + 0.708222863058351890e-1 * wr_10_4 -
      0.324864668847943795e-1 * wr_12_4 + 0.464922513083340078e-1 * wr_8_8 +
      0.216759552342382456e0 * wr_10_8 - 0.270271562402188330e0 * wr_12_8;
  results[k++] =
      -0.156492159287190318e0 * wr_2_0 + 0.308759211275190517e0 * wr_4_0 -
      0.273429128988478230e0 * wr_6_0 + 0.134004930628422086e0 * wr_8_0 -
      0.356156453753264425e-1 * wr_10_0 + 0.404142491646244796e-2 * wr_12_0 -
      0.511219055208550102e0 * wr_12_12;
  results[k++] =
      -0.432046926300995947e-1 * wr_4_4 + 0.256662271098857252e0 * wr_6_4 -
      0.417190465681651786e0 * wr_8_4 + 0.273104893210391773e0 * wr_10_4 -
      0.641556316277977511e-1 * wr_12_4 + 0.141253599492890863e0 * wr_8_8 -
      0.464371201987345473e0 * wr_10_8 + 0.296524205301898075e0 * wr_12_8;
  results[k++] =
      -0.120544280751235613e0 * wr_2_0 - 0.224621005048818540e0 * wr_4_0 -
      0.200088630308766919e0 * wr_6_0 + 0.180639554679772846e-1 * wr_8_0 +
      0.347044663716145446e0 * wr_10_0 + 0.263103982461957331e0 * wr_4_4 +
      0.160427807486631016e0 * wr_6_4 + 0.112083896056655070e0 * wr_8_4 +
      0.688811004993405228e-1 * wr_10_4;
  results[k++] =
      0.151684322640071586e0 * wr_4_4 - 0.281592984819155916e0 * wr_6_4 +
      0.762856625858484754e-1 * wr_8_4 + 0.708222863058351890e-1 * wr_10_4 -
      0.324864668847943795e-1 * wr_12_4 + 0.464922513083340078e-1 * wr_8_8 +
      0.216759552342382456e0 * wr_10_8 - 0.270271562402188330e0 * wr_12_8;
  results[k++] =
      -0.111626974472569328e0 * wr_6_0 - 0.588517750429926219e-1 * wr_8_0 +
      0.377517970227237222e0 * wr_2_0 + 0.120285672434565729e0 * wr_10_0 +
      wr_0_0 + 0.448179271708683473e-1 * wr_4_0 -
      0.376939791935080668e0 * wr_12_0 + 0.477239230821576071e0 * wr_4_4 +
      0.227819941962826482e0 * wr_6_4 + 0.617181398679556015e-1 * wr_8_4 -
      0.150066323586854519e0 * wr_10_4 - 0.722778259686286288e0 * wr_12_4;
  results[k++] =
      -0.208996420751926620e0 * wr_4_4 + 0.229919709318073865e0 * wr_6_4 +
      0.249147930700605726e0 * wr_8_4 - 0.360301424953701114e0 * wr_10_4 +
      0.110521204741068358e0 * wr_12_4 - 0.379607642328873144e0 * wr_8_8 +
      0.408423307779184025e-1 * wr_10_8 + 0.404572312142865754e0 * wr_12_8;
  results[k++] =
      0.970523172123939212e-1 * wr_2_0 + 0.198447400807456446e0 * wr_4_0 +
      0.231236655293484145e0 * wr_6_0 + 0.138510550034513539e0 * wr_8_0 -
      0.927691195483916825e-1 * wr_10_0 - 0.358413102816078086e0 * wr_12_0 +
      0.244680221763430283e0 * wr_4_4 + 0.153814815888313701e0 * wr_6_4 +
      0.114591381497000040e0 * wr_8_4 + 0.841724715156500802e-1 * wr_10_4 +
      0.528656553574155939e-1 * wr_12_4;
  results[k++] =
      0.722952785645914100e-1 * wr_4_4 - 0.170427827418941270e-1 * wr_6_4 -
      0.226233898389705448e0 * wr_8_4 + 0.228495947199992250e0 * wr_10_4 -
      0.642282337128488035e-1 * wr_12_4 - 0.275756227366096749e0 * wr_8_8 -
      0.211920448459850738e0 * wr_10_8 + 0.534347583486514453e0 * wr_12_8;
  results[k++] =
      -0.156492159287190318e0 * wr_2_0 + 0.308759211275190517e0 * wr_4_0 -
      0.273429128988478230e0 * wr_6_0 + 0.134004930628422086e0 * wr_8_0 -
      0.356156453753264425e-1 * wr_10_0 + 0.404142491646244796e-2 * wr_12_0 -
      0.511219055208550102e0 * wr_12_12;
  results[k++] =
      -0.208996420751926620e0 * wr_4_4 + 0.229919709318073865e0 * wr_6_4 +
      0.249147930700605726e0 * wr_8_4 - 0.360301424953701114e0 * wr_10_4 +
      0.110521204741068358e0 * wr_12_4 - 0.379607642328873144e0 * wr_8_8 +
      0.408423307779184025e-1 * wr_10_8 + 0.404572312142865754e0 * wr_12_8;
  results[k++] =
      0.446507897890277313e0 * wr_6_0 - 0.264418538573445723e0 * wr_8_0 -
      0.511101251999951930e0 * wr_2_0 + 0.761368651893514943e-1 * wr_10_0 +
      wr_0_0 - 0.226890756302521008e0 * wr_4_0 -
      0.901101859508105302e-2 * wr_12_0 - 0.208704305341441785e0 * wr_12_12;
  results[k++] =
      -0.264573628593822316e0 * wr_4_4 + 0.419127733610724118e0 * wr_6_4 +
      0.283862157353928758e-1 * wr_8_4 - 0.243260958044636316e0 * wr_10_4 +
      0.866331814026264803e-1 * wr_12_4 + 0.259499432316779473e0 * wr_8_8 -
      0.165450544889003361e0 * wr_10_8 - 0.139679422956525502e0 * wr_12_8;
  results[k++] =
      0.183119907890343257e-1 * wr_2_0 + 0.144518316026932104e-1 * wr_4_0 -
      0.479931235625222438e-1 * wr_6_0 - 0.173793748862835113e0 * wr_8_0 -
      0.261307176595489884e0 * wr_10_0 + 0.400553843375241268e0 * wr_12_0 +
      0.423194443426135255e-1 * wr_4_4 - 0.413304835989675372e-1 * wr_6_4 -
      0.132430402944803053e0 * wr_8_4 - 0.281157496385636387e0 * wr_10_4 -
      0.768057965807101596e0 * wr_12_4;
  results[k++] =
      -0.432046926300995947e-1 * wr_4_4 + 0.256662271098857252e0 * wr_6_4 -
      0.417190465681651786e0 * wr_8_4 + 0.273104893210391773e0 * wr_10_4 -
      0.641556316277977511e-1 * wr_12_4 + 0.141253599492890863e0 * wr_8_8 -
      0.464371201987345473e0 * wr_10_8 + 0.296524205301898075e0 * wr_12_8;
  results[k++] =
      0.970523172123939212e-1 * wr_2_0 + 0.198447400807456446e0 * wr_4_0 +
      0.231236655293484145e0 * wr_6_0 + 0.138510550034513539e0 * wr_8_0 -
      0.927691195483916825e-1 * wr_10_0 - 0.358413102816078086e0 * wr_12_0 +
      0.244680221763430283e0 * wr_4_4 + 0.153814815888313701e0 * wr_6_4 +
      0.114591381497000040e0 * wr_8_4 + 0.841724715156500802e-1 * wr_10_4 +
      0.528656553574155939e-1 * wr_12_4;
  results[k++] =
      -0.264573628593822316e0 * wr_4_4 + 0.419127733610724118e0 * wr_6_4 +
      0.283862157353928758e-1 * wr_8_4 - 0.243260958044636316e0 * wr_10_4 +
      0.866331814026264803e-1 * wr_12_4 + 0.259499432316779473e0 * wr_8_8 -
      0.165450544889003361e0 * wr_10_8 - 0.139679422956525502e0 * wr_12_8;
  results[k++] =
      -0.780608213094890403e-1 * wr_6_0 - 0.192878244317500196e0 * wr_8_0 +
      0.432470290153805481e0 * wr_2_0 - 0.191318276629652473e0 * wr_10_0 +
      wr_0_0 + 0.132749603337838632e0 * wr_4_0 -
      0.823683249043324424e-1 * wr_12_0 - 0.557543909084822045e0 * wr_4_4 -
      0.350492218404348433e0 * wr_6_4 - 0.261115207133658314e0 * wr_8_4 -
      0.191800744939411693e0 * wr_10_4 - 0.120463043281047715e0 * wr_12_4;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 2)
void BoxMatrix::setup___oa_2_B2(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 1));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 1));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 2));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 2));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 2)
void BoxMatrix::evaluate___oa_2_B2(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 1)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] =
      -0.447213595499957940e0 * wr_1_0 + 0.292770021884559954e0 * wr_3_0;
  results[k++] =
      0.632455532033675868e0 * wr_1_0 - 0.414039335605412531e0 * wr_3_0;
  results[k++] = wr_0_0 - 0.319438282499969957e0 * wr_2_0 -
                 0.952380952380952381e-1 * wr_4_0 +
                 0.796819072889595762e0 * wr_4_4;
  results[k++] = -0.451753951452625620e0 * wr_2_0 +
                 0.336717514850736916e0 * wr_4_0 +
                 0.563436169819011052e0 * wr_4_4;
  results[k++] = -0.451753951452625620e0 * wr_2_0 +
                 0.336717514850736916e0 * wr_4_0 +
                 0.563436169819011052e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.333333333333333333e0 * wr_4_0 +
                 0.398409536444797881e0 * wr_4_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = 0.156492159287190318e0 * wr_2_0 -
                 0.116642368703960862e0 * wr_4_0 -
                 0.975900072948533181e0 * wr_4_4;
  results[k++] = -0.462910049886275731e0 * wr_2_0 +
                 0.345032779671177109e0 * wr_4_0 -
                 0.577350269189625763e0 * wr_4_4;
  results[k++] = 0.524890659167823879e0 * wr_2_0 -
                 0.391230398217975796e0 * wr_4_0 -
                 0.218217890235992381e0 * wr_4_4;
  results[k++] =
      -0.365148371670110743e0 * wr_1_0 + 0.239045721866878728e0 * wr_3_0;
  results[k++] =
      -0.368855556781658750e-1 * wr_1_0 + 0.225374467927604421e0 * wr_3_0 -
      0.160523776776962402e0 * wr_5_0 - 0.805822964025380299e0 * wr_5_4;
  results[k++] =
      0.617213399848367641e0 * wr_1_0 - 0.235702260395515842e0 * wr_3_0 -
      0.134303827337563383e0 * wr_5_0 + 0.674199862463242087e0 * wr_5_4;
  results[k++] = -0.218217890235992381e0 * wr_1_0 -
                 0.333333333333333333e0 * wr_3_0 +
                 0.379868588198793162e0 * wr_5_0;
  results[k++] = -0.445435403187373976e0 * wr_3_0 +
                 0.355334527259350724e0 * wr_5_0 +
                 0.594588390010563136e0 * wr_5_4;
  results[k++] =
      0.742307488958090266e0 * wr_1_0 - 0.125988157669742409e0 * wr_3_0 -
      0.287153661502632022e0 * wr_5_0 + 0.240249990052149056e0 * wr_5_4;
  results[k++] = wr_0_0 - 0.511101251999951930e0 * wr_2_0 +
                 0.476190476190476190e-1 * wr_4_0 +
                 0.398409536444797881e0 * wr_4_4;
  results[k++] = -0.377964473009227227e0 * wr_2_0 +
                 0.281718084909505526e0 * wr_4_0 -
                 0.471404520791031683e0 * wr_4_4;
  results[k++] =
      -0.476190476190476190e-1 * wr_2_0 + 0.261358594772702692e0 * wr_4_0 -
      0.187931416044255237e0 * wr_6_0 + 0.145778859224958755e0 * wr_4_4 -
      0.703174971048874412e0 * wr_6_4;
  results[k++] = -0.377964473009227227e0 * wr_2_0 +
                 0.281718084909505526e0 * wr_4_0 -
                 0.471404520791031683e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.106060606060606061e0 * wr_4_0 -
                 0.189102339622237201e0 * wr_6_0 -
                 0.126766670686981144e0 * wr_4_4 +
                 0.707556165903778401e0 * wr_6_4;
  results[k++] =
      -0.281718084909505526e0 * wr_2_0 - 0.257703049779018564e0 * wr_4_0 +
      0.389136037874045427e0 * wr_6_0 + 0.431219680932051729e0 * wr_4_4 +
      0.208001961510195185e0 * wr_6_4;
  results[k++] =
      -0.476190476190476190e-1 * wr_2_0 + 0.261358594772702692e0 * wr_4_0 -
      0.187931416044255237e0 * wr_6_0 + 0.145778859224958755e0 * wr_4_4 -
      0.703174971048874412e0 * wr_6_4;
  results[k++] =
      -0.281718084909505526e0 * wr_2_0 - 0.257703049779018564e0 * wr_4_0 +
      0.389136037874045427e0 * wr_6_0 + 0.431219680932051729e0 * wr_4_4 +
      0.208001961510195185e0 * wr_6_4;
  results[k++] =
      wr_0_0 + 0.212958854999979971e0 * wr_2_0 -
      0.214285714285714286e0 * wr_4_0 - 0.231125081760512134e0 * wr_6_0 +
      0.488957158364070127e0 * wr_4_4 + 0.235852055301259467e0 * wr_6_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  results[k++] = -0.158910431540932053e0 * wr_5_0 +
                 0.199204768222398940e0 * wr_3_0 -
                 0.797724035217465642e0 * wr_5_4;
  results[k++] = 0.369274472937998197e0 * wr_5_0 -
                 0.462910049886275731e0 * wr_3_0 -
                 0.617914380653324672e0 * wr_5_4;
  results[k++] = -0.376050716545177472e0 * wr_5_0 +
                 0.471404520791031683e0 * wr_3_0 -
                 0.269679944985296835e0 * wr_5_4;
  results[k++] = -0.391230398217975797e0 * wr_2_0 +
                 0.291605921759902156e0 * wr_4_0 +
                 0.487950036474266590e0 * wr_4_4;
  results[k++] =
      0.262431940540738983e0 * wr_4_0 - 0.218356573370573363e0 * wr_6_0 -
      0.313666163337433736e0 * wr_4_4 - 0.817015485702651929e0 * wr_6_4;
  results[k++] =
      0.505076272276105375e0 * wr_2_0 - 0.184808434685165026e0 * wr_4_0 -
      0.159465094419459857e0 * wr_6_0 + 0.103081219911607425e0 * wr_4_4 +
      0.596663748467175994e0 * wr_6_4;
  results[k++] =
      -0.285714285714285714e0 * wr_2_0 - 0.261358594772702692e0 * wr_4_0 +
      0.394655973692935997e0 * wr_6_0 - 0.437336577674876266e0 * wr_4_4 -
      0.210952491314662324e0 * wr_6_4;
  results[k++] =
      -0.439132628672407230e0 * wr_4_0 + 0.365380432940227451e0 * wr_6_0 -
      0.104972776216295593e0 * wr_4_4 + 0.585912169668626903e0 * wr_6_4;
  results[k++] =
      0.654653670707977142e0 * wr_2_0 - 0.177436376899733305e0 * wr_4_0 -
      0.258362981844911413e0 * wr_6_0 - 0.296907847610082194e0 * wr_4_4 +
      0.138100822784136357e0 * wr_6_4;
  results[k++] =
      0.638876564999939914e0 * wr_1_0 - 0.487950036474266590e0 * wr_3_0 +
      0.556070674401087835e-1 * wr_5_0 + 0.279145263119541259e0 * wr_5_4;
  results[k++] = -0.188982236504613614e0 * wr_1_0 -
                 0.288675134594812882e0 * wr_3_0 +
                 0.328975847479884493e0 * wr_5_0;
  results[k++] =
      -0.238095238095238095e-1 * wr_1_0 + 0.297569850321807792e-1 * wr_3_0 +
      0.286941191135765667e0 * wr_5_0 - 0.255401703723752203e0 * wr_7_0 -
      0.240072224589368946e0 * wr_5_4 - 0.784235933658605225e0 * wr_7_4;
  results[k++] = -0.377964473009227227e0 * wr_3_0 +
                 0.301511344577763623e0 * wr_5_0 -
                 0.504524979109513018e0 * wr_5_4;
  results[k++] =
      0.731925054711399886e0 * wr_1_0 - 0.101639453522717714e0 * wr_3_0 -
      0.392036301105865804e-1 * wr_5_0 - 0.224321887165670489e0 * wr_7_0 -
      0.328001102085554515e-1 * wr_5_4 + 0.688802314379664480e0 * wr_7_4;
  results[k++] =
      -0.129099444873580563e0 * wr_1_0 - 0.299645599403746787e0 * wr_3_0 -
      0.155584583645363558e0 * wr_5_0 + 0.395666618046037236e0 * wr_7_0;
  results[k++] =
      -0.524863881081477966e-1 * wr_3_0 + 0.283425345521131256e0 * wr_5_0 -
      0.206855936472014547e0 * wr_7_0 + 0.203254848946405035e0 * wr_5_4 -
      0.635171402957515734e0 * wr_7_4;
  results[k++] =
      -0.310513659574533285e0 * wr_3_0 - 0.209595869581948492e0 * wr_5_0 +
      0.391608391608391608e0 * wr_7_0 + 0.450926963500797419e0 * wr_5_4 +
      0.300617975667198279e0 * wr_7_4;
  results[k++] =
      0.788810637746615471e0 * wr_1_0 + 0.704178790219530341e-1 * wr_3_0 -
      0.237659377174355642e0 * wr_5_0 - 0.197352079147009088e0 * wr_7_0 +
      0.284057286875383229e0 * wr_5_4 + 0.189371524583588819e0 * wr_7_4;
  results[k++] = wr_0_0 - 0.409090909090909091e0 * wr_4_0 +
                 0.630341132074124001e-1 * wr_6_0 +
                 0.488957158364070127e0 * wr_4_4 +
                 0.235852055301259467e0 * wr_6_4;
  results[k++] =
      -0.247435829652696755e0 * wr_2_0 - 0.226343182570563324e0 * wr_4_0 +
      0.341782098973365693e0 * wr_6_0 - 0.378744586270589234e0 * wr_4_4 -
      0.182690216470113725e0 * wr_6_4;
  results[k++] =
      -0.343604066372024752e-1 * wr_2_0 + 0.531915265213751693e-1 * wr_4_0 +
      0.298331874233587997e0 * wr_6_0 - 0.280951629530409793e0 * wr_8_0 +
      0.890064479815234647e-1 * wr_4_4 - 0.159465094419459857e0 * wr_6_4 -
      0.747111007024652771e0 * wr_8_4;
  results[k++] =
      -0.247435829652696755e0 * wr_2_0 - 0.226343182570563324e0 * wr_4_0 +
      0.341782098973365693e0 * wr_6_0 - 0.378744586270589234e0 * wr_4_4 -
      0.182690216470113725e0 * wr_6_4;
  results[k++] =
      wr_0_0 + 0.197470938272708701e0 * wr_2_0 -
      0.148351648351648352e0 * wr_4_0 + 0.277350098112614561e-1 * wr_6_0 -
      0.265941160879000072e0 * wr_8_0 - 0.338508801944356241e0 * wr_4_4 +
      0.283022466361511360e-1 * wr_6_4 + 0.707194931902358954e0 * wr_8_4;
  results[k++] =
      -0.186308195744719971e0 * wr_2_0 - 0.288413854927290630e0 * wr_4_0 -
      0.924347504439625511e-1 * wr_6_0 + 0.391723553614000694e0 * wr_8_0 +
      0.344720490737517136e0 * wr_4_4 + 0.197633809596147621e0 * wr_6_4 +
      0.115741939518989304e0 * wr_8_4;
  results[k++] =
      -0.343604066372024752e-1 * wr_2_0 + 0.531915265213751693e-1 * wr_4_0 +
      0.298331874233587997e0 * wr_6_0 - 0.280951629530409793e0 * wr_8_0 +
      0.890064479815234647e-1 * wr_4_4 - 0.159465094419459857e0 * wr_6_4 -
      0.747111007024652771e0 * wr_8_4;
  results[k++] =
      -0.186308195744719971e0 * wr_2_0 - 0.288413854927290630e0 * wr_4_0 -
      0.924347504439625511e-1 * wr_6_0 + 0.391723553614000694e0 * wr_8_0 +
      0.344720490737517136e0 * wr_4_4 + 0.197633809596147621e0 * wr_6_4 +
      0.115741939518989304e0 * wr_8_4;
  results[k++] =
      wr_0_0 + 0.325246251272696685e0 * wr_2_0 -
      0.629370629370629371e-1 * wr_4_0 - 0.242050994716463617e0 * wr_6_0 -
      0.161464276247964329e0 * wr_8_0 + 0.526569247468998598e0 * wr_4_4 +
      0.301890630785612117e0 * wr_6_4 + 0.176798732975589738e0 * wr_8_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] =
      -0.185281696496388395e0 * wr_6_0 + 0.222680885707561645e0 * wr_4_0 -
      0.693260628329719132e0 * wr_6_4 + 0.124205463829813314e0 * wr_4_4;
  results[k++] =
      0.383214231015951249e0 * wr_6_0 - 0.460566186471838290e0 * wr_4_0 -
      0.614509867799026984e0 * wr_6_4 + 0.110096376512636061e0 * wr_4_4;
  results[k++] =
      0.116774841624228445e1 * wr_4_4 - 0.144841364875580273e0 * wr_6_4;
  results[k++] =
      -0.365380432940227451e0 * wr_6_0 + 0.439132628672407230e0 * wr_4_0 -
      0.292956084834313451e0 * wr_6_4 + 0.524863881081477966e-1 * wr_4_4;
  results[k++] = -0.398409536444797881e0 * wr_3_0 +
                 0.317820863081864106e0 * wr_5_0 +
                 0.531816023478310428e0 * wr_5_4;
  results[k++] =
      0.256107349917732296e-1 * wr_3_0 + 0.276594815369535215e0 * wr_5_0 -
      0.254357111601023937e0 * wr_7_0 - 0.231415825566263060e0 * wr_5_4 -
      0.781028411286137828e0 * wr_7_4;
  results[k++] =
      0.449466574975494725e0 * wr_3_0 - 0.151694353412810668e0 * wr_5_0 -
      0.177140840950707035e0 * wr_7_0 + 0.108785658644084235e0 * wr_5_4 +
      0.543928293220421173e0 * wr_7_4;
  results[k++] =
      -0.317820863081864106e0 * wr_3_0 - 0.214528211931814243e0 * wr_5_0 +
      0.400823967556264373e0 * wr_7_0 - 0.461538461538461538e0 * wr_5_4 -
      0.307692307692307692e0 * wr_7_4;
  results[k++] =
      -0.384615384615384615e0 * wr_5_4 + 0.769230769230769231e-1 * wr_7_4;
  results[k++] =
      0.543928293220421173e0 * wr_5_4 - 0.108785658644084235e0 * wr_7_4;
  results[k++] =
      -0.433904672936743237e0 * wr_5_0 + 0.371573762722806118e0 * wr_7_0 -
      0.155584583645363558e0 * wr_5_4 + 0.570476806699666382e0 * wr_7_4;
  results[k++] =
      0.606060606060606061e0 * wr_3_0 - 0.204544624414734780e0 * wr_5_0 -
      0.238856661211179450e0 * wr_7_0 - 0.366716380479073968e0 * wr_5_4 +
      0.733432760958147937e-1 * wr_7_4;
  results[k++] =
      0.532397137499949928e0 * wr_2_0 - 0.467532467532467532e0 * wr_4_0 +
      0.588318389935849068e-1 * wr_6_0 - 0.260777151127504067e0 * wr_4_4 +
      0.220128584947842169e0 * wr_6_4;
  results[k++] =
      -0.251976315339484818e0 * wr_2_0 - 0.230496614925959067e0 * wr_4_0 +
      0.348053853272519330e0 * wr_6_0 + 0.385694607919935013e0 * wr_4_4 +
      0.186042610156036500e0 * wr_6_4;
  results[k++] =
      -0.173160173160173160e-1 * wr_2_0 + 0.289414380708153064e0 * wr_6_0 -
      0.297331256870325943e0 * wr_8_0 + 0.737165267307622977e-1 * wr_4_0 -
      0.168206376028798564e0 * wr_4_4 - 0.295333487840527253e0 * wr_6_4 -
      0.790667970538504641e0 * wr_8_4;
  results[k++] =
      -0.376050716545177472e0 * wr_4_0 + 0.312893109387371939e0 * wr_6_0 +
      0.898933149950989449e-1 * wr_4_4 - 0.501745206004254461e0 * wr_6_4;
  results[k++] =
      0.639602149066831305e0 * wr_2_0 - 0.134462672842327122e0 * wr_4_0 -
      0.249037002341550923e0 * wr_8_0 + 0.224999086856208258e0 * wr_4_4 +
      0.662243126750251654e0 * wr_8_4;
  results[k++] =
      -0.188025358272588736e0 * wr_2_0 - 0.291072103332411356e0 * wr_4_0 -
      0.932867016375254984e-1 * wr_6_0 + 0.395333985269252324e0 * wr_8_0 -
      0.347897705282034949e0 * wr_4_4 - 0.199455357868470865e0 * wr_6_4 -
      0.116808708056199477e0 * wr_8_4;
  results[k++] =
      0.118262479197816524e0 * wr_6_4 - 0.146686552191629587e0 * wr_4_4 -
      0.263843977142321289e-1 * wr_8_4 - 0.112559687534741105e1 * wr_8_8;
  results[k++] =
      -0.349825131140720619e0 * wr_6_4 + 0.433904672936743237e0 * wr_4_4 +
      0.780461009532142093e-1 * wr_8_4 - 0.665912091816291711e0 * wr_8_8;
  results[k++] =
      0.396664414010958819e0 * wr_6_4 - 0.492001653128331772e0 * wr_4_4 -
      0.884959602516196663e-1 * wr_8_4 - 0.251691112853816832e0 * wr_8_8;
  results[k++] =
      -0.551615830592038793e-1 * wr_4_0 + 0.298331874233587997e0 * wr_6_0 -
      0.220747708916750552e0 * wr_8_0 - 0.659307022085358997e-2 * wr_4_4 +
      0.239197641629189786e0 * wr_6_4 - 0.587015791233655747e0 * wr_8_4;
  results[k++] =
      -0.326340326340326340e0 * wr_4_0 - 0.176495516980754720e0 * wr_6_0 +
      0.391788317366384034e0 * wr_8_0 - 0.975128236053701106e-1 * wr_4_4 +
      0.424533699542267040e0 * wr_6_4 + 0.347283225487765557e0 * wr_8_4;
  results[k++] =
      0.717100579769650430e0 * wr_2_0 - 0.244599795235114268e0 * wr_6_0 -
      0.175006076705385792e0 * wr_8_0 - 0.331707446870809021e0 * wr_4_4 +
      0.136687003278128265e0 * wr_6_4 + 0.147171111767813143e0 * wr_8_4;
  results[k++] =
      0.745355992499929899e0 * wr_1_0 - 0.133077282674799979e0 * wr_3_0 -
      0.359307204997625986e0 * wr_5_0 + 0.652680652680652681e-1 * wr_7_0 +
      0.300617975667198279e0 * wr_5_4 + 0.200411983778132186e0 * wr_7_4;
  results[k++] =
      -0.115470053837925153e0 * wr_1_0 - 0.268011171770179307e0 * wr_3_0 -
      0.139159082112813980e0 * wr_5_0 + 0.353894981751353710e0 * wr_7_0;
  results[k++] =
      -0.160348564306944884e-1 * wr_1_0 - 0.968979472765805478e-2 * wr_3_0 +
      0.106284504570424221e0 * wr_5_0 + 0.290733990712039269e0 * wr_7_0 -
      0.326941223510170457e0 * wr_9_0 - 0.127034280591503147e0 * wr_5_4 -
      0.278977243651928480e0 * wr_7_4 - 0.778820603034984922e0 * wr_9_4;
  results[k++] =
      -0.275240941281590151e0 * wr_3_0 - 0.185786881361403059e0 * wr_5_0 +
      0.347123738349394590e0 * wr_7_0 - 0.399704032515894759e0 * wr_5_4 -
      0.266469355010596506e0 * wr_7_4;
  results[k++] =
      0.781606736734715526e0 * wr_1_0 + 0.623202093962553577e-1 * wr_3_0 -
      0.143909899491305438e0 * wr_5_0 + 0.632660921270807578e-1 * wr_7_0 -
      0.295120339539477126e0 * wr_9_0 - 0.172005229038445362e0 * wr_5_4 +
      0.607077278959218923e-1 * wr_7_4 + 0.703018721041995059e0 * wr_9_4;
  results[k++] =
      -0.852802865422441737e-1 * wr_1_0 - 0.230473781344852014e0 * wr_3_0 -
      0.251229717208531087e0 * wr_5_0 - 0.241601380080331085e-1 * wr_7_0 +
      0.386403227160206533e0 * wr_9_0;
  results[k++] =
      -0.320882676552610393e-1 * wr_9_4 - 0.188422287906398315e0 * wr_5_4 +
      0.138545799931175232e0 * wr_7_4 - 0.700083348217238895e0 * wr_9_8;
  results[k++] =
      0.745663957424832741e-1 * wr_9_4 + 0.437853829869467910e0 * wr_5_4 -
      0.321951345492255816e0 * wr_7_4 - 0.542282229720498833e0 * wr_9_8;
  results[k++] =
      -0.759347006199916622e-1 * wr_9_4 - 0.445888515267367341e0 * wr_5_4 +
      0.327859202402475987e0 * wr_7_4 - 0.236671368164154040e0 * wr_9_8;
  results[k++] =
      -0.403741446985752282e-1 * wr_3_0 + 0.708563363802828139e-1 * wr_5_0 +
      0.304199906576491981e0 * wr_7_0 - 0.299696121550989586e0 * wr_9_0 +
      0.127034280591503147e0 * wr_5_4 - 0.934075592584581963e-1 * wr_7_4 -
      0.713918886115402847e0 * wr_9_4;
  results[k++] =
      -0.218915746048930460e0 * wr_3_0 - 0.274425410774106063e0 * wr_5_0 -
      0.508965626342277582e-1 * wr_7_0 + 0.386906029229978798e0 * wr_9_0 +
      0.360801212294109966e0 * wr_5_4 + 0.286518609762969679e0 * wr_7_4 +
      0.184333063764526980e0 * wr_9_4;
  results[k++] =
      0.813115628181741708e0 * wr_1_0 + 0.191085328968943560e0 * wr_3_0 -
      0.119769068332541995e0 * wr_5_0 - 0.236116824352118470e0 * wr_7_0 -
      0.138157883047883738e0 * wr_9_0 + 0.300617975667198279e0 * wr_5_4 +
      0.238726039500422164e0 * wr_7_4 + 0.153585494142557525e0 * wr_9_4;
  results[k++] =
      wr_0_0 + 0.216830834181797789e0 * wr_2_0 -
      0.230769230769230769e0 * wr_4_0 - 0.295840104653455532e0 * wr_6_0 +
      0.664852902197500178e-1 * wr_8_0 + 0.526569247468998598e0 * wr_4_4 +
      0.301890630785612117e0 * wr_6_4 + 0.176798732975589738e0 * wr_8_4;
  results[k++] =
      -0.168174993036504340e0 * wr_2_0 - 0.260342803762045942e0 * wr_4_0 -
      0.834381625032991837e-1 * wr_6_0 + 0.353597465951179476e0 * wr_8_0 -
      0.311169167290727117e0 * wr_4_4 - 0.178398295468179364e0 * wr_6_4 -
      0.104476884631035743e0 * wr_8_4;
  results[k++] =
      0.145808513683914397e0 * wr_8_4 - 0.342134088026890654e-1 * wr_10_4 -
      0.208698492702029159e0 * wr_6_4 + 0.880119313149777525e-1 * wr_4_4 -
      0.488665220521763765e0 * wr_10_8 + 0.414693585654309334e0 * wr_8_8;
  results[k++] =
      -0.246690098933761360e-1 * wr_2_0 + 0.128692181041939920e0 * wr_6_0 +
      0.288345093465420577e0 * wr_8_0 - 0.348651513423768417e0 * wr_10_0 +
      0.593376319876823097e-1 * wr_4_4 - 0.719156308166191514e-1 * wr_6_4 -
      0.242483397016773267e0 * wr_8_4 - 0.761200291802664250e0 * wr_10_4;
  results[k++] =
      -0.168174993036504340e0 * wr_2_0 - 0.260342803762045942e0 * wr_4_0 -
      0.834381625032991837e-1 * wr_6_0 + 0.353597465951179476e0 * wr_8_0 -
      0.311169167290727117e0 * wr_4_4 - 0.178398295468179364e0 * wr_6_4 -
      0.104476884631035743e0 * wr_8_4;
  results[k++] =
      wr_0_0 + 0.309609412269201652e0 * wr_2_0 -
      0.512820512820512821e-1 * wr_4_0 - 0.117465923906519108e0 * wr_6_0 +
      0.934793178277688221e-1 * wr_8_0 - 0.327404788875149321e0 * wr_10_0 -
      0.429056423863628488e0 * wr_4_4 - 0.146505747293017645e0 * wr_6_4 +
      0.102357161196394059e0 * wr_8_4 + 0.714812961464011172e0 * wr_10_4;
  results[k++] =
      -0.301572678270728280e0 * wr_8_4 + 0.707628729263736804e-1 * wr_10_4 +
      0.431646697473731063e0 * wr_6_4 - 0.182033224095372801e0 * wr_4_4 -
      0.433155422058660149e0 * wr_10_8 + 0.367586575789695321e0 * wr_8_8;
  results[k++] =
      -0.131200440834221806e0 * wr_2_0 - 0.244477586986049312e0 * wr_4_0 -
      0.217776541025624450e0 * wr_6_0 + 0.196608159743329676e-1 * wr_8_0 +
      0.377723543456090708e0 * wr_10_0 + 0.286362474180628692e0 * wr_4_4 +
      0.174609686441701289e0 * wr_6_4 + 0.121992154927677936e0 * wr_8_4 +
      0.749702158770164477e-1 * wr_10_4;
  results[k++] =
      0.145808513683914397e0 * wr_8_4 - 0.342134088026890654e-1 * wr_10_4 -
      0.208698492702029159e0 * wr_6_4 + 0.880119313149777525e-1 * wr_4_4 -
      0.488665220521763765e0 * wr_10_8 + 0.414693585654309334e0 * wr_8_8;
  results[k++] =
      -0.301572678270728280e0 * wr_8_4 + 0.707628729263736804e-1 * wr_10_4 +
      0.431646697473731063e0 * wr_6_4 - 0.182033224095372801e0 * wr_4_4 -
      0.433155422058660149e0 * wr_10_8 + 0.367586575789695321e0 * wr_8_8;
  results[k++] =
      wr_0_0 - 0.860026145192226807e0 * wr_2_0 +
      0.461538461538461538e0 * wr_4_0 - 0.163147116536832095e0 * wr_6_0 +
      0.343673962602091258e-1 * wr_8_0 - 0.327404788875149322e-2 * wr_10_0;
  results[k++] =
      0.287538266669736561e0 * wr_8_4 - 0.674697520428370734e-1 * wr_10_4 -
      0.411558977812612493e0 * wr_6_4 + 0.173561869174697295e0 * wr_4_4 -
      0.206498745130908731e0 * wr_10_8 + 0.175240024162182029e0 * wr_8_8;
  results[k++] =
      -0.246690098933761360e-1 * wr_2_0 + 0.128692181041939920e0 * wr_6_0 +
      0.288345093465420577e0 * wr_8_0 - 0.348651513423768417e0 * wr_10_0 +
      0.593376319876823097e-1 * wr_4_4 - 0.719156308166191514e-1 * wr_6_4 -
      0.242483397016773267e0 * wr_8_4 - 0.761200291802664250e0 * wr_10_4;
  results[k++] =
      -0.131200440834221806e0 * wr_2_0 - 0.244477586986049312e0 * wr_4_0 -
      0.217776541025624450e0 * wr_6_0 + 0.196608159743329676e-1 * wr_8_0 +
      0.377723543456090708e0 * wr_10_0 + 0.286362474180628692e0 * wr_4_4 +
      0.174609686441701289e0 * wr_6_4 + 0.121992154927677936e0 * wr_8_4 +
      0.749702158770164477e-1 * wr_10_4;
  results[k++] =
      0.287538266669736561e0 * wr_8_4 - 0.674697520428370734e-1 * wr_10_4 -
      0.411558977812612493e0 * wr_6_4 + 0.173561869174697295e0 * wr_4_4 -
      0.206498745130908731e0 * wr_10_8 + 0.175240024162182029e0 * wr_8_8;
  results[k++] =
      wr_0_0 + 0.390920975087375821e0 * wr_2_0 +
      0.512820512820512821e-1 * wr_4_0 - 0.163147116536832095e0 * wr_6_0 -
      0.221825921315895266e0 * wr_8_0 - 0.114591676106302263e0 * wr_10_0 +
      0.546071812190072620e0 * wr_4_4 + 0.332967607484131012e0 * wr_6_4 +
      0.232629911809986498e0 * wr_8_4 + 0.142962592292802234e0 * wr_10_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] =
      -0.203519331620353122e0 * wr_7_0 + 0.237659377174355642e0 * wr_5_0 +
      0.170434372125229937e0 * wr_5_4 - 0.624926031125843104e0 * wr_7_4;
  results[k++] =
      -0.405998971470575075e0 * wr_5_4 + 0.811997942941150151e-1 * wr_7_4;
  results[k++] =
      -0.392232270276368064e0 * wr_7_0 + 0.458028612414344471e0 * wr_5_0 -
      0.164234670435407678e0 * wr_5_4 + 0.602193791596494819e0 * wr_7_4;
  results[k++] =
      0.994490316197693808e0 * wr_5_4 - 0.198898063239538762e0 * wr_7_4;
  results[k++] =
      -0.357506155034530789e0 * wr_7_0 + 0.417477246338441939e0 * wr_5_0 +
      0.831634580949746732e-1 * wr_5_4 - 0.304932679681573801e0 * wr_7_4;
  results[k++] =
      -0.400871410767362210e0 * wr_4_0 + 0.333545175320610366e0 * wr_6_0 -
      0.958265957626781617e-1 * wr_4_4 + 0.534862186740501905e0 * wr_6_4;
  results[k++] =
      0.436090604519107388e-1 * wr_4_0 + 0.283022466361511360e0 * wr_6_0 -
      0.279226219376316968e0 * wr_8_0 + 0.729719153496434866e-1 * wr_4_4 -
      0.151281871697789760e0 * wr_6_4 - 0.742522769113701893e0 * wr_8_4;
  results[k++] =
      0.110624419717177444e1 * wr_4_4 - 0.509647191437625545e-1 * wr_6_4 -
      0.227404909554440969e-1 * wr_8_4 + 0.970142500145331896e0 * wr_8_8;
  results[k++] =
      0.446990156267674201e0 * wr_4_4 - 0.360374985078223584e0 * wr_6_4 +
      0.803997768105293607e-1 * wr_8_4 + 0.685994340570035352e0 * wr_8_8;
  results[k++] =
      -0.416003923020390371e0 * wr_4_0 + 0.128564869306645005e0 * wr_6_0 +
      0.190260597661797632e0 * wr_8_0 + 0.497219790389313328e-1 * wr_4_4 -
      0.103081219911607425e0 * wr_6_4 - 0.505943983858731355e0 * wr_8_4;
  results[k++] =
      0.336181937106199468e0 * wr_4_0 + 0.181818181818181818e0 * wr_6_0 -
      0.403603676397787480e0 * wr_8_0 - 0.100453567292696344e0 * wr_4_4 +
      0.437336577674876266e0 * wr_6_4 + 0.357756421887046085e0 * wr_8_4;
  results[k++] = -0.457737708217063459e0 * wr_6_4 +
                 0.120688965239296890e0 * wr_8_4 +
                 0.396059017190669721e0 * wr_8_8;
  results[k++] =
      0.821173352177038390e0 * wr_4_4 + 0.470791909069199750e0 * wr_6_4 -
      0.150986128608243842e0 * wr_8_4 + 0.280056016805601960e0 * wr_8_8;
  results[k++] =
      -0.429668924423659729e0 * wr_6_0 + 0.375734574651089695e0 * wr_8_0 -
      0.191389750587738188e0 * wr_6_4 + 0.555088505825620468e0 * wr_8_4;
  results[k++] =
      0.574534151229195224e0 * wr_4_0 - 0.220961316454618172e0 * wr_6_0 -
      0.224809932483254958e0 * wr_8_0 + 0.686699654588787212e-1 * wr_4_4 -
      0.393695972335103103e0 * wr_6_4 + 0.301928343560003556e-1 * wr_8_4;
  results[k++] =
      0.479132978813390809e0 * wr_3_0 - 0.452778827405973221e0 * wr_5_0 +
      0.604264866984415872e-1 * wr_7_0 - 0.324704524929899286e0 * wr_5_4 +
      0.185545442817085306e0 * wr_7_4;
  results[k++] =
      -0.283458892937419802e0 * wr_3_0 - 0.191333976216573467e0 * wr_5_0 +
      0.357487916320388141e0 * wr_7_0 + 0.411638116161159094e0 * wr_5_4 +
      0.274425410774106063e0 * wr_7_4;
  results[k++] =
      -0.824133777606698748e-2 * wr_3_0 + 0.101244423685240089e0 * wr_5_0 +
      0.286131667551251770e0 * wr_7_0 - 0.326267811418244250e0 * wr_9_0 -
      0.121010231724171657e0 * wr_5_4 - 0.274561029962406280e0 * wr_7_4 -
      0.777216439430609397e0 * wr_9_4;
  results[k++] =
      -0.331496772065897936e0 * wr_5_4 + 0.662993544131795872e-1 * wr_7_4;
  results[k++] =
      0.392232270276368064e0 * wr_5_4 + 0.115362432434225901e-1 * wr_7_4 -
      0.286273096113110361e-1 * wr_9_4 + 0.624574158332672250e0 * wr_9_8;
  results[k++] =
      0.444749589996660708e0 * wr_5_4 - 0.327021757350485816e0 * wr_7_4 +
      0.757407419363781292e-1 * wr_9_4 + 0.550822632755243596e0 * wr_9_8;
  results[k++] =
      0.373978796003382871e0 * wr_5_0 - 0.320256307610174266e0 * wr_7_0 -
      0.134097046880302260e0 * wr_5_4 + 0.491689171894441618e0 * wr_7_4;
  results[k++] =
      -0.588318389935849068e0 * wr_3_0 + 0.147499226289569926e0 * wr_5_0 -
      0.253297041024422953e-1 * wr_7_0 + 0.267371668459099002e0 * wr_9_0 -
      0.264442942673972546e0 * wr_5_4 - 0.777773360805801606e-2 * wr_7_4 -
      0.636917430687072115e0 * wr_9_4;
  results[k++] =
      0.222363450213740244e0 * wr_3_0 + 0.278747336669030256e0 * wr_5_0 +
      0.516981326178200209e-1 * wr_7_0 - 0.392999412426215684e0 * wr_9_0 +
      0.366483470718850172e0 * wr_5_4 + 0.291030991453204548e0 * wr_7_4 +
      0.187236125253356839e0 * wr_9_4;
  results[k++] =
      -0.135332990490191692e0 * wr_5_4 + 0.171952505564008267e0 * wr_7_4 -
      0.460943476452575738e-1 * wr_9_4 - 0.100565993714810302e1 * wr_9_8;
  results[k++] =
      0.160128153805087133e0 * wr_5_4 - 0.423868642425230647e0 * wr_7_4 +
      0.124661868900239416e0 * wr_9_4 - 0.339975109876292733e0 * wr_9_8;
  results[k++] = 0.181568259800640725e0 * wr_5_4 +
                 0.352456033730655526e0 * wr_7_4 -
                 0.123684113655963956e0 * wr_9_4;
  results[k++] =
      -0.568114573750766458e-1 * wr_5_0 + 0.309073291672565582e0 * wr_7_0 -
      0.231391788743712627e0 * wr_9_0 - 0.113171131987788401e-1 * wr_5_4 +
      0.263622166277436512e0 * wr_7_4 - 0.551208227925152012e0 * wr_9_4;
  results[k++] =
      -0.336101114425116526e0 * wr_5_0 - 0.152375187696676346e0 * wr_7_0 +
      0.391123509531981593e0 * wr_9_0 - 0.147296478116359709e0 * wr_5_4 +
      0.389902442072716877e0 * wr_7_4 + 0.372684783257846518e0 * wr_9_4;
  results[k++] =
      0.675588659496011123e0 * wr_3_0 - 0.423447601971677156e-1 * wr_5_0 -
      0.246076650301858991e0 * wr_7_0 - 0.159202390481911414e0 * wr_9_0 -
      0.409954517628779138e0 * wr_5_4 + 0.401916193753705037e-1 * wr_7_4 +
      0.113772836990569639e0 * wr_9_4;
  results[k++] =
      0.658698943008610845e0 * wr_2_0 - 0.188832770932629960e0 * wr_4_0 -
      0.326806194281060772e0 * wr_6_0 + 0.659500907407028585e-1 * wr_8_0 -
      0.315977662277994384e0 * wr_4_4 + 0.174685258696458690e0 * wr_6_4 +
      0.175375522074772688e0 * wr_8_4;
  results[k++] =
      -0.170075335762451881e0 * wr_2_0 - 0.263284623734499299e0 * wr_4_0 -
      0.843809965258649291e-1 * wr_6_0 + 0.357593044367454197e0 * wr_8_0 +
      0.314685314685314685e0 * wr_4_4 + 0.180414159402485027e0 * wr_6_4 +
      0.105657451873248463e0 * wr_8_4;
  results[k++] =
      -0.171292989005816650e-1 * wr_2_0 + 0.127674255828710050e-1 * wr_4_0 +
      0.136476107221970047e0 * wr_6_0 + 0.279276714733438956e0 * wr_8_0 -
      0.358653976604271491e0 * wr_10_0 - 0.106819946269366900e0 * wr_4_4 -
      0.170215611568412224e0 * wr_6_4 - 0.305799960597040921e0 * wr_8_4 -
      0.783038366781819887e0 * wr_10_4;
  results[k++] =
      0.387104830569381877e0 * wr_4_4 - 0.312093891966179631e0 * wr_6_4 +
      0.696282491765174364e-1 * wr_8_4 + 0.594088525786004583e0 * wr_8_8;
  results[k++] =
      -0.419790157368864742e0 * wr_4_4 + 0.213306078712600668e0 * wr_6_4 +
      0.425793236030893137e-1 * wr_8_4 - 0.310833446390368626e-1 * wr_10_4 -
      0.121099735081163754e0 * wr_8_8 + 0.443958962118825686e0 * wr_10_8;
  results[k++] =
      -0.183211444965737788e0 * wr_4_4 + 0.434440556397644938e0 * wr_6_4 -
      0.303524625368496951e0 * wr_8_4 + 0.712208898303931168e-1 * wr_10_4 -
      0.369965801765688070e0 * wr_8_8 + 0.435959046292189514e0 * wr_10_8;
  results[k++] =
      0.291142097827431151e0 * wr_4_0 + 0.157459164324443390e0 * wr_6_0 -
      0.349531036821277811e0 * wr_8_0 - 0.869953411762446308e-1 * wr_4_4 +
      0.378744586270589234e0 * wr_6_4 + 0.309826149721205069e0 * wr_8_4;
  results[k++] =
      -0.705982067923018881e0 * wr_2_0 + 0.131533410441164100e0 * wr_6_0 -
      0.842031698549687320e-1 * wr_8_0 + 0.316754615512646809e0 * wr_10_0 -
      0.283022466361511360e0 * wr_4_4 + 0.735033636756445288e-1 * wr_6_4 -
      0.708105361552190422e-1 * wr_8_4 - 0.691560760457694795e0 * wr_10_4;
  results[k++] =
      0.132049643491375073e0 * wr_2_0 + 0.246059982709439441e0 * wr_4_0 +
      0.219186112640847024e0 * wr_6_0 - 0.197880717751598961e-1 * wr_8_0 -
      0.380168381558255021e0 * wr_10_0 + 0.288215972327715282e0 * wr_4_4 +
      0.175739858023047951e0 * wr_6_4 + 0.122781756406588636e0 * wr_8_4 +
      0.754554650585383314e-1 * wr_10_4;
  results[k++] =
      -0.632139541241013967e-1 * wr_4_4 - 0.179875479330926663e0 * wr_6_4 +
      0.206459720516531933e0 * wr_8_4 - 0.573382637072821490e-1 * wr_10_4 -
      0.382950986899473116e0 * wr_8_8 - 0.818954212964942968e0 * wr_10_8;
  results[k++] =
      0.342757228198790117e0 * wr_4_4 + 0.208996420751926620e0 * wr_6_4 -
      0.396330942397569196e0 * wr_8_4 + 0.120552361952465864e0 * wr_10_4 -
      0.533938606083127460e0 * wr_8_8 - 0.453113718302803765e0 * wr_10_8;
  results[k++] =
      -0.598366073605412594e0 * wr_4_4 + 0.532078843372524040e-1 * wr_6_4 +
      0.297392182608896038e0 * wr_8_4 - 0.106611290568101428e0 * wr_10_4 -
      0.362490974642243012e0 * wr_8_8 - 0.988775196450236037e-1 * wr_10_8;
  results[k++] =
      -0.442276595827745362e-1 * wr_4_0 + 0.844226970455963950e-1 * wr_6_0 +
      0.307407019821415683e0 * wr_8_0 - 0.314054604406582261e0 * wr_10_0 -
      0.528621640572345772e-2 * wr_4_4 + 0.150419432386683024e0 * wr_6_4 -
      0.412859393124503363e-1 * wr_8_4 - 0.685665907968387751e0 * wr_10_4;
  results[k++] =
      -0.239810184608143310e0 * wr_4_0 - 0.261574159759607147e0 * wr_6_0 -
      0.216469503322835678e-1 * wr_8_0 + 0.382274593695170484e0 * wr_10_0 -
      0.859883980360246020e-1 * wr_4_4 + 0.332066015250369669e0 * wr_6_4 +
      0.326195500994886496e0 * wr_8_4 + 0.227620512224893128e0 * wr_10_4;
  results[k++] =
      0.752241782098569426e0 * wr_2_0 + 0.119613422953812312e0 * wr_4_0 -
      0.149835423367858956e0 * wr_6_0 - 0.228457815853350248e0 * wr_8_0 -
      0.121920303939434204e0 * wr_10_0 - 0.350265193678288735e0 * wr_4_4 +
      0.129034537624585384e0 * wr_6_4 + 0.174084285581681305e0 * wr_8_4 +
      0.131182035873632444e0 * wr_10_4;
  results[k++] =
      0.790438731610333015e0 * wr_1_0 + 0.722385106518650758e-1 * wr_3_0 -
      0.258730758517698984e0 * wr_5_0 - 0.255923943663987899e0 * wr_7_0 +
      0.663233641092069281e-1 * wr_9_0 + 0.309242404695142177e0 * wr_5_4 +
      0.245574850787318788e0 * wr_7_4 + 0.157991708345199141e0 * wr_9_4;
  results[k++] =
      -0.778498944161522970e-1 * wr_1_0 - 0.210392814926814648e0 * wr_3_0 -
      0.229340305384593815e0 * wr_5_0 - 0.220550876323961062e-1 * wr_7_0 +
      0.352736273014063313e0 * wr_9_0;
  results[k++] =
      0.148539815810610557e0 * wr_9_4 + 0.119717253894325366e0 * wr_5_4 -
      0.220531783489546727e0 * wr_7_4 - 0.349550433900660744e-1 * wr_11_4 -
      0.367847414265512852e0 * wr_11_8 + 0.462965168068275716e0 * wr_9_8;
  results[k++] =
      -0.114195326003877767e-1 * wr_1_0 - 0.174436241807642955e-1 * wr_3_0 +
      0.321569707927014230e-1 * wr_5_0 + 0.158822030934909282e0 * wr_7_0 +
      0.270257818008880411e0 * wr_9_0 - 0.382386973690600092e0 * wr_11_0 -
      0.807133561100311950e-1 * wr_5_4 - 0.160577097945219956e0 * wr_7_4 -
      0.300436570169486849e0 * wr_9_4 - 0.777700619717313828e0 * wr_11_4;
  results[k++] =
      0.397796126479077523e0 * wr_5_4 - 0.292497151822851120e0 * wr_7_4 +
      0.677445790544042196e-1 * wr_9_4 + 0.492670740154450786e0 * wr_9_8;
  results[k++] =
      -0.338780791673652718e0 * wr_5_4 + 0.127361199877313052e0 * wr_7_4 +
      0.600491512392988733e-1 * wr_9_4 - 0.321159787062596576e-1 * wr_11_4 -
      0.187159686742209097e0 * wr_9_8 + 0.337970678275892553e0 * wr_11_8;
  results[k++] =
      0.879873931979574467e-1 * wr_7_0 - 0.212199736872300795e-1 * wr_9_0 -
      0.204515733930916284e0 * wr_5_0 + 0.223319580504692685e-2 * wr_11_0 -
      0.181568259800640725e0 * wr_1_0 + 0.277350098112614561e0 * wr_3_0;
  results[k++] =
      -0.286273096113110361e0 * wr_9_4 - 0.230724864868451802e0 * wr_5_4 +
      0.425019487915569110e0 * wr_7_4 + 0.673670452695386104e-1 * wr_11_4 +
      0.354466637797823726e0 * wr_11_8 - 0.446124398809051608e0 * wr_9_8;
  results[k++] =
      0.198887916155725331e0 * wr_3_0 + 0.249319197335588581e0 * wr_5_0 +
      0.462402155372978887e-1 * wr_7_0 - 0.351509360520997529e0 * wr_9_0 +
      0.327792781262961079e0 * wr_5_4 + 0.260306032179410269e0 * wr_7_4 +
      0.167469081564068369e0 * wr_9_4;
  results[k++] =
      -0.807886534533564731e0 * wr_1_0 - 0.176295295115981697e0 * wr_3_0 +
      0.909991139004425707e-1 * wr_5_0 + 0.917226719285140130e-1 * wr_7_0 -
      0.109255235699968545e0 * wr_9_0 + 0.351329328004452249e0 * wr_11_0 +
      0.228405963151564932e0 * wr_5_4 + 0.927362557156729800e-1 * wr_7_4 -
      0.121455388519709170e0 * wr_9_4 - 0.714535418078878195e0 * wr_11_4;
  results[k++] =
      0.230724864868451802e0 * wr_5_4 - 0.425019487915569110e0 * wr_7_4 +
      0.286273096113110361e0 * wr_9_4 - 0.673670452695386104e-1 * wr_11_4 -
      0.446124398809051608e0 * wr_9_8 + 0.354466637797823726e0 * wr_11_8;
  results[k++] =
      0.605227532668802417e-1 * wr_1_0 + 0.176495516980754720e0 * wr_3_0 +
      0.241700412827446517e0 * wr_5_0 + 0.173308501753552547e0 * wr_7_0 -
      0.636599210616902385e-1 * wr_9_0 - 0.368477307832742930e0 * wr_11_0;
  results[k++] =
      -0.382116679031129482e-1 * wr_5_4 - 0.207398855395185410e0 * wr_7_4 +
      0.221252868697236355e0 * wr_9_4 - 0.621244421177216480e-1 * wr_11_4 -
      0.653763039017879260e0 * wr_11_8;
  results[k++] =
      0.276613358085525682e0 * wr_5_4 + 0.233977464546027363e0 * wr_7_4 -
      0.375896104504495802e0 * wr_9_4 + 0.115379381949958124e0 * wr_11_4 -
      0.254692073854196640e0 * wr_9_8 - 0.441523045225745219e0 * wr_11_8;
  results[k++] =
      -0.215524217132627142e0 * wr_7_0 + 0.519781078889990151e-1 * wr_9_0 +
      0.500959192501553017e0 * wr_5_0 - 0.547019021808886917e-2 * wr_11_0 +
      0.444749589996660708e0 * wr_1_0 - 0.679366220486757450e0 * wr_3_0;
  results[k++] =
      -0.489803764580266524e0 * wr_5_4 + 0.264906471413008760e0 * wr_9_4 -
      0.950085709514409718e-1 * wr_11_4 - 0.267123300617087148e0 * wr_9_8 -
      0.131554908097668060e0 * wr_11_8;
  results[k++] =
      -0.302132433492207936e-1 * wr_3_0 + 0.891160115687476798e-2 * wr_5_0 +
      0.144801083618526539e0 * wr_7_0 + 0.284789893838415540e0 * wr_9_0 -
      0.365276022176973855e0 * wr_11_0 + 0.862763453271610401e-1 * wr_5_4 -
      0.236503139602963378e-1 * wr_7_4 - 0.203523038003133051e0 * wr_9_4 -
      0.742900277363425860e0 * wr_11_4;
  results[k++] =
      -0.160687067036028773e0 * wr_3_0 - 0.248827639545113484e0 * wr_5_0 -
      0.191163211839547567e0 * wr_7_0 + 0.495862832172478455e-1 * wr_9_0 +
      0.370037242932405233e0 * wr_11_0 + 0.300710423728326494e0 * wr_5_4 +
      0.254360320822832561e0 * wr_7_4 + 0.195437549129602293e0 * wr_9_4 +
      0.125430612157771478e0 * wr_11_4;
  results[k++] =
      0.260928030753605745e0 * wr_9_4 + 0.210297738255606346e0 * wr_5_4 -
      0.387390570470853797e0 * wr_7_4 - 0.614027329097123244e-1 * wr_11_4 -
      0.179491159207821651e0 * wr_11_8 + 0.225903870645230098e0 * wr_9_8;
  results[k++] =
      0.827465960308426368e0 * wr_1_0 + 0.268115937240291104e0 * wr_3_0 -
      0.169462746768966316e-1 * wr_5_0 - 0.182266970929038692e0 * wr_7_0 -
      0.208455936398913267e0 * wr_9_0 - 0.983815708187048956e-1 * wr_11_0 +
      0.308771226853545486e0 * wr_5_4 + 0.261178669331006520e0 * wr_7_4 +
      0.200676421754225048e0 * wr_9_4 + 0.128792888256962962e0 * wr_11_4;
  results[k++] =
      -0.266968008878452518e0 * wr_6_0 - 0.212452995063110960e0 * wr_8_0 +
      0.328373619073395690e0 * wr_2_0 + 0.654809577750298641e-1 * wr_10_0 +
      wr_0_0 - 0.652680652680652681e-1 * wr_4_0 +
      0.546071812190072620e0 * wr_4_4 + 0.332967607484131012e0 * wr_6_4 +
      0.232629911809986498e0 * wr_8_4 + 0.142962592292802234e0 * wr_10_4;
  results[k++] =
      -0.167248402001418154e0 * wr_4_4 + 0.396588154390142404e0 * wr_6_4 -
      0.277078806787717623e0 * wr_8_4 + 0.650154798761609907e-1 * wr_10_4 -
      0.337731025220919950e0 * wr_8_8 + 0.397974339671118575e0 * wr_10_8;
  results[k++] =
      0.120544280751235613e0 * wr_2_0 + 0.224621005048818540e0 * wr_4_0 +
      0.200088630308766919e0 * wr_6_0 - 0.180639554679772846e-1 * wr_8_0 -
      0.347044663716145446e0 * wr_10_0 + 0.263103982461957331e0 * wr_4_4 +
      0.160427807486631016e0 * wr_6_4 + 0.112083896056655070e0 * wr_8_4 +
      0.688811004993405228e-1 * wr_10_4;
  results[k++] =
      0.722952785645914100e-1 * wr_4_4 - 0.170427827418941270e-1 * wr_6_4 -
      0.226233898389705448e0 * wr_8_4 + 0.228495947199992250e0 * wr_10_4 -
      0.642282337128488035e-1 * wr_12_4 + 0.275756227366096749e0 * wr_8_8 +
      0.211920448459850738e0 * wr_10_8 - 0.534347583486514453e0 * wr_12_8;
  results[k++] =
      -0.183119907890343257e-1 * wr_2_0 - 0.144518316026932104e-1 * wr_4_0 +
      0.479931235625222438e-1 * wr_6_0 + 0.173793748862835113e0 * wr_8_0 +
      0.261307176595489884e0 * wr_10_0 - 0.400553843375241268e0 * wr_12_0 +
      0.423194443426135255e-1 * wr_4_4 - 0.413304835989675372e-1 * wr_6_4 -
      0.132430402944803053e0 * wr_8_4 - 0.281157496385636387e0 * wr_10_4 -
      0.768057965807101596e0 * wr_12_4;
  results[k++] =
      -0.167248402001418154e0 * wr_4_4 + 0.396588154390142404e0 * wr_6_4 -
      0.277078806787717623e0 * wr_8_4 + 0.650154798761609907e-1 * wr_10_4 -
      0.337731025220919950e0 * wr_8_8 + 0.397974339671118575e0 * wr_10_8;
  results[k++] =
      -0.111626974472569328e0 * wr_6_0 + 0.911788064046364564e-2 * wr_8_0 -
      0.830539534499921890e0 * wr_2_0 + 0.343673349813044940e-2 * wr_10_0 +
      wr_0_0 + 0.403361344537815126e0 * wr_4_0 -
      0.761494529161779128e-3 * wr_12_0 + 0.125222583204865071e1 * wr_12_12;
  results[k++] =
      -0.151684322640071586e0 * wr_4_4 + 0.281592984819155916e0 * wr_6_4 -
      0.762856625858484754e-1 * wr_8_4 - 0.708222863058351890e-1 * wr_10_4 +
      0.324864668847943795e-1 * wr_12_4 + 0.464922513083340078e-1 * wr_8_8 +
      0.216759552342382456e0 * wr_10_8 - 0.270271562402188330e0 * wr_12_8;
  results[k++] =
      -0.156492159287190318e0 * wr_2_0 + 0.308759211275190517e0 * wr_4_0 -
      0.273429128988478230e0 * wr_6_0 + 0.134004930628422086e0 * wr_8_0 -
      0.356156453753264425e-1 * wr_10_0 + 0.404142491646244796e-2 * wr_12_0 +
      0.511219055208550102e0 * wr_12_12;
  results[k++] =
      0.432046926300995947e-1 * wr_4_4 - 0.256662271098857252e0 * wr_6_4 +
      0.417190465681651786e0 * wr_8_4 - 0.273104893210391773e0 * wr_10_4 +
      0.641556316277977511e-1 * wr_12_4 + 0.141253599492890863e0 * wr_8_8 -
      0.464371201987345473e0 * wr_10_8 + 0.296524205301898075e0 * wr_12_8;
  results[k++] =
      0.120544280751235613e0 * wr_2_0 + 0.224621005048818540e0 * wr_4_0 +
      0.200088630308766919e0 * wr_6_0 - 0.180639554679772846e-1 * wr_8_0 -
      0.347044663716145446e0 * wr_10_0 + 0.263103982461957331e0 * wr_4_4 +
      0.160427807486631016e0 * wr_6_4 + 0.112083896056655070e0 * wr_8_4 +
      0.688811004993405228e-1 * wr_10_4;
  results[k++] =
      -0.151684322640071586e0 * wr_4_4 + 0.281592984819155916e0 * wr_6_4 -
      0.762856625858484754e-1 * wr_8_4 - 0.708222863058351890e-1 * wr_10_4 +
      0.324864668847943795e-1 * wr_12_4 + 0.464922513083340078e-1 * wr_8_8 +
      0.216759552342382456e0 * wr_10_8 - 0.270271562402188330e0 * wr_12_8;
  results[k++] =
      -0.111626974472569328e0 * wr_6_0 - 0.588517750429926219e-1 * wr_8_0 +
      0.377517970227237222e0 * wr_2_0 + 0.120285672434565729e0 * wr_10_0 +
      wr_0_0 + 0.448179271708683473e-1 * wr_4_0 -
      0.376939791935080668e0 * wr_12_0 - 0.477239230821576071e0 * wr_4_4 -
      0.227819941962826482e0 * wr_6_4 - 0.617181398679556015e-1 * wr_8_4 +
      0.150066323586854519e0 * wr_10_4 + 0.722778259686286288e0 * wr_12_4;
  results[k++] =
      0.208996420751926620e0 * wr_4_4 - 0.229919709318073865e0 * wr_6_4 -
      0.249147930700605726e0 * wr_8_4 + 0.360301424953701114e0 * wr_10_4 -
      0.110521204741068358e0 * wr_12_4 - 0.379607642328873144e0 * wr_8_8 +
      0.408423307779184025e-1 * wr_10_8 + 0.404572312142865754e0 * wr_12_8;
  results[k++] =
      0.970523172123939212e-1 * wr_2_0 + 0.198447400807456446e0 * wr_4_0 +
      0.231236655293484145e0 * wr_6_0 + 0.138510550034513539e0 * wr_8_0 -
      0.927691195483916825e-1 * wr_10_0 - 0.358413102816078086e0 * wr_12_0 -
      0.244680221763430283e0 * wr_4_4 - 0.153814815888313701e0 * wr_6_4 -
      0.114591381497000040e0 * wr_8_4 - 0.841724715156500802e-1 * wr_10_4 -
      0.528656553574155939e-1 * wr_12_4;
  results[k++] =
      0.722952785645914100e-1 * wr_4_4 - 0.170427827418941270e-1 * wr_6_4 -
      0.226233898389705448e0 * wr_8_4 + 0.228495947199992250e0 * wr_10_4 -
      0.642282337128488035e-1 * wr_12_4 + 0.275756227366096749e0 * wr_8_8 +
      0.211920448459850738e0 * wr_10_8 - 0.534347583486514453e0 * wr_12_8;
  results[k++] =
      -0.156492159287190318e0 * wr_2_0 + 0.308759211275190517e0 * wr_4_0 -
      0.273429128988478230e0 * wr_6_0 + 0.134004930628422086e0 * wr_8_0 -
      0.356156453753264425e-1 * wr_10_0 + 0.404142491646244796e-2 * wr_12_0 +
      0.511219055208550102e0 * wr_12_12;
  results[k++] =
      0.208996420751926620e0 * wr_4_4 - 0.229919709318073865e0 * wr_6_4 -
      0.249147930700605726e0 * wr_8_4 + 0.360301424953701114e0 * wr_10_4 -
      0.110521204741068358e0 * wr_12_4 - 0.379607642328873144e0 * wr_8_8 +
      0.408423307779184025e-1 * wr_10_8 + 0.404572312142865754e0 * wr_12_8;
  results[k++] =
      0.446507897890277313e0 * wr_6_0 - 0.264418538573445723e0 * wr_8_0 -
      0.511101251999951930e0 * wr_2_0 + 0.761368651893514943e-1 * wr_10_0 +
      wr_0_0 - 0.226890756302521008e0 * wr_4_0 -
      0.901101859508105302e-2 * wr_12_0 + 0.208704305341441785e0 * wr_12_12;
  results[k++] =
      0.264573628593822316e0 * wr_4_4 - 0.419127733610724118e0 * wr_6_4 -
      0.283862157353928758e-1 * wr_8_4 + 0.243260958044636316e0 * wr_10_4 -
      0.866331814026264803e-1 * wr_12_4 + 0.259499432316779473e0 * wr_8_8 -
      0.165450544889003361e0 * wr_10_8 - 0.139679422956525502e0 * wr_12_8;
  results[k++] =
      -0.183119907890343257e-1 * wr_2_0 - 0.144518316026932104e-1 * wr_4_0 +
      0.479931235625222438e-1 * wr_6_0 + 0.173793748862835113e0 * wr_8_0 +
      0.261307176595489884e0 * wr_10_0 - 0.400553843375241268e0 * wr_12_0 +
      0.423194443426135255e-1 * wr_4_4 - 0.413304835989675372e-1 * wr_6_4 -
      0.132430402944803053e0 * wr_8_4 - 0.281157496385636387e0 * wr_10_4 -
      0.768057965807101596e0 * wr_12_4;
  results[k++] =
      0.432046926300995947e-1 * wr_4_4 - 0.256662271098857252e0 * wr_6_4 +
      0.417190465681651786e0 * wr_8_4 - 0.273104893210391773e0 * wr_10_4 +
      0.641556316277977511e-1 * wr_12_4 + 0.141253599492890863e0 * wr_8_8 -
      0.464371201987345473e0 * wr_10_8 + 0.296524205301898075e0 * wr_12_8;
  results[k++] =
      0.970523172123939212e-1 * wr_2_0 + 0.198447400807456446e0 * wr_4_0 +
      0.231236655293484145e0 * wr_6_0 + 0.138510550034513539e0 * wr_8_0 -
      0.927691195483916825e-1 * wr_10_0 - 0.358413102816078086e0 * wr_12_0 -
      0.244680221763430283e0 * wr_4_4 - 0.153814815888313701e0 * wr_6_4 -
      0.114591381497000040e0 * wr_8_4 - 0.841724715156500802e-1 * wr_10_4 -
      0.528656553574155939e-1 * wr_12_4;
  results[k++] =
      0.264573628593822316e0 * wr_4_4 - 0.419127733610724118e0 * wr_6_4 -
      0.283862157353928758e-1 * wr_8_4 + 0.243260958044636316e0 * wr_10_4 -
      0.866331814026264803e-1 * wr_12_4 + 0.259499432316779473e0 * wr_8_8 -
      0.165450544889003361e0 * wr_10_8 - 0.139679422956525502e0 * wr_12_8;
  results[k++] =
      -0.780608213094890403e-1 * wr_6_0 - 0.192878244317500196e0 * wr_8_0 +
      0.432470290153805481e0 * wr_2_0 - 0.191318276629652473e0 * wr_10_0 +
      wr_0_0 + 0.132749603337838632e0 * wr_4_0 -
      0.823683249043324424e-1 * wr_12_0 + 0.557543909084822045e0 * wr_4_4 +
      0.350492218404348433e0 * wr_6_4 + 0.261115207133658314e0 * wr_8_4 +
      0.191800744939411693e0 * wr_10_4 + 0.120463043281047715e0 * wr_12_4;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 2)
void BoxMatrix::setup___oa_2_E(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 0)
  if (lmax >= 0) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 2, 0, 1));
  }
#endif
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 2, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 2, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 2, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 2, 2));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 3, 2));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 4, 3));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 5, 3));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 0, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 14, 6, 4));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 2)
void BoxMatrix::evaluate___oa_2_E(WZetaRGLCalculator& wzeta, uint n_elems,
                                  vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 0)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 1)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = -0.707106781186547525e0 * wr_1_0;
  results[k++] = 0.707106781186547525e0 * wr_1_0;
  results[k++] = wr_0_0 + 0.223606797749978970e0 * wr_2_0;
  results[k++] = -0.670820393249936910e0 * wr_2_0;
  results[k++] = -0.670820393249936910e0 * wr_2_0;
  results[k++] = wr_0_0 + 0.223606797749978970e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] = 0.316227766016837933e0 * wr_2_0;
  results[k++] = -0.707106781186547525e0 * wr_2_0;
  results[k++] = 0.632455532033675868e0 * wr_2_0;
  results[k++] = -0.500000000000000000e0 * wr_1_0;
  results[k++] =
      -0.100000000000000000e0 * wr_1_0 + 0.392792202424786286e0 * wr_3_0;
  results[k++] =
      0.670820393249936910e0 * wr_1_0 + 0.292770021884559954e0 * wr_3_0;
  results[k++] =
      -0.223606797749978970e0 * wr_1_0 - 0.585540043769119909e0 * wr_3_0;
  results[k++] = -0.654653670707977142e0 * wr_3_0;
  results[k++] =
      0.800000000000000000e0 * wr_1_0 + 0.130930734141595428e0 * wr_3_0;
  results[k++] = wr_0_0 - 0.223606797749978970e0 * wr_2_0;
  results[k++] = -0.500000000000000000e0 * wr_2_0;
  results[k++] = 0.925820099772551461e0 * wr_4_4;
  results[k++] =
      -0.127775312999987983e0 * wr_2_0 + 0.428571428571428571e0 * wr_4_0;
  results[k++] = -0.500000000000000000e0 * wr_2_0;
  results[k++] = wr_0_0 + 0.159719141249984979e0 * wr_2_0 +
                 0.380952380952380952e0 * wr_4_0;
  results[k++] = 0.690065559342354218e0 * wr_4_4;
  results[k++] =
      -0.285714285714285714e0 * wr_2_0 - 0.532397137499949928e0 * wr_4_0;
  results[k++] = 0.925820099772551461e0 * wr_4_4;
  results[k++] = 0.690065559342354218e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.638876564999939914e0 * wr_2_0 +
                 0.142857142857142857e0 * wr_4_0;
  results[k++] = 0.308606699924183820e0 * wr_4_4;
  results[k++] =
      -0.127775312999987983e0 * wr_2_0 + 0.428571428571428571e0 * wr_4_0;
  results[k++] =
      -0.285714285714285714e0 * wr_2_0 - 0.532397137499949928e0 * wr_4_0;
  results[k++] = 0.308606699924183820e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.383325938999963950e0 * wr_2_0 +
                 0.476190476190476190e-1 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = 0.377964473009227227e0 * wr_3_0;
  results[k++] = 0.707106781186547525e0 * wr_3_0;
  results[k++] = 0.597614304667196820e0 * wr_3_0;
  results[k++] = -0.547722557505166115e0 * wr_2_0;
  results[k++] =
      -0.782460796435951592e-1 * wr_2_0 + 0.466569474815843447e0 * wr_4_0;
  results[k++] = -0.707106781186547525e0 * wr_4_4;
  results[k++] = -0.707106781186547525e0 * wr_4_4;
  results[k++] =
      -0.585540043769119909e0 * wr_2_0 - 0.327326835353988572e0 * wr_4_0;
  results[k++] =
      0.292770021884559954e0 * wr_2_0 + 0.545544725589980954e0 * wr_4_0;
  results[k++] = -0.408248290463863017e0 * wr_4_4;
  results[k++] = -0.408248290463863017e0 * wr_4_4;
  results[k++] = -0.645497224367902815e0 * wr_4_0;
  results[k++] =
      0.742307488958090266e0 * wr_2_0 + 0.922138891954146875e-1 * wr_4_0;
  results[k++] =
      0.734846922834953430e0 * wr_1_0 - 0.213808993529939508e0 * wr_3_0;
  results[k++] =
      -0.182574185835055371e0 * wr_1_0 - 0.478091443733757458e0 * wr_3_0;
  results[k++] = 0.657951694959768986e0 * wr_5_4;
  results[k++] = -0.466569474815843447e-1 * wr_1_0 -
                 0.712696645099798359e-1 * wr_3_0 +
                 0.507620753227643891e0 * wr_5_0;
  results[k++] = -0.550481882563180302e0 * wr_5_4;
  results[k++] = -0.327326835353988572e0 * wr_1_0 +
                 0.333333333333333333e0 * wr_3_0 -
                 0.949671470496982906e-1 * wr_5_0;
  results[k++] = -0.615457454896663663e0 * wr_5_4;
  results[k++] = 0.500000000000000000e0 * wr_3_0;
  results[k++] = -0.780720058358826545e0 * wr_1_0 -
                 0.745355992499929899e-1 * wr_3_0 -
                 0.424705992864687954e0 * wr_5_0;
  results[k++] = -0.615457454896663663e0 * wr_5_4;
  results[k++] = 0.109108945117996190e0 * wr_1_0 +
                 0.333333333333333333e0 * wr_3_0 +
                 0.474835735248491454e0 * wr_5_0;
  results[k++] = 0.852802865422441737e0 * wr_5_4;
  results[k++] = 0.317820863081864106e0 * wr_5_4;
  results[k++] = 0.164487923739942247e0 * wr_5_0 +
                 0.566946709513840841e0 * wr_1_0 -
                 0.577350269189625763e0 * wr_3_0;
  results[k++] = -0.710669054518701448e-1 * wr_5_4;
  results[k++] =
      -0.140859042454752763e0 * wr_3_0 + 0.449466574975494725e0 * wr_5_0;
  results[k++] =
      -0.314970394174356024e0 * wr_3_0 - 0.502518907629606037e0 * wr_5_0;
  results[k++] = 0.312093891966179630e0 * wr_5_4;
  results[k++] = 0.829925002758732190e0 * wr_1_0 +
                 0.281718084909505526e0 * wr_3_0 +
                 0.160523776776962402e-1 * wr_5_0;
  results[k++] = wr_0_0 - 0.190476190476190476e0 * wr_4_0 +
                 0.255550625999975966e0 * wr_2_0;
  results[k++] = -0.577350269189625763e0 * wr_4_4;
  results[k++] =
      0.239045721866878728e0 * wr_2_0 + 0.445435403187373976e0 * wr_4_0;
  results[k++] =
      0.272727272727272727e0 * wr_4_4 + 0.751725664177020947e0 * wr_6_4;
  results[k++] = -0.616028115617216754e-1 * wr_4_0 +
                 0.531550314731532857e0 * wr_6_0 -
                 0.673435029701473833e-1 * wr_2_0;
  results[k++] = -0.577350269189625763e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.559016994374947425e0 * wr_2_0 +
                 0.454545454545454545e-1 * wr_4_0 +
                 0.315170566037062001e-1 * wr_6_0;
  results[k++] =
      0.981930408849675791e-1 * wr_4_4 + 0.456725541175284312e0 * wr_6_4;
  results[k++] = -0.322748612183951407e0 * wr_2_0 +
                 0.393647910811108475e0 * wr_4_0 -
                 0.127374667799501129e0 * wr_6_0;
  results[k++] =
      0.248964798865984597e0 * wr_4_4 - 0.540404948114466153e0 * wr_6_4;
  results[k++] =
      0.239045721866878728e0 * wr_2_0 + 0.445435403187373976e0 * wr_4_0;
  results[k++] =
      0.981930408849675791e-1 * wr_4_4 + 0.456725541175284312e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.151515151515151515e-1 * wr_4_0 +
                 0.472755849055593002e0 * wr_6_0 +
                 0.335410196624968455e0 * wr_2_0;
  results[k++] =
      -0.510226007287355645e0 * wr_4_4 - 0.439484356905546509e0 * wr_6_4;
  results[k++] = 0.157485197087178011e0 * wr_2_0 +
                 0.345744922388938601e0 * wr_4_0 +
                 0.435067316590649163e0 * wr_6_0;
  results[k++] =
      0.272727272727272727e0 * wr_4_4 + 0.751725664177020947e0 * wr_6_4;
  results[k++] = -0.322748612183951407e0 * wr_2_0 +
                 0.393647910811108475e0 * wr_4_0 -
                 0.127374667799501129e0 * wr_6_0;
  results[k++] =
      -0.510226007287355645e0 * wr_4_4 - 0.439484356905546509e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.186338998124982475e0 * wr_2_0 -
                 0.409090909090909091e0 * wr_4_0 +
                 0.178596654087668467e0 * wr_6_0;
  results[k++] =
      0.431219680932051729e0 * wr_4_4 + 0.445718488950418254e-1 * wr_6_4;
  results[k++] = -0.616028115617216754e-1 * wr_4_0 +
                 0.531550314731532857e0 * wr_6_0 -
                 0.673435029701473833e-1 * wr_2_0;
  results[k++] =
      0.248964798865984597e0 * wr_4_4 - 0.540404948114466153e0 * wr_6_4;
  results[k++] = 0.157485197087178011e0 * wr_2_0 +
                 0.345744922388938601e0 * wr_4_0 +
                 0.435067316590649163e0 * wr_6_0;
  results[k++] =
      0.431219680932051729e0 * wr_4_4 + 0.445718488950418254e-1 * wr_6_4;
  results[k++] = wr_0_0 + 0.175324675324675325e0 * wr_4_0 -
                 0.105056855345687334e-1 * wr_6_0 +
                 0.452537566874957439e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] = 0.881917103688196862e0 * wr_4_4;
  results[k++] = 0.408248290463863017e0 * wr_4_0;
  results[k++] = 0.447213595499957940e0 * wr_4_4;
  results[k++] = 0.707106781186547525e0 * wr_4_0;
  results[k++] = wr_4_4;
  results[k++] = 0.149071198499985980e0 * wr_4_4;
  results[k++] = 0.577350269189625763e0 * wr_4_0;
  results[k++] = 0.651338947278929608e0 * wr_5_4;
  results[k++] = -0.566946709513840841e0 * wr_3_0;
  results[k++] =
      -0.629940788348712045e-1 * wr_3_0 + 0.502518907629606037e0 * wr_5_0;
  results[k++] = -0.660578259075816363e0 * wr_5_4;
  results[k++] = -0.330289129537908181e0 * wr_5_4;
  results[k++] =
      -0.545544725589980954e0 * wr_3_0 - 0.348155311911395676e0 * wr_5_0;
  results[k++] =
      0.327326835353988572e0 * wr_3_0 + 0.522232967867093514e0 * wr_5_0;
  results[k++] = -0.369274472937998198e0 * wr_5_4;
  results[k++] = 0.369274472937998198e0 * wr_5_4;
  results[k++] = -0.495433694306862272e0 * wr_5_4;
  results[k++] = -0.385337317794226212e0 * wr_5_4;
  results[k++] = -0.639602149066831305e0 * wr_5_0;
  results[k++] =
      0.712696645099798359e0 * wr_3_0 + 0.710669054518701448e-1 * wr_5_0;
  results[k++] = -0.445435403187373976e0 * wr_4_4;
  results[k++] = 0.597614304667196822e0 * wr_4_4;
  results[k++] = 0.922138891954146875e-1 * wr_2_0 -
                 0.112470831660316707e0 * wr_4_0 +
                 0.363927622284288939e-1 * wr_6_0;
  results[k++] =
      -0.242964765374931259e0 * wr_4_4 + 0.527381228286655809e0 * wr_6_4;
  results[k++] =
      0.663940002206985753e0 * wr_2_0 - 0.206196524710580630e0 * wr_4_0;
  results[k++] =
      -0.247435829652696755e0 * wr_2_0 - 0.461069445977073440e0 * wr_4_0;
  results[k++] =
      -0.242964765374931259e0 * wr_4_4 + 0.527381228286655809e0 * wr_6_4;
  results[k++] = -0.553283335172488125e-1 * wr_2_0 -
                 0.374902772201055690e-1 * wr_4_0 +
                 0.545891433426433408e0 * wr_6_0;
  results[k++] = 0.316227766016837934e0 * wr_4_4;
  results[k++] =
      0.192847303959967507e0 * wr_4_4 - 0.637860377677839430e0 * wr_6_4;
  results[k++] = -0.129181490922455706e0 * wr_6_0 -
                 0.327326835353988572e0 * wr_2_0 +
                 0.399231848024399937e0 * wr_4_0;
  results[k++] =
      -0.517463617118462073e0 * wr_4_4 - 0.445718488950418254e0 * wr_6_4;
  results[k++] = 0.500000000000000000e0 * wr_4_0;
  results[k++] = -0.714285714285714286e0 * wr_2_0 -
                 0.435597657954504487e-1 * wr_4_0 -
                 0.451035398506212569e0 * wr_6_0;
  results[k++] =
      -0.548070649410341174e0 * wr_6_4 + 0.252496390847059489e0 * wr_4_4;
  results[k++] = 0.159719141249984979e0 * wr_2_0 +
                 0.350649350649350649e0 * wr_4_0 +
                 0.441238792451886803e0 * wr_6_0;
  results[k++] =
      -0.257129738613290009e0 * wr_4_4 + 0.119598820814594893e0 * wr_6_4;
  results[k++] =
      -0.267431093370250953e0 * wr_6_4 + 0.574959574576068970e0 * wr_4_4;
  results[k++] =
      -0.514259477226580018e0 * wr_4_4 + 0.239197641629189786e0 * wr_6_4;
  results[k++] =
      -0.383306383050712647e-1 * wr_4_4 + 0.802293280110752860e0 * wr_6_4;
  results[k++] =
      -0.257129738613290009e0 * wr_4_4 + 0.119598820814594893e0 * wr_6_4;
  results[k++] = 0.172241987896607608e0 * wr_6_0 +
                 0.436435780471984762e0 * wr_2_0 -
                 0.532309130699199917e0 * wr_4_0;
  results[k++] =
      -0.459967659660855178e0 * wr_4_4 - 0.178287395580167302e0 * wr_6_4;
  results[k++] =
      -0.148453923805041097e0 * wr_4_0 + 0.463204241240970989e0 * wr_6_0;
  results[k++] =
      -0.331953065154646130e0 * wr_4_0 - 0.483352879744477250e0 * wr_6_0;
  results[k++] =
      0.298331874233587997e0 * wr_6_4 - 0.137441626548809901e0 * wr_4_4;
  results[k++] =
      0.782460796435951592e0 * wr_2_0 + 0.233284737407921724e0 * wr_4_0;
  results[k++] = -0.227921152919275897e0 * wr_5_4;
  results[k++] = -0.283473354756920421e0 * wr_1_0 +
                 0.288675134594812882e0 * wr_3_0 -
                 0.822439618699711234e-1 * wr_5_0;
  results[k++] = -0.533001790889026085e0 * wr_5_4;
  results[k++] =
      -0.181848241863326984e-1 * wr_1_0 + 0.136363636363636364e0 * wr_3_0 -
      0.164366216047554734e0 * wr_5_0 + 0.557332209492752050e-1 * wr_7_0;
  results[k++] =
      -0.311862967856155026e0 * wr_5_4 + 0.452778827405973219e0 * wr_7_4;
  results[k++] = 0.808122035641768601e0 * wr_1_0 +
                 0.154303349962091910e0 * wr_3_0 -
                 0.175844987113332475e0 * wr_5_0;
  results[k++] = -0.533001790889026085e0 * wr_5_4;
  results[k++] = 0.944911182523068068e-1 * wr_1_0 +
                 0.288675134594812882e0 * wr_3_0 +
                 0.411219809349855617e0 * wr_5_0;
  results[k++] =
      0.710143217188458073e-1 * wr_5_4 + 0.662800336042560868e0 * wr_7_4;
  results[k++] =
      -0.266198568749974965e-1 * wr_1_0 - 0.665386413373999896e-1 * wr_3_0 -
      0.160405002231083029e-1 * wr_5_0 + 0.571095571095571096e0 * wr_7_0;
  results[k++] = -0.269679944985296835e0 * wr_5_4;
  results[k++] =
      0.559016994374947425e0 * wr_1_0 - 0.465770489361799927e0 * wr_3_0 +
      0.224567003123516241e-1 * wr_5_0 + 0.489510489510489510e-1 * wr_7_0;
  results[k++] =
      -0.970240344441371188e-2 * wr_5_4 + 0.582144206664822711e0 * wr_7_4;
  results[k++] =
      -0.193649167310370844e0 * wr_1_0 - 0.161347630448171347e0 * wr_3_0 +
      0.427857605024749786e0 * wr_5_0 - 0.169571407734015958e0 * wr_7_0;
  results[k++] =
      -0.369001239846248829e0 * wr_5_4 - 0.459201542919776321e0 * wr_7_4;
  results[k++] =
      0.267261241912424385e0 * wr_3_0 + 0.426401432711220869e0 * wr_5_0;
  results[k++] =
      0.426085930313074844e-1 * wr_5_4 + 0.397680201625536520e0 * wr_7_4;
  results[k++] =
      0.818317088384971427e0 * wr_1_0 + 0.227272727272727273e0 * wr_3_0 +
      0.219154954730072978e-2 * wr_5_0 + 0.501598988543476844e0 * wr_7_0;
  results[k++] =
      -0.369001239846248829e0 * wr_5_4 - 0.459201542919776321e0 * wr_7_4;
  results[k++] =
      0.645497224367902815e-1 * wr_1_0 + 0.207446953433363160e0 * wr_3_0 +
      0.350065313202068007e0 * wr_5_0 + 0.395666618046037236e0 * wr_7_0;
  results[k++] =
      -0.278318164225627959e0 * wr_5_4 + 0.115965901760678316e0 * wr_7_4;
  results[k++] =
      -0.520685607524091885e0 * wr_5_4 + 0.216952336468371619e0 * wr_7_4;
  results[k++] =
      -0.440059656574888762e0 * wr_5_4 + 0.183358190239536984e0 * wr_7_4;
  results[k++] =
      0.290424556138011976e0 * wr_5_4 + 0.777922918226817792e0 * wr_7_4;
  results[k++] = -0.310513659574533285e0 * wr_3_0 +
                 0.419191739163896983e0 * wr_5_0 -
                 0.146853146853146853e0 * wr_7_0;
  results[k++] =
      -0.310476910221238780e0 * wr_5_4 - 0.291072103332411355e0 * wr_7_4;
  results[k++] =
      0.688530372659096335e0 * wr_1_0 - 0.322695260896342694e0 * wr_3_0 -
      0.311169167290727117e0 * wr_5_0 + 0.178992041497016845e0 * wr_7_0;
  results[k++] = -0.710669054518701448e-1 * wr_7_4;
  results[k++] = -0.793519600858154112e-1 * wr_3_0 -
                 0.535623556786762578e-1 * wr_5_0 +
                 0.547289365122326150e0 * wr_7_0;
  results[k++] =
      0.324704524929899286e0 * wr_5_4 - 0.487056787394848929e0 * wr_7_4;
  results[k++] = 0.185567404756301371e0 * wr_3_0 +
                 0.350720971611731326e0 * wr_5_0 +
                 0.409553859142554465e0 * wr_7_0;
  results[k++] =
      0.401717667590071934e0 * wr_5_4 + 0.937341224376834511e-1 * wr_7_4;
  results[k++] =
      0.843274042711567825e0 * wr_1_0 + 0.357579426204674459e0 * wr_3_0 +
      0.127034280591503147e0 * wr_5_0 - 0.230757457729875649e-1 * wr_7_0;
  results[k++] = wr_0_0 - 0.665496421874937411e0 * wr_2_0 +
                 0.175324675324675325e0 * wr_4_0 -
                 0.105056855345687334e-1 * wr_6_0;
  results[k++] =
      0.378744586270589234e0 * wr_4_4 - 0.152241847058428104e0 * wr_6_4;
  results[k++] = -0.283473354756920421e0 * wr_2_0 +
                 0.345744922388938601e0 * wr_4_0 -
                 0.111874452837595499e0 * wr_6_0;
  results[k++] =
      0.218668288837438133e0 * wr_4_4 - 0.474643105457990230e0 * wr_6_4;
  results[k++] = 0.118783079568484555e1 * wr_8_8;
  results[k++] =
      -0.229069377581349835e-1 * wr_2_0 + 0.159574579564125508e0 * wr_4_0 -
      0.198887916155725331e0 * wr_6_0 + 0.702379073826024485e-1 * wr_8_0;
  results[k++] = 0.412019792753272328e-1 * wr_4_4 -
                 0.344483975793215216e0 * wr_6_4 +
                 0.403486059121095661e0 * wr_8_4;
  results[k++] =
      0.378744586270589234e0 * wr_4_4 - 0.152241847058428104e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.399297853124962445e0 * wr_2_0 +
                 0.584415584415584416e-1 * wr_4_0 -
                 0.157585283018531000e0 * wr_6_0;
  results[k++] =
      -0.448136637958772276e0 * wr_4_4 - 0.386003534367475823e0 * wr_6_4;
  results[k++] = 0.138320833793122031e0 * wr_2_0 +
                 0.303671245482855110e0 * wr_4_0 +
                 0.382124003398503386e0 * wr_6_0;
  results[k++] = 0.107836185255053915e0 * wr_8_4 -
                 0.276201645568272714e0 * wr_6_4 +
                 0.154163690105234985e0 * wr_4_4;
  results[k++] = 0.137888196295006854e0 * wr_4_4 +
                 0.205868551662653772e0 * wr_6_4 +
                 0.723387121993683153e0 * wr_8_4;
  results[k++] = -0.410685410411477836e-1 * wr_2_0 -
                 0.699336376997684365e-1 * wr_4_0 +
                 0.587652494544261053e0 * wr_8_0;
  results[k++] = -0.283473354756920421e0 * wr_2_0 +
                 0.345744922388938601e0 * wr_4_0 -
                 0.111874452837595499e0 * wr_6_0;
  results[k++] =
      -0.448136637958772276e0 * wr_4_4 - 0.386003534367475823e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.172787070988620113e0 * wr_2_0 -
                 0.283216783216783217e0 * wr_4_0 -
                 0.214315984905202161e-1 * wr_6_0 +
                 0.759831888225714491e-1 * wr_8_0;
  results[k++] = 0.298536702183728120e0 * wr_4_4 -
                 0.534862186740501905e-2 * wr_6_4 +
                 0.534589119502542874e0 * wr_8_4;
  results[k++] = 0.602340150522363892e0 * wr_8_8;
  results[k++] =
      -0.243934688454522513e0 * wr_2_0 - 0.629370629370629371e-1 * wr_4_0 +
      0.423589240753811331e0 * wr_6_0 - 0.192332446707133980e0 * wr_8_0;
  results[k++] = 0.243754196614452811e0 * wr_4_4 -
                 0.244559362175042167e0 * wr_6_4 -
                 0.450130506658583234e0 * wr_8_4;
  results[k++] =
      0.218668288837438133e0 * wr_4_4 - 0.474643105457990230e0 * wr_6_4;
  results[k++] = 0.138320833793122031e0 * wr_2_0 +
                 0.303671245482855110e0 * wr_4_0 +
                 0.382124003398503386e0 * wr_6_0;
  results[k++] = 0.298536702183728120e0 * wr_4_4 -
                 0.534862186740501905e-2 * wr_6_4 +
                 0.534589119502542874e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.419625743829505988e0 * wr_2_0 +
                 0.121378621378621379e0 * wr_4_0 +
                 0.126068226414824800e-2 * wr_6_0 +
                 0.531882321758000144e0 * wr_8_0;
  results[k++] = 0.186777751756163192e0 * wr_8_4 -
                 0.478395283258379572e0 * wr_6_4 +
                 0.267019343944570394e0 * wr_4_4;
  results[k++] = -0.398048936244970826e0 * wr_4_4 -
                 0.385100774453161372e0 * wr_6_4 -
                 0.350824109673543761e0 * wr_8_4;
  results[k++] =
      0.995859195463938390e-1 * wr_2_0 + 0.231245535157852478e0 * wr_4_0 +
      0.345859166793258338e0 * wr_6_0 + 0.366423831988290938e0 * wr_8_0;
  results[k++] = 0.118783079568484555e1 * wr_8_8;
  results[k++] = 0.107836185255053915e0 * wr_8_4 -
                 0.276201645568272714e0 * wr_6_4 +
                 0.154163690105234985e0 * wr_4_4;
  results[k++] = 0.602340150522363892e0 * wr_8_8;
  results[k++] = 0.186777751756163192e0 * wr_8_4 -
                 0.478395283258379572e0 * wr_6_4 +
                 0.267019343944570394e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.813115628181741708e0 * wr_2_0 +
                 0.377622377622377622e0 * wr_4_0 -
                 0.100854581131859840e0 * wr_6_0 +
                 0.118723732535267889e-1 * wr_8_0;
  results[k++] = 0.200780050174121298e0 * wr_8_8;
  results[k++] = 0.152503395702274822e0 * wr_8_4 -
                 0.390608113112417935e0 * wr_6_4 +
                 0.218020381372306232e0 * wr_4_4;
  results[k++] =
      -0.229069377581349835e-1 * wr_2_0 + 0.159574579564125508e0 * wr_4_0 -
      0.198887916155725331e0 * wr_6_0 + 0.702379073826024485e-1 * wr_8_0;
  results[k++] = 0.137888196295006854e0 * wr_4_4 +
                 0.205868551662653772e0 * wr_6_4 +
                 0.723387121993683153e0 * wr_8_4;
  results[k++] =
      -0.243934688454522513e0 * wr_2_0 - 0.629370629370629371e-1 * wr_4_0 +
      0.423589240753811331e0 * wr_6_0 - 0.192332446707133980e0 * wr_8_0;
  results[k++] = -0.398048936244970826e0 * wr_4_4 -
                 0.385100774453161372e0 * wr_6_4 -
                 0.350824109673543761e0 * wr_8_4;
  results[k++] = 0.200780050174121298e0 * wr_8_8;
  results[k++] = wr_0_0 + 0.542077085454494472e-1 * wr_2_0 -
                 0.377622377622377622e0 * wr_4_0 -
                 0.194985523521595691e0 * wr_6_0 +
                 0.173336649501491118e0 * wr_8_0;
  results[k++] = 0.487508393228905621e0 * wr_4_4 +
                 0.151393890870264198e0 * wr_6_4 -
                 0.136403183835934313e-1 * wr_8_4;
  results[k++] = 0.412019792753272328e-1 * wr_4_4 -
                 0.344483975793215216e0 * wr_6_4 +
                 0.403486059121095661e0 * wr_8_4;
  results[k++] = -0.410685410411477836e-1 * wr_2_0 -
                 0.699336376997684365e-1 * wr_4_0 +
                 0.587652494544261053e0 * wr_8_0;
  results[k++] = 0.243754196614452811e0 * wr_4_4 -
                 0.244559362175042167e0 * wr_6_4 -
                 0.450130506658583234e0 * wr_8_4;
  results[k++] =
      0.995859195463938390e-1 * wr_2_0 + 0.231245535157852478e0 * wr_4_0 +
      0.345859166793258338e0 * wr_6_0 + 0.366423831988290938e0 * wr_8_0;
  results[k++] = 0.152503395702274822e0 * wr_8_4 -
                 0.390608113112417935e0 * wr_6_4 +
                 0.218020381372306232e0 * wr_4_4;
  results[k++] = 0.487508393228905621e0 * wr_4_4 +
                 0.151393890870264198e0 * wr_6_4 -
                 0.136403183835934313e-1 * wr_8_4;
  results[k++] = wr_0_0 + 0.487869376909045026e0 * wr_2_0 +
                 0.251748251748251748e0 * wr_4_0 +
                 0.806836649054878721e-1 * wr_6_0 -
                 0.332426451098750089e-1 * wr_8_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] = 0.809039834955890504e0 * wr_5_4;
  results[k++] = 0.426401432711220869e0 * wr_5_0;
  results[k++] = -0.408248290463863017e0 * wr_5_4;
  results[k++] = -0.547722557505166113e0 * wr_5_4;
  results[k++] = 0.707106781186547525e0 * wr_5_0;
  results[k++] = 0.912870929175276860e0 * wr_5_4;
  results[k++] = 0.213200716355610434e0 * wr_5_4;
  results[k++] = 0.564076074817766209e0 * wr_5_0;
  results[k++] = -0.365148371670110744e0 * wr_4_4;
  results[k++] =
      0.232367145608252291e0 * wr_4_4 + 0.741126785985553581e0 * wr_6_4;
  results[k++] = -0.577350269189625763e0 * wr_4_0;
  results[k++] =
      -0.524863881081477966e-1 * wr_4_0 + 0.524055776089376072e0 * wr_6_0;
  results[k++] =
      0.904534033733290867e0 * wr_4_4 + 0.934946990008457177e-1 * wr_6_4;
  results[k++] =
      0.603022689155527245e0 * wr_4_4 - 0.280484097002537153e0 * wr_6_4;
  results[k++] =
      0.134839972492648417e0 * wr_4_4 + 0.627181507505318077e0 * wr_6_4;
  results[k++] =
      -0.269679944985296835e0 * wr_4_4 + 0.125436301501063615e0 * wr_6_4;
  results[k++] =
      -0.522232967867093514e0 * wr_4_0 - 0.362103412188950683e0 * wr_6_0;
  results[k++] =
      0.348155311911395676e0 * wr_4_0 + 0.506944777064530956e0 * wr_6_0;
  results[k++] = -0.459933105503899923e0 * wr_6_4;
  results[k++] =
      0.674199862463242087e0 * wr_4_4 + 0.376308904503190846e0 * wr_6_4;
  results[k++] = -0.537086155529574661e0 * wr_6_4;
  results[k++] =
      0.157459164324443390e0 * wr_4_4 - 0.341782098973365693e0 * wr_6_4;
  results[k++] = -0.635488909302242538e0 * wr_6_0;
  results[k++] =
      0.694329650750884848e0 * wr_4_0 + 0.577717190274765943e-1 * wr_6_0;
  results[k++] = -0.381385035698236927e0 * wr_5_4;
  results[k++] = 0.284267621807480580e0 * wr_5_4;
  results[k++] = 0.555052722600963060e-1 * wr_7_0 +
                 0.117363131703255057e0 * wr_3_0 -
                 0.158439584782903761e0 * wr_5_0;
  results[k++] =
      0.684537243560938075e-1 * wr_5_4 + 0.660089484862333144e0 * wr_7_4;
  results[k++] =
      0.629940788348712045e0 * wr_3_0 - 0.201007563051842415e0 * wr_5_0;
  results[k++] =
      -0.281718084909505526e0 * wr_3_0 - 0.449466574975494725e0 * wr_5_0;
  results[k++] =
      -0.300617975667198279e0 * wr_5_4 + 0.450926963500797419e0 * wr_7_4;
  results[k++] = -0.572673443953374586e-1 * wr_3_0 -
                 0.154621202347571088e-1 * wr_5_0 +
                 0.568759792100389891e0 * wr_7_0;
  results[k++] = -0.288675134594812882e0 * wr_5_4;
  results[k++] =
      0.148960897931054495e0 * wr_5_4 + 0.993072652873696635e-1 * wr_7_4;
  results[k++] =
      0.532938710021193012e0 * wr_5_4 - 0.222057795842163755e0 * wr_7_4;
  results[k++] = -0.387298334620741688e0 * wr_5_4;
  results[k++] =
      -0.155440457089514629e0 * wr_5_4 + 0.666173387526491265e0 * wr_7_4;
  results[k++] = 0.150308987833599140e0 * wr_7_0 +
                 0.317820863081864106e0 * wr_3_0 -
                 0.429056423863628488e0 * wr_5_0;
  results[k++] =
      0.317783248919582924e0 * wr_5_4 + 0.297921795862108991e0 * wr_7_4;
  results[k++] = 0.500000000000000000e0 * wr_5_0;
  results[k++] = -0.679529588583500727e0 * wr_3_0 -
                 0.286675381730742269e-1 * wr_5_0 -
                 0.468670612188417256e0 * wr_7_0;
  results[k++] =
      0.332345676841428730e0 * wr_5_4 - 0.498518515262143095e0 * wr_7_4;
  results[k++] = 0.189934294099396581e0 * wr_3_0 +
                 0.358974358974358974e0 * wr_5_0 +
                 0.419191739163896983e0 * wr_7_0;
  results[k++] =
      -0.248268163218424159e0 * wr_5_4 + 0.178753077517265394e0 * wr_7_4;
  results[k++] =
      0.333086693763245633e0 * wr_5_4 - 0.355292473347462008e0 * wr_7_4;
  results[k++] = 0.258198889747161125e0 * wr_7_4;
  results[k++] =
      -0.579829508803391582e-1 * wr_5_4 + 0.765374951620476888e0 * wr_7_4;
  results[k++] = -0.337099931231621043e0 * wr_5_4;
  results[k++] = 0.175523082489666199e0 * wr_7_0 +
                 0.371134809512602742e0 * wr_3_0 -
                 0.501029959445330466e0 * wr_5_0;
  results[k++] =
      -0.463863607042713265e0 * wr_5_4 - 0.208738623169220970e0 * wr_7_4;
  results[k++] =
      -0.153408468311051085e0 * wr_5_0 + 0.472936189198135310e0 * wr_7_0;
  results[k++] =
      -0.343031763467632578e0 * wr_5_0 - 0.470007763585214359e0 * wr_7_0;
  results[k++] =
      -0.189371524583588820e0 * wr_5_4 + 0.284057286875383229e0 * wr_7_4;
  results[k++] = 0.757575757575757576e0 * wr_3_0 -
                 0.955426644844717800e-2 * wr_7_0 +
                 0.204544624414734780e0 * wr_5_0;
  results[k++] =
      -0.487869376909045026e0 * wr_4_4 - 0.235327355974339627e0 * wr_6_4;
  results[k++] = -0.288675134594812882e0 * wr_2_0 +
                 0.352089395109765171e0 * wr_4_0 -
                 0.113927366324455231e0 * wr_6_0;
  results[k++] =
      -0.456360014473132119e0 * wr_4_4 - 0.393086758835432444e0 * wr_6_4;
  results[k++] =
      0.151515151515151515e-1 * wr_2_0 + 0.140731551031455296e0 * wr_4_0 -
      0.223638385092663732e0 * wr_6_0 + 0.849517876772359836e-1 * wr_8_0;
  results[k++] = -0.148344079969205774e0 * wr_4_4 -
                 0.558127830468109500e-1 * wr_6_4 +
                 0.597688805619722217e0 * wr_8_4;
  results[k++] = 0.752923252421042699e0 * wr_2_0 +
                 0.110198459405695718e0 * wr_4_0 -
                 0.166401569208156148e0 * wr_6_0;
  results[k++] =
      0.222680885707561645e0 * wr_4_4 - 0.483352879744477248e0 * wr_6_4;
  results[k++] = 0.140859042454752763e0 * wr_2_0 +
                 0.309243659734822276e0 * wr_4_0 +
                 0.389136037874045427e0 * wr_6_0;
  results[k++] = -0.148344079969205774e0 * wr_4_4 -
                 0.558127830468109500e-1 * wr_6_4 +
                 0.597688805619722217e0 * wr_8_4;
  results[k++] =
      -0.367965367965367965e-1 * wr_2_0 - 0.603135218706236981e-1 * wr_4_0 +
      0.131551991230978666e-1 * wr_6_0 + 0.594662513740651885e0 * wr_8_0;
  results[k++] =
      0.492365963917330931e0 * wr_4_4 - 0.229014306207172235e0 * wr_6_4;
  results[k++] = -0.105289946579332697e1 * wr_8_8;
  results[k++] =
      0.389709850091555477e0 * wr_4_4 - 0.955865618745593122e-1 * wr_8_4;
  results[k++] = -0.607891790005390491e0 * wr_8_8;
  results[k++] = -0.269480403748219489e0 * wr_4_4 +
                 0.482804549585267578e0 * wr_6_4 -
                 0.188499242080693627e0 * wr_8_4;
  results[k++] =
      -0.220192753025272121e0 * wr_4_4 + 0.102418311299837831e0 * wr_6_4;
  results[k++] = -0.426401432711220869e0 * wr_2_0 +
                 0.403388018526981365e0 * wr_4_0 -
                 0.622592505853877306e-1 * wr_8_0;
  results[k++] =
      0.348567086522388276e0 * wr_4_4 - 0.641214150261013041e0 * wr_8_4;
  results[k++] =
      0.246182981958665466e0 * wr_2_0 + 0.635171402957515734e-1 * wr_4_0 -
      0.427493371586721506e0 * wr_6_0 + 0.194105133459097048e0 * wr_8_0;
  results[k++] = 0.401717667590071934e0 * wr_4_4 +
                 0.388650165378777433e0 * wr_6_4 +
                 0.354057579959680674e0 * wr_8_4;
  results[k++] =
      0.284267621807480580e0 * wr_4_0 + 0.413918677192357833e0 * wr_6_0;
  results[k++] =
      -0.104154338520973851e0 * wr_4_4 + 0.357652165314269251e0 * wr_8_4;
  results[k++] = 0.764470787156438317e0 * wr_2_0 +
                 0.176784996815592202e0 * wr_4_0 +
                 0.520898262467621569e0 * wr_8_0;
  results[k++] = 0.246000826564165886e0 * wr_4_4 -
                 0.246813413162374377e0 * wr_6_4 -
                 0.454279262624980954e0 * wr_8_4;
  results[k++] =
      0.100503781525921207e0 * wr_2_0 + 0.233376875468045338e0 * wr_4_0 +
      0.349046876269824013e0 * wr_6_0 + 0.369801081556369621e0 * wr_8_0;
  results[k++] = -0.846895203943354312e-1 * wr_4_4 -
                 0.307254933899513492e0 * wr_6_4 +
                 0.182796469472616796e0 * wr_8_4;
  results[k++] = -0.470870955797418726e0 * wr_8_8;
  results[k++] = -0.396098961957259404e0 * wr_4_4 -
                 0.383214231015951250e0 * wr_6_4 +
                 0.299233270121806085e0 * wr_8_4;
  results[k++] = -0.271857473083216076e0 * wr_8_8;
  results[k++] = -0.602576501385107900e0 * wr_4_4 -
                 0.107958379271882620e0 * wr_6_4 +
                 0.204727172085529641e0 * wr_8_4;
  results[k++] = -0.197792106625607699e-1 * wr_4_4 +
                 0.279063915234054750e0 * wr_6_4 +
                 0.782687721644874330e0 * wr_8_4;
  results[k++] = -0.299762730760179139e0 * wr_4_0 +
                 0.432323958491572922e0 * wr_6_0 -
                 0.159946910788539695e0 * wr_8_0;
  results[k++] = 0.185017574200321020e0 * wr_4_4 -
                 0.149165937116793999e0 * wr_6_4 -
                 0.183034330951863158e0 * wr_8_4;
  results[k++] =
      0.574959574576068970e0 * wr_2_0 - 0.370860199923014437e0 * wr_4_0 -
      0.249602353812234222e0 * wr_6_0 + 0.176295748363278316e0 * wr_8_0;
  results[k++] = -0.469105170104850986e0 * wr_4_4 -
                 0.176495516980754720e0 * wr_6_4 -
                 0.120941208605640839e0 * wr_8_4;
  results[k++] = -0.872181209038214775e-1 * wr_4_0 -
                 0.471704110602518933e-1 * wr_6_0 +
                 0.558452438752633937e0 * wr_8_0;
  results[k++] = -0.377665541865259920e-1 * wr_4_4 +
                 0.365380432940227450e0 * wr_6_4 -
                 0.448340716243770378e0 * wr_8_4;
  results[k++] = 0.203962703962703963e0 * wr_4_0 +
                 0.352991033961509441e0 * wr_6_0 +
                 0.391788317366384034e0 * wr_8_0;
  results[k++] = -0.196240772033598325e0 * wr_4_4 +
                 0.351587485524437206e0 * wr_6_4 +
                 0.117658924187277477e0 * wr_8_4;
  results[k++] =
      0.801742821534724420e0 * wr_2_0 + 0.310283904708021821e0 * wr_4_0 +
      0.994439580778626656e-1 * wr_6_0 - 0.301019603068296206e-1 * wr_8_0;
  results[k++] =
      0.569275042553311023e0 * wr_1_0 - 0.609836721136306281e0 * wr_3_0 +
      0.205819058080579547e0 * wr_5_0 - 0.142426595025822533e-1 * wr_7_0;
  results[k++] =
      -0.889239964140522027e-1 * wr_5_4 - 0.169379040788670862e0 * wr_7_4;
  results[k++] =
      -0.173205080756887729e0 * wr_1_0 - 0.144313707876250396e0 * wr_3_0 +
      0.382687475810238446e0 * wr_5_0 - 0.151669277893437304e0 * wr_7_0;
  results[k++] =
      -0.330044742431166571e0 * wr_5_4 - 0.410722346136562844e0 * wr_7_4;
  results[k++] = 0.829117846030756502e0 * wr_9_8;
  results[k++] =
      -0.139963701621727458e-1 * wr_1_0 + 0.444042178080770448e-1 * wr_3_0 +
      0.139159082112813980e0 * wr_5_0 - 0.263686456991204725e0 * wr_7_0 +
      0.107016636038345143e0 * wr_9_0;
  results[k++] = -0.179653602498812993e0 * wr_5_4 -
                 0.138086690548107242e0 * wr_7_4 +
                 0.550709329733834074e0 * wr_9_4;
  results[k++] =
      0.390514205643068914e0 * wr_5_4 - 0.115707912783131530e0 * wr_7_4;
  results[k++] =
      0.833333333333333333e0 * wr_1_0 + 0.297569850321807792e0 * wr_3_0 +
      0.200858833795035967e-1 * wr_5_0 - 0.145943830699286974e0 * wr_7_0;
  results[k++] =
      -0.330044742431166571e0 * wr_5_4 - 0.410722346136562844e0 * wr_7_4;
  results[k++] =
      0.577350269189625763e-1 * wr_1_0 + 0.185546195840893366e0 * wr_3_0 +
      0.313107934753831454e0 * wr_5_0 + 0.353894981751353710e0 * wr_7_0;
  results[k++] = 0.100545307507923807e0 * wr_9_4 +
                 0.196800661251332709e0 * wr_5_4 -
                 0.270118554658691953e0 * wr_7_4;
  results[k++] =
      0.104693931368143470e0 * wr_7_4 + 0.674478427219012824e0 * wr_9_4;
  results[k++] =
      -0.171419825742193339e-1 * wr_1_0 - 0.492044248830167210e-1 * wr_3_0 -
      0.568114573750766458e-1 * wr_5_0 + 0.339945932479365064e-1 * wr_7_0 +
      0.611651021993869740e0 * wr_9_0;
  results[k++] =
      0.461538461538461538e0 * wr_5_4 - 0.192307692307692308e0 * wr_7_4;
  results[k++] = -0.748420580346990092e0 * wr_9_8;
  results[k++] = 0.266469355010596506e0 * wr_5_4 +
                 0.587800047817492292e-1 * wr_7_4 -
                 0.907593266222561522e-1 * wr_9_4;
  results[k++] =
      0.604003450200827713e-1 * wr_7_0 + 0.300617975667198279e0 * wr_3_0 -
      0.213200716355610434e0 * wr_1_0 - 0.805006723250430275e-2 * wr_9_0 -
      0.188422287906398315e0 * wr_5_0;
  results[k++] = -0.561315435260242569e0 * wr_9_8;
  results[k++] = -0.326356975932252704e0 * wr_5_4 +
                 0.447940947357993907e0 * wr_7_4 -
                 0.166735529717343503e0 * wr_9_4;
  results[k++] = 0.275240941281590151e0 * wr_3_0 -
                 0.371573762722806118e0 * wr_5_0 +
                 0.130171401881022971e0 * wr_7_0;
  results[k++] =
      0.275208366461512579e0 * wr_5_4 + 0.258007843557668043e0 * wr_7_4;
  results[k++] =
      -0.682242292337953393e0 * wr_1_0 + 0.285587076883838365e0 * wr_3_0 +
      0.188422287906398315e0 * wr_5_0 + 0.573803277690786327e-1 * wr_7_0 -
      0.966008067900516327e-1 * wr_9_0;
  results[k++] =
      -0.227822549776906875e-1 * wr_7_4 - 0.608832071758413405e0 * wr_9_4;
  results[k++] = -0.561315435260242569e0 * wr_9_8;
  results[k++] =
      0.127920429813366261e0 * wr_1_0 + 0.220453182155945405e0 * wr_3_0 -
      0.628074293021327717e-1 * wr_5_0 - 0.398642277132546290e0 * wr_7_0 +
      0.217351815277616174e0 * wr_9_0;
  results[k++] = 0.243252127705259949e0 * wr_5_4 +
                 0.360585506951326512e0 * wr_7_4 +
                 0.372831978712416370e0 * wr_9_4;
  results[k++] =
      0.287819798982610876e0 * wr_5_4 - 0.431729698473916316e0 * wr_7_4;
  results[k++] = 0.164487923739942247e0 * wr_3_0 +
                 0.310880914179029257e0 * wr_5_0 +
                 0.363030695172514970e0 * wr_7_0;
  results[k++] = 0.243252127705259949e0 * wr_5_4 -
                 0.300487922459438761e-1 * wr_7_4 +
                 0.497109304949888494e0 * wr_9_4;
  results[k++] =
      0.835572748587349624e0 * wr_1_0 + 0.316459754630225381e0 * wr_3_0 +
      0.769230769230769231e-1 * wr_5_0 + 0.739750127936288794e-2 * wr_7_0 +
      0.552119599212559137e0 * wr_9_0;
  results[k++] = 0.326356975932252704e0 * wr_5_4 -
                 0.447940947357993907e0 * wr_7_4 +
                 0.166735529717343503e0 * wr_9_4;
  results[k++] = -0.243252127705259949e0 * wr_5_4 -
                 0.360585506951326512e0 * wr_7_4 -
                 0.372831978712416370e0 * wr_9_4;
  results[k++] =
      0.426401432711220869e-1 * wr_1_0 + 0.140288388644692531e0 * wr_3_0 +
      0.251229717208531087e0 * wr_5_0 + 0.338241932112463520e0 * wr_7_0 +
      0.338102823765180715e0 * wr_9_0;
  results[k++] = 0.990067365840385401e0 * wr_9_8;
  results[k++] =
      -0.328833526102910251e0 * wr_7_4 + 0.175754680260498764e0 * wr_9_4;
  results[k++] = 0.167351929341571299e0 * wr_9_8;
  results[k++] = -0.238337436689687193e0 * wr_5_4 -
                 0.394308259229261901e0 * wr_7_4 +
                 0.263827231095312475e0 * wr_9_4;
  results[k++] =
      -0.135059277329345977e0 * wr_7_0 - 0.672202228850233051e0 * wr_3_0 +
      0.476731294622796159e0 * wr_1_0 + 0.180004975553232256e-1 * wr_9_0 +
      0.421325044234743166e0 * wr_5_0;
  results[k++] = -0.836759646707856497e-1 * wr_9_8;
  results[k++] = -0.437853829869467910e0 * wr_5_4 -
                 0.143089486885447029e0 * wr_7_4 +
                 0.173988256732460973e0 * wr_9_4;
  results[k++] =
      -0.247240133282009624e-1 * wr_3_0 + 0.173561869174697295e0 * wr_5_0 -
      0.223540365274415445e0 * wr_7_0 + 0.815669528545610622e-1 * wr_9_0;
  results[k++] = 0.160687067036028773e0 * wr_5_4 +
                 0.265842574140488780e0 * wr_7_4 +
                 0.752536581578343929e0 * wr_9_4;
  results[k++] = -0.263284623734499299e0 * wr_3_0 +
                 0.412614582340481873e0 * wr_7_0 -
                 0.206809971750817808e0 * wr_9_0;
  results[k++] = -0.278318164225627959e0 * wr_5_4 -
                 0.300829192214465515e0 * wr_7_4 -
                 0.260686318769578582e0 * wr_9_4;
  results[k++] = 0.218491736845832272e0 * wr_9_8;
  results[k++] =
      0.746894396597953794e0 * wr_1_0 - 0.117015388326444133e0 * wr_3_0 -
      0.366716380479073968e0 * wr_5_0 - 0.126958333027840576e0 * wr_7_0 +
      0.166074674284747633e0 * wr_9_0;
  results[k++] = 0.568114573750766458e-1 * wr_5_4 -
                 0.200511026029682279e-1 * wr_7_4 -
                 0.677248370813624286e-1 * wr_9_4;
  results[k++] = 0.656002204171109029e-1 * wr_5_4 -
                 0.361765921417891009e0 * wr_7_4 +
                 0.368666127529053958e0 * wr_9_4;
  results[k++] =
      -0.504676808732190352e-1 * wr_3_0 - 0.708563363802828139e-1 * wr_5_0 +
      0.121679962630596792e-1 * wr_7_0 + 0.599392243101979172e0 * wr_9_0;
  results[k++] = 0.310476910221238780e0 * wr_5_4 -
                 0.154096995881864835e0 * wr_7_4 -
                 0.436211644757652189e0 * wr_9_4;
  results[k++] =
      0.122377622377622378e0 * wr_3_0 + 0.245453549297681736e0 * wr_5_0 +
      0.341424521613627096e0 * wr_7_0 + 0.346059272905101283e0 * wr_9_0;
  results[k++] = 0.133008939580240918e0 * wr_9_4 +
                 0.260342803762045942e0 * wr_5_4 -
                 0.357333260065553255e0 * wr_7_4;
  results[k++] = 0.426905751554203323e0 * wr_5_4 +
                 0.205462661175819780e0 * wr_7_4 +
                 0.198278020344387359e-1 * wr_9_4;
  results[k++] =
      0.850376678812259408e0 * wr_1_0 + 0.399683641013572184e0 * wr_3_0 +
      0.200411983778132186e0 * wr_5_0 + 0.550660650947972390e-1 * wr_7_0 -
      0.385303926989113715e-1 * wr_9_0;
  results[k++] = wr_0_0 - 0.189726979909073065e0 * wr_2_0 -
                 0.440559440559440559e0 * wr_4_0 +
                 0.228603717232215638e0 * wr_6_0 -
                 0.189957972056428623e-1 * wr_8_0;
  results[k++] = 0.464390425619132630e0 * wr_4_4 +
                 0.570519665856535365e-1 * wr_6_4 -
                 0.133647279875635719e0 * wr_8_4;
  results[k++] = -0.543714946166432150e0 * wr_8_8;
  results[k++] =
      0.220192753025272121e0 * wr_2_0 + 0.568114573750766458e-1 * wr_4_0 -
      0.382361695519394568e0 * wr_6_0 + 0.173612909278483956e0 * wr_8_0;
  results[k++] = 0.220029828287444381e0 * wr_4_4 -
                 0.220756627835924177e0 * wr_6_4 -
                 0.406319724799174785e0 * wr_8_4;
  results[k++] =
      0.447920266319761413e0 * wr_8_8 + 0.904832166437670389e0 * wr_10_8;
  results[k++] =
      -0.197792106625607699e-1 * wr_2_0 + 0.663414893741618043e-1 * wr_4_0 +
      0.131324195404261059e0 * wr_6_0 - 0.290469993935938235e0 * wr_8_0 +
      0.124241381963043532e0 * wr_10_0;
  results[k++] =
      0.351046164979332398e-1 * wr_4_4 - 0.184982004157850562e0 * wr_6_4 -
      0.193858259841655415e0 * wr_8_4 + 0.514665332254088043e0 * wr_10_4;
  results[k++] = 0.464390425619132630e0 * wr_4_4 +
                 0.570519665856535365e-1 * wr_6_4 -
                 0.133647279875635719e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.460765522636320303e0 * wr_2_0 +
                 0.188811188811188811e0 * wr_4_0 -
                 0.134472774842479787e-1 * wr_6_0 -
                 0.132970580439500036e0 * wr_8_0;
  results[k++] = -0.241030600554043160e0 * wr_4_4 +
                 0.431833517087530481e0 * wr_6_4 -
                 0.168598847599847940e0 * wr_8_4;
  results[k++] = 0.359307204997625986e0 * wr_4_4 +
                 0.347619275701392656e0 * wr_6_4 +
                 0.316678726695565293e0 * wr_8_4;
  results[k++] =
      0.898933149950989449e-1 * wr_2_0 + 0.208738623169220970e0 * wr_4_0 +
      0.312197017069313887e0 * wr_6_0 + 0.330760142605194479e0 * wr_8_0;
  results[k++] =
      0.107792161499287796e0 * wr_4_4 + 0.568005352453255974e-1 * wr_6_4 -
      0.337314433197030700e0 * wr_8_4 + 0.167610787855669120e0 * wr_10_4;
  results[k++] =
      0.839160839160839161e-1 * wr_4_4 + 0.928602291042202346e-1 * wr_6_4 +
      0.199266246953933504e0 * wr_8_4 + 0.717666517566456846e0 * wr_10_4;
  results[k++] =
      -0.275807915296019396e-1 * wr_2_0 - 0.555052722600963060e-1 * wr_4_0 -
      0.523208118149977045e-1 * wr_6_0 + 0.495968638436316011e-1 * wr_8_0 +
      0.623686787578981297e0 * wr_10_0;
  results[k++] = -0.543714946166432150e0 * wr_8_8;
  results[k++] = -0.241030600554043160e0 * wr_4_4 +
                 0.431833517087530481e0 * wr_6_4 -
                 0.168598847599847940e0 * wr_8_4;
  results[k++] =
      wr_0_0 - 0.774023530673004127e0 * wr_2_0 +
      0.307692307692307692e0 * wr_4_0 - 0.489441349610496284e-1 * wr_6_0 -
      0.687347925204182516e-2 * wr_8_0 + 0.272837324062624435e-2 * wr_10_0;
  results[k++] =
      -0.116241081679754435e0 * wr_8_8 + 0.570732381065377759e0 * wr_10_8;
  results[k++] =
      -0.177646236673731004e0 * wr_4_4 + 0.189559819598673410e0 * wr_6_4 +
      0.882914396171064759e-1 * wr_8_4 - 0.863218660636198224e-1 * wr_10_4;
  results[k++] =
      -0.192307692307692308e0 * wr_2_0 + 0.344010458076890723e0 * wr_4_0 -
      0.255365630036605645e0 * wr_6_0 + 0.922174010969995876e-1 * wr_8_0 -
      0.134218216748696812e-1 * wr_10_0;
  results[k++] =
      0.271480678067646536e0 * wr_8_8 - 0.488746011664007429e0 * wr_10_8;
  results[k++] =
      0.708563363802828139e-1 * wr_4_4 - 0.352838323145813354e0 * wr_6_4 +
      0.422593220919104328e0 * wr_8_4 - 0.151494260112299305e0 * wr_10_4;
  results[k++] =
      0.220192753025272121e0 * wr_2_0 + 0.568114573750766458e-1 * wr_4_0 -
      0.382361695519394568e0 * wr_6_0 + 0.173612909278483956e0 * wr_8_0;
  results[k++] = 0.359307204997625986e0 * wr_4_4 +
                 0.347619275701392656e0 * wr_6_4 +
                 0.316678726695565293e0 * wr_8_4;
  results[k++] =
      -0.116241081679754435e0 * wr_8_8 + 0.570732381065377759e0 * wr_10_8;
  results[k++] =
      wr_0_0 + 0.516015687115336084e-1 * wr_2_0 -
      0.307692307692307692e0 * wr_4_0 - 0.946253275913626147e-1 * wr_6_0 -
      0.100352797079810648e0 * wr_8_0 + 0.122776795828180996e0 * wr_10_0;
  results[k++] =
      -0.397229061149478654e0 * wr_4_4 - 0.734705646870399789e-1 * wr_6_4 -
      0.789702643260672338e-2 * wr_8_4 - 0.579064681388658328e0 * wr_10_4;
  results[k++] =
      -0.519845920828072715e0 * wr_8_8 - 0.357334992286299584e0 * wr_10_8;
  results[k++] =
      0.180772950415532370e0 * wr_2_0 + 0.179653602498812993e0 * wr_4_0 -
      0.133360350865266767e0 * wr_6_0 - 0.369218747489717991e0 * wr_8_0 +
      0.231307486325852555e0 * wr_10_0;
  results[k++] =
      -0.221815418696065267e0 * wr_4_4 + 0.112710067945868015e0 * wr_6_4 +
      0.314982389601901143e0 * wr_8_4 + 0.377465916819237448e0 * wr_10_4;
  results[k++] = 0.220029828287444381e0 * wr_4_4 -
                 0.220756627835924177e0 * wr_6_4 -
                 0.406319724799174785e0 * wr_8_4;
  results[k++] =
      0.898933149950989449e-1 * wr_2_0 + 0.208738623169220970e0 * wr_4_0 +
      0.312197017069313887e0 * wr_6_0 + 0.330760142605194479e0 * wr_8_0;
  results[k++] =
      -0.177646236673731004e0 * wr_4_4 + 0.189559819598673410e0 * wr_6_4 +
      0.882914396171064759e-1 * wr_8_4 - 0.863218660636198224e-1 * wr_10_4;
  results[k++] =
      -0.397229061149478654e0 * wr_4_4 - 0.734705646870399789e-1 * wr_6_4 -
      0.789702643260672338e-2 * wr_8_4 - 0.579064681388658328e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.464414118403802475e0 * wr_2_0 +
      0.205128205128205128e0 * wr_4_0 + 0.391553079688397026e-1 * wr_6_0 +
      0.192457419057171105e-1 * wr_8_0 + 0.572958380531511314e0 * wr_10_0;
  results[k++] =
      0.278060342804635058e0 * wr_4_4 - 0.141289547475076882e0 * wr_6_4 -
      0.394851321630336169e0 * wr_8_4 + 0.239346734973978775e0 * wr_10_4;
  results[k++] =
      -0.324704524929899286e0 * wr_4_4 - 0.318981914238179507e0 * wr_6_4 -
      0.338130470688998488e0 * wr_8_4 - 0.297528820421117478e0 * wr_10_4;
  results[k++] =
      0.686063526935265157e-1 * wr_2_0 + 0.163635699531787824e0 * wr_4_0 +
      0.260292752275711634e0 * wr_6_0 + 0.328988376295339939e0 * wr_8_0 +
      0.316026189890517889e0 * wr_10_0;
  results[k++] =
      0.447920266319761413e0 * wr_8_8 + 0.904832166437670389e0 * wr_10_8;
  results[k++] =
      0.107792161499287796e0 * wr_4_4 + 0.568005352453255974e-1 * wr_6_4 -
      0.337314433197030700e0 * wr_8_4 + 0.167610787855669120e0 * wr_10_4;
  results[k++] =
      -0.192307692307692308e0 * wr_2_0 + 0.344010458076890723e0 * wr_4_0 -
      0.255365630036605645e0 * wr_6_0 + 0.922174010969995876e-1 * wr_8_0 -
      0.134218216748696812e-1 * wr_10_0;
  results[k++] =
      -0.519845920828072715e0 * wr_8_8 - 0.357334992286299584e0 * wr_10_8;
  results[k++] =
      0.278060342804635058e0 * wr_4_4 - 0.141289547475076882e0 * wr_6_4 -
      0.394851321630336169e0 * wr_8_4 + 0.239346734973978775e0 * wr_10_4;
  results[k++] =
      wr_0_0 - 0.430013072596113405e0 * wr_2_0 -
      0.307692307692307692e0 * wr_4_0 + 0.407867791342080235e0 * wr_6_0 -
      0.171836981301045629e0 * wr_8_0 + 0.267380577581371946e-1 * wr_10_0;
  results[k++] =
      0.303524625368496953e0 * wr_8_8 + 0.198703510147750131e-1 * wr_10_8;
  results[k++] =
      0.316879169565807524e0 * wr_4_4 - 0.338130203837604044e0 * wr_6_4 -
      0.157491194800950572e0 * wr_8_4 + 0.153977938096425532e0 * wr_10_4;
  results[k++] =
      -0.197792106625607699e-1 * wr_2_0 + 0.663414893741618043e-1 * wr_4_0 +
      0.131324195404261059e0 * wr_6_0 - 0.290469993935938235e0 * wr_8_0 +
      0.124241381963043532e0 * wr_10_0;
  results[k++] =
      0.839160839160839161e-1 * wr_4_4 + 0.928602291042202346e-1 * wr_6_4 +
      0.199266246953933504e0 * wr_8_4 + 0.717666517566456846e0 * wr_10_4;
  results[k++] =
      0.271480678067646536e0 * wr_8_8 - 0.488746011664007429e0 * wr_10_8;
  results[k++] =
      0.180772950415532370e0 * wr_2_0 + 0.179653602498812993e0 * wr_4_0 -
      0.133360350865266767e0 * wr_6_0 - 0.369218747489717991e0 * wr_8_0 +
      0.231307486325852555e0 * wr_10_0;
  results[k++] =
      -0.324704524929899286e0 * wr_4_4 - 0.318981914238179507e0 * wr_6_4 -
      0.338130470688998488e0 * wr_8_4 - 0.297528820421117478e0 * wr_10_4;
  results[k++] =
      0.303524625368496953e0 * wr_8_8 + 0.198703510147750131e-1 * wr_10_8;
  results[k++] =
      wr_0_0 + 0.195460487543687911e0 * wr_2_0 -
      0.251748251748251748e0 * wr_4_0 - 0.318878455049262730e0 * wr_6_0 -
      0.593618662676339444e-1 * wr_8_0 + 0.155517274715695928e0 * wr_10_0;
  results[k++] =
      0.518049207760898856e0 * wr_4_4 + 0.219361672230579411e0 * wr_6_4 +
      0.613033644336383781e-1 * wr_8_4 - 0.339065558885466470e-1 * wr_10_4;
  results[k++] =
      0.351046164979332398e-1 * wr_4_4 - 0.184982004157850562e0 * wr_6_4 -
      0.193858259841655415e0 * wr_8_4 + 0.514665332254088043e0 * wr_10_4;
  results[k++] =
      -0.275807915296019396e-1 * wr_2_0 - 0.555052722600963060e-1 * wr_4_0 -
      0.523208118149977045e-1 * wr_6_0 + 0.495968638436316011e-1 * wr_8_0 +
      0.623686787578981297e0 * wr_10_0;
  results[k++] =
      0.708563363802828139e-1 * wr_4_4 - 0.352838323145813354e0 * wr_6_4 +
      0.422593220919104328e0 * wr_8_4 - 0.151494260112299305e0 * wr_10_4;
  results[k++] =
      -0.221815418696065267e0 * wr_4_4 + 0.112710067945868015e0 * wr_6_4 +
      0.314982389601901143e0 * wr_8_4 + 0.377465916819237448e0 * wr_10_4;
  results[k++] =
      0.686063526935265157e-1 * wr_2_0 + 0.163635699531787824e0 * wr_4_0 +
      0.260292752275711634e0 * wr_6_0 + 0.328988376295339939e0 * wr_8_0 +
      0.316026189890517889e0 * wr_10_0;
  results[k++] =
      0.316879169565807524e0 * wr_4_4 - 0.338130203837604044e0 * wr_6_4 -
      0.157491194800950572e0 * wr_8_4 + 0.153977938096425532e0 * wr_10_4;
  results[k++] =
      0.518049207760898856e0 * wr_4_4 + 0.219361672230579411e0 * wr_6_4 +
      0.613033644336383781e-1 * wr_8_4 - 0.339065558885466470e-1 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.508197267613588569e0 * wr_2_0 +
      0.298368298368298368e0 * wr_4_0 + 0.148315560488029177e0 * wr_6_0 +
      0.312430875092810235e-1 * wr_8_0 - 0.425626225537694118e-1 * wr_10_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] = 0.113227703414459575e0 * wr_6_4;
  results[k++] = 0.759554525312749961e0 * wr_6_4;
  results[k++] = 0.438529009653514607e0 * wr_6_0;
  results[k++] = -0.511766315719158976e0 * wr_6_4;
  results[k++] = -0.597614304667196822e0 * wr_6_4;
  results[k++] = 0.707106781186547525e0 * wr_6_0;
  results[k++] = 0.851630627252640126e0 * wr_6_4;
  results[k++] = 0.256776295506547749e0 * wr_6_4;
  results[k++] = 0.554700196225229121e0 * wr_6_0;
  results[k++] = -0.337099931231621043e0 * wr_5_4;
  results[k++] =
      -0.233376875468045338e0 * wr_5_4 + 0.114095361339933276e0 * wr_7_4;
  results[k++] = -0.452267016866645435e0 * wr_5_4;
  results[k++] =
      0.243528393697424465e0 * wr_5_4 + 0.765374951620476888e0 * wr_7_4;
  results[k++] = -0.583874208121142227e0 * wr_5_0;
  results[k++] =
      -0.449134006247032482e-1 * wr_5_0 + 0.538461538461538462e0 * wr_7_0;
  results[k++] =
      0.820412654142366991e0 * wr_5_4 + 0.140642169281548627e0 * wr_7_4;
  results[k++] =
      0.351605423203871568e0 * wr_5_4 - 0.375045784750796339e0 * wr_7_4;
  results[k++] =
      0.191607115507975624e0 * wr_5_4 + 0.602193791596494819e0 * wr_7_4;
  results[k++] = -0.355841785943383303e0 * wr_5_4;
  results[k++] =
      -0.506944777064530956e0 * wr_5_0 - 0.372104203767625369e0 * wr_7_0;
  results[k++] =
      0.362103412188950683e0 * wr_5_0 + 0.496138938356833826e0 * wr_7_0;
  results[k++] = -0.507092552837109947e0 * wr_7_4;
  results[k++] =
      0.780142388980169149e0 * wr_5_4 + 0.351064075041076117e0 * wr_7_4;
  results[k++] = -0.560611910581388099e0 * wr_7_4;
  results[k++] =
      0.235221780663519482e0 * wr_5_4 - 0.301867951851516669e0 * wr_7_4;
  results[k++] = -0.632455532033675868e0 * wr_7_0;
  results[k++] =
      0.681737488500919750e0 * wr_5_0 + 0.486504255410519898e-1 * wr_7_0;
  results[k++] =
      0.105626818532929551e1 * wr_4_4 - 0.509498671198004514e-1 * wr_6_4;
  results[k++] =
      0.524863881081477966e0 * wr_4_4 - 0.244130070695261210e0 * wr_6_4;
  results[k++] = 0.118053596233703983e1 * wr_8_8;
  results[k++] = 0.126391064911197754e0 * wr_4_4 -
                 0.262027888044688036e0 * wr_6_4 +
                 0.107173930156805532e0 * wr_8_4;
  results[k++] =
      0.157459164324443390e0 * wr_4_4 - 0.341782098973365693e0 * wr_6_4;
  results[k++] =
      -0.234726263406510114e0 * wr_4_4 + 0.109178286685286682e0 * wr_6_4;
  results[k++] = 0.698065548440792421e-1 * wr_8_0 +
                 0.130827181355732216e0 * wr_4_0 -
                 0.188681644241007573e0 * wr_6_0;
  results[k++] = 0.113047605156010639e0 * wr_4_4 +
                 0.195304056556208968e0 * wr_6_4 +
                 0.718944579739295590e0 * wr_8_4;
  results[k++] =
      0.609836721136306281e0 * wr_4_0 - 0.197327986846467998e0 * wr_6_0;
  results[k++] =
      -0.303030303030303030e0 * wr_4_0 - 0.441238792451886803e0 * wr_6_0;
  results[k++] = 0.401008127440805895e0 * wr_8_4 +
                 0.337794329748005561e-1 * wr_4_4 -
                 0.326806194281060772e0 * wr_6_4;
  results[k++] =
      -0.573350763461484538e-1 * wr_4_0 + 0.584043540280997388e0 * wr_8_0;
  results[k++] = -0.361873432227872942e0 * wr_6_4;
  results[k++] = 0.638690385026585414e0 * wr_4_4 +
                 0.132410224425712430e0 * wr_6_4 +
                 0.157550742895558791e0 * wr_8_4;
  results[k++] = 0.485071250072665948e0 * wr_8_8;
  results[k++] = 0.408044319284273949e0 * wr_4_4 +
                 0.394771016975861392e0 * wr_6_4 -
                 0.308257399642553820e0 * wr_8_4;
  results[k++] = -0.422577127364258289e0 * wr_6_4;
  results[k++] = 0.149165937116793999e0 * wr_4_4 -
                 0.120261423230208663e0 * wr_6_4 +
                 0.674591978478308473e0 * wr_8_4;
  results[k++] = 0.164770510914326917e0 * wr_8_0 +
                 0.308802827493980659e0 * wr_4_0 -
                 0.445361771415123290e0 * wr_6_0;
  results[k++] = -0.190597243040348781e0 * wr_4_4 +
                 0.153664409950639378e0 * wr_6_4 +
                 0.188554190119196611e0 * wr_8_4;
  results[k++] = 0.500000000000000000e0 * wr_6_0;
  results[k++] = -0.657759956154893329e0 * wr_4_0 -
                 0.203278907045435427e-1 * wr_6_0 -
                 0.481325470076949472e0 * wr_8_0;
  results[k++] = -0.461861554655761368e0 * wr_8_4 -
                 0.389054993191739014e-1 * wr_4_4 +
                 0.376399396004920483e0 * wr_6_4;
  results[k++] = 0.210113710691374667e0 * wr_4_0 +
                 0.363636363636363636e0 * wr_6_0 +
                 0.403603676397787480e0 * wr_8_0;
  results[k++] = 0.994100243495416847e0 * wr_8_8;
  results[k++] = 0.740958573634948400e0 * wr_8_8;
  results[k++] = 0.125436301501063615e1 * wr_4_4 -
                 0.269679944985296835e0 * wr_6_4 +
                 0.300828418798093419e-1 * wr_8_4;
  results[k++] = 0.331366747831805615e0 * wr_8_8;
  results[k++] =
      -0.240877516638597928e0 * wr_6_4 + 0.222287572090484522e0 * wr_8_4;
  results[k++] =
      0.179539500485080536e0 * wr_6_4 - 0.402373908081478248e0 * wr_8_4;
  results[k++] = 0.134534558799262493e0 * wr_8_8;
  results[k++] = 0.509270093945047805e0 * wr_4_4 +
                 0.211680241894525452e0 * wr_6_4 +
                 0.245086297433098318e0 * wr_8_4;
  results[k++] =
      -0.726273039202562900e-1 * wr_6_4 + 0.737244472183214054e0 * wr_8_4;
  results[k++] =
      -0.378932373372536737e0 * wr_6_4 - 0.785013693256009244e-1 * wr_8_4;
  results[k++] = 0.176991920503239333e0 * wr_8_0 +
                 0.331707446870809021e0 * wr_4_0 -
                 0.478395283258379572e0 * wr_6_0;
  results[k++] = 0.153550710778615360e0 * wr_4_4 -
                 0.420358031780877315e0 * wr_6_4 -
                 0.213341806968768902e0 * wr_8_4;
  results[k++] =
      -0.156892908110547225e0 * wr_6_0 + 0.480196038399024745e0 * wr_8_0;
  results[k++] =
      -0.350823207722811686e0 * wr_6_0 - 0.460178993308422264e0 * wr_8_0;
  results[k++] = 0.271735509204003199e0 * wr_8_4 +
                 0.228899884862929071e-1 * wr_4_4 -
                 0.221453984438495496e0 * wr_6_4;
  results[k++] = 0.741720399846028873e0 * wr_4_0 +
                 0.185418891403373994e0 * wr_6_0 -
                 0.158306386285392773e-1 * wr_8_0;
  results[k++] =
      0.444619982070261014e0 * wr_5_4 - 0.338758081577341725e-1 * wr_7_4;
  results[k++] =
      -0.475318754348711286e0 * wr_5_4 + 0.198049480978629703e0 * wr_7_4;
  results[k++] = 0.827410083463667570e0 * wr_9_8;
  results[k++] = 0.187468244875366902e0 * wr_5_4 -
                 0.265842574140488780e0 * wr_7_4 +
                 0.100338210877112524e0 * wr_9_4;
  results[k++] =
      -0.463960235229792608e0 * wr_5_4 - 0.227245829500306583e0 * wr_7_4;
  results[k++] = -0.283458892937419802e0 * wr_3_0 +
                 0.382667952433146934e0 * wr_5_0 -
                 0.134057968620145552e0 * wr_7_0;
  results[k++] =
      -0.283425345521131256e0 * wr_5_4 - 0.265711261426060552e0 * wr_7_4;
  results[k++] =
      0.377665541865259920e-1 * wr_3_0 + 0.132560067208512173e0 * wr_5_0 -
      0.259512296669515294e0 * wr_7_0 + 0.106796210189405828e0 * wr_9_0;
  results[k++] =
      0.103036624962554511e0 * wr_7_4 + 0.673089180785797203e0 * wr_9_4;
  results[k++] = 0.724380975354177965e0 * wr_3_0 -
                 0.159873456405428874e0 * wr_7_0 +
                 0.855671554451172593e-1 * wr_5_0;
  results[k++] =
      0.296413321380174009e0 * wr_5_4 - 0.444619982070261014e0 * wr_7_4;
  results[k++] = 0.169399089204529523e0 * wr_3_0 +
                 0.320162979236457073e0 * wr_5_0 +
                 0.373869811942784149e0 * wr_7_0;
  results[k++] = -0.171134310890234518e0 * wr_5_4 -
                 0.135900776295186235e0 * wr_7_4 +
                 0.549575014771047486e0 * wr_9_4;
  results[k++] =
      -0.418492132119773736e-1 * wr_3_0 - 0.541174208216498809e-1 * wr_5_0 +
      0.334564583588464642e-1 * wr_7_0 + 0.610391183329820446e0 * wr_9_0;
  results[k++] =
      0.287084625881607282e0 * wr_5_4 - 0.306223600940381101e0 * wr_7_4;
  results[k++] = -0.883281245421825931e0 * wr_9_8;
  results[k++] =
      0.273808628309194926e-1 * wr_7_4 - 0.156798232347995036e0 * wr_9_4;
  results[k++] = -0.169987554938146366e0 * wr_9_8;
  results[k++] = 0.242091013067520967e0 * wr_5_4 +
                 0.400518220148472189e0 * wr_7_4 -
                 0.267982246254588571e0 * wr_9_4;
  results[k++] = -0.290543601573988229e0 * wr_5_4;
  results[k++] =
      -0.360269965409644102e0 * wr_3_0 + 0.361297841864756418e0 * wr_5_0 +
      0.186134551159996168e-1 * wr_7_0 - 0.727693510445986211e-1 * wr_9_0;
  results[k++] = 0.334496804002836307e0 * wr_5_4 -
                 0.221358179119524027e-1 * wr_7_4 -
                 0.671369920811190106e0 * wr_9_4;
  results[k++] = 0.267431093370250953e0 * wr_3_0 -
                 0.419112849549084427e0 * wr_7_0 +
                 0.210067022071766943e0 * wr_9_0;
  results[k++] = 0.282701397096087801e0 * wr_5_4 +
                 0.305566951272977256e0 * wr_7_4 +
                 0.264791867699484798e0 * wr_9_4;
  results[k++] =
      0.295656197994541309e0 * wr_5_0 + 0.405095746833466646e0 * wr_7_0;
  results[k++] = -0.136557748399783774e0 * wr_5_4 -
                 0.301230327352464210e-1 * wr_7_4 +
                 0.328902746928032940e0 * wr_9_4;
  results[k++] =
      0.735397987419811336e0 * wr_3_0 + 0.147499226289569926e0 * wr_5_0 +
      0.101318816409769181e-2 * wr_7_0 + 0.534743336918198006e0 * wr_9_0;
  results[k++] = 0.315366611194177396e0 * wr_5_4 -
                 0.156523869526521870e0 * wr_7_4 -
                 0.443081542110916746e0 * wr_9_4;
  results[k++] =
      0.124304947597328332e0 * wr_3_0 + 0.249319197335588581e0 * wr_5_0 +
      0.346801616529734165e0 * wr_7_0 + 0.351509360520997529e0 * wr_9_0;
  results[k++] = 0.537547847487545328e0 * wr_9_8;
  results[k++] = -0.366899692852671403e0 * wr_5_4 +
                 0.129494009242119319e0 * wr_7_4 -
                 0.178522640784377646e-1 * wr_9_4;
  results[k++] = -0.502829968574051512e0 * wr_9_8;
  results[k++] = 0.635488909302242538e0 * wr_5_4 -
                 0.224290203283144425e0 * wr_7_4 +
                 0.309210284139909891e-1 * wr_9_4;
  results[k++] = 0.254981332407219549e0 * wr_9_8;
  results[k++] = -0.106163932206516034e0 * wr_5_4 -
                 0.303503947366863485e0 * wr_7_4 +
                 0.235035978109498002e0 * wr_9_4;
  results[k++] = -0.530785970170680903e0 * wr_9_8;
  results[k++] = -0.347575428505793823e0 * wr_5_4 -
                 0.241842398993947298e0 * wr_7_4 +
                 0.345488040720052051e0 * wr_9_4;
  results[k++] = -0.212157292680082585e0 * wr_9_8;
  results[k++] = -0.226610886014299780e0 * wr_5_4 +
                 0.799803127109293341e-1 * wr_7_4 +
                 0.197246856080356897e0 * wr_9_4;
  results[k++] = -0.320096299452491929e-1 * wr_5_4 +
                 0.260972630024208126e0 * wr_7_4 +
                 0.779526151623390154e0 * wr_9_4;
  results[k++] = -0.291072103332411356e0 * wr_5_0 +
                 0.439869278172479201e0 * wr_7_0 -
                 0.169361447636010549e0 * wr_9_0;
  results[k++] = 0.254509270206651740e0 * wr_5_4 -
                 0.348739346027107575e-1 * wr_7_4 -
                 0.104168563693040043e0 * wr_9_4;
  results[k++] =
      0.510697023314840200e0 * wr_3_0 - 0.392117966829302614e0 * wr_5_0 -
      0.207784346859104108e0 * wr_7_0 + 0.172996936908376474e0 * wr_9_0;
  results[k++] = -0.493463771219826740e0 * wr_5_4 -
                 0.243829157543914389e0 * wr_7_4 -
                 0.142216046238212048e0 * wr_9_4;
  results[k++] = -0.927727214085426531e-1 * wr_5_0 -
                 0.420595476511212692e-1 * wr_7_0 +
                 0.566791813091976125e0 * wr_9_0;
  results[k++] = -0.602576501385107900e-1 * wr_5_4 +
                 0.389902442072716877e0 * wr_7_4 -
                 0.419270381165077332e0 * wr_9_4;
  results[k++] = 0.216952336468371619e0 * wr_5_0 +
                 0.354087938594674065e0 * wr_7_0 +
                 0.378703709681890646e0 * wr_9_0;
  results[k++] = -0.266721574049560128e0 * wr_5_4 +
                 0.306968563484148485e0 * wr_7_4 +
                 0.130343159384789291e0 * wr_9_4;
  results[k++] =
      0.780102588842960886e0 * wr_3_0 + 0.281149225033956709e0 * wr_5_0 +
      0.816160712321832276e-1 * wr_7_0 - 0.344683286251363013e-1 * wr_9_0;
  results[k++] = -0.278829309126814300e0 * wr_8_8;
  results[k++] = -0.547289365122326150e0 * wr_4_4 +
                 0.302563743395579521e0 * wr_6_4 -
                 0.253132762197852918e-1 * wr_8_4;
  results[k++] = 0.549858812886926447e0 * wr_8_8;
  results[k++] = 0.243754196614452811e0 * wr_4_4 -
                 0.436713146741146727e0 * wr_6_4 +
                 0.170503979794917891e0 * wr_8_4;
  results[k++] =
      0.298878313836892909e-2 * wr_10_0 - 0.205350525539293350e-1 * wr_8_0 -
      0.766045534972260299e-1 * wr_4_0 + 0.428232472514541625e-1 * wr_2_0 +
      0.568650446758208531e-1 * wr_6_0;
  results[k++] =
      -0.347279250244374597e0 * wr_8_8 + 0.625205998816283500e0 * wr_10_8;
  results[k++] =
      -0.442276595827745362e-1 * wr_4_4 + 0.220237371010794902e0 * wr_6_4 -
      0.263777526070333656e0 * wr_8_4 + 0.945608664979685112e-1 * wr_10_4;
  results[k++] =
      0.439132628672407230e0 * wr_2_0 - 0.566498312797889880e0 * wr_4_0 +
      0.217870796187373848e0 * wr_6_0 - 0.164875226851757146e-1 * wr_8_0;
  results[k++] = -0.489510489510489510e0 * wr_4_4 -
                 0.225517699253106284e0 * wr_6_4 -
                 0.169806619082006458e0 * wr_8_4;
  results[k++] =
      -0.222680885707561645e0 * wr_2_0 - 0.574534151229195224e-1 * wr_4_0 +
      0.386682303795581800e0 * wr_6_0 - 0.175574699336095814e0 * wr_8_0;
  results[k++] = -0.363367302287177053e0 * wr_4_4 -
                 0.351547301801176142e0 * wr_6_4 -
                 0.320257130974777127e0 * wr_8_4;
  results[k++] =
      -0.347279250244374597e0 * wr_8_8 + 0.625205998816283500e0 * wr_10_8;
  results[k++] =
      -0.285488315009694417e-2 * wr_2_0 + 0.766045534972260299e-1 * wr_4_0 +
      0.109939086373253649e0 * wr_6_0 - 0.299811767287368292e0 * wr_8_0 +
      0.134495241226601809e0 * wr_10_0;
  results[k++] =
      -0.988960533128038497e-1 * wr_4_4 - 0.853607270127696884e-1 * wr_6_4 +
      0.235929791691995611e-1 * wr_8_4 + 0.634333576502220208e0 * wr_10_4;
  results[k++] = -0.146269235408055166e0 * wr_4_4 +
                 0.377363288482015146e0 * wr_6_4 -
                 0.947136069512087882e-1 * wr_8_4;
  results[k++] = 0.787295821622216949e0 * wr_2_0 -
                 0.137944511672602860e0 * wr_8_0 +
                 0.248268163218424159e0 * wr_4_0;
  results[k++] = 0.222516119953808662e0 * wr_4_4 -
                 0.223251132187243800e0 * wr_6_4 -
                 0.410911053863559023e0 * wr_8_4;
  results[k++] =
      0.909090909090909091e-1 * wr_2_0 + 0.211097326547182944e0 * wr_4_0 +
      0.315724778954348798e0 * wr_6_0 + 0.334497663979116685e0 * wr_8_0;
  results[k++] =
      -0.442276595827745362e-1 * wr_4_4 + 0.220237371010794902e0 * wr_6_4 -
      0.263777526070333656e0 * wr_8_4 + 0.945608664979685112e-1 * wr_10_4;
  results[k++] =
      -0.988960533128038497e-1 * wr_4_4 - 0.853607270127696884e-1 * wr_6_4 +
      0.235929791691995611e-1 * wr_8_4 + 0.634333576502220208e0 * wr_10_4;
  results[k++] =
      -0.256939483508724975e-1 * wr_2_0 - 0.454920357406566824e-1 * wr_6_0 +
      0.574981471510021381e-1 * wr_8_0 + 0.627644459057475109e0 * wr_10_0 -
      0.510697023314840200e-1 * wr_4_0;
  results[k++] = 0.420084025208402940e0 * wr_8_8;
  results[k++] = 0.353376746370109751e0 * wr_4_4 +
                 0.341881729378913846e0 * wr_6_4 -
                 0.266958738994983745e0 * wr_8_4;
  results[k++] =
      -0.130802663617818006e0 * wr_8_8 - 0.822052261207539179e0 * wr_10_8;
  results[k++] =
      0.514135842298185176e0 * wr_4_4 + 0.580545613199796165e-1 * wr_6_4 +
      0.985033043970566715e-1 * wr_8_4 - 0.152276667729430565e0 * wr_10_4;
  results[k++] =
      -0.135086952139955016e-1 * wr_10_0 + 0.928142837107271649e-1 * wr_8_0 +
      0.346237086228670601e0 * wr_4_0 - 0.193552415284690938e0 * wr_2_0 -
      0.257018499266265578e0 * wr_6_0;
  results[k++] =
      -0.523210654471272025e0 * wr_8_8 - 0.359647864278298391e0 * wr_10_8;
  results[k++] =
      -0.279860104912576495e0 * wr_4_4 + 0.142204052475067111e0 * wr_6_4 +
      0.397407020295500261e0 * wr_8_4 - 0.240895920952535685e0 * wr_10_4;
  results[k++] = -0.385694607919935013e0 * wr_6_0 +
                 0.142695448246348224e0 * wr_8_0 +
                 0.267431093370250953e0 * wr_4_0;
  results[k++] = 0.133077282674799979e0 * wr_6_4 +
                 0.163292718633225056e0 * wr_8_4 -
                 0.165062054364218841e0 * wr_4_4;
  results[k++] =
      -0.566044932723022720e0 * wr_2_0 + 0.316428736971993485e0 * wr_4_0 +
      0.134223533668568270e0 * wr_6_0 + 0.848236879747450911e-1 * wr_8_0 -
      0.112874975897869963e0 * wr_10_0;
  results[k++] =
      0.400254210384732439e0 * wr_4_4 + 0.949103708518654981e-1 * wr_6_4 -
      0.581901687209960835e-1 * wr_8_4 - 0.652009737762882135e0 * wr_10_4;
  results[k++] =
      -0.491909449295307509e0 * wr_10_8 + 0.273237852904216771e0 * wr_8_8;
  results[k++] =
      0.181943014089543017e0 * wr_2_0 - 0.134223533668568270e0 * wr_6_0 -
      0.371608537794121351e0 * wr_8_0 + 0.232804637789356799e0 * wr_10_0 +
      0.180816421126853421e0 * wr_4_0;
  results[k++] =
      0.326806194281060772e0 * wr_4_4 + 0.321046543651255706e0 * wr_6_4 +
      0.340319040272666271e0 * wr_8_4 + 0.299454593408424293e0 * wr_10_4;
  results[k++] = -0.336931507573227809e-1 * wr_4_4 +
                 0.325971438909380084e0 * wr_6_4 -
                 0.399983839363264319e0 * wr_8_4;
  results[k++] = 0.181963811142144469e0 * wr_4_0 +
                 0.314918328648886780e0 * wr_6_0 +
                 0.349531036821277811e0 * wr_8_0;
  results[k++] =
      -0.167438349140432850e0 * wr_4_4 + 0.189065984274477947e0 * wr_6_4 -
      0.566109164024778094e-1 * wr_8_4 + 0.467580415283287379e0 * wr_10_4;
  results[k++] =
      0.789311947385871995e0 * wr_2_0 + 0.534759358288770053e-1 * wr_6_0 +
      0.144833855166670148e-1 * wr_8_0 + 0.566627881978470127e0 * wr_10_0 +
      0.264743275471132081e0 * wr_4_0;
  results[k++] =
      -0.425328480677514039e0 * wr_8_4 - 0.713149582320669206e-1 * wr_4_4 +
      0.152474815721814274e0 * wr_10_4 + 0.355122090179336717e0 * wr_6_4;
  results[k++] =
      0.223251132187243800e0 * wr_4_4 - 0.113439590564686769e0 * wr_6_4 -
      0.317021131853875733e0 * wr_8_4 - 0.379909087417670995e0 * wr_10_4;
  results[k++] =
      0.690504113920681786e-1 * wr_2_0 + 0.164694841330123018e0 * wr_4_0 +
      0.261977512597131348e0 * wr_6_0 + 0.331117773129269403e0 * wr_8_0 +
      0.318071688201946204e0 * wr_10_0;
  results[k++] =
      -0.965609099170535155e-1 * wr_4_4 + 0.103036624962554511e0 * wr_6_4 -
      0.411355346620189052e-1 * wr_8_4 + 0.625611746799904078e-2 * wr_10_4;
  results[k++] =
      -0.453113718302803765e0 * wr_8_8 + 0.346071318757582613e0 * wr_10_8;
  results[k++] =
      0.146016662988578125e0 * wr_8_4 + 0.342757228198790117e0 * wr_4_4 -
      0.365743736315871584e0 * wr_6_4 - 0.222070140438752906e-1 * wr_10_4;
  results[k++] =
      0.470889589024144821e0 * wr_8_8 - 0.359647864278298391e0 * wr_10_8;
  results[k++] =
      -0.194688883984770834e0 * wr_8_4 - 0.457009637598386823e0 * wr_4_4 +
      0.487658315087828778e0 * wr_6_4 + 0.296093520585003875e-1 * wr_10_4;
  results[k++] =
      -0.256319826288450878e0 * wr_8_8 + 0.195767501014126326e0 * wr_10_8;
  results[k++] =
      -0.183963703590146216e0 * wr_8_8 + 0.852394570124334064e0 * wr_10_8;
  results[k++] =
      -0.392036301105865804e-1 * wr_4_4 - 0.808766765999532576e-1 * wr_6_4 -
      0.335133094257682105e0 * wr_8_4 + 0.231137930424010516e0 * wr_10_4;
  results[k++] =
      -0.391803821148165943e0 * wr_8_8 - 0.617489912269770703e-1 * wr_10_8;
  results[k++] =
      -0.285191252609226771e0 * wr_4_4 - 0.333299772354209700e0 * wr_6_4 -
      0.271913368982865680e0 * wr_8_4 + 0.308835750124830638e0 * wr_10_4;
  results[k++] =
      0.224798276578503548e-1 * wr_10_0 - 0.154452304160533336e0 * wr_8_0 -
      0.576173339014485471e0 * wr_4_0 + 0.322090688214855299e0 * wr_2_0 +
      0.427704635929534268e0 * wr_6_0;
  results[k++] =
      -0.348270063242814171e0 * wr_8_8 - 0.155164131801121869e0 * wr_10_8;
  results[k++] =
      -0.620953820442477560e0 * wr_4_4 - 0.291858278504187272e0 * wr_6_4 +
      0.220441752139197606e-1 * wr_8_4 + 0.169545717477666685e0 * wr_10_4;
  results[k++] =
      -0.255348511657420100e-1 * wr_4_0 + 0.182780500743709885e0 * wr_6_0 -
      0.242020262242738591e0 * wr_8_0 + 0.906597551971908495e-1 * wr_10_0;
  results[k++] =
      -0.118203392269722598e-1 * wr_4_4 + 0.160606206267823310e0 * wr_6_4 +
      0.291725407143520825e0 * wr_8_4 + 0.766597790035714874e0 * wr_10_4;
  results[k++] =
      -0.271919190142987142e0 * wr_4_0 + 0.432537610077874551e-1 * wr_6_0 +
      0.400907130555325271e0 * wr_8_0 - 0.216729323026217354e0 * wr_10_0;
  results[k++] =
      0.143313996726707670e0 * wr_4_4 - 0.152925138602143926e0 * wr_6_4 -
      0.211067677114338321e0 * wr_8_4 - 0.189683760187410940e0 * wr_10_4;
  results[k++] =
      0.211358203992549559e0 * wr_10_8 - 0.117401814369184969e0 * wr_8_8;
  results[k++] =
      0.651460493085439297e0 * wr_2_0 - 0.198544170580593786e0 * wr_4_0 -
      0.346030088062299642e0 * wr_6_0 - 0.833053777777299263e-1 * wr_8_0 +
      0.159305314361151216e0 * wr_10_0;
  results[k++] =
      -0.468061553305776532e0 * wr_4_4 - 0.154592103474775112e0 * wr_6_4 -
      0.112991671450564870e0 * wr_8_4 - 0.953083948618681562e-1 * wr_10_4;
  results[k++] =
      -0.176207213524115257e-2 * wr_4_4 + 0.846109307175092009e-1 * wr_6_4 -
      0.371573453812053026e0 * wr_8_4 + 0.342832953984193877e0 * wr_10_4;
  results[k++] =
      -0.708430016015602688e-1 * wr_6_0 + 0.216469503322835678e-1 * wr_8_0 +
      0.608164126333225769e0 * wr_10_0 - 0.570976630019388834e-1 * wr_4_0;
  results[k++] =
      -0.437831492097860920e-1 * wr_4_4 + 0.340384211320026961e0 * wr_6_4 -
      0.879303279213594348e-1 * wr_8_4 - 0.422202377593292767e0 * wr_10_4;
  results[k++] =
      0.138454474637925390e0 * wr_4_0 + 0.254846100741062672e0 * wr_6_0 +
      0.337442560239916175e0 * wr_8_0 + 0.331059509361392241e0 * wr_10_0;
  results[k++] =
      -0.333655111178679358e0 * wr_8_4 - 0.559440559440559441e-1 * wr_4_4 +
      0.119611086261076141e0 * wr_10_4 + 0.278580687312660704e0 * wr_6_4;
  results[k++] =
      -0.233510129118859158e0 * wr_4_4 + 0.347058411541988274e0 * wr_6_4 +
      0.223822652890733107e0 * wr_8_4 + 0.407555839607401766e-1 * wr_10_4;
  results[k++] =
      0.812513988714842701e0 * wr_2_0 + 0.169547456970092259e0 * wr_6_0 +
      0.389625227650046157e-1 * wr_8_0 - 0.415859934580288113e-1 * wr_10_0 +
      0.355292473347462008e0 * wr_4_0;
  results[k++] = -0.168195017444866848e0 * wr_9_8;
  results[k++] = -0.479076273330167981e0 * wr_5_4 +
                 0.237776826836664255e0 * wr_7_4 -
                 0.203966418419938546e-1 * wr_9_4;
  results[k++] =
      -0.194624736040380742e0 * wr_1_0 + 0.274425410774106063e0 * wr_3_0 -
      0.172005229038445362e0 * wr_5_0 + 0.551377190809902654e-1 * wr_7_0 -
      0.734867235445965233e-2 * wr_9_0;
  results[k++] = -0.512408542946442600e0 * wr_9_8;
  results[k++] = 0.297921795862108991e0 * wr_5_4 -
                 0.408912268830345675e0 * wr_7_4 +
                 0.152208017939603351e0 * wr_9_4;
  results[k++] =
      -0.669529445983453222e-2 * wr_1_0 + 0.613633873244204340e-1 * wr_3_0 -
      0.113122171945701357e0 * wr_5_0 + 0.908465069395442380e-1 * wr_7_0 -
      0.352117091334540266e-1 * wr_9_0 + 0.543501178105932666e-2 * wr_11_0;
  results[k++] =
      -0.427403046067660672e0 * wr_9_8 + 0.498067753423176705e0 * wr_11_8;
  results[k++] =
      -0.698998168159869539e-1 * wr_5_4 + 0.240357264840937596e0 * wr_7_4 -
      0.260185701992641684e0 * wr_9_4 + 0.898011324285459829e-1 * wr_11_4;
  results[k++] =
      0.689951489491282766e0 * wr_1_0 - 0.331038443153045450e0 * wr_3_0 -
      0.338758081577341725e0 * wr_5_0 + 0.232114854540051388e0 * wr_7_0 -
      0.217094168838970110e-1 * wr_9_0;
  results[k++] =
      -0.921587590353694436e-1 * wr_7_4 - 0.136824833014244351e0 * wr_9_4;
  results[k++] = -0.512408542946442600e0 * wr_9_8;
  results[k++] =
      0.116774841624228445e0 * wr_1_0 + 0.201245301234344446e0 * wr_3_0 -
      0.573350763461484538e-1 * wr_5_0 - 0.363908945934535752e0 * wr_7_0 +
      0.198414153570410613e0 * wr_9_0;
  results[k++] = -0.222057795842163755e0 * wr_5_4 -
                 0.329168026777795685e0 * wr_7_4 -
                 0.340347474833460571e0 * wr_9_4;
  results[k++] =
      0.163682904897123718e0 * wr_9_8 + 0.780322203207243889e0 * wr_11_8;
  results[k++] =
      -0.104895104895104895e-1 * wr_1_0 + 0.106819946269366900e-1 * wr_3_0 +
      0.984602126446254742e-1 * wr_5_0 + 0.853974736909140495e-1 * wr_7_0 -
      0.324867304771712204e0 * wr_9_0 + 0.156108828304837651e0 * wr_11_0;
  results[k++] =
      -0.114620544144575140e0 * wr_5_4 - 0.138202761360923136e0 * wr_7_4 -
      0.387861944286032858e-1 * wr_9_4 + 0.602404309700068783e0 * wr_11_4;
  results[k++] = 0.437334802780739353e0 * wr_5_4 +
                 0.121553349596411379e0 * wr_7_4 -
                 0.111717008342137563e0 * wr_9_4;
  results[k++] =
      0.845014548263436411e0 * wr_1_0 + 0.366824527343705797e0 * wr_3_0 +
      0.138297407684767608e0 * wr_5_0 - 0.299243660707086986e-1 * wr_7_0 -
      0.124079652617455905e0 * wr_9_0;
  results[k++] = -0.297921795862108991e0 * wr_5_4 +
                 0.408912268830345675e0 * wr_7_4 -
                 0.152208017939603351e0 * wr_9_4;
  results[k++] = 0.222057795842163755e0 * wr_5_4 +
                 0.329168026777795685e0 * wr_7_4 +
                 0.340347474833460571e0 * wr_9_4;
  results[k++] =
      0.389249472080761484e-1 * wr_1_0 + 0.128065191694582829e0 * wr_3_0 +
      0.229340305384593815e0 * wr_5_0 + 0.308771226853545486e0 * wr_7_0 +
      0.308644238887305398e0 * wr_9_0;
  results[k++] =
      0.117560009563498459e0 * wr_5_4 + 0.962479610461390889e-1 * wr_7_4 -
      0.340347474833460571e0 * wr_9_4 + 0.160184132255443583e0 * wr_11_4;
  results[k++] =
      -0.152533905534670155e-1 * wr_5_4 + 0.134872084893813611e-1 * wr_7_4 +
      0.132480074902944784e0 * wr_9_4 + 0.685867478077609215e0 * wr_11_4;
  results[k++] =
      -0.119428330605589725e-1 * wr_1_0 - 0.364859576748217433e-1 * wr_3_0 -
      0.538089040733541300e-1 * wr_5_0 - 0.370397336909259838e-1 * wr_7_0 +
      0.753713043954504150e-1 * wr_9_0 + 0.639855791108524642e0 * wr_11_0;
  results[k++] = -0.152041491268270134e0 * wr_9_8;
  results[k++] = 0.216532784784306707e0 * wr_5_4 +
                 0.358234386591683890e0 * wr_7_4 -
                 0.239690607755339384e0 * wr_9_4;
  results[k++] =
      0.473665466715670923e0 * wr_1_0 - 0.620173672946042282e0 * wr_3_0 +
      0.320117758476452363e0 * wr_5_0 - 0.524655446276361229e-1 * wr_7_0 -
      0.142347910936209957e-1 * wr_9_0 + 0.499357762715229639e-2 * wr_11_0;
  results[k++] =
      0.661709418300830143e-1 * wr_9_8 + 0.716944075353301816e0 * wr_11_8;
  results[k++] =
      0.332676133251766876e0 * wr_5_4 + 0.555849846703035716e-1 * wr_7_4 +
      0.137589890485969188e0 * wr_9_4 - 0.147173903439024809e0 * wr_11_4;
  results[k++] =
      -0.151306883167200604e0 * wr_1_0 + 0.306773600896374426e0 * wr_5_0 -
      0.322620441725843972e0 * wr_7_0 + 0.137929828966995517e0 * wr_9_0 -
      0.223319580504692685e-1 * wr_11_0;
  results[k++] =
      -0.386355062616698856e0 * wr_9_8 - 0.409302817502630207e0 * wr_11_8;
  results[k++] =
      -0.315933032664455683e0 * wr_5_4 + 0.775975869702171854e-1 * wr_7_4 +
      0.391995580869987590e0 * wr_9_4 - 0.221390701959587941e0 * wr_11_4;
  results[k++] = 0.239197641629189786e0 * wr_3_0 -
                 0.374865928734157944e0 * wr_7_0 +
                 0.187889656473367836e0 * wr_9_0;
  results[k++] = 0.252855816496405587e0 * wr_5_4 +
                 0.273307389889497216e0 * wr_7_4 +
                 0.236837046426071546e0 * wr_9_4;
  results[k++] =
      -0.172783236692425283e0 * wr_9_8 + 0.457614461659035927e0 * wr_11_8;
  results[k++] =
      0.742091167377230477e0 * wr_1_0 - 0.107958379271882620e0 * wr_3_0 -
      0.278626745126865248e0 * wr_5_0 - 0.493186267469769413e-1 * wr_7_0 -
      0.131331830529619135e0 * wr_9_0 + 0.143429597547635425e0 * wr_11_0;
  results[k++] =
      -0.431646697473731063e-1 * wr_5_4 + 0.778911333787183872e-2 * wr_7_4 -
      0.535567922353132936e-1 * wr_9_4 - 0.630161006394759117e0 * wr_11_4;
  results[k++] =
      -0.386355062616698856e0 * wr_9_8 - 0.409302817502630207e0 * wr_11_8;
  results[k++] =
      0.907841299003203627e-1 * wr_1_0 + 0.201709162263719681e0 * wr_3_0 +
      0.102257866965458142e0 * wr_5_0 - 0.199971348177176015e0 * wr_7_0 -
      0.328909592152066232e0 * wr_9_0 + 0.245651538555161954e0 * wr_11_0;
  results[k++] =
      0.172167472648518687e0 * wr_5_4 + 0.271843377866082139e0 * wr_7_4 +
      0.335684960405595053e0 * wr_9_4 + 0.315979450824982317e0 * wr_11_4;
  results[k++] = 0.282072472185570716e0 * wr_5_4 -
                 0.139999204945044289e0 * wr_7_4 -
                 0.396304179094178204e0 * wr_9_4;
  results[k++] =
      0.111181725106870122e0 * wr_3_0 + 0.222997869335224205e0 * wr_5_0 +
      0.310188795706920126e0 * wr_7_0 + 0.314399529940972547e0 * wr_9_0;
  results[k++] =
      -0.197805366465107635e0 * wr_5_4 + 0.138810783484286060e0 * wr_7_4 +
      0.105183451884577008e0 * wr_9_4 - 0.825074431946724230e-1 * wr_11_4;
  results[k++] =
      -0.324357913535507835e0 * wr_5_4 - 0.798146608836519622e-1 * wr_7_4 +
      0.156798232347995036e-1 * wr_9_4 - 0.553476754898969853e0 * wr_11_4;
  results[k++] =
      0.844907961774218261e0 * wr_1_0 + 0.368748065723924814e0 * wr_3_0 +
      0.152270642101043288e0 * wr_5_0 + 0.213911339733761230e-1 * wr_7_0 +
      0.304698294665741201e-1 * wr_9_0 + 0.587886409780807896e0 * wr_11_0;
  results[k++] =
      0.315933032664455683e0 * wr_5_4 - 0.775975869702171854e-1 * wr_7_4 -
      0.391995580869987590e0 * wr_9_4 + 0.221390701959587941e0 * wr_11_4;
  results[k++] =
      -0.172167472648518687e0 * wr_5_4 - 0.271843377866082139e0 * wr_7_4 -
      0.335684960405595053e0 * wr_9_4 - 0.315979450824982317e0 * wr_11_4;
  results[k++] =
      0.302613766334401208e-1 * wr_1_0 + 0.100854581131859840e0 * wr_3_0 +
      0.185923394482651167e0 * wr_5_0 + 0.266628464236234687e0 * wr_7_0 +
      0.318299605308451193e0 * wr_9_0 + 0.294781846266194344e0 * wr_11_0;
  results[k++] =
      0.887492030253166400e-2 * wr_11_4 - 0.133740837660895319e0 * wr_5_4 +
      0.131981089796936170e0 * wr_7_4 - 0.553132171743090888e-1 * wr_9_4;
  results[k++] =
      0.247099202515303594e0 * wr_11_8 - 0.456124473804810402e0 * wr_9_8;
  results[k++] =
      0.240333977919502113e-1 * wr_11_4 - 0.362171900475098994e0 * wr_5_4 +
      0.357406480732005586e0 * wr_7_4 - 0.149788900202685472e0 * wr_9_4;
  results[k++] =
      -0.273178446913101757e0 * wr_11_8 + 0.504264579102948789e0 * wr_9_8;
  results[k++] =
      0.280649622084706757e-1 * wr_11_4 - 0.422925663187255117e0 * wr_5_4 +
      0.417360851829528075e0 * wr_7_4 - 0.174915750982359559e0 * wr_9_4;
  results[k++] =
      0.155657866432828395e0 * wr_11_8 - 0.287331410613743721e0 * wr_9_8;
  results[k++] =
      0.379518502683986564e0 * wr_9_8 + 0.890928844795187467e0 * wr_11_8;
  results[k++] =
      0.476910442888875943e-1 * wr_5_4 - 0.470635305482443365e-1 * wr_7_4 -
      0.352845902835036597e0 * wr_9_4 + 0.223992861515040063e0 * wr_11_4;
  results[k++] =
      -0.172005229038445362e0 * wr_3_0 + 0.355138766884137258e0 * wr_5_0 -
      0.294664309987634389e0 * wr_7_0 + 0.115808607388565082e0 * wr_9_0 -
      0.180046001827074034e-1 * wr_11_0;
  results[k++] =
      -0.195760183560294773e0 * wr_9_8 - 0.172331908355096522e0 * wr_11_8;
  results[k++] =
      -0.820157850640913594e-1 * wr_5_4 - 0.294840580705027678e0 * wr_7_4 -
      0.288324303837771822e0 * wr_9_4 + 0.283009629471781281e0 * wr_11_4;
  results[k++] =
      0.604295696038132747e0 * wr_1_0 - 0.538461538461538462e0 * wr_3_0 -
      0.113444917742626012e0 * wr_5_0 + 0.366049682041900395e0 * wr_7_0 -
      0.188331577091211583e0 * wr_9_0 + 0.328269850086255544e-1 * wr_11_0;
  results[k++] =
      -0.571496610789582770e-1 * wr_9_8 - 0.774001204037209503e-1 * wr_11_8;
  results[k++] =
      -0.373862645787744616e0 * wr_5_4 - 0.290542927853140347e0 * wr_7_4 -
      0.966400113902243500e-2 * wr_9_4 + 0.151336028585553608e0 * wr_11_4;
  results[k++] =
      -0.228390652007755534e-1 * wr_3_0 + 0.825225815557014886e-1 * wr_5_0 +
      0.122268401115092554e0 * wr_7_0 - 0.309466328661097682e0 * wr_9_0 +
      0.138061359225026721e0 * wr_11_0;
  results[k++] =
      0.103851156412323474e0 * wr_5_4 + 0.143478571359131116e0 * wr_7_4 +
      0.254403797503916314e0 * wr_9_4 + 0.742900277363425860e0 * wr_11_4;
  results[k++] =
      0.362949094288356837e0 * wr_9_8 - 0.426015879340458415e0 * wr_11_8;
  results[k++] =
      0.208738623169220970e0 * wr_3_0 + 0.143660704673190439e0 * wr_5_0 -
      0.176589010903545988e0 * wr_7_0 - 0.343543847563092791e0 * wr_9_0 +
      0.240346239544362495e0 * wr_11_0;
  results[k++] =
      -0.247286896312750490e0 * wr_5_4 - 0.277151902117438871e0 * wr_7_4 -
      0.281253980520681344e0 * wr_9_4 - 0.234659188253851494e0 * wr_11_4;
  results[k++] =
      0.295119580800271473e0 * wr_9_8 + 0.732769588999702532e-1 * wr_11_8;
  results[k++] =
      0.780142388980169149e0 * wr_1_0 + 0.270837996238280901e-1 * wr_3_0 -
      0.295576368250459118e0 * wr_5_0 - 0.274948717077876438e0 * wr_7_0 -
      0.182351265409810182e-1 * wr_9_0 + 0.146329063036246149e0 * wr_11_0;
  results[k++] =
      0.986333503915051727e-1 * wr_5_4 + 0.292006629448535051e-1 * wr_7_4 -
      0.320518657517046287e-1 * wr_9_4 - 0.637691374856729365e-1 * wr_11_4;
  results[k++] =
      0.561324772367586172e-1 * wr_5_4 - 0.180632256554214658e0 * wr_7_4 -
      0.233164931829182820e0 * wr_9_4 + 0.486342393545941079e0 * wr_11_4;
  results[k++] =
      -0.348872483615285911e-1 * wr_3_0 - 0.591688262585706186e-1 * wr_5_0 -
      0.480260745609543996e-1 * wr_7_0 + 0.616588207012853087e-1 * wr_9_0 +
      0.632676629197174697e0 * wr_11_0;
  results[k++] =
      0.103447530615277507e0 * wr_5_4 - 0.367510964027959563e0 * wr_7_4 +
      0.403395364808995923e0 * wr_9_4 - 0.140235687622094301e0 * wr_11_4;
  results[k++] =
      -0.277578852672301379e0 * wr_5_4 + 0.195661785248332739e-1 * wr_7_4 +
      0.270605837256372405e0 * wr_9_4 + 0.376291836473314433e0 * wr_11_4;
  results[k++] =
      0.867809345873486476e-1 * wr_3_0 + 0.179176378943197562e0 * wr_5_0 +
      0.265474115787196978e0 * wr_7_0 + 0.321355843728796760e0 * wr_9_0 +
      0.299764427524834366e0 * wr_11_0;
  results[k++] =
      0.363496116594680377e0 * wr_5_4 - 0.273926499347665834e0 * wr_7_4 -
      0.164003537731134791e0 * wr_9_4 + 0.139903375099052802e0 * wr_11_4;
  results[k++] =
      0.432189687453907124e0 * wr_5_4 + 0.266564363150024953e0 * wr_7_4 +
      0.105333179294015417e0 * wr_9_4 - 0.112670306688875287e-1 * wr_11_4;
  results[k++] =
      0.854603169020816733e0 * wr_1_0 + 0.425253029245056553e0 * wr_3_0 +
      0.247945527392424707e0 * wr_5_0 + 0.117652823828639708e0 * wr_7_0 +
      0.166463169090940943e-1 * wr_9_0 - 0.446725044898460965e-1 * wr_11_0;
  results[k++] =
      -0.111236670366021883e0 * wr_6_0 + 0.156215437546405117e-1 * wr_8_0 -
      0.820934047683489226e0 * wr_2_0 - 0.545674648125248872e-3 * wr_10_0 +
      wr_0_0 + 0.391608391608391608e0 * wr_4_0;
  results[k++] =
      0.264184276544896444e0 * wr_8_8 - 0.114146476213075552e0 * wr_10_8;
  results[k++] =
      0.226095210312021278e0 * wr_4_4 - 0.430817771815166841e0 * wr_6_4 +
      0.200662362766151082e0 * wr_8_4 - 0.172643732127239645e-1 * wr_10_4;
  results[k++] =
      -0.176688373185054875e0 * wr_2_0 + 0.316069770620506984e0 * wr_4_0 -
      0.234624716240431071e0 * wr_6_0 + 0.847274614117492699e-1 * wr_8_0 -
      0.123316951519456889e-1 * wr_10_0;
  results[k++] =
      0.249430892666529982e0 * wr_8_8 - 0.449049836048306103e0 * wr_10_8;
  results[k++] =
      -0.651013521854029892e-1 * wr_4_4 + 0.324180632432677568e0 * wr_6_4 -
      0.388270005360791028e0 * wr_8_4 + 0.139189826703801708e0 * wr_10_4;
  results[k++] = 0.134386027002812885e1 * wr_12_12;
  results[k++] =
      -0.784072602211731608e-2 * wr_2_0 + 0.696139267966114167e-1 * wr_4_0 -
      0.136996185408269281e0 * wr_6_0 + 0.117495848676907121e0 * wr_8_0 -
      0.481801644666515134e-1 * wr_10_0 + 0.779576860368663421e-2 * wr_12_0;
  results[k++] = 0.893105861417177107e-1 * wr_8_8 -
                 0.452996045375861176e0 * wr_10_8 +
                 0.412464188429515290e0 * wr_12_8;
  results[k++] =
      0.675922530857876734e-2 * wr_4_4 - 0.892309511850511705e-1 * wr_6_4 +
      0.253820042804801107e0 * wr_8_4 - 0.256357917676516934e0 * wr_10_4 +
      0.858714911102444145e-1 * wr_12_4;
  results[k++] =
      0.264184276544896444e0 * wr_8_8 - 0.114146476213075552e0 * wr_10_8;
  results[k++] =
      -0.215057562707642306e0 * wr_6_0 + 0.228074538817751471e0 * wr_8_0 +
      0.547289365122326150e-1 * wr_2_0 - 0.245553591656361991e-1 * wr_10_0 +
      wr_0_0 - 0.391608391608391608e0 * wr_4_0;
  results[k++] =
      0.505564259644791014e0 * wr_4_4 + 0.166978556106909043e0 * wr_6_4 -
      0.179477873468334623e-1 * wr_8_4 - 0.115812936277731666e0 * wr_10_4;
  results[k++] =
      -0.477623796301594813e0 * wr_8_8 - 0.328312080039634112e0 * wr_10_8;
  results[k++] =
      0.166090488328871622e0 * wr_2_0 + 0.165062054364218841e0 * wr_4_0 -
      0.122528761897214973e0 * wr_6_0 - 0.339230631185585543e0 * wr_8_0 +
      0.212520586015083913e0 * wr_10_0;
  results[k++] =
      0.203799468479201806e0 * wr_4_4 - 0.103555704444048580e0 * wr_6_4 -
      0.289399375203645500e0 * wr_8_4 - 0.346807961633100801e0 * wr_10_4;
  results[k++] =
      -0.156199683934833752e0 * wr_6_4 + 0.148104852019396191e0 * wr_8_4 +
      0.552164310683597540e-1 * wr_4_4 - 0.634606044869452975e-1 * wr_10_4 +
      0.105118122408015792e-1 * wr_12_4;
  results[k++] = 0.264938013530333508e0 * wr_8_8 +
                 0.332557415621135792e0 * wr_10_8 +
                 0.834249897330575931e0 * wr_12_8;
  results[k++] =
      -0.158586492171703732e-1 * wr_2_0 + 0.239883354900319391e-1 * wr_4_0 +
      0.110835371232292754e0 * wr_6_0 + 0.633725480143781489e-1 * wr_8_0 -
      0.341433055588907787e0 * wr_10_0 + 0.173444901973226057e0 * wr_12_0;
  results[k++] =
      0.282129628950756836e-1 * wr_4_4 - 0.111164748990326479e0 * wr_6_4 -
      0.170267660929032497e0 * wr_8_4 - 0.873499017897122755e-1 * wr_10_4 +
      0.576043474355326196e0 * wr_12_4;
  results[k++] =
      0.226095210312021278e0 * wr_4_4 - 0.430817771815166841e0 * wr_6_4 +
      0.200662362766151082e0 * wr_8_4 - 0.172643732127239645e-1 * wr_10_4;
  results[k++] =
      0.505564259644791014e0 * wr_4_4 + 0.166978556106909043e0 * wr_6_4 -
      0.179477873468334623e-1 * wr_8_4 - 0.115812936277731666e0 * wr_10_4;
  results[k++] =
      0.889893362928175062e-1 * wr_6_0 - 0.437403225129934327e-1 * wr_8_0 +
      0.492560428610093536e0 * wr_2_0 - 0.114591676106302263e0 * wr_10_0 +
      wr_0_0 + 0.261072261072261072e0 * wr_4_0;
  results[k++] =
      -0.255476154010634166e0 * wr_4_4 + 0.129813945515404343e0 * wr_6_4 +
      0.362781315877931428e0 * wr_8_4 - 0.219906883194475294e0 * wr_10_4;
  results[k++] =
      0.298331874233587997e0 * wr_4_4 + 0.293074056611432877e0 * wr_6_4 +
      0.310667358509747323e0 * wr_8_4 + 0.273363392930553022e0 * wr_10_4;
  results[k++] =
      0.630341132074124001e-1 * wr_2_0 + 0.150345132835404189e0 * wr_4_0 +
      0.239151655347571092e0 * wr_6_0 + 0.302267789222964679e0 * wr_8_0 +
      0.290358397553259575e0 * wr_10_0;
  results[k++] = 0.188920399896979604e0 * wr_12_8 -
                 0.419581081298553154e0 * wr_10_8 +
                 0.194989098324986421e0 * wr_8_8;
  results[k++] =
      0.750243561673582737e-1 * wr_4_4 + 0.934838378546014613e-1 * wr_6_4 -
      0.167695722586946162e-1 * wr_8_4 - 0.363380924312279755e0 * wr_10_4 +
      0.216621561292493981e0 * wr_12_4;
  results[k++] =
      0.565517362602530644e-1 * wr_4_4 + 0.495167147867292991e-1 * wr_6_4 +
      0.859556767551206294e-1 * wr_8_4 + 0.204270878290909537e0 * wr_10_4 +
      0.718452440308177245e0 * wr_12_4;
  results[k++] =
      -0.197792106625607699e-1 * wr_2_0 - 0.429268460656341087e-1 * wr_4_0 -
      0.543069980995064530e-1 * wr_6_0 - 0.296397952995855342e-1 * wr_8_0 +
      0.891296870604442727e-1 * wr_10_0 + 0.648971398666403438e0 * wr_12_0;
  results[k++] =
      -0.176688373185054875e0 * wr_2_0 + 0.316069770620506984e0 * wr_4_0 -
      0.234624716240431071e0 * wr_6_0 + 0.847274614117492699e-1 * wr_8_0 -
      0.123316951519456889e-1 * wr_10_0;
  results[k++] =
      -0.477623796301594813e0 * wr_8_8 - 0.328312080039634112e0 * wr_10_8;
  results[k++] =
      -0.255476154010634166e0 * wr_4_4 + 0.129813945515404343e0 * wr_6_4 +
      0.362781315877931428e0 * wr_8_4 - 0.219906883194475294e0 * wr_10_4;
  results[k++] =
      0.279067436181423320e0 * wr_6_0 - 0.455894032023182282e-1 * wr_8_0 -
      0.415269767249960944e0 * wr_2_0 - 0.280666569013986701e-1 * wr_10_0 +
      wr_0_0 - 0.268907563025210084e0 * wr_4_0 +
      0.913793434994134954e-2 * wr_12_0;
  results[k++] = 0.805269414242951100e-1 * wr_8_8 -
                 0.208576976490495479e-1 * wr_10_8 +
                 0.624165437228816682e0 * wr_12_8;
  results[k++] =
      -0.276936417099529264e0 * wr_4_4 + 0.231352244730992240e0 * wr_6_4 +
      0.417833782124970905e-1 * wr_8_4 + 0.161629015765813136e0 * wr_10_4 -
      0.142348565811571712e0 * wr_12_4;
  results[k++] = 0.552179689481944240e0 * wr_12_12;
  results[k++] =
      -0.177192477984583509e0 * wr_2_0 + 0.104880289202249204e0 * wr_4_0 +
      0.247678018575851393e0 * wr_6_0 - 0.348980622449214738e0 * wr_8_0 +
      0.169372464721825309e0 * wr_10_0 - 0.297440820178461128e-1 * wr_12_0;
  results[k++] = 0.288332702574199414e0 * wr_8_8 -
                 0.227494499222379621e0 * wr_10_8 -
                 0.411588699645228480e0 * wr_12_8;
  results[k++] =
      0.916509934134716288e-1 * wr_4_4 - 0.322644679766652436e0 * wr_6_4 +
      0.327775785922077349e-1 * wr_8_4 + 0.386228643928591849e0 * wr_10_4 -
      0.206662241020911024e0 * wr_12_4;
  results[k++] =
      0.249430892666529982e0 * wr_8_8 - 0.449049836048306103e0 * wr_10_8;
  results[k++] =
      0.166090488328871622e0 * wr_2_0 + 0.165062054364218841e0 * wr_4_0 -
      0.122528761897214973e0 * wr_6_0 - 0.339230631185585543e0 * wr_8_0 +
      0.212520586015083913e0 * wr_10_0;
  results[k++] =
      0.298331874233587997e0 * wr_4_4 + 0.293074056611432877e0 * wr_6_4 +
      0.310667358509747323e0 * wr_8_4 + 0.273363392930553022e0 * wr_10_4;
  results[k++] = 0.805269414242951100e-1 * wr_8_8 -
                 0.208576976490495479e-1 * wr_10_8 +
                 0.624165437228816682e0 * wr_12_8;
  results[k++] =
      -0.218179995560021868e0 * wr_6_0 - 0.157490665608008424e-1 * wr_8_0 +
      0.188758985113618611e0 * wr_2_0 - 0.163244841161196347e0 * wr_10_0 +
      wr_0_0 - 0.220015278838808251e0 * wr_4_0 +
      0.167528796415591408e0 * wr_12_0;
  results[k++] =
      -0.452748887454903202e0 * wr_4_4 - 0.150089565210396438e0 * wr_6_4 -
      0.162641579109652840e-1 * wr_8_4 - 0.355913536966731884e-1 * wr_10_4 -
      0.609500145029686047e0 * wr_12_4;
  results[k++] =
      -0.368691762314952206e0 * wr_6_4 + 0.349584823239511299e0 * wr_8_4 +
      0.130332166919293482e0 * wr_4_4 - 0.149791609793688074e0 * wr_10_4 +
      0.248119489268744141e-1 * wr_12_4;
  results[k++] = -0.446683102094740287e0 * wr_8_8 -
                 0.357772856111629407e0 * wr_10_8 -
                 0.281307561037612316e0 * wr_12_8;
  results[k++] =
      0.137252703261503257e0 * wr_2_0 + 0.194483451276561031e0 * wr_4_0 +
      0.436024018711783493e-1 * wr_6_0 - 0.235060198068679459e0 * wr_8_0 -
      0.293627681458718429e0 * wr_10_0 + 0.253436335467360090e0 * wr_12_0;
  results[k++] =
      0.470959767258134281e-1 * wr_6_4 + 0.210517810191191747e0 * wr_8_4 +
      0.317860225303536738e0 * wr_10_4 + 0.323734701358750162e0 * wr_12_4 -
      0.199780564490478608e0 * wr_4_4;
  results[k++] =
      -0.651013521854029892e-1 * wr_4_4 + 0.324180632432677568e0 * wr_6_4 -
      0.388270005360791028e0 * wr_8_4 + 0.139189826703801708e0 * wr_10_4;
  results[k++] =
      0.203799468479201806e0 * wr_4_4 - 0.103555704444048580e0 * wr_6_4 -
      0.289399375203645500e0 * wr_8_4 - 0.346807961633100801e0 * wr_10_4;
  results[k++] =
      0.630341132074124001e-1 * wr_2_0 + 0.150345132835404189e0 * wr_4_0 +
      0.239151655347571092e0 * wr_6_0 + 0.302267789222964679e0 * wr_8_0 +
      0.290358397553259575e0 * wr_10_0;
  results[k++] =
      -0.276936417099529264e0 * wr_4_4 + 0.231352244730992240e0 * wr_6_4 +
      0.417833782124970905e-1 * wr_8_4 + 0.161629015765813136e0 * wr_10_4 -
      0.142348565811571712e0 * wr_12_4;
  results[k++] =
      -0.452748887454903202e0 * wr_4_4 - 0.150089565210396438e0 * wr_6_4 -
      0.162641579109652840e-1 * wr_8_4 - 0.355913536966731884e-1 * wr_10_4 -
      0.609500145029686047e0 * wr_12_4;
  results[k++] =
      0.101479067702335753e0 * wr_6_0 + 0.828898240042149603e-2 * wr_8_0 +
      0.490773361295408390e0 * wr_2_0 + 0.446775354756958423e-1 * wr_10_0 +
      wr_0_0 + 0.260758848994143112e0 * wr_4_0 +
      0.603103667096129069e0 * wr_12_0;
  results[k++] = -0.217589279697297761e0 * wr_12_8 +
                 0.483252974819820550e0 * wr_10_8 -
                 0.224578909829195646e0 * wr_8_8;
  results[k++] =
      0.259228155780597568e0 * wr_4_4 + 0.285180301220952503e-1 * wr_6_4 -
      0.258812603709913607e0 * wr_8_4 - 0.297932610774972844e0 * wr_10_4 +
      0.263750930025390754e0 * wr_12_4;
  results[k++] =
      -0.273560804306376790e0 * wr_4_4 - 0.266553797811485205e0 * wr_6_4 -
      0.294669236462339257e0 * wr_8_4 - 0.305849973232632291e0 * wr_10_4 -
      0.260064637919365861e0 * wr_12_4;
  results[k++] =
      0.501176011032588123e-1 * wr_2_0 + 0.121355286067172701e0 * wr_4_0 +
      0.199016825552082050e0 * wr_6_0 + 0.268224526778850044e0 * wr_8_0 +
      0.307965647188496493e0 * wr_10_0 + 0.277625595653839413e0 * wr_12_0;
  results[k++] = 0.134386027002812885e1 * wr_12_12;
  results[k++] =
      -0.156199683934833752e0 * wr_6_4 + 0.148104852019396191e0 * wr_8_4 +
      0.552164310683597540e-1 * wr_4_4 - 0.634606044869452975e-1 * wr_10_4 +
      0.105118122408015792e-1 * wr_12_4;
  results[k++] = 0.188920399896979604e0 * wr_12_8 -
                 0.419581081298553154e0 * wr_10_8 +
                 0.194989098324986421e0 * wr_8_8;
  results[k++] = 0.552179689481944240e0 * wr_12_12;
  results[k++] =
      -0.368691762314952206e0 * wr_6_4 + 0.349584823239511299e0 * wr_8_4 +
      0.130332166919293482e0 * wr_4_4 - 0.149791609793688074e0 * wr_10_4 +
      0.248119489268744141e-1 * wr_12_4;
  results[k++] = -0.217589279697297761e0 * wr_12_8 +
                 0.483252974819820550e0 * wr_10_8 -
                 0.224578909829195646e0 * wr_8_8;
  results[k++] =
      wr_0_0 - 0.894427190999915880e0 * wr_2_0 +
      0.529411764705882353e0 * wr_4_0 - 0.223253948945138656e0 * wr_6_0 +
      0.638251644832455195e-1 * wr_8_0 - 0.111032928401137596e-1 * wr_10_0 +
      0.888410284022075649e-3 * wr_12_0;
  results[k++] = 0.153147091053610278e0 * wr_12_12;
  results[k++] =
      -0.396038482394322789e0 * wr_6_4 + 0.375514337490390062e0 * wr_8_4 +
      0.139999204945044289e0 * wr_4_4 - 0.160901999669356224e0 * wr_10_4 +
      0.266523085206622695e-1 * wr_12_4;
  results[k++] = 0.128018305745206113e0 * wr_12_8 -
                 0.284321117147080118e0 * wr_10_8 +
                 0.132130643487745739e0 * wr_8_8;
  results[k++] =
      -0.784072602211731608e-2 * wr_2_0 + 0.696139267966114167e-1 * wr_4_0 -
      0.136996185408269281e0 * wr_6_0 + 0.117495848676907121e0 * wr_8_0 -
      0.481801644666515134e-1 * wr_10_0 + 0.779576860368663421e-2 * wr_12_0;
  results[k++] = 0.264938013530333508e0 * wr_8_8 +
                 0.332557415621135792e0 * wr_10_8 +
                 0.834249897330575931e0 * wr_12_8;
  results[k++] =
      0.750243561673582737e-1 * wr_4_4 + 0.934838378546014613e-1 * wr_6_4 -
      0.167695722586946162e-1 * wr_8_4 - 0.363380924312279755e0 * wr_10_4 +
      0.216621561292493981e0 * wr_12_4;
  results[k++] =
      -0.177192477984583509e0 * wr_2_0 + 0.104880289202249204e0 * wr_4_0 +
      0.247678018575851393e0 * wr_6_0 - 0.348980622449214738e0 * wr_8_0 +
      0.169372464721825309e0 * wr_10_0 - 0.297440820178461128e-1 * wr_12_0;
  results[k++] = -0.446683102094740287e0 * wr_8_8 -
                 0.357772856111629407e0 * wr_10_8 -
                 0.281307561037612316e0 * wr_12_8;
  results[k++] =
      0.259228155780597568e0 * wr_4_4 + 0.285180301220952503e-1 * wr_6_4 -
      0.258812603709913607e0 * wr_8_4 - 0.297932610774972844e0 * wr_10_4 +
      0.263750930025390754e0 * wr_12_4;
  results[k++] = 0.153147091053610278e0 * wr_12_12;
  results[k++] =
      0.858669034404379444e-1 * wr_6_0 + 0.291070805060954841e0 * wr_8_0 -
      0.186748534384597821e0 * wr_2_0 - 0.199005171672808153e0 * wr_10_0 +
      wr_0_0 - 0.459599224305106658e0 * wr_4_0 +
      0.397246312712728112e-1 * wr_12_0;
  results[k++] = 0.359860965066132841e0 * wr_8_8 +
                 0.975114153227200711e-1 * wr_10_8 -
                 0.201448528638789820e-1 * wr_12_8;
  results[k++] =
      0.381291180230174210e0 * wr_4_4 - 0.234899525670584669e0 * wr_6_4 -
      0.277271371472503874e0 * wr_8_4 - 0.292146960784082790e-1 * wr_10_4 +
      0.138401499744120110e0 * wr_12_4;
  results[k++] = 0.893105861417177107e-1 * wr_8_8 -
                 0.452996045375861176e0 * wr_10_8 +
                 0.412464188429515290e0 * wr_12_8;
  results[k++] =
      -0.158586492171703732e-1 * wr_2_0 + 0.239883354900319391e-1 * wr_4_0 +
      0.110835371232292754e0 * wr_6_0 + 0.633725480143781489e-1 * wr_8_0 -
      0.341433055588907787e0 * wr_10_0 + 0.173444901973226057e0 * wr_12_0;
  results[k++] =
      0.565517362602530644e-1 * wr_4_4 + 0.495167147867292991e-1 * wr_6_4 +
      0.859556767551206294e-1 * wr_8_4 + 0.204270878290909537e0 * wr_10_4 +
      0.718452440308177245e0 * wr_12_4;
  results[k++] = 0.288332702574199414e0 * wr_8_8 -
                 0.227494499222379621e0 * wr_10_8 -
                 0.411588699645228480e0 * wr_12_8;
  results[k++] =
      0.137252703261503257e0 * wr_2_0 + 0.194483451276561031e0 * wr_4_0 +
      0.436024018711783493e-1 * wr_6_0 - 0.235060198068679459e0 * wr_8_0 -
      0.293627681458718429e0 * wr_10_0 + 0.253436335467360090e0 * wr_12_0;
  results[k++] =
      -0.273560804306376790e0 * wr_4_4 - 0.266553797811485205e0 * wr_6_4 -
      0.294669236462339257e0 * wr_8_4 - 0.305849973232632291e0 * wr_10_4 -
      0.260064637919365861e0 * wr_12_4;
  results[k++] =
      -0.396038482394322789e0 * wr_6_4 + 0.375514337490390062e0 * wr_8_4 +
      0.139999204945044289e0 * wr_4_4 - 0.160901999669356224e0 * wr_10_4 +
      0.266523085206622695e-1 * wr_12_4;
  results[k++] = 0.359860965066132841e0 * wr_8_8 +
                 0.975114153227200711e-1 * wr_10_8 -
                 0.201448528638789820e-1 * wr_12_8;
  results[k++] =
      -0.307559635959386819e0 * wr_6_0 - 0.218127759937245676e0 * wr_8_0 +
      0.285037236692280886e0 * wr_2_0 + 0.194002589184405250e-1 * wr_10_0 +
      wr_0_0 - 0.131691837574190515e0 * wr_4_0 +
      0.135419110435936388e0 * wr_12_0;
  results[k++] =
      0.536496876658597068e0 * wr_4_4 + 0.263063809638005575e0 * wr_6_4 +
      0.120603948102498013e0 * wr_8_4 + 0.184560352869233487e-1 * wr_10_4 -
      0.417296222794286625e-1 * wr_12_4;
  results[k++] =
      0.675922530857876734e-2 * wr_4_4 - 0.892309511850511705e-1 * wr_6_4 +
      0.253820042804801107e0 * wr_8_4 - 0.256357917676516934e0 * wr_10_4 +
      0.858714911102444145e-1 * wr_12_4;
  results[k++] =
      0.282129628950756836e-1 * wr_4_4 - 0.111164748990326479e0 * wr_6_4 -
      0.170267660929032497e0 * wr_8_4 - 0.873499017897122755e-1 * wr_10_4 +
      0.576043474355326196e0 * wr_12_4;
  results[k++] =
      -0.197792106625607699e-1 * wr_2_0 - 0.429268460656341087e-1 * wr_4_0 -
      0.543069980995064530e-1 * wr_6_0 - 0.296397952995855342e-1 * wr_8_0 +
      0.891296870604442727e-1 * wr_10_0 + 0.648971398666403438e0 * wr_12_0;
  results[k++] =
      0.916509934134716288e-1 * wr_4_4 - 0.322644679766652436e0 * wr_6_4 +
      0.327775785922077349e-1 * wr_8_4 + 0.386228643928591849e0 * wr_10_4 -
      0.206662241020911024e0 * wr_12_4;
  results[k++] =
      0.470959767258134281e-1 * wr_6_4 + 0.210517810191191747e0 * wr_8_4 +
      0.317860225303536738e0 * wr_10_4 + 0.323734701358750162e0 * wr_12_4 -
      0.199780564490478608e0 * wr_4_4;
  results[k++] =
      0.501176011032588123e-1 * wr_2_0 + 0.121355286067172701e0 * wr_4_0 +
      0.199016825552082050e0 * wr_6_0 + 0.268224526778850044e0 * wr_8_0 +
      0.307965647188496493e0 * wr_10_0 + 0.277625595653839413e0 * wr_12_0;
  results[k++] = 0.128018305745206113e0 * wr_12_8 -
                 0.284321117147080118e0 * wr_10_8 +
                 0.132130643487745739e0 * wr_8_8;
  results[k++] =
      0.381291180230174210e0 * wr_4_4 - 0.234899525670584669e0 * wr_6_4 -
      0.277271371472503874e0 * wr_8_4 - 0.292146960784082790e-1 * wr_10_4 +
      0.138401499744120110e0 * wr_12_4;
  results[k++] =
      0.536496876658597068e0 * wr_4_4 + 0.263063809638005575e0 * wr_6_4 +
      0.120603948102498013e0 * wr_8_4 + 0.184560352869233487e-1 * wr_10_4 -
      0.417296222794286625e-1 * wr_12_4;
  results[k++] =
      0.195152053273722601e0 * wr_6_0 + 0.876719292352273618e-1 * wr_8_0 +
      0.520930122230720238e0 * wr_2_0 + 0.329438358992386274e-2 * wr_10_0 +
      wr_0_0 + 0.328436269612740201e0 * wr_4_0 -
      0.460704190142876373e-1 * wr_12_0;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 3)
void BoxMatrix::setup___oa_3_G1(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 0)
  if (lmax >= 0) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 3, 0, 1));
  }
#endif
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 1, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 3, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 5, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 1, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 1, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 1, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 3, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 3, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 3, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 5, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 5, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 1, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 1, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 1, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 1, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 1, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 1, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 1, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 1, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 1, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 7, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 2, 2));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 9, 3, 3));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 4, 3));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 9, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 5, 3));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 1, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(1, 2, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 9, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 15, 6, 4));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 3)
void BoxMatrix::evaluate___oa_3_G1(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 0)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 1)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = -0.577350269189625763e0 * wr_1_0;
  results[k++] = -0.258198889747161126e0 * wr_1_0;
  results[k++] = 0.774596669241483376e0 * wr_1_0;
  results[k++] = wr_0_0;
  results[k++] = 0.200000000000000000e0 * wr_2_0;
  results[k++] = -0.600000000000000000e0 * wr_2_0;
  results[k++] = 0.200000000000000000e0 * wr_2_0;
  results[k++] = wr_0_0 - 0.357770876399966352e0 * wr_2_0;
  results[k++] = -0.268328157299974764e0 * wr_2_0;
  results[k++] = -0.600000000000000000e0 * wr_2_0;
  results[k++] = -0.268328157299974764e0 * wr_2_0;
  results[k++] = wr_0_0 + 0.357770876399966352e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] = 0.447213595499957940e0 * wr_2_0;
  results[k++] = -0.447213595499957940e0 * wr_2_0;
  results[k++] = -0.292770021884559954e0 * wr_2_0;
  results[k++] = 0.717137165600636184e0 * wr_2_0;
  results[k++] = -0.577350269189625763e0 * wr_1_0;
  results[k++] = -0.258198889747161125e0 * wr_1_0;
  results[k++] = 0.507092552837109947e0 * wr_3_0;
  results[k++] = 0.577350269189625763e0 * wr_1_0;
  results[k++] =
      -0.206559111797728900e0 * wr_1_0 + 0.304255531702265968e0 * wr_3_0;
  results[k++] =
      -0.154919333848296675e0 * wr_1_0 - 0.405674042269687958e0 * wr_3_0;
  results[k++] = 0.247435829652696755e0 * wr_3_0;
  results[k++] =
      0.709929573971953926e0 * wr_1_0 - 0.354101334510392401e0 * wr_3_0;
  results[k++] =
      -0.101418510567421990e0 * wr_1_0 - 0.265576000882794300e0 * wr_3_0;
  results[k++] = -0.606091526731326449e0 * wr_3_0;
  results[k++] = -0.271052370871575372e0 * wr_3_0;
  results[k++] =
      0.828078671210825063e0 * wr_1_0 + 0.271052370871575372e0 * wr_3_0;
  results[k++] = wr_0_0;
  results[k++] = -0.447213595499957940e0 * wr_2_0;
  results[k++] = -0.292770021884559954e0 * wr_2_0;
  results[k++] = 0.534522483824848769e0 * wr_4_0;
  results[k++] = 0.755928946018454454e0 * wr_4_4;
  results[k++] = -0.447213595499957940e0 * wr_2_0;
  results[k++] = wr_0_0;
  results[k++] =
      -0.209121444203257110e0 * wr_2_0 + 0.374087811833129796e0 * wr_4_0;
  results[k++] =
      -0.204896333028753196e0 * wr_2_0 - 0.381801774160606263e0 * wr_4_0;
  results[k++] = 0.755928946018454454e0 * wr_4_4;
  results[k++] = -0.292770021884559954e0 * wr_2_0;
  results[k++] =
      -0.209121444203257110e0 * wr_2_0 + 0.374087811833129796e0 * wr_4_0;
  results[k++] = wr_0_0 + 0.182536161428554261e0 * wr_2_0 -
                 0.326530612244897959e0 * wr_4_0;
  results[k++] =
      -0.134136136531877416e0 * wr_2_0 - 0.249947932937058989e0 * wr_4_0;
  results[k++] = 0.494871659305393511e0 * wr_4_4;
  results[k++] = 0.534522483824848769e0 * wr_4_0;
  results[k++] =
      -0.204896333028753196e0 * wr_2_0 - 0.381801774160606263e0 * wr_4_0;
  results[k++] =
      -0.134136136531877416e0 * wr_2_0 - 0.249947932937058989e0 * wr_4_0;
  results[k++] = wr_0_0 + 0.456340403571385652e0 * wr_2_0 +
                 0.183673469387755102e0 * wr_4_0;
  results[k++] = 0.202030508910442150e0 * wr_4_4;
  results[k++] = 0.755928946018454454e0 * wr_4_4;
  results[k++] = 0.755928946018454454e0 * wr_4_4;
  results[k++] = 0.494871659305393511e0 * wr_4_4;
  results[k++] = 0.202030508910442150e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.638876564999939914e0 * wr_2_0 +
                 0.142857142857142857e0 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = 0.507092552837109946e0 * wr_3_0;
  results[k++] = -0.414039335605412531e0 * wr_3_0;
  results[k++] = -0.308606699924183821e0 * wr_3_0;
  results[k++] = 0.690065559342354218e0 * wr_3_0;
  results[k++] = -0.600000000000000000e0 * wr_2_0;
  results[k++] = -0.268328157299974764e0 * wr_2_0;
  results[k++] =
      0.383325938999963950e-1 * wr_2_0 + 0.571428571428571429e0 * wr_4_0;
  results[k++] = 0.489897948556635620e0 * wr_2_0;
  results[k++] =
      -0.250387454859504510e0 * wr_2_0 + 0.349927106111882585e0 * wr_4_0;
  results[k++] =
      -0.187790591144628382e0 * wr_2_0 - 0.349927106111882585e0 * wr_4_0;
  results[k++] = 0.272165526975908678e0 * wr_4_0;
  results[k++] =
      0.629868791001388655e0 * wr_2_0 - 0.347760353971534041e0 * wr_4_0;
  results[k++] =
      -0.139970842444753034e0 * wr_2_0 - 0.260820265478650530e0 * wr_4_0;
  results[k++] = 0.384900179459750509e0 * wr_4_4;
  results[k++] = 0.688530372659096337e0 * wr_4_4;
  results[k++] = 0.516397779494322249e0 * wr_4_4;
  results[k++] = -0.816496580927726033e0 * wr_4_4;
  results[k++] = 0.730296743340221485e0 * wr_4_4;
  results[k++] = -0.365148371670110744e0 * wr_4_4;
  results[k++] = -0.608580619450184571e0 * wr_4_0;
  results[k++] = -0.272165526975908678e0 * wr_4_0;
  results[k++] =
      0.782460796435951592e0 * wr_2_0 + 0.233284737407921724e0 * wr_4_0;
  results[k++] = -0.272165526975908678e0 * wr_4_4;
  results[k++] = -0.486864495560147658e0 * wr_4_4;
  results[k++] = -0.365148371670110744e0 * wr_4_4;
  results[k++] = 0.774596669241483376e0 * wr_1_0;
  results[k++] =
      -0.154919333848296675e0 * wr_1_0 - 0.405674042269687958e0 * wr_3_0;
  results[k++] =
      -0.101418510567421990e0 * wr_1_0 - 0.265576000882794300e0 * wr_3_0;
  results[k++] =
      0.602338601936834159e-1 * wr_3_0 + 0.600624975130372640e0 * wr_5_0;
  results[k++] = 0.509647191437625545e0 * wr_5_4;
  results[k++] = -0.414039335605412531e0 * wr_3_0;
  results[k++] =
      0.758946638440411042e0 * wr_1_0 - 0.828078671210825063e-1 * wr_3_0;
  results[k++] = -0.946375624240942928e-1 * wr_1_0 -
                 0.204795124658523614e0 * wr_3_0 +
                 0.429017839378837602e0 * wr_5_0;
  results[k++] = -0.724417932624442783e-1 * wr_1_0 -
                 0.221313334068995250e0 * wr_3_0 -
                 0.315262439108839117e0 * wr_5_0;
  results[k++] = 0.624187783932359259e0 * wr_5_4;
  results[k++] = -0.308606699924183820e0 * wr_3_0;
  results[k++] =
      -0.205737799949455880e0 * wr_3_0 + 0.410304969931109108e0 * wr_5_0;
  results[k++] = 0.793560085519329826e0 * wr_1_0 +
                 0.673435029701473833e-1 * wr_3_0 -
                 0.306980176771573448e0 * wr_5_0;
  results[k++] = -0.539949247156038895e-1 * wr_1_0 -
                 0.164957219768464504e0 * wr_3_0 -
                 0.234982748199917496e0 * wr_5_0;
  results[k++] = 0.465242105199235432e0 * wr_5_4;
  results[k++] = 0.348155311911395676e0 * wr_5_4;
  results[k++] = 0.607789741118069061e0 * wr_5_4;
  results[k++] = 0.465242105199235432e0 * wr_5_4;
  results[k++] = 0.109658615826628165e0 * wr_5_0 +
                 0.377964473009227227e0 * wr_1_0 -
                 0.384900179459750509e0 * wr_3_0;
  results[k++] = 0.246182981958665465e0 * wr_5_4;
  results[k++] = -0.492365963917330931e0 * wr_5_4;
  results[k++] = 0.483493778415228179e0 * wr_5_4;
  results[k++] = -0.263180677983907595e0 * wr_5_4;
  results[k++] = 0.550481882563180302e0 * wr_5_0;
  results[k++] =
      -0.230021853114118073e0 * wr_3_0 - 0.366987921708786868e0 * wr_5_0;
  results[k++] =
      -0.150584650484208540e0 * wr_3_0 - 0.240249990052149056e0 * wr_5_0;
  results[k++] = 0.845154254728516578e0 * wr_1_0 +
                 0.368855556781658750e0 * wr_3_0 +
                 0.147122471584124921e0 * wr_5_0;
  results[k++] = 0.208062594644119754e0 * wr_5_4;
  results[k++] = 0.738548945875996396e0 * wr_5_4;
  results[k++] = 0.492365963917330931e0 * wr_5_4;
  results[k++] = 0.537215309350253532e-1 * wr_5_4;
  results[k++] = -0.131590338991953797e0 * wr_5_4;
  results[k++] = 0.155080701733078478e0 * wr_5_0 +
                 0.534522483824848769e0 * wr_1_0 -
                 0.544331053951817355e0 * wr_3_0;
  results[k++] = wr_0_0 + 0.357770876399966352e0 * wr_2_0;
  results[k++] =
      -0.187790591144628382e0 * wr_2_0 - 0.349927106111882585e0 * wr_4_0;
  results[k++] =
      -0.139970842444753034e0 * wr_2_0 - 0.260820265478650530e0 * wr_4_0;
  results[k++] = 0.516397779494322249e0 * wr_4_4;
  results[k++] =
      0.205868551662653772e0 * wr_6_4 - 0.199171839092787678e0 * wr_4_4;
  results[k++] =
      0.742269619025205484e-1 * wr_4_0 + 0.617605654987961318e0 * wr_6_0;
  results[k++] =
      0.132781226061858452e0 * wr_4_4 + 0.617605654987961318e0 * wr_6_4;
  results[k++] =
      -0.187790591144628382e0 * wr_2_0 - 0.349927106111882585e0 * wr_4_0;
  results[k++] = wr_0_0 + 0.281105688599973562e0 * wr_2_0 -
                 0.142857142857142857e0 * wr_4_0;
  results[k++] = -0.174239063181801795e0 * wr_4_0 +
                 0.469828540110638092e0 * wr_6_0 -
                 0.123809523809523810e0 * wr_2_0;
  results[k++] =
      0.344975744745641383e0 * wr_4_4 + 0.297145659300278836e0 * wr_6_4;
  results[k++] =
      0.365902032681783768e0 * wr_4_4 - 0.378204679244474401e0 * wr_6_4;
  results[k++] = -0.106479427499989986e0 * wr_2_0 -
                 0.233766233766233766e0 * wr_4_0 -
                 0.294159194967924534e0 * wr_6_0;
  results[k++] =
      0.365902032681783768e0 * wr_4_4 + 0.546295647797574134e0 * wr_6_4;
  results[k++] =
      -0.139970842444753034e0 * wr_2_0 - 0.260820265478650530e0 * wr_4_0;
  results[k++] = -0.174239063181801795e0 * wr_4_0 +
                 0.469828540110638092e0 * wr_6_0 -
                 0.123809523809523810e0 * wr_2_0;
  results[k++] = wr_0_0 - 0.389610389610389610e-1 * wr_4_0 -
                 0.280151614255166223e0 * wr_6_0 +
                 0.354931424999966619e0 * wr_2_0;
  results[k++] =
      -0.428549564355483348e-1 * wr_4_4 + 0.531550314731532857e0 * wr_6_4;
  results[k++] =
      0.375862832088510473e0 * wr_6_4 - 0.363636363636363636e0 * wr_4_4;
  results[k++] = -0.174239063181801795e0 * wr_4_0 -
                 0.219253318718297776e0 * wr_6_0 -
                 0.793650793650793651e-1 * wr_2_0;
  results[k++] =
      0.484848484848484848e0 * wr_4_4 + 0.187931416044255237e0 * wr_6_4;
  results[k++] = 0.516397779494322249e0 * wr_4_4;
  results[k++] =
      0.344975744745641383e0 * wr_4_4 + 0.297145659300278836e0 * wr_6_4;
  results[k++] =
      -0.428549564355483348e-1 * wr_4_4 + 0.531550314731532857e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.496903994999953266e0 * wr_2_0 -
                 0.303030303030303030e-1 * wr_4_0 +
                 0.560303228510332445e-1 * wr_6_0;
  results[k++] =
      -0.191653191525356324e0 * wr_4_4 + 0.416003923020390371e0 * wr_6_4;
  results[k++] = -0.428549564355483348e0 * wr_4_0 +
                 0.138667974340130123e0 * wr_6_0 +
                 0.351364184463153260e0 * wr_2_0;
  results[k++] =
      0.205868551662653772e0 * wr_6_4 - 0.199171839092787678e0 * wr_4_4;
  results[k++] =
      0.365902032681783768e0 * wr_4_4 - 0.378204679244474401e0 * wr_6_4;
  results[k++] =
      0.375862832088510473e0 * wr_6_4 - 0.363636363636363636e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.745355992499929899e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 -
                 0.420227421382749334e-1 * wr_6_0;
  results[k++] =
      -0.210113710691374667e0 * wr_6_4 + 0.203278907045435427e0 * wr_4_4;
  results[k++] =
      0.742269619025205484e-1 * wr_4_0 + 0.617605654987961318e0 * wr_6_0;
  results[k++] = -0.106479427499989986e0 * wr_2_0 -
                 0.233766233766233766e0 * wr_4_0 -
                 0.294159194967924534e0 * wr_6_0;
  results[k++] = -0.174239063181801795e0 * wr_4_0 -
                 0.219253318718297776e0 * wr_6_0 -
                 0.793650793650793651e-1 * wr_2_0;
  results[k++] =
      -0.191653191525356324e0 * wr_4_4 + 0.416003923020390371e0 * wr_6_4;
  results[k++] =
      -0.210113710691374667e0 * wr_6_4 + 0.203278907045435427e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.496903994999953266e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 +
                 0.112060645702066489e0 * wr_6_0;
  results[k++] =
      0.338798178409059045e0 * wr_4_4 - 0.420227421382749334e-1 * wr_6_4;
  results[k++] =
      0.132781226061858452e0 * wr_4_4 + 0.617605654987961318e0 * wr_6_4;
  results[k++] =
      0.365902032681783768e0 * wr_4_4 + 0.546295647797574134e0 * wr_6_4;
  results[k++] =
      0.484848484848484848e0 * wr_4_4 + 0.187931416044255237e0 * wr_6_4;
  results[k++] = -0.428549564355483348e0 * wr_4_0 +
                 0.138667974340130123e0 * wr_6_0 +
                 0.351364184463153260e0 * wr_2_0;
  results[k++] =
      0.338798178409059045e0 * wr_4_4 - 0.420227421382749334e-1 * wr_6_4;
  results[k++] = wr_0_0 - 0.248451997499976633e0 * wr_2_0 -
                 0.333333333333333333e0 * wr_4_0 +
                 0.154083387840341422e0 * wr_6_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] = 0.534522483824848769e0 * wr_4_0;
  results[k++] = -0.398409536444797880e0 * wr_4_0;
  results[k++] = 0.788810637746615470e0 * wr_4_4;
  results[k++] = 0.852802865422441737e0 * wr_4_4;
  results[k++] = -0.317820863081864106e0 * wr_4_0;
  results[k++] = -0.568535243614961158e0 * wr_4_4;
  results[k++] = 0.522232967867093514e0 * wr_4_4;
  results[k++] = 0.674199862463242086e0 * wr_4_0;
  results[k++] = 0.233549683248456891e0 * wr_4_4;
  results[k++] = -0.606091526731326449e0 * wr_3_0;
  results[k++] = -0.271052370871575372e0 * wr_3_0;
  results[k++] =
      0.602338601936834159e-1 * wr_3_0 + 0.600624975130372640e0 * wr_5_0;
  results[k++] = 0.451753951452625620e0 * wr_3_0;
  results[k++] =
      -0.269374011880589533e0 * wr_3_0 + 0.376050716545177472e0 * wr_5_0;
  results[k++] =
      -0.202030508910442150e0 * wr_3_0 - 0.322329185610152119e0 * wr_5_0;
  results[k++] = 0.319089614086986256e0 * wr_5_4;
  results[k++] = 0.638179228173972514e0 * wr_5_4;
  results[k++] = 0.128564869306645005e0 * wr_5_4;
  results[k++] = -0.459967659660855178e0 * wr_5_4;
  results[k++] = 0.517463617118462073e0 * wr_5_4;
  results[k++] = 0.287479787288034485e0 * wr_5_0;
  results[k++] =
      0.590936840285278885e0 * wr_3_0 - 0.342839651484386678e0 * wr_5_0;
  results[k++] =
      -0.161164592805076060e0 * wr_3_0 - 0.257129738613290009e0 * wr_5_0;
  results[k++] = 0.385694607919935013e0 * wr_5_4;
  results[k++] = 0.459967659660855178e0 * wr_5_4;
  results[k++] = 0.574959574576068970e-1 * wr_5_4;
  results[k++] = -0.787295821622216949e0 * wr_5_4;
  results[k++] = 0.492925153153671240e0 * wr_5_4;
  results[k++] = -0.704178790219530341e-1 * wr_5_4;
  results[k++] = -0.609836721136306281e0 * wr_5_0;
  results[k++] = -0.272727272727272727e0 * wr_5_0;
  results[k++] =
      0.759737176397586326e0 * wr_3_0 + 0.212121212121212121e0 * wr_5_0;
  results[k++] = -0.352089395109765171e0 * wr_5_4;
  results[k++] = -0.535361158703107526e0 * wr_5_4;
  results[k++] = -0.283426495783998101e0 * wr_5_4;
  results[k++] = 0.717137165600636186e0 * wr_2_0;
  results[k++] =
      -0.204896333028753196e0 * wr_2_0 - 0.381801774160606263e0 * wr_4_0;
  results[k++] =
      -0.134136136531877416e0 * wr_2_0 - 0.249947932937058989e0 * wr_4_0;
  results[k++] = 0.912680807142771306e-2 * wr_2_0 +
                 0.927643784786641929e-1 * wr_4_0 +
                 0.630341132074124001e0 * wr_6_0;
  results[k++] =
      -0.183664099009492863e0 * wr_4_4 + 0.398662736048649643e0 * wr_6_4;
  results[k++] = -0.398409536444797881e0 * wr_4_0;
  results[k++] =
      0.687243193489091276e0 * wr_2_0 - 0.113831296127085109e0 * wr_4_0;
  results[k++] = -0.133305564233098128e0 * wr_2_0 -
                 0.193074741977702341e0 * wr_4_0 +
                 0.460336075947121191e0 * wr_6_0;
  results[k++] = -0.102040816326530612e0 * wr_2_0 -
                 0.224021652662316592e0 * wr_4_0 -
                 0.281897124066382855e0 * wr_6_0;
  results[k++] =
      -0.246411246246886702e0 * wr_4_4 + 0.534862186740501905e0 * wr_6_4;
  results[k++] = -0.563436169819011052e0 * wr_4_4;
  results[k++] = 0.225374467927604421e0 * wr_4_4;
  results[k++] =
      0.382268486119173614e0 * wr_4_4 + 0.291142097827431151e0 * wr_6_4;
  results[k++] =
      -0.246411246246886702e0 * wr_4_4 + 0.534862186740501905e0 * wr_6_4;
  results[k++] = 0.563794248132765711e-1 * wr_6_0 +
                 0.142857142857142857e0 * wr_2_0 -
                 0.174239063181801795e0 * wr_4_0;
  results[k++] = -0.426401432711220869e0 * wr_4_4;
  results[k++] =
      0.542692732541553832e0 * wr_4_4 + 0.144241605094894116e0 * wr_6_4;
  results[k++] =
      -0.253768421017764782e-1 * wr_4_4 - 0.377713184976731563e0 * wr_6_4;
  results[k++] =
      -0.372961886595178742e0 * wr_4_4 + 0.385501905131028820e0 * wr_6_4;
  results[k++] = -0.317820863081864106e0 * wr_4_0;
  results[k++] =
      -0.202249640143004431e0 * wr_4_0 + 0.432724815284682349e0 * wr_6_0;
  results[k++] = 0.731094736741655679e0 * wr_2_0 +
                 0.162126697125288120e-1 * wr_4_0 -
                 0.293776921648568993e0 * wr_6_0;
  results[k++] = -0.814004117568842491e-1 * wr_2_0 -
                 0.178707456737868698e0 * wr_4_0 -
                 0.224876111326433478e0 * wr_6_0;
  results[k++] =
      -0.196568173679031046e0 * wr_4_4 + 0.426672421891870828e0 * wr_6_4;
  results[k++] = -0.142133810903740290e0 * wr_4_4;
  results[k++] =
      -0.361795155027702556e0 * wr_4_4 + 0.432724815284682349e0 * wr_6_4;
  results[k++] =
      -0.253768421017764782e-1 * wr_4_4 + 0.545585711633056701e0 * wr_6_4;
  results[k++] =
      0.497282515460238322e0 * wr_4_4 + 0.192750952565514410e0 * wr_6_4;
  results[k++] = 0.142224140630623609e0 * wr_6_0 +
                 0.360374985078223584e0 * wr_2_0 -
                 0.439539798559298345e0 * wr_4_0;
  results[k++] = 0.323875137815647861e0 * wr_6_4;
  results[k++] =
      -0.189902897406215823e0 * wr_4_4 - 0.559420692590664488e0 * wr_6_4;
  results[k++] =
      0.497282515460238322e0 * wr_4_4 + 0.404777000387580261e0 * wr_6_4;
  results[k++] =
      -0.507536842035529563e0 * wr_4_4 - 0.110166345618213372e0 * wr_6_4;
  results[k++] = 0.560968194005074306e0 * wr_6_0;
  results[k++] =
      -0.245163586350269850e0 * wr_4_0 - 0.356979759821410922e0 * wr_6_0;
  results[k++] =
      -0.160497241728136278e0 * wr_4_0 - 0.233698110135538717e0 * wr_6_0;
  results[k++] = 0.805822964025380299e0 * wr_2_0 +
                 0.327613622798385077e0 * wr_4_0 +
                 0.127209138596625679e0 * wr_6_0;
  results[k++] =
      -0.926631257159319173e-1 * wr_4_4 + 0.201135308576686262e0 * wr_6_4;
  results[k++] = 0.724206824377901366e0 * wr_6_4;
  results[k++] =
      -0.849271575448934149e-1 * wr_4_4 + 0.329184920171773349e0 * wr_6_4;
  results[k++] =
      -0.333587252577354902e0 * wr_4_4 - 0.129301269799298312e0 * wr_6_4;
  results[k++] =
      -0.453954751950806736e0 * wr_4_4 - 0.175956741167900854e0 * wr_6_4;
  results[k++] = 0.155798740090359144e0 * wr_6_0 +
                 0.394771016975861392e0 * wr_2_0 -
                 0.481491725184408834e0 * wr_4_0;
  results[k++] =
      0.828078671210825063e0 * wr_1_0 + 0.271052370871575372e0 * wr_3_0;
  results[k++] = -0.724417932624442783e-1 * wr_1_0 -
                 0.221313334068995250e0 * wr_3_0 -
                 0.315262439108839117e0 * wr_5_0;
  results[k++] = -0.539949247156038895e-1 * wr_1_0 -
                 0.164957219768464504e0 * wr_3_0 -
                 0.234982748199917496e0 * wr_5_0;
  results[k++] = 0.465242105199235432e0 * wr_5_4;
  results[k++] =
      -0.227752509793766188e0 * wr_5_4 + 0.177140840950707035e0 * wr_7_4;
  results[k++] = 0.167661616718935796e-1 * wr_3_0 +
                 0.113171131987788401e0 * wr_5_0 +
                 0.647561509701123570e0 * wr_7_0;
  results[k++] =
      -0.253058344215295764e-1 * wr_5_4 + 0.531422522852121104e0 * wr_7_4;
  results[k++] =
      -0.202030508910442150e0 * wr_3_0 - 0.322329185610152119e0 * wr_5_0;
  results[k++] = 0.809923870734058345e0 * wr_1_0 +
                 0.164957219768464504e0 * wr_3_0 -
                 0.159788268775943897e0 * wr_5_0;
  results[k++] =
      -0.536605876018105764e-1 * wr_1_0 - 0.150895455047042216e0 * wr_3_0 -
      0.145505741127156515e0 * wr_5_0 + 0.503658951989762777e0 * wr_7_0;
  results[k++] =
      0.288086669507242736e0 * wr_5_4 + 0.261411977886201742e0 * wr_7_4;
  results[k++] =
      0.407416075156038245e0 * wr_5_4 - 0.316879169565807524e0 * wr_7_4;
  results[k++] =
      -0.419960525565808030e-1 * wr_1_0 - 0.134964997992380049e0 * wr_3_0 -
      0.227752509793766188e0 * wr_5_0 - 0.257420720942951436e0 * wr_7_0;
  results[k++] =
      0.203708037578019123e0 * wr_5_4 + 0.528131949276345874e0 * wr_7_4;
  results[k++] = -0.273505383503131077e0 * wr_5_4;
  results[k++] = 0.316364631535480094e0 * wr_5_4;
  results[k++] =
      0.288086669507242736e0 * wr_5_4 + 0.261411977886201742e0 * wr_7_4;
  results[k++] =
      0.375624113212674035e0 * wr_1_0 - 0.352089395109765171e0 * wr_3_0 +
      0.679026791926730405e-1 * wr_5_0 + 0.143902557711360794e-1 * wr_7_0;
  results[k++] =
      -0.322090688214855299e0 * wr_5_4 + 0.467627962148975101e0 * wr_7_4;
  results[k++] =
      -0.265606357629865254e-1 * wr_1_0 + 0.199171839092787678e0 * wr_3_0 -
      0.240072224589368947e0 * wr_5_0 + 0.814035795102333790e-1 * wr_7_0;
  results[k++] = -0.344975744745641383e0 * wr_5_4;
  results[k++] =
      0.308755315711640227e0 * wr_5_4 + 0.135418998119140450e0 * wr_7_4;
  results[k++] =
      0.145346920914870822e0 * wr_5_4 - 0.322993157588601825e0 * wr_7_4;
  results[k++] =
      0.330027904702286337e-1 * wr_7_0 + 0.376826879840594965e0 * wr_3_0 -
      0.301511344577763623e0 * wr_1_0 - 0.181683651143588527e0 * wr_5_0;
  results[k++] =
      -0.406256994357421351e0 * wr_5_4 + 0.315977662277994384e0 * wr_7_4;
  results[k++] =
      -0.161164592805076060e0 * wr_3_0 - 0.257129738613290009e0 * wr_5_0;
  results[k++] = -0.137571718037042606e0 * wr_3_0 -
                 0.153421749854585867e0 * wr_5_0 +
                 0.495041857053429505e0 * wr_7_0;
  results[k++] =
      0.824022054121740328e0 * wr_1_0 + 0.240745862592204417e0 * wr_3_0 -
      0.812513988714842701e-1 * wr_5_0 - 0.262387494892847908e0 * wr_7_0;
  results[k++] =
      -0.114906830245839045e0 * wr_5_4 + 0.476650555093850853e0 * wr_7_4;
  results[k++] =
      -0.406256994357421351e0 * wr_5_4 + 0.315977662277994384e0 * wr_7_4;
  results[k++] =
      -0.335012605086404025e-1 * wr_1_0 - 0.107664822811598561e0 * wr_3_0 -
      0.181683651143588527e0 * wr_5_0 - 0.205350696259200387e0 * wr_7_0;
  results[k++] =
      0.406256994357421351e0 * wr_5_4 + 0.231716952337195882e0 * wr_7_4;
  results[k++] = 0.344975744745641383e0 * wr_5_4;
  results[k++] =
      0.343061461901822474e-1 * wr_5_4 + 0.406256994357421351e0 * wr_7_4;
  results[k++] =
      0.726734604574354107e-1 * wr_5_4 + 0.538321929314336376e0 * wr_7_4;
  results[k++] =
      0.521157306647047728e0 * wr_1_0 - 0.355275789424870693e0 * wr_3_0 -
      0.856464945029083251e-1 * wr_5_0 + 0.829742113407197667e-1 * wr_7_0;
  results[k++] =
      0.406256994357421351e0 * wr_5_4 + 0.231716952337195882e0 * wr_7_4;
  results[k++] =
      0.234508823560482818e0 * wr_1_0 + 0.125608959946864988e0 * wr_3_0 -
      0.423928519335039896e0 * wr_5_0 + 0.172347905788971753e0 * wr_7_0;
  results[k++] =
      -0.151669277893437304e0 * wr_5_4 + 0.297921795862108991e0 * wr_7_4;
  results[k++] =
      0.796097872489941651e-1 * wr_5_4 - 0.464390425619132630e0 * wr_7_4;
  results[k++] =
      0.197792106625607699e0 * wr_5_4 + 0.346136186594813473e0 * wr_7_4;
  results[k++] =
      -0.538933311600316380e-1 * wr_7_0 - 0.615355717983017682e0 * wr_3_0 +
      0.492365963917330931e0 * wr_1_0 + 0.296688159938411549e0 * wr_5_0;
  results[k++] =
      -0.309593617079421754e0 * wr_5_4 - 0.110569148956936340e0 * wr_7_4;
  results[k++] =
      0.839160839160839161e-1 * wr_5_0 + 0.628787608745845475e0 * wr_7_0;
  results[k++] = -0.126884210508882391e0 * wr_3_0 -
                 0.239810184608143310e0 * wr_5_0 -
                 0.280037963274929213e0 * wr_7_0;
  results[k++] = -0.945739066564180699e-1 * wr_3_0 -
                 0.178743958160194070e0 * wr_5_0 -
                 0.208727974054443782e0 * wr_7_0;
  results[k++] =
      -0.252782129822395507e0 * wr_5_4 + 0.379173194733593261e0 * wr_7_4;
  results[k++] =
      0.229813660491678090e0 * wr_5_4 - 0.178743958160194070e0 * wr_7_4;
  results[k++] =
      0.852802865422441737e0 * wr_1_0 + 0.414488420995682477e0 * wr_3_0 +
      0.228390652007755534e0 * wr_5_0 + 0.933459877583097374e-1 * wr_7_0;
  results[k++] = 0.331953065154646130e0 * wr_5_4;
  results[k++] =
      0.164726510370186931e0 * wr_5_4 + 0.666173387526491265e0 * wr_7_4;
  results[k++] =
      0.320423212733484472e0 * wr_5_4 + 0.445032239907617323e0 * wr_7_4;
  results[k++] =
      0.176910638331098145e0 * wr_5_4 + 0.221138297913872681e-1 * wr_7_4;
  results[k++] = 0.324320940005761710e0 * wr_3_0 -
                 0.437831492097860920e0 * wr_5_0 +
                 0.153383109443482011e0 * wr_7_0;
  results[k++] =
      -0.988960533128038497e-1 * wr_5_4 - 0.108785658644084235e0 * wr_7_4;
  results[k++] =
      0.660578259075816363e0 * wr_1_0 - 0.366927257534191286e0 * wr_3_0 -
      0.221138297913872681e0 * wr_5_0 + 0.144610982409286007e0 * wr_7_0;
  results[k++] = wr_0_0 + 0.456340403571385652e0 * wr_2_0 +
                 0.183673469387755102e0 * wr_4_0;
  results[k++] = -0.102040816326530612e0 * wr_2_0 -
                 0.224021652662316592e0 * wr_4_0 -
                 0.281897124066382855e0 * wr_6_0;
  results[k++] =
      0.443540243244396064e0 * wr_4_4 - 0.178287395580167302e0 * wr_6_4;
  results[k++] =
      0.279721414946384056e0 * wr_4_4 - 0.289126428848271615e0 * wr_6_4;
  results[k++] = -0.814004117568842491e-1 * wr_2_0 -
                 0.178707456737868698e0 * wr_4_0 -
                 0.224876111326433478e0 * wr_6_0;
  results[k++] =
      0.279721414946384056e0 * wr_4_4 + 0.417627063891947888e0 * wr_6_4;
  results[k++] = -0.702743319741502473e-1 * wr_4_4 -
                 0.220332691236426744e0 * wr_6_4 +
                 0.270359624367233590e0 * wr_8_4;
  results[k++] = 0.226809431168112746e-1 * wr_4_0 +
                 0.127209138596625679e0 * wr_6_0 +
                 0.658889975448753873e0 * wr_8_0;
  results[k++] = 0.471414550102760841e-1 * wr_4_4 +
                 0.703826964671603413e-1 * wr_6_4 +
                 0.604542498456442871e0 * wr_8_4;
  results[k++] = -0.102040816326530612e0 * wr_2_0 -
                 0.224021652662316592e0 * wr_4_0 -
                 0.281897124066382855e0 * wr_6_0;
  results[k++] = wr_0_0 + 0.395495016428534233e0 * wr_2_0 +
                 0.500927643784786642e-1 * wr_4_0 -
                 0.168090968553099734e0 * wr_6_0;
  results[k++] =
      0.550992297028478590e-1 * wr_4_4 + 0.318930188838919714e0 * wr_6_4;
  results[k++] = -0.320756973632072021e0 * wr_4_4 +
                 0.195388585474495227e0 * wr_6_4 +
                 0.125645388403866723e0 * wr_8_4;
  results[k++] =
      -0.783224038789424540e-1 * wr_2_0 - 0.153693085135375855e0 * wr_4_0 -
      0.113976674860122216e0 * wr_6_0 + 0.530369139967032872e0 * wr_8_0;
  results[k++] = 0.427675964842762695e0 * wr_4_4 +
                 0.976942927372476133e-1 * wr_6_4 +
                 0.376936165211600168e0 * wr_8_4;
  results[k++] = 0.235707275051380421e0 * wr_4_4 +
                 0.197071550108048956e0 * wr_6_4 -
                 0.406692226234334296e0 * wr_8_4;
  results[k++] =
      -0.655227245596770153e-1 * wr_2_0 - 0.152148391808987889e0 * wr_4_0 -
      0.227558625008997774e0 * wr_6_0 - 0.241089181330349643e0 * wr_8_0;
  results[k++] = 0.210822995922450742e0 * wr_4_4 +
                 0.314760987480609635e0 * wr_6_4 +
                 0.466984805725221655e0 * wr_8_4;
  results[k++] =
      0.443540243244396064e0 * wr_4_4 - 0.178287395580167302e0 * wr_6_4;
  results[k++] =
      0.550992297028478590e-1 * wr_4_4 + 0.318930188838919714e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.553693022999947926e0 * wr_2_0 +
                 0.389610389610389610e-1 * wr_4_0 +
                 0.336181937106199468e-1 * wr_6_0;
  results[k++] = 0.906041780831459983e0 * wr_8_8;
  results[k++] = -0.169053768676653210e0 * wr_4_4 +
                 0.216255535614263655e0 * wr_6_4 +
                 0.238395362911636130e0 * wr_8_4;
  results[k++] =
      0.346748063307890916e0 * wr_2_0 - 0.378015718613521243e0 * wr_4_0 +
      0.720851785380878851e-1 * wr_6_0 + 0.239596354708637772e-1 * wr_8_0;
  results[k++] = 0.554835012169916386e0 * wr_8_8;
  results[k++] = 0.430340638379052394e-1 * wr_4_4 +
                 0.421427444295614690e0 * wr_8_4 -
                 0.359801778122293565e0 * wr_6_4;
  results[k++] =
      -0.320994483456272556e-1 * wr_2_0 + 0.223611555070243167e0 * wr_4_0 -
      0.278701258920691817e0 * wr_6_0 + 0.984242461274475213e-1 * wr_8_0;
  results[k++] =
      0.279721414946384056e0 * wr_4_4 - 0.289126428848271615e0 * wr_6_4;
  results[k++] = -0.320756973632072021e0 * wr_4_4 +
                 0.195388585474495227e0 * wr_6_4 +
                 0.125645388403866723e0 * wr_8_4;
  results[k++] = 0.906041780831459983e0 * wr_8_8;
  results[k++] = wr_0_0 - 0.646796522417294541e0 * wr_2_0 +
                 0.120152574698029243e0 * wr_4_0 +
                 0.435508418523940221e-1 * wr_6_0 -
                 0.172689065505844202e-1 * wr_8_0;
  results[k++] = 0.895564415654715519e-1 * wr_4_4 +
                 0.217754209261970110e0 * wr_6_4 -
                 0.286372417839995220e0 * wr_8_4;
  results[k++] = -0.653029586494769030e0 * wr_8_8;
  results[k++] =
      -0.271597962399255925e0 * wr_2_0 + 0.420446427559731777e0 * wr_4_0 -
      0.235813068268130685e0 * wr_6_0 + 0.475875106478299920e-1 * wr_8_0;
  results[k++] = 0.108558800794082953e0 * wr_4_4 -
                 0.408440215329110546e0 * wr_6_4 +
                 0.273369436109254880e0 * wr_8_4;
  results[k++] = 0.268259276431091982e0 * wr_8_8;
  results[k++] = -0.814004117568842491e-1 * wr_2_0 -
                 0.178707456737868698e0 * wr_4_0 -
                 0.224876111326433478e0 * wr_6_0;
  results[k++] =
      -0.783224038789424540e-1 * wr_2_0 - 0.153693085135375855e0 * wr_4_0 -
      0.113976674860122216e0 * wr_6_0 + 0.530369139967032872e0 * wr_8_0;
  results[k++] = -0.169053768676653210e0 * wr_4_4 +
                 0.216255535614263655e0 * wr_6_4 +
                 0.238395362911636130e0 * wr_8_4;
  results[k++] = 0.895564415654715519e-1 * wr_4_4 +
                 0.217754209261970110e0 * wr_6_4 -
                 0.286372417839995220e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.431197681611529694e0 * wr_2_0 +
                 0.120152574698029243e0 * wr_4_0 -
                 0.116135578273050725e0 * wr_6_0 -
                 0.241764691708181883e0 * wr_8_0;
  results[k++] = 0.149260735942452587e0 * wr_4_4 +
                 0.435508418523940221e-1 * wr_6_4 +
                 0.515470352111991397e0 * wr_8_4;
  results[k++] = -0.376058717168200511e0 * wr_4_4 +
                 0.561459686352692106e-1 * wr_6_4 +
                 0.306891506300350429e0 * wr_8_4;
  results[k++] =
      -0.522690522341880881e-1 * wr_2_0 - 0.121372429065713815e0 * wr_4_0 -
      0.181528984590715798e0 * wr_6_0 - 0.192322634578121799e0 * wr_8_0;
  results[k++] = 0.420446427559731777e0 * wr_4_4 +
                 0.296289037973238001e0 * wr_6_4 +
                 0.901902640314996383e-1 * wr_8_4;
  results[k++] =
      0.279721414946384056e0 * wr_4_4 + 0.417627063891947888e0 * wr_6_4;
  results[k++] = 0.427675964842762695e0 * wr_4_4 +
                 0.976942927372476133e-1 * wr_6_4 +
                 0.376936165211600168e0 * wr_8_4;
  results[k++] =
      0.346748063307890916e0 * wr_2_0 - 0.378015718613521243e0 * wr_4_0 +
      0.720851785380878851e-1 * wr_6_0 + 0.239596354708637772e-1 * wr_8_0;
  results[k++] = -0.653029586494769030e0 * wr_8_8;
  results[k++] = 0.149260735942452587e0 * wr_4_4 +
                 0.435508418523940221e-1 * wr_6_4 +
                 0.515470352111991397e0 * wr_8_4;
  results[k++] = wr_0_0 - 0.215598840805764847e0 * wr_2_0 -
                 0.146853146853146853e0 * wr_4_0 -
                 0.159686420125444747e0 * wr_6_0 +
                 0.120882345854090942e0 * wr_8_0;
  results[k++] = -0.399897318463219235e0 * wr_8_8;
  results[k++] = -0.217117601588165905e0 * wr_4_4 +
                 0.317675723033752647e0 * wr_6_4 +
                 0.242995054319337670e0 * wr_8_4;
  results[k++] = 0.283412036355078457e0 * wr_2_0 -
                 0.386682303795581800e0 * wr_6_0 +
                 0.184442108393474391e0 * wr_8_0;
  results[k++] = -0.702743319741502473e-1 * wr_4_4 -
                 0.220332691236426744e0 * wr_6_4 +
                 0.270359624367233590e0 * wr_8_4;
  results[k++] = 0.235707275051380421e0 * wr_4_4 +
                 0.197071550108048956e0 * wr_6_4 -
                 0.406692226234334296e0 * wr_8_4;
  results[k++] = 0.554835012169916386e0 * wr_8_8;
  results[k++] =
      -0.271597962399255925e0 * wr_2_0 + 0.420446427559731777e0 * wr_4_0 -
      0.235813068268130685e0 * wr_6_0 + 0.475875106478299920e-1 * wr_8_0;
  results[k++] = -0.376058717168200511e0 * wr_4_4 +
                 0.561459686352692106e-1 * wr_6_4 +
                 0.306891506300350429e0 * wr_8_4;
  results[k++] = -0.399897318463219235e0 * wr_8_8;
  results[k++] = wr_0_0 - 0.369598012809882594e0 * wr_2_0 -
                 0.308963763509218055e0 * wr_4_0 +
                 0.284226546826150459e0 * wr_6_0 -
                 0.658377062241031022e-1 * wr_8_0;
  results[k++] = 0.310232613872939941e0 * wr_4_4 -
                 0.206446214823087544e0 * wr_6_4 -
                 0.105402460236858333e0 * wr_8_4;
  results[k++] = 0.164274586506099244e0 * wr_8_8;
  results[k++] = 0.226809431168112746e-1 * wr_4_0 +
                 0.127209138596625679e0 * wr_6_0 +
                 0.658889975448753873e0 * wr_8_0;
  results[k++] =
      -0.655227245596770153e-1 * wr_2_0 - 0.152148391808987889e0 * wr_4_0 -
      0.227558625008997774e0 * wr_6_0 - 0.241089181330349643e0 * wr_8_0;
  results[k++] = 0.430340638379052394e-1 * wr_4_4 +
                 0.421427444295614690e0 * wr_8_4 -
                 0.359801778122293565e0 * wr_6_4;
  results[k++] = 0.108558800794082953e0 * wr_4_4 -
                 0.408440215329110546e0 * wr_6_4 +
                 0.273369436109254880e0 * wr_8_4;
  results[k++] =
      -0.522690522341880881e-1 * wr_2_0 - 0.121372429065713815e0 * wr_4_0 -
      0.181528984590715798e0 * wr_6_0 - 0.192322634578121799e0 * wr_8_0;
  results[k++] = -0.217117601588165905e0 * wr_4_4 +
                 0.317675723033752647e0 * wr_6_4 +
                 0.242995054319337670e0 * wr_8_4;
  results[k++] = 0.310232613872939941e0 * wr_4_4 -
                 0.206446214823087544e0 * wr_6_4 -
                 0.105402460236858333e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.517437217933835632e0 * wr_2_0 +
                 0.320406865861411316e0 * wr_4_0 +
                 0.183371965694290619e0 * wr_6_0 +
                 0.755514661588068387e-1 * wr_8_0;
  results[k++] = 0.416220728074402807e0 * wr_4_4 +
                 0.355098284647652669e-1 * wr_6_4 -
                 0.693197253192158285e-1 * wr_8_4;
  results[k++] = 0.471414550102760841e-1 * wr_4_4 +
                 0.703826964671603413e-1 * wr_6_4 +
                 0.604542498456442871e0 * wr_8_4;
  results[k++] = 0.210822995922450742e0 * wr_4_4 +
                 0.314760987480609635e0 * wr_6_4 +
                 0.466984805725221655e0 * wr_8_4;
  results[k++] =
      -0.320994483456272556e-1 * wr_2_0 + 0.223611555070243167e0 * wr_4_0 -
      0.278701258920691817e0 * wr_6_0 + 0.984242461274475213e-1 * wr_8_0;
  results[k++] = 0.268259276431091982e0 * wr_8_8;
  results[k++] = 0.420446427559731777e0 * wr_4_4 +
                 0.296289037973238001e0 * wr_6_4 +
                 0.901902640314996383e-1 * wr_8_4;
  results[k++] = 0.283412036355078457e0 * wr_2_0 -
                 0.386682303795581800e0 * wr_6_0 +
                 0.184442108393474391e0 * wr_8_0;
  results[k++] = 0.164274586506099244e0 * wr_8_8;
  results[k++] = 0.416220728074402807e0 * wr_4_4 +
                 0.355098284647652669e-1 * wr_6_4 -
                 0.693197253192158285e-1 * wr_8_4;
  results[k++] = wr_0_0 - 0.147839205123953038e-1 * wr_2_0 -
                 0.377622377622377622e0 * wr_4_0 -
                 0.100854581131859840e0 * wr_6_0 +
                 0.128437492469971625e0 * wr_8_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] = 0.550481882563180302e0 * wr_5_0;
  results[k++] = 0.467099366496913781e0 * wr_5_4;
  results[k++] = -0.522232967867093515e0 * wr_5_4;
  results[k++] = -0.389249472080761484e0 * wr_5_0;
  results[k++] = 0.522232967867093515e0 * wr_5_4;
  results[k++] = 0.585369407004963538e0 * wr_5_4;
  results[k++] = -0.323875137815647861e0 * wr_5_0;
  results[k++] = -0.635763953205750881e0 * wr_5_4;
  results[k++] = 0.620173672946042282e0 * wr_5_4;
  results[k++] = 0.663746518303064666e0 * wr_5_0;
  results[k++] = 0.323875137815647861e0 * wr_5_4;
  results[k++] = -0.608580619450184571e0 * wr_4_0;
  results[k++] = -0.272165526975908678e0 * wr_4_0;
  results[k++] =
      0.742269619025205484e-1 * wr_4_0 + 0.617605654987961318e0 * wr_6_0;
  results[k++] = -0.860662965823870417e0 * wr_4_4;
  results[k++] = 0.538860251243650712e0 * wr_4_4;
  results[k++] =
      -0.146961886702813831e0 * wr_4_4 + 0.390608113112417935e0 * wr_6_4;
  results[k++] = 0.577350269189625763e0 * wr_4_4;
  results[k++] =
      0.751124042900832363e0 * wr_4_4 + 0.131013944022344018e0 * wr_6_4;
  results[k++] =
      0.328616768769114160e0 * wr_4_4 - 0.393041832067032054e0 * wr_6_4;
  results[k++] = 0.430331482911935208e0 * wr_4_0;
  results[k++] =
      -0.279927403243454915e0 * wr_4_0 + 0.393041832067032054e0 * wr_6_0;
  results[k++] =
      -0.209945552432591186e0 * wr_4_0 - 0.305699202718802708e0 * wr_6_0;
  results[k++] = 0.192450089729875254e0 * wr_4_4;
  results[k++] =
      -0.500749361933888243e0 * wr_4_4 + 0.393041832067032054e0 * wr_6_4;
  results[k++] =
      0.328616768769114160e0 * wr_4_4 + 0.567727090763490745e0 * wr_6_4;
  results[k++] = 0.172005229038445362e0 * wr_6_4;
  results[k++] =
      0.439759513543557255e0 * wr_4_4 - 0.531468531468531469e0 * wr_6_4;
  results[k++] =
      0.541242478207455082e0 * wr_4_4 + 0.440559440559440559e0 * wr_6_4;
  results[k++] = 0.297921795862108991e0 * wr_6_0;
  results[k++] =
      0.567727090763490745e0 * wr_4_0 - 0.339142815468031917e0 * wr_6_0;
  results[k++] =
      -0.174685258696458690e0 * wr_4_0 - 0.254357111601023937e0 * wr_6_0;
  results[k++] = 0.384615384615384615e0 * wr_6_4;
  results[k++] =
      0.196666433207126689e0 * wr_4_4 + 0.312736780069900657e0 * wr_6_4;
  results[k++] =
      -0.363076492074695424e0 * wr_4_4 - 0.140731551031455296e0 * wr_6_4;
  results[k++] = -0.765374951620476888e0 * wr_6_4;
  results[k++] = 0.342286084019799829e0 * wr_6_4;
  results[k++] =
      0.418121005003545384e0 * wr_4_4 + 0.622338334581454235e-1 * wr_6_4;
  results[k++] = -0.610557994861059366e0 * wr_6_0;
  results[k++] = -0.273049836143059202e0 * wr_6_0;
  results[k++] =
      0.745829685583969992e0 * wr_4_0 + 0.198581699013133965e0 * wr_6_0;
  results[k++] = -0.399704032515894759e0 * wr_6_4;
  results[k++] = -0.536259232551796185e0 * wr_6_4;
  results[k++] =
      0.218356573370573363e0 * wr_4_4 - 0.205836877141093485e0 * wr_6_4;
  results[k++] = 0.690065559342354218e0 * wr_3_0;
  results[k++] =
      -0.230021853114118073e0 * wr_3_0 - 0.366987921708786868e0 * wr_5_0;
  results[k++] =
      -0.150584650484208540e0 * wr_3_0 - 0.240249990052149056e0 * wr_5_0;
  results[k++] = 0.167661616718935796e-1 * wr_3_0 +
                 0.113171131987788401e0 * wr_5_0 +
                 0.647561509701123570e0 * wr_7_0;
  results[k++] =
      -0.224067409616744350e0 * wr_5_4 + 0.336101114425116526e0 * wr_7_4;
  results[k++] = -0.311399577664609188e0 * wr_5_4;
  results[k++] = 0.475670712008450509e0 * wr_5_4;
  results[k++] =
      -0.224067409616744350e0 * wr_5_4 + 0.336101114425116525e0 * wr_7_4;
  results[k++] = 0.185017574200321020e-1 * wr_7_0 +
                 0.391210439010850190e-1 * wr_3_0 -
                 0.528131949276345870e-1 * wr_5_0;
  results[k++] = -0.174077655955697838e0 * wr_5_4;
  results[k++] = -0.174077655955697838e0 * wr_5_4;
  results[k++] =
      0.368180323946522604e0 * wr_5_4 + 0.131492972838043787e0 * wr_7_4;
  results[k++] =
      0.400823967556264373e0 * wr_5_4 - 0.322090688214855299e0 * wr_7_4;
  results[k++] = -0.389249472080761484e0 * wr_5_0;
  results[k++] =
      0.650600048632355454e0 * wr_3_0 - 0.129749824026920495e0 * wr_5_0;
  results[k++] = -0.154879167272712707e0 * wr_3_0 -
                 0.182950273849404042e0 * wr_5_0 +
                 0.480689758212151048e0 * wr_7_0;
  results[k++] = -0.118554666126659332e0 * wr_3_0 -
                 0.224067409616744350e0 * wr_5_0 -
                 0.261654362711464433e0 * wr_7_0;
  results[k++] =
      -0.316879169565807524e0 * wr_5_4 + 0.475318754348711285e0 * wr_7_4;
  results[k++] = -0.522232967867093514e0 * wr_5_4;
  results[k++] = 0.174077655955697838e0 * wr_5_4;
  results[k++] =
      0.409089248829469559e-1 * wr_5_4 + 0.394478918514131361e0 * wr_7_4;
  results[k++] =
      0.200411983778132186e0 * wr_5_4 + 0.536817813691425499e0 * wr_7_4;
  results[k++] = 0.827423745888058188e-1 * wr_7_0 +
                 0.174954627027159322e0 * wr_3_0 -
                 0.236187787934276046e0 * wr_5_0;
  results[k++] = -0.418121005003545384e0 * wr_5_4;
  results[k++] =
      0.360227327387669870e0 * wr_5_4 + 0.212276817924876888e0 * wr_7_4;
  results[k++] =
      0.421114539577968405e-2 * wr_5_4 - 0.471648284327324614e0 * wr_7_4;
  results[k++] =
      0.206303149046618861e0 * wr_5_4 + 0.361030510831583007e0 * wr_7_4;
  results[k++] = -0.323875137815647861e0 * wr_5_0;
  results[k++] =
      -0.199307777117321761e0 * wr_5_0 + 0.448027081566531214e0 * wr_7_0;
  results[k++] = 0.698030973878662308e0 * wr_3_0 -
                 0.126853191004654782e-1 * wr_5_0 -
                 0.284414616750654003e0 * wr_7_0;
  results[k++] = -0.986434448458116827e-1 * wr_3_0 -
                 0.186435354123130323e0 * wr_5_0 -
                 0.217709589508854893e0 * wr_7_0;
  results[k++] =
      -0.263659406306761627e0 * wr_5_4 + 0.395489109460142440e0 * wr_7_4;
  results[k++] = -0.186989398001691436e0 * wr_5_4;
  results[k++] =
      -0.391239355818923618e0 * wr_5_4 + 0.474665394927370567e0 * wr_7_4;
  results[k++] =
      0.169495332625775331e-1 * wr_5_4 + 0.451987553668734217e0 * wr_7_4;
  results[k++] =
      0.184523146096204282e0 * wr_5_4 + 0.230653932620255353e-1 * wr_7_4;
  results[k++] = 0.159983221922242877e0 * wr_7_0 +
                 0.338276548879659426e0 * wr_3_0 -
                 0.456671487616757217e0 * wr_5_0;
  results[k++] = 0.372104203767625369e0 * wr_7_4;
  results[k++] =
      -0.238528335748477800e0 * wr_5_4 - 0.572468005796346721e0 * wr_7_4;
  results[k++] =
      0.468460351696817397e0 * wr_5_4 + 0.312306901131211597e0 * wr_7_4;
  results[k++] =
      -0.254997516973767643e0 * wr_5_4 - 0.152998510184260586e-1 * wr_7_4;
  results[k++] = 0.568398560058805106e0 * wr_7_0;
  results[k++] =
      -0.255287122424255641e0 * wr_5_0 - 0.349783729266956988e0 * wr_7_0;
  results[k++] =
      -0.167124651779515700e0 * wr_5_0 - 0.228987202318538688e0 * wr_7_0;
  results[k++] = 0.786173517670864890e0 * wr_3_0 +
                 0.303237126148247496e0 * wr_5_0 +
                 0.114729914312974819e0 * wr_7_0;
  results[k++] =
      -0.128652616924167811e0 * wr_5_4 + 0.192978925386251716e0 * wr_7_4;
  results[k++] = 0.712525303194425293e0 * wr_7_4;
  results[k++] =
      -0.124567360698326100e0 * wr_5_4 + 0.219238554829053936e0 * wr_7_4;
  results[k++] =
      -0.407742399657818944e0 * wr_5_4 - 0.215287987019328403e0 * wr_7_4;
  results[k++] =
      -0.399504330263850692e0 * wr_5_4 - 0.162465094307299281e0 * wr_7_4;
  results[k++] = 0.153943927071050938e0 * wr_7_0 +
                 0.325506760927014946e0 * wr_3_0 -
                 0.439432343844602715e0 * wr_5_0;
  results[k++] =
      0.782460796435951592e0 * wr_2_0 + 0.233284737407921724e0 * wr_4_0;
  results[k++] = -0.106479427499989986e0 * wr_2_0 -
                 0.233766233766233766e0 * wr_4_0 -
                 0.294159194967924534e0 * wr_6_0;
  results[k++] = -0.174239063181801795e0 * wr_4_0 -
                 0.219253318718297776e0 * wr_6_0 -
                 0.793650793650793651e-1 * wr_2_0;
  results[k++] =
      -0.191653191525356324e0 * wr_4_4 + 0.416003923020390371e0 * wr_6_4;
  results[k++] = 0.625473560139801314e-1 * wr_4_4 -
                 0.235327355974339627e0 * wr_6_4 +
                 0.157504829811997371e0 * wr_8_4;
  results[k++] =
      0.322664931818151472e-2 * wr_2_0 + 0.299700299700299700e-1 * wr_4_0 +
      0.137274290985031449e0 * wr_6_0 + 0.664852902197500178e0 * wr_8_0;
  results[k++] = -0.833964746853068419e-1 * wr_4_4 -
                 0.117663677987169814e0 * wr_6_4 +
                 0.472514489435992114e0 * wr_8_4;
  results[k++] = -0.461880215351700611e0 * wr_4_4;
  results[k++] =
      0.462833529503922017e0 * wr_4_4 - 0.186042610156036500e0 * wr_6_4;
  results[k++] =
      -0.191653191525356324e0 * wr_4_4 + 0.416003923020390371e0 * wr_6_4;
  results[k++] = 0.111111111111111111e0 * wr_2_0 -
                 0.135519271363623618e0 * wr_4_0 +
                 0.438506637436595553e-1 * wr_6_0;
  results[k++] = 0.113578348004077137e1 * wr_8_8;
  results[k++] = 0.329653511042679499e-1 * wr_4_4 -
                 0.260459654218451100e0 * wr_6_4 +
                 0.298844402809861107e0 * wr_8_4;
  results[k++] =
      -0.142849854785161116e-1 * wr_2_0 + 0.737127659712908936e-1 * wr_4_0 -
      0.868198847394837001e-1 * wr_6_0 + 0.300349925702466746e-1 * wr_8_0;
  results[k++] =
      0.563343032175624275e0 * wr_4_4 - 0.101899734239600903e0 * wr_6_4;
  results[k++] =
      -0.172487872372820691e0 * wr_4_4 - 0.213944874696200762e0 * wr_6_4;
  results[k++] = -0.336246581263533088e0 * wr_4_4 +
                 0.212620125892613143e0 * wr_6_4 +
                 0.124518501170775462e0 * wr_8_4;
  results[k++] = 0.897915681430307416e0 * wr_8_8;
  results[k++] =
      0.832007846040780741e-1 * wr_6_0 + 0.958265957626781617e-1 * wr_2_0 -
      0.167900712726931729e-1 * wr_8_0 - 0.148344079969205774e0 * wr_4_0;
  results[k++] = -0.110569148956936340e0 * wr_4_4 +
                 0.416003923020390371e0 * wr_6_4 -
                 0.278431833074241080e0 * wr_8_4;
  results[k++] = -0.634922267273110099e0 * wr_8_8;
  results[k++] =
      -0.209945552432591186e0 * wr_4_0 - 0.305699202718802708e0 * wr_6_0;
  results[k++] = 0.752923252421042699e0 * wr_2_0 +
                 0.110198459405695718e0 * wr_4_0 -
                 0.166401569208156148e0 * wr_6_0;
  results[k++] =
      -0.816284884486634950e-1 * wr_2_0 - 0.161115045622964382e0 * wr_4_0 -
      0.124028406770691000e0 * wr_6_0 + 0.525612369979316806e0 * wr_8_0;
  results[k++] = -0.177217508706277039e0 * wr_4_4 +
                 0.235327355974339627e0 * wr_6_4 +
                 0.236257244717996057e0 * wr_8_4;
  results[k++] = -0.110569148956936340e0 * wr_4_4 +
                 0.416003923020390371e0 * wr_6_4 -
                 0.278431833074241080e0 * wr_8_4;
  results[k++] =
      -0.638843971751187745e-1 * wr_2_0 - 0.148344079969205774e0 * wr_4_0 -
      0.235060997817704421e0 * wr_8_0 - 0.221868758944208198e0 * wr_6_0;
  results[k++] = -0.184281914928227234e0 * wr_4_4 +
                 0.832007846040780741e-1 * wr_6_4 +
                 0.501177299533633944e0 * wr_8_4;
  results[k++] =
      -0.375562021450416182e0 * wr_4_4 - 0.305699202718802708e0 * wr_6_4;
  results[k++] =
      -0.172487872372820691e0 * wr_4_4 + 0.309031485672289990e0 * wr_6_4;
  results[k++] = 0.448328775018044118e0 * wr_4_4 +
                 0.106310062946306572e0 * wr_6_4 +
                 0.373555503512326385e0 * wr_8_4;
  results[k++] =
      0.361384723636329648e0 * wr_2_0 - 0.396270396270396270e0 * wr_4_0 +
      0.784424519914465424e-1 * wr_6_0 + 0.237447465070535778e-1 * wr_8_0;
  results[k++] = -0.634922267273110099e0 * wr_8_8;
  results[k++] = -0.184281914928227234e0 * wr_4_4 +
                 0.832007846040780741e-1 * wr_6_4 +
                 0.501177299533633944e0 * wr_8_4;
  results[k++] =
      0.319421985875593872e-1 * wr_2_0 + 0.181309431073473724e0 * wr_4_0 -
      0.305069543548286272e0 * wr_6_0 + 0.117530498908852211e0 * wr_8_0;
  results[k++] =
      -0.135310619551863770e0 * wr_4_4 - 0.398601398601398601e0 * wr_6_4;
  results[k++] = 0.450421145080567811e0 * wr_4_4 +
                 0.239810184608143310e0 * wr_6_4 +
                 0.210185369699223705e0 * wr_8_4;
  results[k++] = -0.285048763840597532e0 * wr_4_4 +
                 0.893719790800970350e-1 * wr_6_4 -
                 0.421565688663403228e0 * wr_8_4;
  results[k++] = 0.575126321360287547e0 * wr_8_8;
  results[k++] =
      -0.239810184608143310e0 * wr_6_0 - 0.276201645568272714e0 * wr_2_0 +
      0.483941360727393742e-1 * wr_8_0 + 0.427573145760896297e0 * wr_4_0;
  results[k++] = -0.382433047709916066e0 * wr_4_4 +
                 0.570976630019388834e-1 * wr_6_4 +
                 0.312093427735210957e0 * wr_8_4;
  results[k++] = -0.406675721872732859e0 * wr_8_8;
  results[k++] =
      -0.174685258696458690e0 * wr_4_0 - 0.254357111601023937e0 * wr_6_0;
  results[k++] = -0.145372799473059492e0 * wr_4_0 -
                 0.138454474637925390e0 * wr_6_0 +
                 0.512240070627916702e0 * wr_8_0;
  results[k++] =
      0.772578714180724973e0 * wr_2_0 + 0.183998185868607528e0 * wr_4_0 -
      0.103197872359807251e0 * wr_6_0 - 0.249906244085086937e0 * wr_8_0;
  results[k++] = -0.520425459814860656e-1 * wr_4_4 -
                 0.163170163170163170e0 * wr_6_4 +
                 0.436839800015681297e0 * wr_8_4;
  results[k++] = 0.110398911521164517e0 * wr_4_4 -
                 0.415363423913776168e0 * wr_6_4 +
                 0.278003146394937181e0 * wr_8_4;
  results[k++] =
      -0.531550314731532857e-1 * wr_2_0 - 0.123429735401654286e0 * wr_4_0 -
      0.184605966183900519e0 * wr_6_0 - 0.195582572421568195e0 * wr_8_0;
  results[k++] = -0.220797823042329033e0 * wr_4_4 +
                 0.323060440821825909e0 * wr_6_4 +
                 0.247113907906610828e0 * wr_8_4;
  results[k++] =
      -0.605127486791159041e-1 * wr_4_4 + 0.234552585052425493e0 * wr_6_4;
  results[k++] = -0.302151689671033384e0 * wr_4_4 -
                 0.766045534972260300e-1 * wr_6_4 +
                 0.469988774523388733e0 * wr_8_4;
  results[k++] = -0.254955365139944045e0 * wr_4_4 +
                 0.142744157504847209e0 * wr_6_4 +
                 0.484063275670939443e0 * wr_8_4;
  results[k++] =
      0.378484727175660497e0 * wr_2_0 - 0.270421001385520109e0 * wr_4_0 -
      0.126391064911197754e0 * wr_6_0 + 0.102023796923981620e0 * wr_8_0;
  results[k++] = 0.272806367671868625e0 * wr_8_8;
  results[k++] = 0.427573145760896297e0 * wr_4_4 +
                 0.301311243755755719e0 * wr_6_4 +
                 0.917190214524431346e-1 * wr_8_4;
  results[k++] = 0.288215972327715281e0 * wr_2_0 -
                 0.393236707952426953e0 * wr_6_0 +
                 0.187568468483101243e0 * wr_8_0;
  results[k++] =
      -0.114095361339933276e0 * wr_6_4 + 0.360994102557712102e0 * wr_8_4;
  results[k++] = -0.787833163844906391e-1 * wr_4_4 -
                 0.762205683549018880e-1 * wr_6_4 -
                 0.493140176753648051e0 * wr_8_4;
  results[k++] = 0.352329701857188054e0 * wr_4_4 +
                 0.340868744250459874e0 * wr_6_4 +
                 0.283067287981023164e0 * wr_8_4;
  results[k++] = 0.213262547718052927e0 * wr_8_8;
  results[k++] =
      0.296413321380174009e0 * wr_6_0 + 0.341394370999459436e0 * wr_2_0 -
      0.598167531211585654e-1 * wr_8_0 - 0.528494552785782083e0 * wr_4_0;
  results[k++] = -0.551483214691434472e0 * wr_4_4 -
                 0.254068561183006293e0 * wr_6_4 -
                 0.377885192914672837e-1 * wr_8_4;
  results[k++] = -0.150799393664554901e0 * wr_8_8;
  results[k++] =
      0.910166120476864007e-1 * wr_6_0 + 0.636733746752434716e0 * wr_8_0;
  results[k++] = -0.140530935746241327e0 * wr_4_0 -
                 0.243211917418564004e0 * wr_6_0 -
                 0.269943366038190675e0 * wr_8_0;
  results[k++] = -0.104745575090083581e0 * wr_4_0 -
                 0.181279460095324761e0 * wr_6_0 -
                 0.201203905512167480e0 * wr_8_0;
  results[k++] = 0.296265225781931253e-1 * wr_4_4 -
                 0.286627993453415340e0 * wr_6_4 +
                 0.351707393979253967e0 * wr_8_4;
  results[k++] = -0.628473450540501485e-1 * wr_4_4 +
                 0.236456030823603893e0 * wr_6_4 -
                 0.158260252993932217e0 * wr_8_4;
  results[k++] =
      0.817015485702651929e0 * wr_2_0 + 0.374749161989976871e0 * wr_4_0 +
      0.818010200115729318e-1 * wr_8_0 + 0.202676597848803337e0 * wr_6_0;
  results[k++] = -0.146643805126117013e0 * wr_4_4 +
                 0.304014896773205005e0 * wr_6_4 +
                 0.226086075705617453e-1 * wr_8_4;
  results[k++] =
      0.178753077517265394e0 * wr_6_4 + 0.691251079057850393e0 * wr_8_4;
  results[k++] = -0.411432451338847620e-1 * wr_4_4 +
                 0.252097659621814857e0 * wr_6_4 +
                 0.358179552043078673e0 * wr_8_4;
  results[k++] = -0.245330914491476704e0 * wr_4_4 -
                 0.197792106625607699e-1 * wr_6_4 -
                 0.728103478653406905e-1 * wr_8_4;
  results[k++] = 0.303581518225335383e0 * wr_4_0 -
                 0.437831492097860920e0 * wr_6_0 +
                 0.161984533198973379e0 * wr_8_0;
  results[k++] = -0.787524149059986856e-1 * wr_8_8;
  results[k++] = -0.480004526561988889e0 * wr_4_4 -
                 0.221138297913872681e0 * wr_6_4 -
                 0.118406463485315264e0 * wr_8_4;
  results[k++] =
      0.534862186740501905e0 * wr_2_0 - 0.398662736048649643e0 * wr_4_0 -
      0.154796808539710877e0 * wr_6_0 + 0.135365882212755424e0 * wr_8_0;
  results[k++] = 0.845154254728516578e0 * wr_1_0 +
                 0.368855556781658750e0 * wr_3_0 +
                 0.147122471584124921e0 * wr_5_0;
  results[k++] =
      -0.419960525565808030e-1 * wr_1_0 - 0.134964997992380049e0 * wr_3_0 -
      0.227752509793766188e0 * wr_5_0 - 0.257420720942951436e0 * wr_7_0;
  results[k++] =
      0.450926963500797419e0 * wr_5_4 - 0.133607989185421458e0 * wr_7_4;
  results[k++] =
      0.325005595485937081e0 * wr_5_4 - 0.252782129822395507e0 * wr_7_4;
  results[k++] =
      -0.335012605086404025e-1 * wr_1_0 - 0.107664822811598561e0 * wr_3_0 -
      0.181683651143588527e0 * wr_5_0 - 0.205350696259200387e0 * wr_7_0;
  results[k++] =
      0.162502797742968540e0 * wr_5_4 + 0.421303549703992512e0 * wr_7_4;
  results[k++] = -0.442276595827745362e-1 * wr_5_4 -
                 0.254959449359523797e0 * wr_7_4 +
                 0.248554652474944246e0 * wr_9_4;
  results[k++] =
      0.650688259019909696e-2 * wr_3_0 + 0.399683641013572184e-1 * wr_5_0 +
      0.153746332778392509e0 * wr_7_0 + 0.676205647530361430e0 * wr_9_0;
  results[k++] = -0.395584213251215398e-1 * wr_5_4 -
                 0.162887617221088693e-1 * wr_7_4 +
                 0.555785099057811678e0 * wr_9_4;
  results[k++] = -0.291287632501767655e0 * wr_5_4;
  results[k++] =
      0.450926963500797419e0 * wr_5_4 - 0.133607989185421458e0 * wr_7_4;
  results[k++] =
      0.293972367896065621e0 * wr_1_0 - 0.314918328648886780e0 * wr_3_0 +
      0.106284504570424221e0 * wr_5_0 - 0.735487774122718389e-2 * wr_7_0;
  results[k++] =
      -0.256939483508724975e0 * wr_5_4 + 0.373038064946000705e0 * wr_7_4;
  results[k++] =
      -0.211880575387909404e-1 * wr_1_0 + 0.158884163182782358e0 * wr_3_0 -
      0.191511383743065075e0 * wr_5_0 + 0.649375919280491767e-1 * wr_7_0;
  results[k++] = 0.916624267423892825e0 * wr_9_8;
  results[k++] = 0.565238025780053194e-1 * wr_5_4 -
                 0.279294083326614519e0 * wr_7_4 +
                 0.272277979866768457e0 * wr_9_4;
  results[k++] =
      -0.223139590270619760e-1 * wr_3_0 + 0.979020979020979021e-1 * wr_5_0 -
      0.112980019539360470e0 * wr_7_0 + 0.394371142294685097e-1 * wr_9_0;
  results[k++] =
      0.450926963500797419e0 * wr_5_4 - 0.715757084921900665e-1 * wr_7_4;
  results[k++] = -0.208062594644119753e0 * wr_7_4;
  results[k++] =
      -0.310110132880887905e0 * wr_1_0 + 0.368940242864288797e0 * wr_3_0 -
      0.154163690105234985e0 * wr_5_0 + 0.137273511409279026e-1 * wr_7_0 +
      0.439094576318416513e-2 * wr_9_0;
  results[k++] = -0.344720490737517135e0 * wr_5_4 +
                 0.131429381000142699e0 * wr_7_4 +
                 0.117411623602971498e0 * wr_9_4;
  results[k++] = 0.684621529124609861e0 * wr_9_8;
  results[k++] =
      -0.158252414505179853e-1 * wr_1_0 + 0.133883754162371856e0 * wr_3_0 -
      0.209790209790209790e0 * wr_5_0 + 0.125533355043733856e0 * wr_7_0 -
      0.268889415200921657e-1 * wr_9_0;
  results[k++] = 0.416347037354533779e0 * wr_7_4 -
                 0.249067665719350938e0 * wr_9_4 -
                 0.162502797742968540e0 * wr_5_4;
  results[k++] = -0.624971091425381471e0 * wr_9_8;
  results[k++] = -0.118554666126659332e0 * wr_3_0 -
                 0.224067409616744350e0 * wr_5_0 -
                 0.261654362711464433e0 * wr_7_0;
  results[k++] = 0.831479419283098086e0 * wr_1_0 +
                 0.286303995909722115e0 * wr_3_0 -
                 0.169022227582641525e0 * wr_7_0;
  results[k++] = 0.307044124314558860e0 * wr_7_4;
  results[k++] = -0.344720490737517135e0 * wr_5_4 +
                 0.131429381000142699e0 * wr_7_4 +
                 0.117411623602971498e0 * wr_9_4;
  results[k++] =
      -0.344566814312097672e-1 * wr_1_0 - 0.105411497961225371e0 * wr_3_0 -
      0.154163690105234985e0 * wr_5_0 - 0.854146293213291716e-1 * wr_7_0 +
      0.553259166161204806e0 * wr_9_0;
  results[k++] = 0.344720490737517135e0 * wr_5_4 +
                 0.963815460667713121e-1 * wr_7_4 +
                 0.352234870808914494e0 * wr_9_4;
  results[k++] = 0.218915746048930460e0 * wr_5_4 +
                 0.257547936528153482e0 * wr_7_4 -
                 0.367487058726497416e0 * wr_9_4;
  results[k++] =
      -0.274101222343421475e-1 * wr_1_0 - 0.901807917567235814e-1 * wr_3_0 -
      0.161496578794300913e0 * wr_5_0 - 0.217430148980329822e0 * wr_7_0 -
      0.217340726747890436e0 * wr_9_0;
  results[k++] = 0.699300699300699301e-1 * wr_5_4 +
                 0.253393665158371041e0 * wr_7_4 +
                 0.464453851049163989e0 * wr_9_4;
  results[k++] =
      0.501029959445330466e-1 * wr_5_4 - 0.214727125476570200e0 * wr_7_4;
  results[k++] = 0.346770991073532923e0 * wr_7_4;
  results[k++] = 0.525873758497743649e0 * wr_1_0 -
                 0.422507274131718205e0 * wr_3_0 +
                 0.534495214356482947e-1 * wr_7_0;
  results[k++] = 0.684621529124609861e0 * wr_9_8;
  results[k++] = 0.344720490737517135e0 * wr_5_4 +
                 0.963815460667713121e-1 * wr_7_4 +
                 0.352234870808914494e0 * wr_9_4;
  results[k++] =
      0.241196770018468371e0 * wr_1_0 + 0.122980080954762933e0 * wr_3_0 -
      0.359715276912214965e0 * wr_5_0 + 0.716872781804012690e-1 * wr_7_0 +
      0.395185118686574864e-1 * wr_9_0;
  results[k++] = -0.931651896266259273e-1 * wr_9_8;
  results[k++] =
      -0.234726263406510114e0 * wr_5_4 + 0.470461146358773995e0 * wr_9_4;
  results[k++] =
      -0.212317893862233537e-1 * wr_1_0 + 0.798328467706490365e-1 * wr_3_0 +
      0.156368390034950329e0 * wr_5_0 - 0.336841338385685985e0 * wr_7_0 +
      0.140292835857866090e0 * wr_9_0;
  results[k++] =
      0.618909447139856581e-1 * wr_5_4 - 0.361030510831583007e0 * wr_7_4;
  results[k++] = 0.169146217254853926e0 * wr_5_4 +
                 0.151960237961579997e0 * wr_7_4 +
                 0.201638904118999673e0 * wr_9_4;
  results[k++] = 0.743607536337974146e0 * wr_9_8;
  results[k++] =
      0.484159289781051562e0 * wr_1_0 - 0.485750141846129865e0 * wr_3_0 +
      0.822864902677695239e-1 * wr_5_0 + 0.764951117401167644e-1 * wr_7_0 -
      0.281245615406779880e-1 * wr_9_0;
  results[k++] = -0.858658200720168463e-1 * wr_5_4 +
                 0.156939629123224068e0 * wr_7_4 -
                 0.384374088910610875e0 * wr_9_4;
  results[k++] = -0.974463835679461943e-1 * wr_9_8;
  results[k++] =
      -0.205259402456285916e0 * wr_1_0 - 0.321578375677721328e-1 * wr_3_0 +
      0.382963836373005591e0 * wr_5_0 - 0.290752745555900300e0 * wr_7_0 +
      0.680296897014879253e-1 * wr_9_0;
  results[k++] = -0.390319094861145492e0 * wr_5_4 -
                 0.214292836394354388e-1 * wr_7_4 +
                 0.279179218389275786e0 * wr_9_4;
  results[k++] = -0.180135840692693982e0 * wr_9_8;
  results[k++] = -0.986434448458116827e-1 * wr_3_0 -
                 0.186435354123130323e0 * wr_5_0 -
                 0.217709589508854893e0 * wr_7_0;
  results[k++] =
      -0.927539628370198314e-1 * wr_3_0 - 0.152856779250473870e0 * wr_5_0 -
      0.916354713403058058e-1 * wr_7_0 + 0.548568954028512682e0 * wr_9_0;
  results[k++] = -0.216172130316690448e0 * wr_5_4 +
                 0.166464100350820452e0 * wr_7_4 +
                 0.220884352513194948e0 * wr_9_4;
  results[k++] = 0.637388412849860105e-1 * wr_5_4 +
                 0.253705583938277648e0 * wr_7_4 -
                 0.260513002606764134e0 * wr_9_4;
  results[k++] =
      0.838588488857244441e0 * wr_1_0 + 0.327189304346055638e0 * wr_3_0 +
      0.633441697423550069e-1 * wr_5_0 - 0.132493420064540749e0 * wr_7_0 -
      0.227328124468908852e0 * wr_9_0;
  results[k++] =
      0.920672151894242372e-1 * wr_5_4 + 0.492080116034998917e0 * wr_9_4;
  results[k++] = -0.390319094861145492e0 * wr_5_4 -
                 0.214292836394354388e-1 * wr_7_4 +
                 0.279179218389275786e0 * wr_9_4;
  results[k++] =
      -0.228066002729206574e-1 * wr_1_0 - 0.750349543248016433e-1 * wr_3_0 -
      0.134373275920352839e0 * wr_5_0 - 0.180912819457004631e0 * wr_7_0 -
      0.180838415662183092e0 * wr_9_0;
  results[k++] = 0.314200810449255656e0 * wr_5_4 +
                 0.316254410517551445e0 * wr_7_4 +
                 0.124852742044736000e0 * wr_9_4;
  results[k++] =
      0.249106247229875781e0 * wr_5_4 + 0.345980898930383029e0 * wr_7_4;
  results[k++] = 0.151288975967520498e0 * wr_5_4 +
                 0.970838348454676993e-2 * wr_7_4 +
                 0.450878296518645610e0 * wr_9_4;
  results[k++] =
      0.318079832800481035e0 * wr_3_0 - 0.374421112888908272e0 * wr_5_0 +
      0.673380441369542864e-1 * wr_7_0 + 0.319931910976699660e-1 * wr_9_0;
  results[k++] = -0.653690213458338560e0 * wr_9_8;
  results[k++] = -0.274288300892565080e-1 * wr_5_4 +
                 0.154408178796579283e0 * wr_7_4 +
                 0.485796769161641826e0 * wr_9_4;
  results[k++] =
      0.649567850333070344e0 * wr_1_0 - 0.289645423266163086e0 * wr_3_0 -
      0.613327286228691759e-1 * wr_5_0 - 0.205257923756811975e0 * wr_7_0 +
      0.146739673365441795e0 * wr_9_0;
  results[k++] = -0.180135840692693982e0 * wr_9_8;
  results[k++] = 0.314200810449255656e0 * wr_5_4 +
                 0.316254410517551445e0 * wr_7_4 +
                 0.124852742044736000e0 * wr_9_4;
  results[k++] =
      0.159646201910444601e0 * wr_1_0 + 0.225104862974404929e0 * wr_3_0 -
      0.141091939716370481e0 * wr_5_0 - 0.324350840597915444e0 * wr_7_0 +
      0.195477715977693152e0 * wr_9_0;
  results[k++] = -0.764992550921302929e-1 * wr_5_4 -
                 0.187498174245417385e0 * wr_7_4 +
                 0.338722895272021098e0 * wr_9_4;
  results[k++] = 0.301866237554294598e-1 * wr_7_4 -
                 0.442792029781902910e0 * wr_9_4 +
                 0.136846027691280218e0 * wr_5_4;
  results[k++] = 0.601608118470830952e0 * wr_9_8;
  results[k++] =
      -0.243406720747687296e0 * wr_3_0 + 0.427177061242571037e0 * wr_5_0 -
      0.264089295911141831e0 * wr_7_0 + 0.573587659557563645e-1 * wr_9_0;
  results[k++] = 0.272913413533422747e-1 * wr_5_4 +
                 0.240805953117725953e0 * wr_7_4 +
                 0.260271675086132914e0 * wr_9_4;
  results[k++] = -0.271005645896079838e0 * wr_9_8;
  results[k++] =
      0.620173672946042282e0 * wr_1_0 - 0.476977812636759532e0 * wr_3_0 -
      0.149480832837991320e0 * wr_5_0 + 0.255559119610142582e0 * wr_7_0 -
      0.702498544336630850e-1 * wr_9_0;
  results[k++] = -0.219466228870639206e0 * wr_7_4 -
                 0.460099666010465947e-1 * wr_9_4 -
                 0.270170495540752402e0 * wr_5_4;
  results[k++] = 0.296871810937080548e-1 * wr_9_8;
  results[k++] = 0.272913413533422747e-1 * wr_5_0 +
                 0.137475932183303160e0 * wr_7_0 +
                 0.666942118869374014e0 * wr_9_0;
  results[k++] =
      -0.811355735825624320e-1 * wr_3_0 - 0.162734118568598490e0 * wr_5_0 -
      0.226362253638121569e0 * wr_7_0 - 0.229435063823025459e0 * wr_9_0;
  results[k++] = 0.690422392621629915e-1 * wr_5_4 -
                 0.380747642989869439e0 * wr_7_4 +
                 0.388009900315469642e0 * wr_9_4;
  results[k++] = 0.152396712656198425e0 * wr_5_4 -
                 0.403403062913466419e0 * wr_7_4 +
                 0.244700858563683187e0 * wr_9_4;
  results[k++] =
      -0.647237971579653084e-1 * wr_3_0 - 0.129816917732099891e0 * wr_5_0 -
      0.180574610393121780e0 * wr_7_0 - 0.183025864933280638e0 * wr_9_0;
  results[k++] = -0.283022466361511360e0 * wr_5_4 +
                 0.249725705613098259e0 * wr_7_4 +
                 0.244700858563683187e0 * wr_9_4;
  results[k++] = 0.337742357391401630e0 * wr_5_4 -
                 0.146389876268718972e0 * wr_7_4 -
                 0.998987071836631952e-1 * wr_9_4;
  results[k++] =
      0.856893070496975287e0 * wr_1_0 + 0.439359704395582673e0 * wr_3_0 +
      0.275383268523311998e0 * wr_5_0 + 0.157636458665549670e0 * wr_7_0 +
      0.647094151134279369e-1 * wr_9_0;
  results[k++] = 0.389531880320020283e0 * wr_5_4 -
                 0.446760600254034948e-1 * wr_9_4 +
                 0.935250613013253978e-1 * wr_7_4;
  results[k++] = 0.665840550439751153e-1 * wr_5_4 +
                 0.129251400967716400e0 * wr_7_4 +
                 0.648604963902288343e0 * wr_9_4;
  results[k++] = 0.214396521546119193e0 * wr_5_4 +
                 0.320543818978266441e0 * wr_7_4 +
                 0.401628403337348490e0 * wr_9_4;
  results[k++] =
      -0.335933189800882098e-1 * wr_3_0 + 0.235824142163662307e0 * wr_5_0 -
      0.303731546165417644e0 * wr_7_0 + 0.110827664954849361e0 * wr_9_0;
  results[k++] = 0.311361782083106448e0 * wr_9_8;
  results[k++] =
      0.213786572880448148e0 * wr_5_4 + 0.142524381920298766e0 * wr_7_4;
  results[k++] =
      0.296601699741343697e0 * wr_3_0 - 0.743619814991503459e-1 * wr_5_0 -
      0.352452349563217078e0 * wr_7_0 + 0.189712710995701455e0 * wr_9_0;
  results[k++] = 0.127112915251210061e0 * wr_9_8;
  results[k++] = -0.470306465721234937e-1 * wr_5_4 -
                 0.106708189701456666e0 * wr_7_4 -
                 0.881023785016115108e-1 * wr_9_4;
  results[k++] =
      0.724206824377901366e0 * wr_1_0 - 0.185663361763095012e0 * wr_3_0 -
      0.337474944556607927e0 * wr_5_0 - 0.373035946476270676e-1 * wr_7_0 +
      0.114847818758625530e0 * wr_9_0;
  results[k++] = wr_0_0 + 0.496903994999953266e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 +
                 0.112060645702066489e0 * wr_6_0;
  results[k++] =
      0.299984695048838344e0 * wr_4_4 - 0.212620125892613143e0 * wr_6_4;
  results[k++] = -0.309593617079421754e0 * wr_4_4 +
                 0.380346443904356911e0 * wr_6_4 -
                 0.556863666148482162e-1 * wr_8_4;
  results[k++] =
      -0.638843971751187745e-1 * wr_2_0 - 0.148344079969205774e0 * wr_4_0 -
      0.235060997817704421e0 * wr_8_0 - 0.221868758944208198e0 * wr_6_0;
  results[k++] = 0.412791489439229004e0 * wr_4_4 +
                 0.190173221952178455e0 * wr_6_4 -
                 0.167059099844544648e0 * wr_8_4;
  results[k++] = 0.191216523854958033e0 * wr_4_4 +
                 0.159873456405428874e0 * wr_6_4 -
                 0.329927337891508726e0 * wr_8_4;
  results[k++] =
      -0.531550314731532857e-1 * wr_2_0 - 0.123429735401654286e0 * wr_4_0 -
      0.184605966183900519e0 * wr_6_0 - 0.195582572421568195e0 * wr_8_0;
  results[k++] = 0.171029258304358519e0 * wr_4_4 +
                 0.255348511657420100e0 * wr_6_4 +
                 0.378839436434004251e0 * wr_8_4;
  results[k++] =
      -0.315133265537962556e-1 * wr_4_4 - 0.896712568881198684e-1 * wr_6_4 -
      0.233194941417081000e0 * wr_8_4 + 0.318509502157564953e0 * wr_10_4;
  results[k++] =
      0.936872904974942177e-2 * wr_4_0 + 0.476886112585419616e-1 * wr_6_0 +
      0.165754698444503046e0 * wr_8_0 + 0.684268176053781307e0 * wr_10_0;
  results[k++] =
      0.219430640714052064e-1 * wr_4_4 + 0.520325406856171014e-2 * wr_6_4 +
      0.599822216340083902e-1 * wr_8_4 + 0.609899262887257092e0 * wr_10_4;
  results[k++] =
      0.299984695048838344e0 * wr_4_4 - 0.212620125892613143e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.695665592999934573e0 * wr_2_0 +
                 0.212121212121212121e0 * wr_4_0 -
                 0.224121291404132979e-1 * wr_6_0;
  results[k++] = -0.401560100348242595e0 * wr_8_8;
  results[k++] = -0.163170163170163170e0 * wr_4_4 +
                 0.420966371939131731e0 * wr_6_4 -
                 0.105657451873248463e0 * wr_8_4;
  results[k++] =
      0.282828282828282828e0 * wr_2_0 - 0.364859576748217433e0 * wr_4_0 +
      0.140322123979710577e0 * wr_6_0 - 0.106189734596544979e-1 * wr_8_0;
  results[k++] = 0.450107542573847294e0 * wr_8_8;
  results[k++] = 0.349112011610284063e-1 * wr_4_4 -
                 0.291887661398573947e0 * wr_6_4 +
                 0.341881220839366977e0 * wr_8_4;
  results[k++] =
      -0.260405408741611957e-1 * wr_2_0 + 0.181403922492476333e0 * wr_4_0 -
      0.226095210312021278e0 * wr_6_0 + 0.798462508356298963e-1 * wr_8_0;
  results[k++] =
      -0.175688782961395422e0 * wr_8_8 + 0.768959478865352633e0 * wr_10_8;
  results[k++] =
      -0.264987673687088628e-2 * wr_4_4 + 0.754023150136707527e-1 * wr_6_4 -
      0.289741657257283417e0 * wr_8_4 + 0.252522285592070763e0 * wr_10_4;
  results[k++] =
      -0.271531564585776493e-1 * wr_4_0 + 0.115178938708350473e0 * wr_6_0 -
      0.133445210145017453e0 * wr_8_0 + 0.472189901648725106e-1 * wr_10_0;
  results[k++] = -0.309593617079421754e0 * wr_4_4 +
                 0.380346443904356911e0 * wr_6_4 -
                 0.556863666148482162e-1 * wr_8_4;
  results[k++] = -0.401560100348242595e0 * wr_8_8;
  results[k++] = wr_0_0 - 0.677596356818118090e0 * wr_2_0 +
                 0.167832167832167832e0 * wr_4_0 +
                 0.168090968553099734e-1 * wr_6_0 -
                 0.118723732535267889e-1 * wr_8_0;
  results[k++] = 0.125094712027960263e0 * wr_4_4 +
                 0.840454842765498668e-1 * wr_6_4 -
                 0.196881037264996714e0 * wr_8_4;
  results[k++] = -0.448957840715153709e0 * wr_8_8;
  results[k++] =
      -0.277932695868451224e0 * wr_2_0 + 0.403119827761058517e0 * wr_4_0 -
      0.189520985114488423e0 * wr_6_0 + 0.144083460154520114e-1 * wr_8_0 +
      0.786400865842829871e-2 * wr_10_0;
  results[k++] =
      0.104085091962972131e0 * wr_4_4 - 0.328259975318798848e0 * wr_6_4 +
      0.827696463187606670e-1 * wr_8_4 + 0.111269470037396229e0 * wr_10_4;
  results[k++] =
      0.812224136975363538e-1 * wr_8_8 + 0.548341934980682457e0 * wr_10_8;
  results[k++] =
      -0.185694057532795222e-1 * wr_2_0 + 0.149480832837991320e0 * wr_4_0 -
      0.246583375978762931e0 * wr_6_0 + 0.155830432801962960e0 * wr_8_0 -
      0.349926294690858859e-1 * wr_10_0;
  results[k++] =
      0.177759135469158752e-1 * wr_4_4 - 0.196705485703324252e0 * wr_6_4 +
      0.412288571889556086e0 * wr_8_4 - 0.228034556245523174e0 * wr_10_4;
  results[k++] =
      0.205160298054703953e0 * wr_8_8 - 0.569853654784303114e0 * wr_10_8;
  results[k++] =
      -0.638843971751187745e-1 * wr_2_0 - 0.148344079969205774e0 * wr_4_0 -
      0.235060997817704421e0 * wr_8_0 - 0.221868758944208198e0 * wr_6_0;
  results[k++] = -0.163170163170163170e0 * wr_4_4 +
                 0.420966371939131731e0 * wr_6_4 -
                 0.105657451873248463e0 * wr_8_4;
  results[k++] = 0.125094712027960263e0 * wr_4_4 +
                 0.840454842765498668e-1 * wr_6_4 -
                 0.196881037264996714e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.451730904545412060e0 * wr_2_0 +
                 0.167832167832167832e0 * wr_4_0 -
                 0.448242582808265956e-1 * wr_6_0 -
                 0.166213225549375045e0 * wr_8_0;
  results[k++] = 0.208491186713267105e0 * wr_4_4 +
                 0.168090968553099734e-1 * wr_6_4 +
                 0.354385867076994085e0 * wr_8_4;
  results[k++] =
      -0.360561335180693478e0 * wr_4_4 + 0.451240440748781962e-1 * wr_6_4 +
      0.929193175222405874e-1 * wr_8_4 + 0.192724375436033134e0 * wr_10_4;
  results[k++] =
      -0.534881722587495674e-1 * wr_2_0 - 0.116370670536761354e0 * wr_4_0 -
      0.145893322363910599e0 * wr_6_0 - 0.582306371541894339e-1 * wr_8_0 +
      0.572076226997493878e0 * wr_10_0;
  results[k++] =
      0.403119827761058517e0 * wr_4_4 + 0.238125014731853247e0 * wr_6_4 +
      0.273074282243439855e-1 * wr_8_4 + 0.430944804396160758e0 * wr_10_4;
  results[k++] =
      0.155983008327547987e0 * wr_4_4 + 0.211357179410368227e0 * wr_6_4 +
      0.984440145757717391e-1 * wr_8_4 - 0.407128875225168346e0 * wr_10_4;
  results[k++] =
      -0.444397838672896880e-1 * wr_2_0 - 0.105995069474835451e0 * wr_4_0 -
      0.168604702031420788e0 * wr_6_0 - 0.213102311424798881e0 * wr_8_0 -
      0.204706051608291165e0 * wr_10_0;
  results[k++] =
      0.135765782292888247e0 * wr_4_4 + 0.183962811805823916e0 * wr_6_4 +
      0.308464259403940129e0 * wr_8_4 + 0.414676831373323392e0 * wr_10_4;
  results[k++] = 0.412791489439229004e0 * wr_4_4 +
                 0.190173221952178455e0 * wr_6_4 -
                 0.167059099844544648e0 * wr_8_4;
  results[k++] =
      0.282828282828282828e0 * wr_2_0 - 0.364859576748217433e0 * wr_4_0 +
      0.140322123979710577e0 * wr_6_0 - 0.106189734596544979e-1 * wr_8_0;
  results[k++] = -0.448957840715153709e0 * wr_8_8;
  results[k++] = 0.208491186713267105e0 * wr_4_4 +
                 0.168090968553099734e-1 * wr_6_4 +
                 0.354385867076994085e0 * wr_8_4;
  results[k++] = wr_0_0 - 0.225865452272706030e0 * wr_2_0 -
                 0.205128205128205128e0 * wr_4_0 -
                 0.616333551361365690e-1 * wr_6_0 +
                 0.831066127746875225e-1 * wr_8_0;
  results[k++] =
      -0.121079225549534220e0 * wr_8_8 + 0.735677904918345484e0 * wr_10_8;
  results[k++] =
      -0.208170183925944262e0 * wr_4_4 + 0.255313314136843549e0 * wr_6_4 +
      0.735730189500094816e-1 * wr_8_4 + 0.333808410112188687e0 * wr_10_4;
  results[k++] =
      0.290022320528094877e0 * wr_2_0 - 0.310773324311062712e0 * wr_6_0 +
      0.558446046320741501e-1 * wr_8_0 + 0.527533738076778014e-1 * wr_10_0;
  results[k++] =
      0.392852061585886971e0 * wr_8_8 + 0.165331314104398204e0 * wr_10_8;
  results[k++] =
      0.414771316094703755e-1 * wr_4_4 - 0.252907053047131182e0 * wr_6_4 -
      0.588983674127937268e-1 * wr_8_4 + 0.445210324098402387e0 * wr_10_4;
  results[k++] =
      -0.290926676341903386e-1 * wr_2_0 + 0.112758849626553142e0 * wr_4_0 +
      0.128773968264076741e0 * wr_6_0 - 0.352645754093458791e0 * wr_8_0 +
      0.156346829451755156e0 * wr_10_0;
  results[k++] = 0.191216523854958033e0 * wr_4_4 +
                 0.159873456405428874e0 * wr_6_4 -
                 0.329927337891508726e0 * wr_8_4;
  results[k++] = 0.450107542573847294e0 * wr_8_8;
  results[k++] =
      -0.277932695868451224e0 * wr_2_0 + 0.403119827761058517e0 * wr_4_0 -
      0.189520985114488423e0 * wr_6_0 + 0.144083460154520114e-1 * wr_8_0 +
      0.786400865842829871e-2 * wr_10_0;
  results[k++] =
      -0.360561335180693478e0 * wr_4_4 + 0.451240440748781962e-1 * wr_6_4 +
      0.929193175222405874e-1 * wr_8_4 + 0.192724375436033134e0 * wr_10_4;
  results[k++] =
      -0.121079225549534220e0 * wr_8_8 + 0.735677904918345484e0 * wr_10_8;
  results[k++] =
      wr_0_0 - 0.336793455459893017e0 * wr_2_0 -
      0.203335126412049489e0 * wr_4_0 + 0.141470226927043215e-1 * wr_6_0 +
      0.126077874672067884e0 * wr_8_0 - 0.453329707673283677e-1 * wr_10_0;
  results[k++] =
      0.204170181779627140e0 * wr_4_4 - 0.102756034527328641e-1 * wr_6_4 +
      0.201843577700542475e0 * wr_8_4 - 0.356347496239174355e0 * wr_10_4;
  results[k++] =
      -0.314582507762692073e0 * wr_8_8 - 0.351219926809463238e0 * wr_10_8;
  results[k++] =
      -0.240852257502947273e0 * wr_2_0 + 0.957443591663775747e-1 * wr_4_0 +
      0.319828020111490329e0 * wr_6_0 - 0.307989333395704021e0 * wr_8_0 +
      0.803140405359396662e-1 * wr_10_0;
  results[k++] =
      0.136628362486390907e0 * wr_4_4 - 0.368527609347373409e0 * wr_6_4 -
      0.679052652187994342e-1 * wr_8_4 + 0.255603267467505493e0 * wr_10_4;
  results[k++] =
      0.337905666119326148e0 * wr_8_8 - 0.304165378932306388e-1 * wr_10_8;
  results[k++] =
      -0.531550314731532857e-1 * wr_2_0 - 0.123429735401654286e0 * wr_4_0 -
      0.184605966183900519e0 * wr_6_0 - 0.195582572421568195e0 * wr_8_0;
  results[k++] = 0.349112011610284063e-1 * wr_4_4 -
                 0.291887661398573947e0 * wr_6_4 +
                 0.341881220839366977e0 * wr_8_4;
  results[k++] =
      0.104085091962972131e0 * wr_4_4 - 0.328259975318798848e0 * wr_6_4 +
      0.827696463187606670e-1 * wr_8_4 + 0.111269470037396229e0 * wr_10_4;
  results[k++] =
      -0.534881722587495674e-1 * wr_2_0 - 0.116370670536761354e0 * wr_4_0 -
      0.145893322363910599e0 * wr_6_0 - 0.582306371541894339e-1 * wr_8_0 +
      0.572076226997493878e0 * wr_10_0;
  results[k++] =
      -0.208170183925944262e0 * wr_4_4 + 0.255313314136843549e0 * wr_6_4 +
      0.735730189500094816e-1 * wr_8_4 + 0.333808410112188687e0 * wr_10_4;
  results[k++] =
      0.204170181779627140e0 * wr_4_4 - 0.102756034527328641e-1 * wr_6_4 +
      0.201843577700542475e0 * wr_8_4 - 0.356347496239174355e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.471510837643850222e0 * wr_2_0 +
      0.210866057019903174e0 * wr_4_0 + 0.912711141464794933e-2 * wr_6_0 -
      0.144679528312209047e0 * wr_8_0 - 0.211553863580865716e0 * wr_10_0;
  results[k++] =
      0.273923043262641163e0 * wr_4_4 + 0.176745752539555627e-2 * wr_6_4 +
      0.132745870752992254e0 * wr_8_4 + 0.478090335121586708e0 * wr_10_4;
  results[k++] =
      -0.346095221308369666e0 * wr_4_4 - 0.114308872170228657e0 * wr_6_4 +
      0.172011779737496683e0 * wr_8_4 + 0.242651927283107746e0 * wr_10_4;
  results[k++] =
      -0.369761352470885422e-1 * wr_2_0 - 0.881932287548970277e-1 * wr_4_0 -
      0.140287591951988097e0 * wr_6_0 - 0.177311840945078739e0 * wr_8_0 -
      0.170325730493416483e0 * wr_10_0;
  results[k++] =
      0.361484669176976869e0 * wr_4_4 + 0.304601960303403737e0 * wr_6_4 +
      0.209603851894298570e0 * wr_8_4 + 0.414038375519109718e-1 * wr_10_4;
  results[k++] = 0.171029258304358519e0 * wr_4_4 +
                 0.255348511657420100e0 * wr_6_4 +
                 0.378839436434004251e0 * wr_8_4;
  results[k++] =
      -0.260405408741611957e-1 * wr_2_0 + 0.181403922492476333e0 * wr_4_0 -
      0.226095210312021278e0 * wr_6_0 + 0.798462508356298963e-1 * wr_8_0;
  results[k++] =
      0.812224136975363538e-1 * wr_8_8 + 0.548341934980682457e0 * wr_10_8;
  results[k++] =
      0.403119827761058517e0 * wr_4_4 + 0.238125014731853247e0 * wr_6_4 +
      0.273074282243439855e-1 * wr_8_4 + 0.430944804396160758e0 * wr_10_4;
  results[k++] =
      0.290022320528094877e0 * wr_2_0 - 0.310773324311062712e0 * wr_6_0 +
      0.558446046320741501e-1 * wr_8_0 + 0.527533738076778014e-1 * wr_10_0;
  results[k++] =
      -0.314582507762692073e0 * wr_8_8 - 0.351219926809463238e0 * wr_10_8;
  results[k++] =
      0.273923043262641163e0 * wr_4_4 + 0.176745752539555627e-2 * wr_6_4 +
      0.132745870752992254e0 * wr_8_4 + 0.478090335121586708e0 * wr_10_4;
  results[k++] =
      wr_0_0 - 0.134717382183957206e-1 * wr_2_0 -
      0.248520710059171598e0 * wr_4_0 - 0.501991127805637214e-2 * wr_6_0 -
      0.245955198130755380e0 * wr_8_0 + 0.176294886317388096e0 * wr_10_0;
  results[k++] =
      -0.434047687095150995e0 * wr_8_8 - 0.253367896193740371e0 * wr_10_8;
  results[k++] =
      -0.213857214321836578e0 * wr_4_4 + 0.208277077802010093e0 * wr_6_4 +
      0.303681578118775330e0 * wr_8_4 + 0.142303359840949269e0 * wr_10_4;
  results[k++] =
      0.218753766192457650e0 * wr_2_0 + 0.156527453292937808e0 * wr_4_0 -
      0.207488146641721296e0 * wr_6_0 - 0.269740542219262724e0 * wr_8_0 +
      0.196733738282213223e0 * wr_10_0;
  results[k++] =
      -0.315133265537962556e-1 * wr_4_4 - 0.896712568881198684e-1 * wr_6_4 -
      0.233194941417081000e0 * wr_8_4 + 0.318509502157564953e0 * wr_10_4;
  results[k++] =
      -0.175688782961395422e0 * wr_8_8 + 0.768959478865352633e0 * wr_10_8;
  results[k++] =
      -0.185694057532795222e-1 * wr_2_0 + 0.149480832837991320e0 * wr_4_0 -
      0.246583375978762931e0 * wr_6_0 + 0.155830432801962960e0 * wr_8_0 -
      0.349926294690858859e-1 * wr_10_0;
  results[k++] =
      0.155983008327547987e0 * wr_4_4 + 0.211357179410368227e0 * wr_6_4 +
      0.984440145757717391e-1 * wr_8_4 - 0.407128875225168346e0 * wr_10_4;
  results[k++] =
      0.392852061585886971e0 * wr_8_8 + 0.165331314104398204e0 * wr_10_8;
  results[k++] =
      -0.240852257502947273e0 * wr_2_0 + 0.957443591663775747e-1 * wr_4_0 +
      0.319828020111490329e0 * wr_6_0 - 0.307989333395704021e0 * wr_8_0 +
      0.803140405359396662e-1 * wr_10_0;
  results[k++] =
      -0.346095221308369666e0 * wr_4_4 - 0.114308872170228657e0 * wr_6_4 +
      0.172011779737496683e0 * wr_8_4 + 0.242651927283107746e0 * wr_10_4;
  results[k++] =
      -0.434047687095150995e0 * wr_8_8 - 0.253367896193740371e0 * wr_10_8;
  results[k++] =
      wr_0_0 - 0.132311714644957970e0 * wr_2_0 -
      0.426035502958579882e0 * wr_4_0 + 0.125497781951409303e-1 * wr_6_0 +
      0.208848023427424687e0 * wr_8_0 - 0.725327532277253884e-1 * wr_10_0;
  results[k++] =
      0.379973645687223779e0 * wr_4_4 - 0.130146376137855817e0 * wr_6_4 -
      0.188849596943058789e0 * wr_8_4 - 0.492364822204992812e-1 * wr_10_4;
  results[k++] =
      0.261039113526583208e0 * wr_8_8 + 0.820273026568963518e-1 * wr_10_8;
  results[k++] =
      0.936872904974942177e-2 * wr_4_0 + 0.476886112585419616e-1 * wr_6_0 +
      0.165754698444503046e0 * wr_8_0 + 0.684268176053781307e0 * wr_10_0;
  results[k++] =
      -0.264987673687088628e-2 * wr_4_4 + 0.754023150136707527e-1 * wr_6_4 -
      0.289741657257283417e0 * wr_8_4 + 0.252522285592070763e0 * wr_10_4;
  results[k++] =
      0.177759135469158752e-1 * wr_4_4 - 0.196705485703324252e0 * wr_6_4 +
      0.412288571889556086e0 * wr_8_4 - 0.228034556245523174e0 * wr_10_4;
  results[k++] =
      -0.444397838672896880e-1 * wr_2_0 - 0.105995069474835451e0 * wr_4_0 -
      0.168604702031420788e0 * wr_6_0 - 0.213102311424798881e0 * wr_8_0 -
      0.204706051608291165e0 * wr_10_0;
  results[k++] =
      0.414771316094703755e-1 * wr_4_4 - 0.252907053047131182e0 * wr_6_4 -
      0.588983674127937268e-1 * wr_8_4 + 0.445210324098402387e0 * wr_10_4;
  results[k++] =
      0.136628362486390907e0 * wr_4_4 - 0.368527609347373409e0 * wr_6_4 -
      0.679052652187994342e-1 * wr_8_4 + 0.255603267467505493e0 * wr_10_4;
  results[k++] =
      -0.369761352470885422e-1 * wr_2_0 - 0.881932287548970277e-1 * wr_4_0 -
      0.140287591951988097e0 * wr_6_0 - 0.177311840945078739e0 * wr_8_0 -
      0.170325730493416483e0 * wr_10_0;
  results[k++] =
      -0.213857214321836578e0 * wr_4_4 + 0.208277077802010093e0 * wr_6_4 +
      0.303681578118775330e0 * wr_8_4 + 0.142303359840949269e0 * wr_10_4;
  results[k++] =
      0.379973645687223779e0 * wr_4_4 - 0.130146376137855817e0 * wr_6_4 -
      0.188849596943058789e0 * wr_8_4 - 0.492364822204992812e-1 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.529246858579831882e0 * wr_2_0 +
      0.348574502420656267e0 * wr_4_0 + 0.228177785366198734e0 * wr_6_0 +
      0.132182293308496638e0 * wr_8_0 + 0.543995649207940410e-1 * wr_10_0;
  results[k++] =
      0.463014450963209396e0 * wr_4_4 + 0.109792407201539229e0 * wr_6_4 -
      0.401799385338095482e-1 * wr_8_4 - 0.673433468120985585e-1 * wr_10_4;
  results[k++] =
      0.219430640714052064e-1 * wr_4_4 + 0.520325406856171014e-2 * wr_6_4 +
      0.599822216340083902e-1 * wr_8_4 + 0.609899262887257092e0 * wr_10_4;
  results[k++] =
      -0.271531564585776493e-1 * wr_4_0 + 0.115178938708350473e0 * wr_6_0 -
      0.133445210145017453e0 * wr_8_0 + 0.472189901648725106e-1 * wr_10_0;
  results[k++] =
      0.205160298054703953e0 * wr_8_8 - 0.569853654784303114e0 * wr_10_8;
  results[k++] =
      0.135765782292888247e0 * wr_4_4 + 0.183962811805823916e0 * wr_6_4 +
      0.308464259403940129e0 * wr_8_4 + 0.414676831373323392e0 * wr_10_4;
  results[k++] =
      -0.290926676341903386e-1 * wr_2_0 + 0.112758849626553142e0 * wr_4_0 +
      0.128773968264076741e0 * wr_6_0 - 0.352645754093458791e0 * wr_8_0 +
      0.156346829451755156e0 * wr_10_0;
  results[k++] =
      0.337905666119326148e0 * wr_8_8 - 0.304165378932306388e-1 * wr_10_8;
  results[k++] =
      0.361484669176976869e0 * wr_4_4 + 0.304601960303403737e0 * wr_6_4 +
      0.209603851894298570e0 * wr_8_4 + 0.414038375519109718e-1 * wr_10_4;
  results[k++] =
      0.218753766192457650e0 * wr_2_0 + 0.156527453292937808e0 * wr_4_0 -
      0.207488146641721296e0 * wr_6_0 - 0.269740542219262724e0 * wr_8_0 +
      0.196733738282213223e0 * wr_10_0;
  results[k++] =
      0.261039113526583208e0 * wr_8_8 + 0.820273026568963518e-1 * wr_10_8;
  results[k++] =
      0.463014450963209396e0 * wr_4_4 + 0.109792407201539229e0 * wr_6_4 -
      0.401799385338095482e-1 * wr_8_4 - 0.673433468120985585e-1 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.132311714644957970e0 * wr_2_0 -
      0.296933835395373857e0 * wr_4_0 - 0.258981786390635563e0 * wr_6_0 +
      0.185055210631895293e-1 * wr_8_0 + 0.987251363377373340e-1 * wr_10_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] = 0.186989398001691436e0 * wr_6_4;
  results[k++] = 0.560968194005074306e0 * wr_6_0;
  results[k++] = 0.560968194005074306e0 * wr_6_4;
  results[k++] = -0.600532564178963269e0 * wr_6_4;
  results[k++] = -0.383214231015951249e0 * wr_6_0;
  results[k++] = 0.353376746370109751e0 * wr_6_4;
  results[k++] = 0.411376675603721158e0 * wr_6_4;
  results[k++] = -0.328165061656946795e0 * wr_6_0;
  results[k++] = -0.644503386635489589e0 * wr_6_4;
  results[k++] = 0.659670247293930310e0 * wr_6_4;
  results[k++] = 0.656330123313893593e0 * wr_6_0;
  results[k++] = 0.380860794851537659e0 * wr_6_4;
  results[k++] = -0.272727272727272727e0 * wr_5_4;
  results[k++] = -0.365902032681783768e0 * wr_5_4;
  results[k++] =
      -0.168877861237746355e0 * wr_5_4 + 0.172005229038445362e0 * wr_7_4;
  results[k++] = -0.609836721136306281e0 * wr_5_0;
  results[k++] = -0.272727272727272727e0 * wr_5_0;
  results[k++] =
      0.839160839160839161e-1 * wr_5_0 + 0.628787608745845475e0 * wr_7_0;
  results[k++] = -0.818181818181818182e0 * wr_5_4;
  results[k++] = 0.365902032681783768e0 * wr_5_4;
  results[k++] =
      -0.187642068041940394e-1 * wr_5_4 + 0.516015687115336084e0 * wr_7_4;
  results[k++] = 0.537825434827237823e0 * wr_5_4;
  results[k++] =
      0.518049207760898856e0 * wr_5_4 + 0.191889655527761515e0 * wr_7_4;
  results[k++] =
      0.713639214772666792e-1 * wr_5_4 - 0.488446395888847493e0 * wr_7_4;
  results[k++] = 0.416597790450530909e0 * wr_5_0;
  results[k++] =
      -0.286627993453415340e0 * wr_5_0 + 0.404998356341174864e0 * wr_7_0;
  results[k++] =
      -0.214970995090061505e0 * wr_5_0 - 0.294544259157218083e0 * wr_7_0;
  results[k++] = 0.240522846460417326e0 * wr_5_4;
  results[k++] =
      -0.562648147203879568e0 * wr_5_4 + 0.429078313939093032e0 * wr_7_4;
  results[k++] =
      0.287234243215425914e0 * wr_5_4 + 0.468085433388101490e0 * wr_7_4;
  results[k++] = 0.200000000000000000e0 * wr_7_4;
  results[k++] =
      0.516015687115336084e0 * wr_5_4 - 0.550416732923025157e0 * wr_7_4;
  results[k++] =
      0.516015687115336084e0 * wr_5_4 + 0.344010458076890723e0 * wr_7_4;
  results[k++] = 0.305505046330389333e0 * wr_7_0;
  results[k++] =
      0.552270485919783906e0 * wr_5_0 - 0.336310178985340665e0 * wr_7_0;
  results[k++] =
      -0.184090161973261302e0 * wr_5_0 - 0.252232634239005499e0 * wr_7_0;
  results[k++] = 0.382970843102535244e0 * wr_7_4;
  results[k++] =
      0.269480403748219489e0 * wr_5_4 + 0.210793560265273912e0 * wr_7_4;
  results[k++] =
      -0.449134006247032482e0 * wr_5_4 - 0.237142755298433150e0 * wr_7_4;
  results[k++] = -0.748331477354788278e0 * wr_7_4;
  results[k++] = 0.239045721866878728e0 * wr_7_4;
  results[k++] =
      0.551643973538950912e0 * wr_5_4 + 0.128716927159088546e0 * wr_7_4;
  results[k++] = -0.611010092660778665e0 * wr_7_0;
  results[k++] = -0.273252020425589291e0 * wr_7_0;
  results[k++] =
      0.736360647893045208e0 * wr_5_0 + 0.189174475679254124e0 * wr_7_0;
  results[k++] = -0.432049379893857349e0 * wr_7_4;
  results[k++] = -0.524449825100189207e0 * wr_7_4;
  results[k++] =
      0.318491796619548101e0 * wr_5_4 - 0.146506226444992127e0 * wr_7_4;
  results[k++] = 0.904534033733290867e0 * wr_4_4;
  results[k++] =
      0.657842933624211541e0 * wr_4_4 - 0.118993253273803641e0 * wr_6_4;
  results[k++] =
      0.251217919893729976e0 * wr_4_4 - 0.300468998745692634e0 * wr_6_4;
  results[k++] = 0.473350552294628986e-1 * wr_4_4 -
                 0.218072809022786879e0 * wr_6_4 +
                 0.156092201906428419e0 * wr_8_4;
  results[k++] = 0.112559687534741105e1 * wr_8_8;
  results[k++] = 0.674199862463242087e0 * wr_4_0;
  results[k++] =
      -0.245163586350269850e0 * wr_4_0 - 0.356979759821410922e0 * wr_6_0;
  results[k++] =
      -0.160497241728136278e0 * wr_4_0 - 0.233698110135538717e0 * wr_6_0;
  results[k++] = 0.226809431168112746e-1 * wr_4_0 +
                 0.127209138596625679e0 * wr_6_0 +
                 0.658889975448753873e0 * wr_8_0;
  results[k++] = 0.296164129809114418e0 * wr_8_4 +
                 0.249477646158278238e-1 * wr_4_4 -
                 0.241362370292023515e0 * wr_6_4;
  results[k++] = 0.301511344577763623e0 * wr_4_4;
  results[k++] =
      -0.438561955749474360e0 * wr_4_4 - 0.356979759821410922e0 * wr_6_4;
  results[k++] =
      0.251217919893729976e0 * wr_4_4 + 0.434010775966000470e0 * wr_6_4;
  results[k++] = -0.631134069726171982e-1 * wr_4_4 -
                 0.109036404511393440e0 * wr_6_4 +
                 0.468276605719285256e0 * wr_8_4;
  results[k++] = 0.297656149981498040e-1 * wr_8_0 +
                 0.557848975676549399e-1 * wr_4_0 -
                 0.804541234306745050e-1 * wr_6_0;
  results[k++] = -0.221248839434354889e0 * wr_6_4;
  results[k++] =
      0.486481410008642566e0 * wr_4_4 - 0.218375477883259371e0 * wr_6_4;
  results[k++] = 0.522628661814728707e0 * wr_4_4 +
                 0.302850126558031481e0 * wr_6_4 +
                 0.203117550650216806e0 * wr_8_4;
  results[k++] = 0.200027116624949438e0 * wr_4_4 +
                 0.193520420505517948e0 * wr_6_4 -
                 0.418381163754252329e0 * wr_8_4;
  results[k++] = 0.570781792985392895e0 * wr_8_8;
  results[k++] = -0.383214231015951249e0 * wr_6_0;
  results[k++] =
      0.628044799734324943e0 * wr_4_0 - 0.139350629460345909e0 * wr_6_0;
  results[k++] = -0.168677675288259369e0 * wr_4_0 -
                 0.174850602092391706e0 * wr_6_0 +
                 0.495015179409134596e0 * wr_8_0;
  results[k++] = -0.129116948579719650e0 * wr_4_0 -
                 0.223458133745100722e0 * wr_6_0 -
                 0.248018441826405651e0 * wr_8_0;
  results[k++] = 0.433539893828180416e0 * wr_8_4 +
                 0.365197879627338121e-1 * wr_4_4 -
                 0.353318332162524939e0 * wr_6_4;
  results[k++] = -0.494727444918153653e0 * wr_6_4;
  results[k++] =
      0.217561100513854266e0 * wr_4_4 + 0.128500635043676273e0 * wr_6_4;
  results[k++] = -0.350589964442244596e0 * wr_4_4 -
                 0.967419242825961144e-1 * wr_6_4 +
                 0.454184650677141388e0 * wr_8_4;
  results[k++] = 0.178909692046666099e0 * wr_4_4 +
                 0.309089153774773106e0 * wr_6_4 +
                 0.480406641365935332e0 * wr_8_4;
  results[k++] = 0.101253104879141167e0 * wr_8_0 +
                 0.189762384699291790e0 * wr_4_0 -
                 0.273679203275047888e0 * wr_6_0;
  results[k++] = -0.411376675603721158e0 * wr_6_4;
  results[k++] =
      0.246826005362232695e0 * wr_6_4 + 0.260316549382387407e0 * wr_8_4;
  results[k++] = 0.379587516322943646e0 * wr_4_4 -
                 0.979306366282257471e-2 * wr_6_4 -
                 0.506881882397663095e0 * wr_8_4;
  results[k++] = 0.371918291088637061e0 * wr_4_4 +
                 0.359820134887598350e0 * wr_6_4 +
                 0.298805072220877258e0 * wr_8_4;
  results[k++] = 0.225119375069482210e0 * wr_8_8;
  results[k++] = -0.328165061656946797e0 * wr_6_0;
  results[k++] =
      -0.196899036994168078e0 * wr_6_0 + 0.459155234546841149e0 * wr_8_0;
  results[k++] = 0.677094990595702251e0 * wr_4_0 -
                 0.312486490489934348e-1 * wr_6_0 -
                 0.277465532050035466e0 * wr_8_0;
  results[k++] = -0.110569148956936340e0 * wr_4_0 -
                 0.191358113303351829e0 * wr_6_0 -
                 0.212390304603887199e0 * wr_8_0;
  results[k++] = 0.371261384556850947e0 * wr_8_4 +
                 0.312736780069900657e-1 * wr_4_4 -
                 0.302563743395579521e0 * wr_6_4;
  results[k++] = -0.214834462211829864e0 * wr_6_4;
  results[k++] =
      -0.386702031981293756e0 * wr_6_4 + 0.498468241952578276e0 * wr_8_4;
  results[k++] = 0.198233115214629665e0 * wr_4_4 +
                 0.323903177739324111e-1 * wr_6_4 +
                 0.368160482828890466e0 * wr_8_4;
  results[k++] = -0.258970657279035374e0 * wr_4_4 -
                 0.208788818822987114e-1 * wr_6_4 -
                 0.768584084989320648e-1 * wr_8_4;
  results[k++] = 0.170990440069603477e0 * wr_8_0 +
                 0.320459838808100699e0 * wr_4_0 -
                 0.462173752219812755e0 * wr_6_0;
  results[k++] = 0.405839724956713889e0 * wr_8_4;
  results[k++] =
      -0.263868098917572124e0 * wr_6_4 - 0.568175614939399442e0 * wr_8_4;
  results[k++] =
      0.403065178924623135e0 * wr_6_4 + 0.235320526729225321e0 * wr_8_4;
  results[k++] = 0.347897705282034949e0 * wr_4_4 -
                 0.747957592006765742e-1 * wr_6_4 +
                 0.393335445495365587e-1 * wr_8_4;
  results[k++] = 0.601656837596186838e-1 * wr_8_8;
  results[k++] = 0.573944043183551436e0 * wr_8_0;
  results[k++] =
      -0.262532049325557438e0 * wr_6_0 - 0.344366425910130861e0 * wr_8_0;
  results[k++] =
      -0.171867569769463892e0 * wr_6_0 - 0.225440744790653816e0 * wr_8_0;
  results[k++] = 0.773984042698554383e0 * wr_4_0 +
                 0.287037169955027743e0 * wr_6_0 +
                 0.106195152301943600e0 * wr_8_0;
  results[k++] = 0.185630692278425473e0 * wr_8_4 +
                 0.156368390034950329e-1 * wr_4_4 -
                 0.151281871697789760e0 * wr_6_4;
  results[k++] = 0.702935023354807334e0 * wr_8_4;
  results[k++] =
      -0.152344317940615064e0 * wr_6_4 + 0.140587004670961467e0 * wr_8_4;
  results[k++] =
      -0.432175323455749419e0 * wr_6_4 - 0.258576767668542034e0 * wr_8_4;
  results[k++] = 0.200858833795035967e0 * wr_4_4 -
                 0.314621562449486494e0 * wr_6_4 -
                 0.138319870888038514e0 * wr_8_4;
  results[k++] = 0.151566825560581232e0 * wr_8_0 +
                 0.284057286875383229e0 * wr_4_0 -
                 0.409673245199351323e0 * wr_6_0;
  results[k++] = 0.811679449913427780e0 * wr_8_8;
  results[k++] = 0.811679449913427780e0 * wr_8_8;
  results[k++] = 0.531368931324057175e0 * wr_8_8;
  results[k++] = 0.216930457818656173e0 * wr_8_8;
  results[k++] = 0.125436301501063615e1 * wr_4_4 -
                 0.269679944985296835e0 * wr_6_4 +
                 0.300828418798093419e-1 * wr_8_4;
  results[k++] = 0.284590469863609599e0 * wr_5_4;
  results[k++] =
      0.482608687032523989e0 * wr_5_4 - 0.766045534972260299e-1 * wr_7_4;
  results[k++] =
      0.319746912810857747e0 * wr_5_4 - 0.256939483508724975e0 * wr_7_4;
  results[k++] =
      -0.227740890656968394e-1 * wr_3_0 + 0.399683641013572184e-1 * wr_5_0 +
      0.536671148833620183e-2 * wr_9_0 - 0.247092320536702247e-1 * wr_7_0;
  results[k++] = 0.893719790800970348e-1 * wr_5_4 -
                 0.236572885800256857e0 * wr_7_4 +
                 0.143503095514742942e0 * wr_9_4;
  results[k++] = 0.836759646707856501e0 * wr_9_8;
  results[k++] =
      0.759737176397586326e0 * wr_3_0 + 0.212121212121212121e0 * wr_5_0;
  results[k++] = -0.126884210508882391e0 * wr_3_0 -
                 0.239810184608143310e0 * wr_5_0 -
                 0.280037963274929213e0 * wr_7_0;
  results[k++] = -0.945739066564180699e-1 * wr_3_0 -
                 0.178743958160194070e0 * wr_5_0 -
                 0.208727974054443782e0 * wr_7_0;
  results[k++] =
      -0.252782129822395507e0 * wr_5_4 + 0.379173194733593261e0 * wr_7_4;
  results[k++] = 0.893719790800970345e-1 * wr_5_4 -
                 0.236572885800256856e0 * wr_7_4 +
                 0.143503095514742941e0 * wr_9_4;
  results[k++] =
      0.650688259019909696e-2 * wr_3_0 + 0.399683641013572184e-1 * wr_5_0 +
      0.153746332778392509e0 * wr_7_0 + 0.676205647530361430e0 * wr_9_0;
  results[k++] = -0.893719790800970348e-1 * wr_5_4 -
                 0.173486782920188362e0 * wr_7_4 +
                 0.430509286544228826e0 * wr_9_4;
  results[k++] = -0.284590469863609599e0 * wr_5_4;
  results[k++] =
      0.536231874480582210e-1 * wr_5_4 - 0.229813660491678090e0 * wr_7_4;
  results[k++] =
      0.159873456405428874e0 * wr_5_4 + 0.428232472514541625e0 * wr_7_4;
  results[k++] = 0.139565511052072209e0 * wr_3_0 -
                 0.188412675260017731e0 * wr_5_0 +
                 0.660055809404572673e-1 * wr_7_0;
  results[k++] = 0.836759646707856501e0 * wr_9_8;
  results[k++] = -0.893719790800970348e-1 * wr_5_4 -
                 0.173486782920188362e0 * wr_7_4 +
                 0.430509286544228826e0 * wr_9_4;
  results[k++] =
      -0.759136302189894646e-2 * wr_3_0 + 0.932595162365001762e-1 * wr_5_0 -
      0.129037100724722284e0 * wr_7_0 + 0.483004033950258165e-1 * wr_9_0;
  results[k++] =
      0.388536905820674142e0 * wr_5_4 - 0.139556113111099284e0 * wr_7_4;
  results[k++] =
      -0.258970657279035374e-1 * wr_5_4 - 0.280983163147753380e0 * wr_7_4;
  results[k++] = 0.183374064720345876e0 * wr_5_4 +
                 0.178832292219532356e0 * wr_7_4 +
                 0.198876596861882925e0 * wr_9_4;
  results[k++] = 0.733420650513297888e0 * wr_9_8;
  results[k++] =
      0.115485709628639224e0 * wr_3_0 - 0.202676597848803337e0 * wr_5_0 -
      0.272141942896065039e-1 * wr_9_0 + 0.125298675607401791e0 * wr_7_0;
  results[k++] = 0.211492703444545555e0 * wr_5_4 +
                 0.257066461269630702e0 * wr_7_4 -
                 0.371932238672392952e0 * wr_9_4;
  results[k++] = -0.942921300800367047e-1 * wr_9_8;
  results[k++] =
      -0.214970995090061505e0 * wr_5_0 - 0.294544259157218083e0 * wr_7_0;
  results[k++] = 0.722320143367872968e0 * wr_3_0 +
                 0.780102588842960886e-1 * wr_5_0 -
                 0.169439222648784485e0 * wr_7_0;
  results[k++] =
      -0.993942733592589436e-1 * wr_3_0 - 0.165714429717260807e0 * wr_5_0 -
      0.107839929762069473e0 * wr_7_0 + 0.541053955822374732e0 * wr_9_0;
  results[k++] = -0.234355593987073292e0 * wr_5_4 +
                 0.195900960917986963e0 * wr_7_4 +
                 0.217858396522228817e0 * wr_9_4;
  results[k++] = -0.156992617626878660e0 * wr_5_4 +
                 0.415568693718208217e0 * wr_7_4 -
                 0.252080426486120332e0 * wr_9_4;
  results[k++] =
      -0.777883231319247812e-1 * wr_3_0 - 0.156020517768592177e0 * wr_5_0 -
      0.217023672273111058e0 * wr_7_0 - 0.219969713584363279e0 * wr_9_0;
  results[k++] =
      -0.226767114349935842e0 * wr_5_4 + 0.476151916696005071e0 * wr_9_4;
  results[k++] =
      -0.421986110402909676e0 * wr_5_4 - 0.312056955592067660e0 * wr_7_4;
  results[k++] =
      0.269270337141981576e0 * wr_7_4 - 0.104233678893670288e0 * wr_5_4;
  results[k++] = 0.164014749610055737e0 * wr_5_4 +
                 0.114251760564280312e-1 * wr_7_4 +
                 0.444701589716991573e0 * wr_9_4;
  results[k++] =
      0.340851354318848913e0 * wr_3_0 - 0.405915795823594219e0 * wr_5_0 +
      0.792458405443942642e-1 * wr_7_0 + 0.315549075018849926e-1 * wr_9_0;
  results[k++] = -0.632530837806644273e0 * wr_9_8;
  results[k++] = 0.252919956139052903e0 * wr_7_4 +
                 0.470071956218996003e0 * wr_9_4 +
                 0.675588659496011123e-1 * wr_5_4;
  results[k++] =
      0.688623725758504798e-1 * wr_3_0 + 0.151066216746103968e0 * wr_5_0 -
      0.336211627378614188e0 * wr_7_0 + 0.141989839563709062e0 * wr_9_0;
  results[k++] =
      -0.172005229038445362e0 * wr_5_4 - 0.412812549692268867e0 * wr_7_4;
  results[k++] = 0.421325044234743165e0 * wr_5_4 +
                 0.173486782920188362e0 * wr_7_4 +
                 0.266505748813094035e0 * wr_9_4;
  results[k++] = -0.125614858604265544e0 * wr_5_4 +
                 0.155171295922916260e-1 * wr_7_4 -
                 0.464515874628540758e0 * wr_9_4;
  results[k++] = 0.631123648437744103e0 * wr_9_8;
  results[k++] =
      -0.250514979722665233e0 * wr_3_0 + 0.439652005114929402e0 * wr_5_0 +
      0.590338263716982201e-1 * wr_9_0 - 0.271801552590372470e0 * wr_7_0;
  results[k++] = 0.280883362823162110e-1 * wr_5_4 +
                 0.247838261314554803e0 * wr_7_4 +
                 0.267872444960853492e0 * wr_9_4;
  results[k++] = -0.278919882235952164e0 * wr_9_8;
  results[k++] =
      -0.184090161973261302e0 * wr_5_0 - 0.252232634239005499e0 * wr_7_0;
  results[k++] = -0.150308987833599140e0 * wr_5_0 -
                 0.127202610368981622e0 * wr_7_0 +
                 0.524747252947078678e0 * wr_9_0;
  results[k++] =
      0.744766492334141957e0 * wr_3_0 + 0.149378273077829567e0 * wr_5_0 -
      0.116359234241098301e0 * wr_7_0 - 0.240691390481219442e0 * wr_9_0;
  results[k++] = -0.633758339131615048e-1 * wr_5_4 -
                 0.195719487084763471e0 * wr_7_4 +
                 0.407046076006266101e0 * wr_9_4;
  results[k++] = 0.156847186731721045e0 * wr_5_4 -
                 0.415183729583967472e0 * wr_7_4 +
                 0.251846910524479896e0 * wr_9_4;
  results[k++] =
      -0.666139401689286973e-1 * wr_3_0 - 0.133607989185421458e0 * wr_5_0 -
      0.185847969694940682e0 * wr_7_0 - 0.188370808750233371e0 * wr_9_0;
  results[k++] = -0.291287632501767655e0 * wr_5_4 +
                 0.257018499266265578e0 * wr_7_4 +
                 0.251846910524479896e0 * wr_9_4;
  results[k++] =
      -0.898268012494064965e-1 * wr_5_4 + 0.158095170198955434e0 * wr_7_4;
  results[k++] = -0.366716380479073968e0 * wr_5_4 -
                 0.119592683139763887e0 * wr_7_4 +
                 0.510319656573115522e0 * wr_9_4;
  results[k++] = -0.196800661251332709e0 * wr_5_4 +
                 0.164772318341802092e0 * wr_7_4 +
                 0.421332717176061667e0 * wr_9_4;
  results[k++] =
      0.308362623667201700e0 * wr_3_0 - 0.216469683286599524e0 * wr_5_0 -
      0.156130139007950166e0 * wr_7_0 + 0.116264987300918180e0 * wr_9_0;
  results[k++] = 0.320454547373887333e0 * wr_9_8;
  results[k++] =
      0.220029828287444381e0 * wr_5_4 + 0.146686552191629587e0 * wr_7_4;
  results[k++] =
      0.305263423163375172e0 * wr_3_0 - 0.765335904866293867e-1 * wr_5_0 -
      0.362745091560393848e0 * wr_7_0 + 0.195252932220736811e0 * wr_9_0;
  results[k++] =
      -0.843690783059571987e-1 * wr_7_4 + 0.407094255692296978e0 * wr_9_4;
  results[k++] = -0.112603854570984598e0 * wr_5_4 -
                 0.166918655011106581e0 * wr_7_4 -
                 0.498586601832116928e0 * wr_9_4;
  results[k++] = 0.386077805802140366e0 * wr_5_4 +
                 0.356652950014662660e0 * wr_7_4 +
                 0.222974706873446928e0 * wr_9_4;
  results[k++] = 0.274096696382879185e0 * wr_9_8;
  results[k++] =
      0.267811778393381289e0 * wr_3_0 - 0.470007763585214359e0 * wr_5_0 -
      0.631098150037699851e-1 * wr_9_0 + 0.290568081996112303e0 * wr_7_0;
  results[k++] = -0.367839258265216352e0 * wr_5_4 -
                 0.145722635327156539e0 * wr_7_4 +
                 0.767056310510949122e-2 * wr_9_4;
  results[k++] = -0.149088948240895465e0 * wr_9_8;
  results[k++] =
      0.964418895619726908e-1 * wr_7_0 + 0.642681506823759524e0 * wr_9_0;
  results[k++] = -0.150308987833599140e0 * wr_5_0 -
                 0.245319319997321700e0 * wr_7_0 -
                 0.262373626473539339e0 * wr_9_0;
  results[k++] = -0.112033704808372175e0 * wr_5_0 -
                 0.182850225236011615e0 * wr_7_0 -
                 0.195561754765990796e0 * wr_9_0;
  results[k++] = 0.475318754348711286e-1 * wr_5_4 -
                 0.307559193990342597e0 * wr_7_4 +
                 0.330724936755091207e0 * wr_9_4;
  results[k++] = -0.896269638466977400e-1 * wr_5_4 +
                 0.237247845476552841e0 * wr_7_4 -
                 0.143912520299702798e0 * wr_9_4;
  results[k++] =
      0.799367282027144367e0 * wr_3_0 + 0.350720971611731326e0 * wr_5_0 +
      0.185847969694940682e0 * wr_7_0 + 0.740028177233059673e-1 * wr_9_0;
  results[k++] = -0.201660668655069915e0 * wr_5_4 +
                 0.276789153055978315e0 * wr_7_4 +
                 0.359781300749256995e-1 * wr_9_4;
  results[k++] =
      0.185099938270655014e0 * wr_7_4 + 0.705107934328494005e0 * wr_9_4;
  results[k++] = 0.189987617081052957e0 * wr_7_4 +
                 0.287859108782113468e0 * wr_9_4 -
                 0.650118657483474291e-1 * wr_5_4;
  results[k++] = -0.319816092546269192e0 * wr_5_4 -
                 0.136135620142689988e0 * wr_7_4 -
                 0.128734507035862482e0 * wr_9_4;
  results[k++] = 0.287819798982610876e0 * wr_5_0 -
                 0.434954383373680209e0 * wr_7_0 +
                 0.167469081564068369e0 * wr_9_0;
  results[k++] = -0.103291853280095016e0 * wr_9_8;
  results[k++] = -0.237102098611620036e0 * wr_7_4 -
                 0.110715041839274411e0 * wr_9_4 -
                 0.455083060238432004e0 * wr_5_4;
  results[k++] =
      0.463863607042713265e0 * wr_3_0 - 0.407038663240706244e0 * wr_5_0 -
      0.111839706905579125e0 * wr_7_0 + 0.127527640383269294e0 * wr_9_0;
  results[k++] = 0.416382772221781500e0 * wr_9_8;
  results[k++] = 0.509962664814439100e0 * wr_9_8;
  results[k++] = 0.380103728170675335e0 * wr_9_8;
  results[k++] = 0.423659272868161692e0 * wr_5_4 -
                 0.149526802188762950e0 * wr_7_4 +
                 0.206140189426606593e-1 * wr_9_4;
  results[k++] = 0.169987554938146366e0 * wr_9_8;
  results[k++] = 0.599144689515278081e0 * wr_5_4 -
                 0.211462831593627558e0 * wr_7_4 +
                 0.291526251637265931e-1 * wr_9_4;
  results[k++] =
      -0.512796431652514736e0 * wr_4_4 + 0.163554606767090159e0 * wr_6_4;
  results[k++] = -0.317533203635357844e0 * wr_4_4 +
                 0.390100500015424757e0 * wr_6_4 -
                 0.571144539633375617e-1 * wr_8_4;
  results[k++] = -0.411858184669882089e0 * wr_8_8;
  results[k++] =
      0.784035783512821323e-1 * wr_2_0 - 0.121372429065713815e0 * wr_4_0 +
      0.680733692215184241e-1 * wr_6_0 - 0.137373310412944142e-1 * wr_8_0;
  results[k++] = -0.904656673284024604e-1 * wr_4_4 +
                 0.340366846107592122e0 * wr_6_4 -
                 0.227807863424379066e0 * wr_8_4;
  results[k++] = -0.519481855041635536e0 * wr_8_8;
  results[k++] =
      0.738649080649857003e-2 * wr_2_0 - 0.440445214893547944e-1 * wr_4_0 +
      0.686597139796241380e-1 * wr_6_0 - 0.425045702890959444e-1 * wr_8_0 +
      0.945136214955200259e-2 * wr_10_0;
  results[k++] =
      -0.113722465479963875e-1 * wr_4_4 + 0.118922113045856122e0 * wr_6_4 -
      0.244170166789890661e0 * wr_8_4 + 0.133729259871178705e0 * wr_10_4;
  results[k++] =
      -0.239605835975522178e0 * wr_8_8 + 0.659024987686663843e0 * wr_10_8;
  results[k++] = 0.805822964025380299e0 * wr_2_0 +
                 0.327613622798385077e0 * wr_4_0 +
                 0.127209138596625679e0 * wr_6_0;
  results[k++] =
      -0.655227245596770153e-1 * wr_2_0 - 0.152148391808987889e0 * wr_4_0 -
      0.227558625008997774e0 * wr_6_0 - 0.241089181330349643e0 * wr_8_0;
  results[k++] = -0.167354692702964820e0 * wr_4_4 +
                 0.431762133746752278e0 * wr_6_4 -
                 0.108367057104586634e0 * wr_8_4;
  results[k++] = -0.904656673284024604e-1 * wr_4_4 +
                 0.340366846107592122e0 * wr_6_4 -
                 0.227807863424379066e0 * wr_8_4;
  results[k++] =
      -0.522690522341880881e-1 * wr_2_0 - 0.121372429065713815e0 * wr_4_0 -
      0.181528984590715798e0 * wr_6_0 - 0.192322634578121799e0 * wr_8_0;
  results[k++] = -0.150776112214004101e0 * wr_4_4 +
                 0.680733692215184241e-1 * wr_6_4 +
                 0.410054154163882319e0 * wr_8_4;
  results[k++] =
      0.393946176346590400e-1 * wr_4_4 - 0.163475509475295566e-1 * wr_6_4 -
      0.274111661297092877e0 * wr_8_4 + 0.231625872555463331e0 * wr_10_4;
  results[k++] =
      0.142153081849954844e-2 * wr_2_0 + 0.528542724648249430e-1 * wr_6_0 +
      0.171780175687392391e0 * wr_8_0 + 0.687550056637813576e0 * wr_10_0 +
      0.127145581691036236e-1 * wr_4_0;
  results[k++] =
      -0.440445214893547944e-1 * wr_4_4 - 0.862679950349885601e-1 * wr_6_4 -
      0.805568176341202887e-1 * wr_8_4 + 0.517931196381718935e0 * wr_10_4;
  results[k++] =
      -0.512796431652514736e0 * wr_4_4 - 0.236245543108019119e0 * wr_6_4;
  results[k++] = 0.423377604847143792e0 * wr_4_4 +
                 0.195050250007712378e0 * wr_6_4 -
                 0.171343361890012685e0 * wr_8_4;
  results[k++] =
      0.290081467351805688e0 * wr_2_0 + 0.143920711248917426e0 * wr_6_0 -
      0.108912990318464028e-1 * wr_8_0 - 0.374216469237417359e0 * wr_4_0;
  results[k++] = -0.519481855041635536e0 * wr_8_8;
  results[k++] = -0.150776112214004101e0 * wr_4_4 +
                 0.680733692215184241e-1 * wr_6_4 +
                 0.410054154163882319e0 * wr_8_4;
  results[k++] =
      0.261345261170940441e-1 * wr_2_0 - 0.249602353812234222e0 * wr_6_0 +
      0.961613172890608992e-1 * wr_8_0 + 0.148344079969205774e0 * wr_4_0;
  results[k++] =
      0.357183291364621487e0 * wr_8_8 + 0.884174802803005338e0 * wr_10_8;
  results[k++] =
      0.227444930959927750e-1 * wr_4_4 - 0.924949768134436504e-1 * wr_6_4 -
      0.217040148257680588e0 * wr_8_4 + 0.401187779613536115e0 * wr_10_4;
  results[k++] =
      -0.770779126063708903e-2 * wr_2_0 + 0.112587044367696934e0 * wr_6_0 -
      0.164741388102783129e0 * wr_8_0 + 0.634016647391004338e-1 * wr_10_0;
  results[k++] = 0.400054233249898874e0 * wr_4_4 +
                 0.387040841011035897e0 * wr_6_4 -
                 0.101768391183466783e0 * wr_8_4;
  results[k++] = -0.357819384093332198e0 * wr_4_4 +
                 0.240402675158156860e-1 * wr_6_4 -
                 0.283493552321205858e0 * wr_8_4;
  results[k++] = 0.386759663465015497e0 * wr_8_8;
  results[k++] =
      -0.285441122957961200e0 * wr_2_0 + 0.414872740430120107e0 * wr_4_0 -
      0.196287344859632322e0 * wr_6_0 + 0.158875925385403437e-1 * wr_8_0 +
      0.782647140993330954e-2 * wr_10_0;
  results[k++] =
      -0.371073459845349559e0 * wr_4_4 + 0.467350821094362672e-1 * wr_6_4 +
      0.102458967474088520e0 * wr_8_4 + 0.191804444763775987e0 * wr_10_4;
  results[k++] =
      -0.133509939194271577e0 * wr_8_8 + 0.732166295823205935e0 * wr_10_8;
  results[k++] =
      0.312136206631266915e-1 * wr_2_0 + 0.100505919782366418e0 * wr_4_0 -
      0.256981361621141833e0 * wr_6_0 + 0.182608168661620052e0 * wr_8_0 -
      0.431344382418392392e-1 * wr_10_0;
  results[k++] =
      -0.100918676836538738e0 * wr_4_4 + 0.186656841098020298e0 * wr_6_4 +
      0.292345395065350811e0 * wr_8_4 - 0.339065558885466470e0 * wr_10_4;
  results[k++] =
      -0.455633756398115172e0 * wr_8_8 - 0.334186663389475317e0 * wr_10_8;
  results[k++] = -0.129116948579719650e0 * wr_4_0 -
                 0.223458133745100722e0 * wr_6_0 -
                 0.248018441826405651e0 * wr_8_0;
  results[k++] =
      0.783309488050299209e0 * wr_2_0 + 0.230971419257278448e0 * wr_4_0 -
      0.277593098432936043e-1 * wr_6_0 - 0.168056392605278829e0 * wr_8_0;
  results[k++] = -0.653285827268410884e-1 * wr_4_4 -
                 0.438913226895697797e-1 * wr_6_4 +
                 0.293765052593288769e0 * wr_8_4;
  results[k++] =
      0.107119680965419177e0 * wr_4_4 - 0.339979654179676878e0 * wr_6_4 +
      0.912672706403151531e-1 * wr_8_4 + 0.110738347816132772e0 * wr_10_4;
  results[k++] =
      -0.549331697258559884e-1 * wr_2_0 - 0.151102068524300835e0 * wr_6_0 -
      0.642089408023095000e-1 * wr_8_0 + 0.569345537291568177e0 * wr_10_0 -
      0.119763444183383790e0 * wr_4_0;
  results[k++] =
      -0.214239361930838355e0 * wr_4_4 + 0.264428619917526461e0 * wr_6_4 +
      0.811264627913912471e-1 * wr_8_4 + 0.332215043448398317e0 * wr_10_4;
  results[k++] =
      -0.100918676836538738e0 * wr_4_4 + 0.186656841098020298e0 * wr_6_4 +
      0.292345395065350811e0 * wr_8_4 - 0.339065558885466470e0 * wr_10_4;
  results[k++] =
      -0.436990689283773681e-1 * wr_2_0 - 0.104228361255787396e0 * wr_4_0 -
      0.165794426852349570e0 * wr_6_0 - 0.209550357480547600e0 * wr_8_0 -
      0.201294045128583117e0 * wr_10_0;
  results[k++] =
      -0.135396612963500431e0 * wr_4_4 - 0.321059527046576824e-1 * wr_6_4 +
      0.192265934198575290e0 * wr_8_4 + 0.454904183098116517e0 * wr_10_4;
  results[k++] = -0.268364538069999148e0 * wr_4_4 -
                 0.123635661509909242e0 * wr_6_4 -
                 0.227561040647021999e0 * wr_8_4;
  results[k++] = -0.320043386599919100e0 * wr_4_4 +
                 0.383969088304599104e-1 * wr_6_4 +
                 0.325521789980786006e0 * wr_8_4;
  results[k++] =
      0.383741711280790065e0 * wr_2_0 - 0.339457273408065946e0 * wr_4_0 -
      0.339980723639438973e-1 * wr_6_0 + 0.686087349826288719e-1 * wr_8_0;
  results[k++] =
      0.895611899130764245e-1 * wr_8_8 + 0.545724536098302942e0 * wr_10_8;
  results[k++] =
      0.414872740430120107e0 * wr_4_4 + 0.246626656452531672e0 * wr_6_4 +
      0.301109712689116722e-1 * wr_8_4 + 0.428887776878406703e0 * wr_10_4;
  results[k++] =
      0.297857352103675974e0 * wr_2_0 - 0.321868687234659978e0 * wr_6_0 +
      0.615779439859907363e-1 * wr_8_0 + 0.525015662897085090e-1 * wr_10_0;
  results[k++] =
      -0.455633756398115172e0 * wr_8_8 - 0.334186663389475317e0 * wr_10_8;
  results[k++] =
      -0.135396612963500431e0 * wr_4_4 - 0.321059527046576824e-1 * wr_6_4 +
      0.192265934198575290e0 * wr_8_4 + 0.454904183098116517e0 * wr_10_4;
  results[k++] =
      0.124854482652506766e-2 * wr_2_0 + 0.122840568622892288e0 * wr_4_0 +
      0.911869347687922633e-1 * wr_6_0 - 0.356235607716930921e0 * wr_8_0 +
      0.167745037607152597e0 * wr_10_0;
  results[k++] = -0.619863818481061768e-1 * wr_4_4 -
                 0.599700224812663918e-1 * wr_6_4 -
                 0.388000616167407783e0 * wr_8_4;
  results[k++] =
      0.343742293459228649e0 * wr_4_4 + 0.283970216922993022e0 * wr_6_4 +
      0.105497124238044569e0 * wr_8_4 + 0.261502716787587599e0 * wr_10_4;
  results[k++] =
      0.794814040591000520e-1 * wr_8_8 + 0.631331220766473661e0 * wr_10_8;
  results[k++] =
      0.331707446870809021e0 * wr_2_0 - 0.385694607919935013e0 * wr_4_0 +
      0.440474742021589804e-1 * wr_6_0 + 0.103391491521321117e0 * wr_8_0 -
      0.370416234250508801e-1 * wr_10_0;
  results[k++] =
      -0.402471702203248280e0 * wr_4_4 - 0.377549778875648403e-1 * wr_6_4 +
      0.653163397888445242e-1 * wr_8_4 - 0.430968312766498912e0 * wr_10_4;
  results[k++] =
      0.260652299196329410e0 * wr_8_8 + 0.175012291740872788e0 * wr_10_8;
  results[k++] =
      -0.243754196614452811e0 * wr_2_0 + 0.968979472765805478e-1 * wr_4_0 +
      0.323681508761085221e0 * wr_6_0 - 0.311700182120036925e0 * wr_8_0 +
      0.812817144861472222e-1 * wr_10_0;
  results[k++] =
      -0.350265193678288735e0 * wr_4_4 - 0.115686137180662758e0 * wr_6_4 +
      0.174084285581681305e0 * wr_8_4 + 0.245575549945255440e0 * wr_10_4;
  results[k++] =
      -0.439277365955123993e0 * wr_8_8 - 0.256420631572629205e0 * wr_10_8;
  results[k++] = -0.110569148956936340e0 * wr_4_0 -
                 0.191358113303351829e0 * wr_6_0 -
                 0.212390304603887199e0 * wr_8_0;
  results[k++] =
      -0.151019911550259361e0 * wr_6_0 - 0.749872356088702613e-1 * wr_8_0 +
      0.561797955279938348e0 * wr_10_0 - 0.102192588423230645e0 * wr_4_0;
  results[k++] =
      0.289044289044289044e-1 * wr_4_4 - 0.238783446267994889e0 * wr_6_4 +
      0.131078793677338319e0 * wr_8_4 + 0.207325882852531977e0 * wr_10_4;
  results[k++] =
      -0.458659071917739106e-1 * wr_4_4 + 0.351377288616834799e-1 * wr_6_4 +
      0.273548174245458848e0 * wr_8_4 - 0.241387123188542399e0 * wr_10_4;
  results[k++] =
      0.793833009088394609e0 * wr_2_0 + 0.301180533100144112e-1 * wr_6_0 -
      0.141390647697498287e0 * wr_8_0 - 0.216692617604007516e0 * wr_10_0 +
      0.273491430214674526e0 * wr_4_0;
  results[k++] =
      -0.107020450114139125e0 * wr_4_4 + 0.451770799650216171e-1 * wr_6_4 -
      0.390783106064941211e-1 * wr_8_4 + 0.471279621463344685e0 * wr_10_4;
  results[k++] =
      0.138274546719625101e0 * wr_4_4 - 0.372967861202690521e0 * wr_6_4 -
      0.687234304585966132e-1 * wr_8_4 + 0.258682936001994893e0 * wr_10_4;
  results[k++] =
      -0.374216469237417359e-1 * wr_2_0 - 0.141977864877660891e0 * wr_6_0 -
      0.179448205252003603e0 * wr_8_0 - 0.172377921758464304e0 * wr_10_0 -
      0.892558361082479038e-1 * wr_4_0;
  results[k++] =
      -0.216433900216136596e0 * wr_4_4 + 0.210786530710485899e0 * wr_6_4 +
      0.307340524304803147e0 * wr_8_4 + 0.144017920002861157e0 * wr_10_4;
  results[k++] = -0.323713321598794217e-1 * wr_4_4 +
                 0.198349377881837758e0 * wr_6_4 +
                 0.281814164496084238e0 * wr_8_4;
  results[k++] =
      -0.239351410792872512e0 * wr_4_4 - 0.164776232410618877e-1 * wr_6_4 -
      0.271358883230620530e-1 * wr_8_4 + 0.500739579608729595e0 * wr_10_4;
  results[k++] =
      -0.364747739075169053e0 * wr_6_0 + 0.603704601313006181e-1 * wr_8_0 +
      0.387677420247641557e-1 * wr_10_0 + 0.296182259901862518e0 * wr_4_0;
  results[k++] =
      0.136121223790680741e0 * wr_8_8 - 0.603221444291780255e0 * wr_10_8;
  results[k++] =
      -0.350306652540205647e0 * wr_4_4 - 0.328614902566324590e-1 * wr_6_4 +
      0.204662075868862825e0 * wr_8_4 + 0.438958239602827638e0 * wr_10_4;
  results[k++] =
      0.519685693328876510e0 * wr_2_0 - 0.230030431796427213e-1 * wr_6_0 -
      0.233975930367334837e0 * wr_8_0 + 0.165501720451414138e0 * wr_10_0 -
      0.290943524132968277e0 * wr_4_0;
  results[k++] =
      0.341976965590118966e0 * wr_8_8 - 0.307830154254077086e-1 * wr_10_8;
  results[k++] =
      0.365840063270310095e0 * wr_4_4 + 0.308271995831448925e0 * wr_6_4 +
      0.212129290609469574e0 * wr_8_4 + 0.419026969639172802e-1 * wr_10_4;
  results[k++] =
      0.221389448815840422e0 * wr_2_0 - 0.209988094012594660e0 * wr_6_0 -
      0.272990545509828564e0 * wr_8_0 + 0.199104109793748102e0 * wr_10_0 +
      0.158413394257097441e0 * wr_4_0;
  results[k++] = -0.725958839300684398e-1 * wr_6_4 -
                 0.151688214865676872e0 * wr_8_4 +
                 0.390694410653992649e0 * wr_10_4;
  results[k++] =
      -0.414892223054302823e-1 * wr_4_4 + 0.442716358239048054e-1 * wr_6_4 -
      0.833234015451600847e-1 * wr_8_4 - 0.454282015538803727e0 * wr_10_4;
  results[k++] =
      -0.127453792546669730e0 * wr_8_8 + 0.590556281420471528e0 * wr_10_8;
  results[k++] =
      -0.222021089040385224e0 * wr_4_0 + 0.423798575701481407e0 * wr_6_0 -
      0.280576544029687343e0 * wr_8_0 + 0.643486368137044195e-1 * wr_10_0;
  results[k++] =
      0.264775598684178620e0 * wr_4_4 + 0.216944508990044054e0 * wr_6_4 +
      0.296089538665805947e0 * wr_8_4 + 0.211063287646196821e0 * wr_10_4;
  results[k++] =
      0.257214488088147007e0 * wr_8_8 - 0.152015507931966882e0 * wr_10_8;
  results[k++] =
      0.477737694929322151e0 * wr_2_0 - 0.492044248830167210e0 * wr_4_0 -
      0.576716813437166069e-1 * wr_6_0 + 0.229089788888757298e0 * wr_8_0 -
      0.717379111182351145e-1 * wr_10_0;
  results[k++] =
      -0.561673863966931838e0 * wr_4_4 - 0.316319227109924461e0 * wr_6_4 -
      0.152871084903705413e0 * wr_8_4 - 0.693151962631768409e-2 * wr_10_4;
  results[k++] =
      -0.234803628738369936e0 * wr_8_8 - 0.397097231743577959e-1 * wr_10_8;
  results[k++] = 0.309549889167186782e-1 * wr_6_0 +
                 0.145319682097396505e0 * wr_8_0 +
                 0.672974152299819130e0 * wr_10_0;
  results[k++] =
      -0.169897400494041782e0 * wr_6_0 - 0.224961706826610783e0 * wr_8_0 -
      0.220706339574261494e0 * wr_10_0 - 0.923029830919502597e-1 * wr_4_0;
  results[k++] =
      -0.186480186480186480e-2 * wr_4_4 + 0.895437923504980835e-1 * wr_6_4 -
      0.393236381032014957e0 * wr_8_4 + 0.362820294991930961e0 * wr_10_4;
  results[k++] =
      -0.141125868282381264e-1 * wr_4_4 + 0.180708319860086468e0 * wr_6_4 -
      0.396795153850555692e0 * wr_8_4 + 0.224145185817932228e0 * wr_10_4;
  results[k++] =
      -0.135531239895064851e0 * wr_6_0 - 0.179457360539132441e0 * wr_8_0 -
      0.176062751803256107e0 * wr_10_0 - 0.736323081347200646e-1 * wr_4_0;
  results[k++] =
      -0.316239559755151320e0 * wr_6_4 + 0.198397576925277847e0 * wr_8_4 +
      0.242823951302759913e0 * wr_10_4 + 0.376335648753016705e-1 * wr_4_4;
  results[k++] =
      -0.103705910039718826e0 * wr_4_4 + 0.336080929874951898e0 * wr_6_4 -
      0.107993962149223249e0 * wr_8_4 - 0.950263846537940425e-1 * wr_10_4;
  results[k++] =
      0.823276232322318188e0 * wr_2_0 + 0.401651262487115568e0 * wr_4_0 +
      0.248461263535906560e0 * wr_6_0 + 0.140995018412288545e0 * wr_8_0 +
      0.574593072528214345e-1 * wr_10_0;
  results[k++] =
      -0.185514771613831367e0 * wr_4_4 + 0.339091375490781664e0 * wr_6_4 +
      0.120740920262601237e0 * wr_8_4 - 0.283313940989235063e-1 * wr_10_4;
  results[k++] = 0.778388986682985617e-1 * wr_6_4 +
                 0.166679247401611218e0 * wr_8_4 +
                 0.676702569485894544e0 * wr_10_4;
  results[k++] =
      -0.239538136665083990e-1 * wr_4_4 + 0.186224611982888923e0 * wr_6_4 +
      0.293014074263351039e0 * wr_8_4 + 0.342981334408359959e0 * wr_10_4;
  results[k++] =
      0.242485735984064720e0 * wr_6_0 - 0.321076160609032711e0 * wr_8_0 +
      0.120273756629821989e0 * wr_10_0 - 0.338758081577341725e-1 * wr_4_0;
  results[k++] =
      -0.111377140452872597e0 * wr_8_8 + 0.315958299931867573e0 * wr_10_8;
  results[k++] =
      -0.191085328968943560e0 * wr_4_4 + 0.436928967434696932e-1 * wr_6_4 +
      0.244210535504193098e-1 * wr_8_4 - 0.574799273295184666e-1 * wr_10_4;
  results[k++] =
      -0.122340110881715141e0 * wr_6_0 - 0.323981886447669746e0 * wr_8_0 +
      0.191950464396284830e0 * wr_10_0 + 0.299095849554227320e0 * wr_4_0;
  results[k++] =
      -0.151565090622129333e0 * wr_8_8 + 0.843392464879195454e-1 * wr_10_8;
  results[k++] =
      -0.486423834837128008e0 * wr_4_4 - 0.221074778484246993e0 * wr_6_4 -
      0.157333332297349682e0 * wr_8_4 - 0.885423632275176208e-1 * wr_10_4;
  results[k++] =
      0.616756712105594734e0 * wr_2_0 - 0.260777151127504067e0 * wr_4_0 -
      0.297815281855993868e0 * wr_6_0 + 0.104092069752113017e0 * wr_10_0;
  results[k++] =
      -0.342521775503141325e0 * wr_8_8 + 0.261605327235636012e0 * wr_10_8;
  results[k++] =
      -0.459541184279367740e0 * wr_8_8 + 0.350980376984975558e0 * wr_10_8;
  results[k++] =
      -0.149591518401353149e0 * wr_4_4 - 0.637268962733348652e-1 * wr_8_4 +
      0.969193550619103895e-2 * wr_10_4 + 0.159623653011757212e0 * wr_6_4;
  results[k++] =
      -0.366587047871950218e0 * wr_8_8 + 0.279985482610602010e0 * wr_10_8;
  results[k++] =
      -0.160759055055091879e0 * wr_8_4 - 0.377363288482015146e0 * wr_4_4 +
      0.402670601005704810e0 * wr_6_4 + 0.244491177939589068e-1 * wr_10_4;
  results[k++] =
      -0.172810791630275684e0 * wr_8_8 + 0.131986422258496575e0 * wr_10_8;
  results[k++] =
      -0.176102721553777454e0 * wr_8_4 - 0.413380770951858260e0 * wr_4_4 +
      0.441103542829973904e0 * wr_6_4 + 0.267826666537044749e-1 * wr_10_4;
  results[k++] =
      -0.408557618651872160e0 * wr_5_4 + 0.114906830245839045e0 * wr_7_4;
  results[k++] =
      -0.246691100109079328e0 * wr_1_0 + 0.315632771148532535e0 * wr_3_0 -
      0.161496578794300913e0 * wr_5_0 + 0.349441310861244356e-1 * wr_7_0 -
      0.172492640276103521e-2 * wr_9_0;
  results[k++] = -0.361117328317707868e0 * wr_5_4 +
                 0.334564583588464642e0 * wr_7_4 -
                 0.461236417998798034e-1 * wr_9_4;
  results[k++] = -0.268944736550175046e0 * wr_9_8;
  results[k++] =
      -0.131673968068709339e-1 * wr_1_0 + 0.111398017057857007e0 * wr_3_0 -
      0.174556005805142031e0 * wr_5_0 + 0.104450065013355789e0 * wr_7_0 -
      0.223729517062257525e-1 * wr_9_0;
  results[k++] = -0.135210500692760055e0 * wr_5_4 +
                 0.346421674977529028e0 * wr_7_4 -
                 0.207236824571825607e0 * wr_9_4;
  results[k++] = -0.520007380573132066e0 * wr_9_8;
  results[k++] =
      0.114743028551379999e-1 * wr_3_0 - 0.592274111317574682e-1 * wr_5_0 +
      0.917316016731820464e-1 * wr_7_0 - 0.579411033825820101e-1 * wr_9_0 +
      0.132117645539409954e-1 * wr_11_0;
  results[k++] =
      -0.211295586175952268e-1 * wr_5_4 + 0.140122336095631504e0 * wr_7_4 -
      0.247185194932215202e0 * wr_9_4 + 0.126032201278951824e0 * wr_11_4;
  results[k++] =
      -0.314522896447560920e0 * wr_9_8 + 0.541456733015007364e0 * wr_11_8;
  results[k++] =
      0.852802865422441737e0 * wr_1_0 + 0.414488420995682477e0 * wr_3_0 +
      0.228390652007755534e0 * wr_5_0 + 0.933459877583097374e-1 * wr_7_0;
  results[k++] =
      0.322993157588601825e0 * wr_5_4 - 0.169571407734015958e0 * wr_7_4;
  results[k++] = -0.361117328317707868e0 * wr_5_4 +
                 0.334564583588464642e0 * wr_7_4 -
                 0.461236417998798034e-1 * wr_9_4;
  results[k++] =
      -0.274101222343421475e-1 * wr_1_0 - 0.901807917567235814e-1 * wr_3_0 -
      0.161496578794300913e0 * wr_5_0 - 0.217430148980329822e0 * wr_7_0 -
      0.217340726747890436e0 * wr_9_0;
  results[k++] = 0.361117328317707868e0 * wr_5_4 +
                 0.245347361298207404e0 * wr_7_4 -
                 0.138370925399639410e0 * wr_9_4;
  results[k++] = 0.182148910935201229e0 * wr_5_4 +
                 0.214292836394354388e0 * wr_7_4 -
                 0.305767715378730623e0 * wr_9_4;
  results[k++] =
      -0.228066002729206574e-1 * wr_1_0 - 0.750349543248016433e-1 * wr_3_0 -
      0.134373275920352839e0 * wr_5_0 - 0.180912819457004631e0 * wr_7_0 -
      0.180838415662183092e0 * wr_9_0;
  results[k++] = 0.581853352683806771e-1 * wr_5_4 +
                 0.210836273678367630e0 * wr_7_4 +
                 0.386448963471801905e0 * wr_9_4;
  results[k++] =
      -0.378390049776964149e-2 * wr_5_4 - 0.836441162664868119e-1 * wr_7_4 -
      0.262914094863123398e0 * wr_9_4 + 0.301616748514755848e0 * wr_11_4;
  results[k++] =
      0.305110905830265746e-2 * wr_3_0 + 0.179989064394321567e-1 * wr_5_0 +
      0.627227172374502897e-1 * wr_7_0 + 0.184884043181222677e0 * wr_9_0 +
      0.695596580732650796e0 * wr_11_0;
  results[k++] = -0.296411638059601851e-1 * wr_5_4 -
                 0.495059437601299933e-1 * wr_7_4 +
                 0.577552102362706960e0 * wr_11_4;
  results[k++] =
      -0.204278809325936080e0 * wr_5_4 - 0.191511383743065075e0 * wr_7_4;
  results[k++] =
      0.539359889970593670e0 * wr_1_0 - 0.611672821252786039e0 * wr_3_0 +
      0.240744885545138579e0 * wr_5_0 - 0.295185931754453896e-1 * wr_7_0;
  results[k++] = -0.268944736550175046e0 * wr_9_8;
  results[k++] = 0.361117328317707868e0 * wr_5_4 +
                 0.245347361298207404e0 * wr_7_4 -
                 0.138370925399639410e0 * wr_9_4;
  results[k++] =
      0.191870855640395033e0 * wr_1_0 + 0.105210923716177512e0 * wr_3_0 -
      0.376825350520035463e0 * wr_5_0 + 0.182486017894205386e0 * wr_7_0 -
      0.155243376248493169e-1 * wr_9_0;
  results[k++] = -0.775181234508751238e-1 * wr_9_8;
  results[k++] =
      -0.195304056556208968e0 * wr_5_4 + 0.391447335302337257e0 * wr_9_4;
  results[k++] =
      -0.176659166081262469e-1 * wr_1_0 + 0.664249436533465043e-1 * wr_3_0 +
      0.130106364953715164e0 * wr_5_0 - 0.280268934748963227e0 * wr_7_0 +
      0.116730695369028271e0 * wr_9_0;
  results[k++] =
      0.273757042789940439e0 * wr_9_8 + 0.848299669962143316e0 * wr_11_8;
  results[k++] =
      0.392406088612482784e-1 * wr_5_4 - 0.867423985353909312e-1 * wr_7_4 -
      0.247185194932215202e0 * wr_9_4 + 0.378096603836855470e0 * wr_11_4;
  results[k++] =
      -0.139819382132373590e-1 * wr_3_0 + 0.103101688981407449e-1 * wr_5_0 +
      0.122424570171857970e0 * wr_7_0 - 0.191638777746205997e0 * wr_9_0 +
      0.758958091514246022e-1 * wr_11_0;
  results[k++] = 0.172647104852690249e0 * wr_5_4 +
                 0.359893045777482982e0 * wr_7_4 -
                 0.808548344939984679e-1 * wr_9_4;
  results[k++] = -0.298177896481790931e0 * wr_9_8;
  results[k++] =
      0.486481410008642566e0 * wr_1_0 - 0.522628661814728707e0 * wr_3_0 +
      0.143313996726707670e0 * wr_5_0 + 0.393775747536387812e-1 * wr_7_0 -
      0.201180386597412034e-1 * wr_9_0;
  results[k++] = -0.149547924777113660e0 * wr_5_4 +
                 0.807881946575043780e-1 * wr_7_4 -
                 0.274950163021103554e0 * wr_9_4;
  results[k++] = -0.697052684372142623e-1 * wr_9_8;
  results[k++] =
      -0.215721332432804967e0 * wr_1_0 - 0.326904541960999014e-1 * wr_3_0 +
      0.359078183466671527e0 * wr_5_0 - 0.220276209345807566e0 * wr_7_0 +
      0.126457484080663130e-1 * wr_9_0 + 0.140138505275808768e-1 * wr_11_0;
  results[k++] =
      -0.365974690671797430e0 * wr_5_4 - 0.162349674809293597e-1 * wr_7_4 +
      0.518954323032016598e-1 * wr_9_4 + 0.184710456619523826e0 * wr_11_4;
  results[k++] =
      -0.334846819185991254e-1 * wr_9_8 + 0.670671267429925560e0 * wr_11_8;
  results[k++] =
      -0.139667892154339019e-1 * wr_1_0 + 0.698224023220568125e-1 * wr_3_0 +
      0.643580980901484808e-1 * wr_5_0 - 0.275652812256538015e0 * wr_7_0 +
      0.220361265213543133e0 * wr_9_0 - 0.556581108334772540e-1 * wr_11_0;
  results[k++] =
      -0.145412996124740478e0 * wr_5_4 + 0.157899984711629549e0 * wr_7_4 +
      0.313364428804289147e0 * wr_9_4 - 0.314633800301411216e0 * wr_11_4;
  results[k++] =
      -0.398730546213289115e0 * wr_9_8 - 0.422413349223725471e0 * wr_11_8;
  results[k++] =
      -0.777883231319247812e-1 * wr_3_0 - 0.156020517768592177e0 * wr_5_0 -
      0.217023672273111058e0 * wr_7_0 - 0.219969713584363279e0 * wr_9_0;
  results[k++] = -0.220646332236815517e0 * wr_5_4 +
                 0.394243078923133607e0 * wr_7_4 -
                 0.885720334714195288e-1 * wr_9_4;
  results[k++] = 0.111010544520192612e0 * wr_5_4 +
                 0.130600640611991309e0 * wr_7_4 -
                 0.186349950744220517e0 * wr_9_4;
  results[k++] =
      0.842610519072715460e0 * wr_1_0 + 0.352029765015772093e0 * wr_3_0 +
      0.110323166118407758e0 * wr_5_0 - 0.682039601521438852e-1 * wr_7_0 -
      0.162612170500764345e0 * wr_9_0;
  results[k++] =
      0.160348564306944884e0 * wr_5_4 + 0.351994351405749865e0 * wr_9_4;
  results[k++] =
      -0.365974690671797430e0 * wr_5_4 - 0.162349674809293597e-1 * wr_7_4 +
      0.518954323032016598e-1 * wr_9_4 + 0.184710456619523826e0 * wr_11_4;
  results[k++] =
      -0.239690369369783297e-1 * wr_1_0 - 0.762777264575664365e-1 * wr_3_0 -
      0.125992345076025097e0 * wr_5_0 - 0.137060752481835819e0 * wr_7_0 -
      0.336152805784041230e-1 * wr_9_0 + 0.588581722158396828e0 * wr_11_0;
  results[k++] =
      0.294603943099175004e0 * wr_5_4 + 0.239596439939053355e0 * wr_7_4 +
      0.232083428703394778e-1 * wr_9_4 + 0.413025137156281285e0 * wr_11_4;
  results[k++] =
      0.116320326311806600e0 * wr_5_4 + 0.236722067581922204e0 * wr_7_4 +
      0.144325059950317330e0 * wr_9_4 - 0.380387935042402583e0 * wr_11_4;
  results[k++] =
      -0.192978925386251716e-1 * wr_1_0 - 0.643156751355442654e-1 * wr_3_0 -
      0.118564655223840741e0 * wr_5_0 - 0.170030845354327660e0 * wr_7_0 -
      0.202981895131021839e0 * wr_9_0 - 0.187984454920544538e0 * wr_11_0;
  results[k++] =
      0.202487697443611763e-1 * wr_5_4 + 0.115098270125842476e0 * wr_7_4 +
      0.276361449449984856e0 * wr_9_4 + 0.416221394826346652e0 * wr_11_4;
  results[k++] = 0.154420265027659685e0 * wr_5_4 +
                 0.229927232853684457e-1 * wr_7_4 -
                 0.180796906238075386e0 * wr_9_4;
  results[k++] =
      0.266758379467934444e0 * wr_3_0 - 0.382170657937887119e0 * wr_5_0 +
      0.159479177752237064e0 * wr_7_0 - 0.128288942178059848e-1 * wr_9_0;
  results[k++] = -0.467597155846444869e0 * wr_9_8;
  results[k++] = -0.477713322422358899e-1 * wr_5_4 +
                 0.794850738148126572e-1 * wr_7_4 +
                 0.347499752792081496e0 * wr_9_4;
  results[k++] =
      0.652683301541562797e0 * wr_1_0 - 0.311635523948661863e0 * wr_3_0 -
      0.106819946269366900e0 * wr_5_0 - 0.105661120725859019e0 * wr_7_0 +
      0.104965704706683549e0 * wr_9_0;
  results[k++] =
      -0.334846819185991254e-1 * wr_9_8 + 0.670671267429925560e0 * wr_11_8;
  results[k++] =
      0.294603943099175004e0 * wr_5_4 + 0.239596439939053355e0 * wr_7_4 +
      0.232083428703394778e-1 * wr_9_4 + 0.413025137156281285e0 * wr_11_4;
  results[k++] =
      0.167783258558848308e0 * wr_1_0 + 0.228833179372699309e0 * wr_3_0 -
      0.132291962329826352e0 * wr_5_0 - 0.245730349092434218e0 * wr_7_0 +
      0.363365175776082664e-1 * wr_9_0 + 0.700692526379043840e-1 * wr_11_0;
  results[k++] =
      -0.931233927695978754e-1 * wr_9_8 - 0.986545039111208867e-1 * wr_11_8;
  results[k++] =
      -0.167710672244156069e0 * wr_5_4 - 0.100878599846108914e0 * wr_7_4 +
      0.140140832907356735e0 * wr_9_4 + 0.439714103433155813e0 * wr_11_4;
  results[k++] =
      -0.163096959863127578e-1 * wr_1_0 + 0.271783332432711492e-1 * wr_3_0 +
      0.145297863093130529e0 * wr_5_0 + 0.402366418681630055e-1 * wr_7_0 -
      0.360257125835965406e0 * wr_9_0 + 0.185355172215405780e0 * wr_11_0;
  results[k++] = 0.112353345129264844e0 * wr_5_4 +
                 0.247838261314554803e-1 * wr_7_4 -
                 0.363541175304015454e0 * wr_9_4;
  results[k++] = 0.493932383040066166e0 * wr_9_8;
  results[k++] =
      -0.247997177330989849e0 * wr_3_0 + 0.402316477172861392e0 * wr_5_0 -
      0.202308127340720416e0 * wr_7_0 + 0.119266339848048720e-1 * wr_9_0 +
      0.111253013708083813e-1 * wr_11_0;
  results[k++] =
      0.257030568979074423e-1 * wr_5_4 + 0.184471700224216094e0 * wr_7_4 +
      0.541184063785256359e-1 * wr_9_4 + 0.253984031581082796e0 * wr_11_4;
  results[k++] =
      -0.563503257533700096e-1 * wr_9_8 + 0.714332248546690185e0 * wr_11_8;
  results[k++] =
      0.612790389858224233e0 * wr_1_0 - 0.408459395878809026e0 * wr_3_0 -
      0.828285360879301404e-1 * wr_5_0 - 0.345549087262229679e-1 * wr_7_0 +
      0.163287034833692079e0 * wr_9_0 - 0.591997503555498863e-1 * wr_11_0;
  results[k++] =
      -0.149703652401003616e0 * wr_5_4 + 0.296746816105885500e-1 * wr_7_4 +
      0.106944435396324819e0 * wr_9_4 - 0.404592797986752788e0 * wr_11_4;
  results[k++] =
      -0.690041539935140330e-1 * wr_9_8 - 0.104932091936475467e0 * wr_11_8;
  results[k++] =
      -0.148731550762036058e0 * wr_1_0 - 0.151460797687821599e0 * wr_3_0 +
      0.223371950554056738e0 * wr_5_0 + 0.216224489658214823e0 * wr_7_0 -
      0.314813328378695589e0 * wr_9_0 + 0.943116731235172593e-1 * wr_11_0;
  results[k++] =
      -0.332035921133639279e0 * wr_5_4 - 0.183493535363326970e0 * wr_7_4 +
      0.123592597466107600e0 * wr_9_4 + 0.228796919244866388e0 * wr_11_4;
  results[k++] =
      -0.157261448223780460e0 * wr_9_8 - 0.166602071696925343e0 * wr_11_8;
  results[k++] =
      -0.666139401689286973e-1 * wr_3_0 - 0.133607989185421458e0 * wr_5_0 -
      0.185847969694940682e0 * wr_7_0 - 0.188370808750233371e0 * wr_9_0;
  results[k++] = 0.566850691042262511e-1 * wr_5_4 -
                 0.312601484030659473e0 * wr_7_4 +
                 0.318563943573594987e0 * wr_9_4;
  results[k++] =
      0.143527623862159879e0 * wr_5_4 - 0.309030769081205480e0 * wr_7_4 +
      0.508807595007832627e-1 * wr_9_4 + 0.106128611051917980e0 * wr_11_4;
  results[k++] =
      -0.659444363410062060e-1 * wr_3_0 - 0.122261913754213483e0 * wr_5_0 -
      0.138330904885310038e0 * wr_7_0 - 0.380566503556812173e-1 * wr_9_0 +
      0.585744739967089821e0 * wr_11_0;
  results[k++] =
      -0.266551301458296918e0 * wr_5_4 + 0.191304761812174821e0 * wr_7_4 +
      0.508807595007832627e-1 * wr_9_4 + 0.318385833155753940e0 * wr_11_4;
  results[k++] =
      0.187145766493925997e0 * wr_5_4 + 0.197938106087758546e-1 * wr_7_4 +
      0.232202099367240515e0 * wr_9_4 - 0.334654593056330684e0 * wr_11_4;
  results[k++] =
      0.846691598890780161e0 * wr_1_0 + 0.376245172576987949e0 * wr_3_0 +
      0.152592091988252081e0 * wr_5_0 - 0.213144944677486066e-1 * wr_7_0 -
      0.150408973867295561e0 * wr_9_0 - 0.199946290583163404e0 * wr_11_0;
  results[k++] =
      0.215842759194782417e0 * wr_5_4 - 0.126458017299940875e-1 * wr_7_4 +
      0.103843935740662139e0 * wr_9_4 + 0.467694011910302824e0 * wr_11_4;
  results[k++] =
      -0.332035921133639279e0 * wr_5_4 - 0.183493535363326970e0 * wr_7_4 +
      0.123592597466107600e0 * wr_9_4 + 0.228796919244866388e0 * wr_11_4;
  results[k++] =
      -0.165257278624484510e-1 * wr_1_0 - 0.550766537046623994e-1 * wr_3_0 -
      0.101532704797298517e0 * wr_5_0 - 0.145605716941558804e0 * wr_7_0 -
      0.173823310147746031e0 * wr_9_0 - 0.160980269641865667e0 * wr_11_0;
  results[k++] =
      0.242760146344946493e0 * wr_5_4 + 0.300255970479275925e0 * wr_7_4 +
      0.236661806264137444e0 * wr_9_4 + 0.668307577595103699e-1 * wr_11_4;
  results[k++] = 0.176023862629955505e0 * wr_5_4 +
                 0.263172931873217789e0 * wr_7_4 +
                 0.329745008862628492e0 * wr_9_4;
  results[k++] =
      -0.275807915296019396e-1 * wr_3_0 + 0.193616370758674651e0 * wr_5_0 -
      0.249369717255905821e0 * wr_7_0 + 0.909917452528009968e-1 * wr_9_0;
  results[k++] =
      0.647415952886118510e-1 * wr_9_8 + 0.455947372468759492e0 * wr_11_8;
  results[k++] = 0.201344755305764605e0 * wr_5_4 +
                 0.109182163961658638e0 * wr_7_4 +
                 0.486342393545941079e0 * wr_11_4;
  results[k++] =
      0.302195371193857666e0 * wr_3_0 - 0.700343092986057283e-1 * wr_5_0 -
      0.269999488509989009e0 * wr_7_0 + 0.394470492628115254e-1 * wr_9_0 +
      0.639099906862241530e-1 * wr_11_0;
  results[k++] =
      -0.295458135646903975e0 * wr_9_8 - 0.449292375296633052e0 * wr_11_8;
  results[k++] =
      -0.260600608979732861e-1 * wr_5_4 + 0.144283317343529472e-1 * wr_7_4 +
      0.204783002944275645e0 * wr_9_4 + 0.442706414166286972e0 * wr_11_4;
  results[k++] =
      0.715585007245433402e0 * wr_1_0 - 0.158992604212253177e0 * wr_3_0 -
      0.186997590883604828e0 * wr_5_0 + 0.504392999230544569e-2 * wr_7_0 -
      0.266949446847919723e0 * wr_9_0 + 0.197149701237469025e0 * wr_11_0;
  results[k++] =
      -0.157261448223780460e0 * wr_9_8 - 0.166602071696925343e0 * wr_11_8;
  results[k++] =
      0.242760146344946493e0 * wr_5_4 + 0.300255970479275925e0 * wr_7_4 +
      0.236661806264137444e0 * wr_9_4 + 0.668307577595103699e-1 * wr_11_4;
  results[k++] =
      0.115680095037139157e0 * wr_1_0 + 0.224896335960704798e0 * wr_3_0 +
      0.473819289054059745e-1 * wr_5_0 - 0.256994090401851289e0 * wr_7_0 -
      0.206656602064542503e0 * wr_9_0 + 0.196753662895613593e0 * wr_11_0;
  results[k++] =
      -0.406257043942375804e-1 * wr_5_4 - 0.104934242185344780e0 * wr_7_4 -
      0.199434640732846772e0 * wr_9_4 + 0.373321435858400104e0 * wr_11_4;
  results[k++] =
      -0.245159538208095432e0 * wr_9_8 + 0.664059153359132953e0 * wr_11_8;
  results[k++] =
      -0.189371524583588819e-1 * wr_3_0 + 0.156397965572437050e0 * wr_5_0 -
      0.270345606810289186e0 * wr_7_0 + 0.178501512594377107e0 * wr_9_0 -
      0.416270660541714359e-1 * wr_11_0;
  results[k++] =
      0.122400768896924368e0 * wr_5_4 + 0.135580873173956235e0 * wr_7_4 -
      0.216956287485690463e-1 * wr_9_4 - 0.422364990172437535e0 * wr_11_4;
  results[k++] =
      0.421687225204429515e0 * wr_9_8 + 0.296976281598395822e0 * wr_11_8;
  results[k++] =
      -0.245622072180080473e0 * wr_3_0 + 0.169045093030404975e0 * wr_5_0 +
      0.264934450596027300e0 * wr_7_0 - 0.312372643033030476e0 * wr_9_0 +
      0.885581238440929045e-1 * wr_11_0;
  results[k++] =
      -0.581963404502081731e-1 * wr_5_4 + 0.947604885620165974e-1 * wr_7_4 +
      0.246708675243249928e0 * wr_9_4 + 0.200816522509129776e0 * wr_11_4;
  results[k++] =
      -0.295074174294763827e0 * wr_9_8 - 0.227859784810215399e0 * wr_11_8;
  results[k++] =
      0.689003102115857474e0 * wr_1_0 - 0.310343606831718031e0 * wr_3_0 -
      0.338292434509707852e0 * wr_5_0 + 0.898931065478983547e-1 * wr_7_0 +
      0.171371884475709125e0 * wr_9_0 - 0.720322490918326880e-1 * wr_11_0;
  results[k++] =
      -0.212976798340109356e0 * wr_5_4 - 0.245203550720520640e0 * wr_7_4 -
      0.146806715955441211e0 * wr_9_4 - 0.146982644224447877e-1 * wr_11_4;
  results[k++] =
      0.560398532763119890e-1 * wr_9_8 + 0.263109816195336121e-1 * wr_11_8;
  results[k++] =
      0.117889402222430698e-1 * wr_5_0 + 0.537980964906407236e-1 * wr_7_0 +
      0.174915750982359559e0 * wr_9_0 + 0.690306796125133602e0 * wr_11_0;
  results[k++] =
      -0.500162374449055157e-2 * wr_5_4 + 0.904899032720330054e-1 * wr_7_4 -
      0.295809376175481061e0 * wr_9_4 + 0.237310788669724067e0 * wr_11_4;
  results[k++] =
      0.298239218414877670e-1 * wr_5_4 - 0.220736263629432486e0 * wr_7_4 +
      0.407046076006266101e0 * wr_9_4 - 0.212257222103835960e0 * wr_11_4;
  results[k++] =
      -0.565238025780053194e-1 * wr_3_0 - 0.116704554038112870e0 * wr_5_0 -
      0.172913631106637547e0 * wr_7_0 - 0.209311576956246695e0 * wr_9_0 -
      0.195248246655696607e0 * wr_11_0;
  results[k++] =
      0.671038241433474759e-1 * wr_5_4 - 0.257525640901004567e0 * wr_7_4 -
      0.101761519001566525e0 * wr_9_4 + 0.424514444207671920e0 * wr_11_4;
  results[k++] =
      0.189832069362259863e0 * wr_5_4 - 0.343563998423752334e0 * wr_7_4 -
      0.977693049967328488e-1 * wr_9_4 + 0.237918499750985096e0 * wr_11_4;
  results[k++] =
      -0.470306465721234937e-1 * wr_3_0 - 0.971040585379785968e-1 * wr_5_0 -
      0.143872837657303095e0 * wr_7_0 - 0.174157759214763281e0 * wr_9_0 -
      0.162456361098820266e0 * wr_11_0;
  results[k++] =
      -0.275509867024137853e0 * wr_5_4 + 0.128038742516190136e0 * wr_7_4 +
      0.284204455711285855e0 * wr_9_4 + 0.152000553870848418e0 * wr_11_4;
  results[k++] =
      0.398443105360367135e0 * wr_5_4 - 0.524267243895219914e-1 * wr_7_4 -
      0.164790129954810134e0 * wr_9_4 - 0.504128805115807295e-1 * wr_11_4;
  results[k++] =
      0.859337848847319453e0 * wr_1_0 + 0.454382393063464796e0 * wr_3_0 +
      0.304598114391895553e0 * wr_5_0 + 0.200207860794643355e0 * wr_7_0 +
      0.115882206765164021e0 * wr_9_0 + 0.475623523941875834e-1 * wr_11_0;
  results[k++] = 0.416160250877051130e0 * wr_5_4 +
                 0.170662208144755617e0 * wr_7_4 -
                 0.526545364165839278e-1 * wr_11_4;
  results[k++] =
      0.336532010932621986e-1 * wr_5_4 + 0.400537501050190043e-1 * wr_7_4 +
      0.115143643512845388e0 * wr_9_4 + 0.646611694461314727e0 * wr_11_4;
  results[k++] =
      -0.302863358021384815e-1 * wr_5_0 + 0.127972048465138587e0 * wr_7_0 -
      0.149788900202685472e0 * wr_9_0 + 0.537403111930940208e-1 * wr_11_0;
  results[k++] =
      0.292153479582724470e0 * wr_9_8 - 0.514378008371303792e0 * wr_11_8;
  results[k++] =
      0.151431679010692407e0 * wr_5_4 + 0.220600660212944766e0 * wr_7_4 +
      0.313149427455613060e0 * wr_9_4 + 0.365778811158495679e0 * wr_11_4;
  results[k++] =
      -0.328001102085554515e-1 * wr_3_0 + 0.135444611285934530e0 * wr_5_0 +
      0.104056072577435456e0 * wr_7_0 - 0.360702637214916488e0 * wr_9_0 +
      0.168233784543651480e0 * wr_11_0;
  results[k++] =
      0.370914407269845822e0 * wr_9_8 + 0.588331434560246654e-1 * wr_11_8;
  results[k++] =
      0.218397873361062170e0 * wr_5_4 + 0.193971795419364427e0 * wr_7_4 +
      0.107696510291616965e0 * wr_9_4 - 0.144926841660463272e-1 * wr_11_4;
  results[k++] =
      0.246630791300031638e0 * wr_3_0 + 0.101843595787864303e0 * wr_5_0 -
      0.241432168234123621e0 * wr_7_0 - 0.227729702452276955e0 * wr_9_0 +
      0.195464079112214256e0 * wr_11_0;
  results[k++] =
      0.185863166624095617e0 * wr_9_8 + 0.872636538979304450e-1 * wr_11_8;
  results[k++] = -0.736155347276672159e-1 * wr_7_4 -
                 0.101710676370862693e0 * wr_9_4 -
                 0.721313988278097782e-1 * wr_11_4;
  results[k++] =
      0.761721589703075318e0 * wr_1_0 - 0.447518826063645846e-1 * wr_3_0 -
      0.317996903520227885e0 * wr_5_0 - 0.198761137105879335e0 * wr_7_0 +
      0.479353455777639768e-1 * wr_9_0 + 0.864483073756409775e-1 * wr_11_0;
  results[k++] =
      0.184176871336735284e0 * wr_11_8 - 0.339975109876292733e0 * wr_9_8;
  results[k++] =
      0.295830676751055466e-2 * wr_11_4 - 0.445802792202984396e-1 * wr_5_4 +
      0.439936965989787235e-1 * wr_7_4 - 0.184377390581030296e-1 * wr_9_4;
  results[k++] =
      0.260465429319855587e0 * wr_11_8 - 0.480797411256336355e0 * wr_9_8;
  results[k++] =
      0.132299500609025330e-1 * wr_11_4 - 0.199369069585017266e0 * wr_5_4 +
      0.196745792353635461e0 * wr_7_4 - 0.824560757706426374e-1 * wr_9_4;
  results[k++] =
      0.216720337130418661e0 * wr_11_8 - 0.400047627552707944e0 * wr_9_8;
  results[k++] =
      0.255802428578102530e-1 * wr_11_4 - 0.385482121613730639e0 * wr_5_4 +
      0.380409988434602604e0 * wr_7_4 - 0.159429660248555152e0 * wr_9_4;
  results[k++] =
      0.105748696407503137e0 * wr_11_8 - 0.195203254455787657e0 * wr_9_8;
  results[k++] =
      0.246146001664879190e-1 * wr_11_4 - 0.370930344469125734e0 * wr_5_4 +
      0.366049682041900395e0 * wr_7_4 - 0.153411262102189824e0 * wr_9_4;
  results[k++] = -0.687644871353589821e-1 * wr_6_0 +
                 0.539653329705763134e-2 * wr_8_0 -
                 0.776155826900753450e0 * wr_2_0 + wr_0_0 +
                 0.320406865861411316e0 * wr_4_0;
  results[k++] = 0.238817177507924139e0 * wr_4_4 -
                 0.343822435676794910e0 * wr_6_4 +
                 0.894913805749985064e-1 * wr_8_4;
  results[k++] = 0.204071745779615323e0 * wr_8_8;
  results[k++] =
      0.518502665572184854e-1 * wr_8_0 - 0.276707550336324140e-2 * wr_10_0 -
      0.227067022882212161e0 * wr_2_0 + 0.361057634569334482e0 * wr_4_0 -
      0.215373278190023420e0 * wr_6_0;
  results[k++] =
      0.932246803805383851e-1 * wr_4_4 - 0.373037460417786531e0 * wr_6_4 +
      0.297857104477637260e0 * wr_8_4 - 0.391519183390909945e-1 * wr_10_4;
  results[k++] =
      0.292289191009257963e0 * wr_8_8 - 0.192942760067496427e0 * wr_10_8;
  results[k++] =
      -0.207641784683240848e0 * wr_6_0 + 0.131220967538980299e0 * wr_8_0 -
      0.156368390034950329e-1 * wr_2_0 - 0.294664309987634390e-1 * wr_10_0 +
      0.125874125874125874e0 * wr_4_0;
  results[k++] =
      0.149686587694966943e-1 * wr_4_4 - 0.165640842357271040e0 * wr_6_4 +
      0.347178046905421208e0 * wr_8_4 - 0.192022280659947197e0 * wr_10_4;
  results[k++] =
      0.172760431497593251e0 * wr_8_8 - 0.479859720542843659e0 * wr_10_8;
  results[k++] =
      0.138522897906069406e-1 * wr_4_0 - 0.700984436808696867e-1 * wr_6_0 +
      0.110220876069598803e0 * wr_8_0 - 0.712195160103871948e-1 * wr_10_0 +
      0.166206345084856732e-1 * wr_12_0;
  results[k++] =
      0.880509339382158491e-3 * wr_4_4 - 0.298900768163496613e-1 * wr_6_4 +
      0.155875857794270746e0 * wr_8_4 - 0.248078474392975261e0 * wr_10_4 +
      0.119853099902182627e0 * wr_12_4;
  results[k++] = 0.437530729352181969e-1 * wr_8_8 -
                 0.349695010101907779e0 * wr_10_8 +
                 0.459239454010675322e0 * wr_12_8;
  results[k++] = 0.128132049264530059e1 * wr_12_12;
  results[k++] = 0.238817177507924139e0 * wr_4_4 -
                 0.343822435676794910e0 * wr_6_4 +
                 0.894913805749985064e-1 * wr_8_4;
  results[k++] = wr_0_0 + 0.517437217933835632e0 * wr_2_0 +
                 0.320406865861411316e0 * wr_4_0 +
                 0.183371965694290619e0 * wr_6_0 +
                 0.755514661588068387e-1 * wr_8_0;
  results[k++] = 0.398028629179873564e0 * wr_4_4 -
                 0.687644871353589821e-1 * wr_6_4 -
                 0.161084485034997312e0 * wr_8_4;
  results[k++] =
      -0.322939765876923963e0 * wr_4_4 + 0.512793519500055764e-1 * wr_6_4 +
      0.334381987819845699e0 * wr_8_4 - 0.678131117770932942e-1 * wr_10_4;
  results[k++] =
      -0.436990689283773681e-1 * wr_2_0 - 0.104228361255787396e0 * wr_4_0 -
      0.165794426852349570e0 * wr_6_0 - 0.209550357480547600e0 * wr_8_0 -
      0.201294045128583117e0 * wr_10_0;
  results[k++] =
      0.361057634569334482e0 * wr_4_4 + 0.270607315653543322e0 * wr_6_4 +
      0.982692552570495928e-1 * wr_8_4 - 0.151634727699372172e0 * wr_10_4;
  results[k++] =
      0.131349447629358276e0 * wr_4_4 + 0.177978672585635012e0 * wr_6_4 +
      0.828972788484196691e-1 * wr_8_4 - 0.342833193487930860e0 * wr_10_4;
  results[k++] =
      -0.374216469237417359e-1 * wr_2_0 - 0.141977864877660891e0 * wr_6_0 -
      0.179448205252003603e0 * wr_8_0 - 0.172377921758464304e0 * wr_10_0 -
      0.892558361082479038e-1 * wr_4_0;
  results[k++] =
      0.114325019771971905e0 * wr_4_4 + 0.154910550669069811e0 * wr_6_4 +
      0.259750151766697438e0 * wr_8_4 + 0.349189141365977335e0 * wr_10_4;
  results[k++] =
      -0.165198195284391717e-1 * wr_4_4 - 0.358837271223499586e-1 * wr_6_4 -
      0.116314955904993249e0 * wr_8_4 - 0.233599745667369343e0 * wr_10_4 +
      0.357738734592202305e0 * wr_12_4;
  results[k++] =
      0.459405038792452447e-2 * wr_4_0 + 0.224175576122622460e-1 * wr_6_0 +
      0.704975092061442728e-1 * wr_8_0 + 0.194861998509568343e0 * wr_10_0 +
      0.701619174331797080e0 * wr_12_0;
  results[k++] =
      0.119221528146354904e-1 * wr_4_4 - 0.722702773730784547e-2 * wr_6_4 -
      0.959349587178961468e-2 * wr_8_4 + 0.636173943602282094e-1 * wr_10_4 +
      0.619621664149092262e0 * wr_12_4;
  results[k++] = 0.139526962198385986e0 * wr_12_8 -
                 0.309881165302557176e0 * wr_10_8 +
                 0.144008993025229737e0 * wr_8_8;
  results[k++] = 0.204071745779615323e0 * wr_8_8;
  results[k++] = 0.398028629179873564e0 * wr_4_4 -
                 0.687644871353589821e-1 * wr_6_4 -
                 0.161084485034997312e0 * wr_8_4;
  results[k++] = 0.252136452829649601e0 * wr_6_0 -
                 0.377757330794034193e-1 * wr_8_0 -
                 0.258718608966917816e0 * wr_2_0 + wr_0_0 -
                 0.391608391608391608e0 * wr_4_0;
  results[k++] =
      -0.435719000123414110e0 * wr_8_8 - 0.258859876366412353e0 * wr_10_8;
  results[k++] =
      -0.186449360761076771e0 * wr_4_4 + 0.290140246991611746e0 * wr_6_4 +
      0.264761870646788677e0 * wr_8_4 - 0.117455755017272984e0 * wr_10_4;
  results[k++] =
      0.200963915833935838e0 * wr_8_0 - 0.185621067731839671e-1 * wr_10_0 +
      0.236944072686125754e0 * wr_2_0 - 0.353165479751234505e0 * wr_6_0;
  results[k++] =
      0.330811040526955365e0 * wr_8_8 + 0.139221425566090748e0 * wr_10_8;
  results[k++] =
      0.349268704621589534e-1 * wr_4_4 - 0.212966797316491337e0 * wr_6_4 -
      0.495968638436316011e-1 * wr_8_4 + 0.374900643193230242e0 * wr_10_4;
  results[k++] =
      0.108437385468348868e0 * wr_6_0 + 0.131655812432889662e0 * wr_10_0 -
      0.244982185225654082e-1 * wr_2_0 - 0.296954299738517282e0 * wr_8_0 +
      0.949514487031079113e-1 * wr_4_0;
  results[k++] = -0.101043393748086223e0 * wr_8_8 +
                 0.168247090180504464e0 * wr_10_8 +
                 0.795426067186680475e0 * wr_12_8;
  results[k++] =
      -0.234802490501908930e-2 * wr_4_4 + 0.523076344286119073e-1 * wr_6_4 -
      0.779379288971353732e-1 * wr_8_4 - 0.268751680592389866e0 * wr_10_4 +
      0.359559299706547882e0 * wr_12_4;
  results[k++] =
      -0.186611208921657843e-1 * wr_4_0 + 0.202356776644619673e-1 * wr_6_0 +
      0.127272104938198499e0 * wr_8_0 - 0.212446134824118196e0 * wr_10_0 +
      0.863633502681892799e-1 * wr_12_0;
  results[k++] =
      -0.666037690188529811e-1 * wr_6_4 + 0.631521210925538889e-1 * wr_8_4 +
      0.235443653167489671e-1 * wr_4_4 - 0.270596926739536064e-1 * wr_10_4 +
      0.448225179986914244e-2 * wr_12_4;
  results[k++] =
      0.518502665572184854e-1 * wr_8_0 - 0.276707550336324140e-2 * wr_10_0 -
      0.227067022882212161e0 * wr_2_0 + 0.361057634569334482e0 * wr_4_0 -
      0.215373278190023420e0 * wr_6_0;
  results[k++] =
      -0.322939765876923963e0 * wr_4_4 + 0.512793519500055764e-1 * wr_6_4 +
      0.334381987819845699e0 * wr_8_4 - 0.678131117770932942e-1 * wr_10_4;
  results[k++] =
      -0.435719000123414110e0 * wr_8_8 - 0.258859876366412353e0 * wr_10_8;
  results[k++] =
      0.835960431841618999e-1 * wr_6_0 + 0.767281538701953448e-1 * wr_8_0 -
      0.345228913064176051e0 * wr_2_0 - 0.336759211414439303e-1 * wr_10_0 +
      wr_0_0 - 0.230496775951321406e0 * wr_4_0;
  results[k++] =
      0.231443378603621861e0 * wr_4_4 - 0.607194749479669245e-1 * wr_6_4 +
      0.122837453659496553e0 * wr_8_4 - 0.264715282920529521e0 * wr_10_4;
  results[k++] =
      -0.191447826379288592e0 * wr_8_8 - 0.260906231344172691e0 * wr_10_8;
  results[k++] =
      0.290942849484768481e0 * wr_6_0 - 0.217277307477867939e0 * wr_8_0 +
      0.517322811498345133e-2 * wr_10_0 - 0.252152522553008933e0 * wr_2_0 +
      0.959533419601277565e-1 * wr_4_0 + 0.198222745112258350e-1 * wr_12_0;
  results[k++] =
      0.136926583469292900e0 * wr_4_4 - 0.335244150090282702e0 * wr_6_4 -
      0.479051434270127727e-1 * wr_8_4 + 0.164640453987970146e-1 * wr_10_4 +
      0.178278068891527618e0 * wr_12_4;
  results[k++] = 0.238382389761510800e0 * wr_8_8 -
                 0.195920523908029598e-2 * wr_10_8 +
                 0.605508392085426558e0 * wr_12_8;
  results[k++] =
      -0.186489700532715831e-1 * wr_2_0 + 0.246553549920449742e0 * wr_10_0 -
      0.657399598649084002e-1 * wr_12_0 + 0.296219989633671561e-1 * wr_6_0 -
      0.279460927110377894e0 * wr_8_0 + 0.953310477561484752e-1 * wr_4_0;
  results[k++] =
      0.200924877916897190e-1 * wr_4_4 - 0.172621791569250748e0 * wr_6_4 +
      0.131739144424285125e0 * wr_8_4 + 0.326592900563891799e0 * wr_10_4 -
      0.295779523388216276e0 * wr_12_4;
  results[k++] = 0.184890478743233822e0 * wr_8_8 -
                 0.289862644382555888e0 * wr_10_8 -
                 0.450228687055734874e0 * wr_12_8;
  results[k++] = 0.649748079618008837e0 * wr_12_12;
  results[k++] =
      0.932246803805383851e-1 * wr_4_4 - 0.373037460417786531e0 * wr_6_4 +
      0.297857104477637260e0 * wr_8_4 - 0.391519183390909945e-1 * wr_10_4;
  results[k++] =
      -0.436990689283773681e-1 * wr_2_0 - 0.104228361255787396e0 * wr_4_0 -
      0.165794426852349570e0 * wr_6_0 - 0.209550357480547600e0 * wr_8_0 -
      0.201294045128583117e0 * wr_10_0;
  results[k++] =
      -0.186449360761076771e0 * wr_4_4 + 0.290140246991611746e0 * wr_6_4 +
      0.264761870646788677e0 * wr_8_4 - 0.117455755017272984e0 * wr_10_4;
  results[k++] =
      0.231443378603621861e0 * wr_4_4 - 0.607194749479669245e-1 * wr_6_4 +
      0.122837453659496553e0 * wr_8_4 - 0.264715282920529521e0 * wr_10_4;
  results[k++] =
      0.539329310865560643e-1 * wr_6_0 - 0.880487011625192479e-1 * wr_8_0 +
      0.483320478289846470e0 * wr_2_0 - 0.157154298660071675e0 * wr_10_0 +
      wr_0_0 + 0.239033693579148125e0 * wr_4_0;
  results[k++] =
      0.310513876499951300e0 * wr_4_4 + 0.104440671955191961e-1 * wr_6_4 +
      0.807861460487101756e-1 * wr_8_4 + 0.355152820376035841e0 * wr_10_4;
  results[k++] =
      -0.346850649062885463e0 * wr_4_4 - 0.103985101052131528e0 * wr_6_4 +
      0.121349190713111477e0 * wr_8_4 + 0.156298172025620175e-1 * wr_10_4 +
      0.246326550962803627e0 * wr_12_4;
  results[k++] =
      -0.387109752404978408e-1 * wr_2_0 - 0.883857295716085313e-1 * wr_4_0 -
      0.127617560636618915e0 * wr_6_0 - 0.125088226139938337e0 * wr_8_0 -
      0.109711060707914256e-1 * wr_10_0 + 0.602544979002991541e0 * wr_12_0;
  results[k++] =
      0.362273687733476786e0 * wr_4_4 + 0.277091926649908744e0 * wr_6_4 +
      0.147869278700215680e0 * wr_8_4 + 0.266692467546698826e-2 * wr_10_4 +
      0.471679434503822598e0 * wr_12_4;
  results[k++] =
      0.108821428309577637e0 * wr_4_4 + 0.162471556216631008e0 * wr_6_4 +
      0.186483628636559402e0 * wr_8_4 + 0.238227004881033479e-1 * wr_10_4 -
      0.397993673190952644e0 * wr_12_4;
  results[k++] =
      -0.321374134072057547e-1 * wr_2_0 - 0.778178706010901200e-1 * wr_4_0 -
      0.127617560636618915e0 * wr_6_0 - 0.171996310942415213e0 * wr_8_0 -
      0.197479909274245660e0 * wr_10_0 - 0.178024652887247500e0 * wr_12_0;
  results[k++] =
      0.942421213922013155e-1 * wr_4_4 + 0.113550996026240765e0 * wr_6_4 +
      0.191927013082774207e0 * wr_8_4 + 0.304308191189320321e0 * wr_10_4 +
      0.374907072891026211e0 * wr_12_4;
  results[k++] = 0.204246558881538173e0 * wr_12_8 -
                 0.453619577736213026e0 * wr_10_8 +
                 0.210807580197849759e0 * wr_8_8;
  results[k++] =
      0.292289191009257963e0 * wr_8_8 - 0.192942760067496427e0 * wr_10_8;
  results[k++] =
      0.361057634569334482e0 * wr_4_4 + 0.270607315653543322e0 * wr_6_4 +
      0.982692552570495928e-1 * wr_8_4 - 0.151634727699372172e0 * wr_10_4;
  results[k++] =
      0.200963915833935838e0 * wr_8_0 - 0.185621067731839671e-1 * wr_10_0 +
      0.236944072686125754e0 * wr_2_0 - 0.353165479751234505e0 * wr_6_0;
  results[k++] =
      -0.191447826379288592e0 * wr_8_8 - 0.260906231344172691e0 * wr_10_8;
  results[k++] =
      0.310513876499951300e0 * wr_4_4 + 0.104440671955191961e-1 * wr_6_4 +
      0.807861460487101756e-1 * wr_8_4 + 0.355152820376035841e0 * wr_10_4;
  results[k++] =
      -0.296631120976058354e-1 * wr_6_0 - 0.149682791976282721e0 * wr_8_0 -
      0.138091565225670420e-1 * wr_2_0 + 0.130961915550059729e0 * wr_10_0 +
      wr_0_0 - 0.281718281718281718e0 * wr_4_0;
  results[k++] = -0.306207723914460723e0 * wr_8_8 -
                 0.163200595472111602e-1 * wr_10_8 +
                 0.707081465879169069e0 * wr_12_8;
  results[k++] =
      -0.214324003994896539e0 * wr_4_4 + 0.189466596694542096e0 * wr_6_4 +
      0.214238314349355589e0 * wr_8_4 + 0.916611512847966649e-2 * wr_10_4 +
      0.398641880938846336e0 * wr_12_4;
  results[k++] =
      -0.188748917612697632e0 * wr_6_0 + 0.229017218004379074e0 * wr_2_0 +
      0.156869108349930936e0 * wr_4_0 + 0.126721118655698825e-1 * wr_10_0 -
      0.190293923769501115e0 * wr_8_0 + 0.848739087782804975e-1 * wr_12_0;
  results[k++] = 0.286431098017944406e0 * wr_8_8 +
                 0.136476976571842102e0 * wr_10_8 +
                 0.601285588604031714e-1 * wr_12_8;
  results[k++] =
      0.359425348314422766e-1 * wr_4_4 - 0.174168051619827517e0 * wr_6_4 -
      0.147288841115181968e0 * wr_8_4 + 0.973711902172921953e-1 * wr_10_4 +
      0.425822009184676768e0 * wr_12_4;
  results[k++] =
      0.505242345723039028e-1 * wr_4_0 - 0.357750440679153161e0 * wr_10_0 +
      0.198029820906659950e0 * wr_12_0 - 0.240757168134138951e-1 * wr_2_0 +
      0.152967344888659150e0 * wr_6_0;
  results[k++] =
      -0.226564726118751559e0 * wr_6_4 + 0.214823323513458305e0 * wr_8_4 +
      0.800904026635357556e-1 * wr_4_4 - 0.920484223317226942e-1 * wr_10_4 +
      0.152471874548898058e-1 * wr_12_4;
  results[k++] =
      -0.207641784683240848e0 * wr_6_0 + 0.131220967538980299e0 * wr_8_0 -
      0.156368390034950329e-1 * wr_2_0 - 0.294664309987634390e-1 * wr_10_0 +
      0.125874125874125874e0 * wr_4_0;
  results[k++] =
      0.131349447629358276e0 * wr_4_4 + 0.177978672585635012e0 * wr_6_4 +
      0.828972788484196691e-1 * wr_8_4 - 0.342833193487930860e0 * wr_10_4;
  results[k++] =
      0.330811040526955365e0 * wr_8_8 + 0.139221425566090748e0 * wr_10_8;
  results[k++] =
      0.290942849484768481e0 * wr_6_0 - 0.217277307477867939e0 * wr_8_0 +
      0.517322811498345133e-2 * wr_10_0 - 0.252152522553008933e0 * wr_2_0 +
      0.959533419601277565e-1 * wr_4_0 + 0.198222745112258350e-1 * wr_12_0;
  results[k++] =
      -0.346850649062885463e0 * wr_4_4 - 0.103985101052131528e0 * wr_6_4 +
      0.121349190713111477e0 * wr_8_4 + 0.156298172025620175e-1 * wr_10_4 +
      0.246326550962803627e0 * wr_12_4;
  results[k++] = -0.306207723914460723e0 * wr_8_8 -
                 0.163200595472111602e-1 * wr_10_8 +
                 0.707081465879169069e0 * wr_12_8;
  results[k++] =
      0.515201420642627666e-2 * wr_6_0 - 0.775721229873291695e-1 * wr_8_0 -
      0.123843764907680660e0 * wr_2_0 + 0.204983867817484793e0 * wr_10_0 +
      wr_0_0 - 0.325791855203619910e0 * wr_4_0 -
      0.767586485395073361e-1 * wr_12_0;
  results[k++] =
      0.290568081996112303e0 * wr_4_4 - 0.534285123092250196e-1 * wr_6_4 +
      0.701441360074218359e-1 * wr_8_4 + 0.139146580188367534e0 * wr_10_4 -
      0.383529919686984408e0 * wr_12_4;
  results[k++] = -0.969573850241594775e-1 * wr_8_8 -
                 0.231816290117315776e0 * wr_10_8 -
                 0.260526251411908917e0 * wr_12_8;
  results[k++] =
      0.102478083626605950e0 * wr_12_0 + 0.269879008171348294e0 * wr_6_0 -
      0.198591830474022329e0 * wr_2_0 + 0.135414219171221387e0 * wr_8_0 -
      0.306335225916473125e0 * wr_10_0 - 0.653036518700041483e-1 * wr_4_0;
  results[k++] =
      0.145284040998056151e0 * wr_4_4 - 0.290431913065530876e0 * wr_6_4 -
      0.218226200911979045e0 * wr_8_4 + 0.874635646898310215e-1 * wr_10_4 +
      0.215735579823928729e0 * wr_12_4;
  results[k++] = 0.343774144491000119e0 * wr_8_8 +
                 0.410966358025746322e-1 * wr_10_8 -
                 0.865994398991559181e-1 * wr_12_8;
  results[k++] = 0.256264098529060119e0 * wr_12_12;
  results[k++] =
      0.149686587694966943e-1 * wr_4_4 - 0.165640842357271040e0 * wr_6_4 +
      0.347178046905421208e0 * wr_8_4 - 0.192022280659947197e0 * wr_10_4;
  results[k++] =
      -0.374216469237417359e-1 * wr_2_0 - 0.141977864877660891e0 * wr_6_0 -
      0.179448205252003603e0 * wr_8_0 - 0.172377921758464304e0 * wr_10_0 -
      0.892558361082479038e-1 * wr_4_0;
  results[k++] =
      0.349268704621589534e-1 * wr_4_4 - 0.212966797316491337e0 * wr_6_4 -
      0.495968638436316011e-1 * wr_8_4 + 0.374900643193230242e0 * wr_10_4;
  results[k++] =
      0.136926583469292900e0 * wr_4_4 - 0.335244150090282702e0 * wr_6_4 -
      0.479051434270127727e-1 * wr_8_4 + 0.164640453987970146e-1 * wr_10_4 +
      0.178278068891527618e0 * wr_12_4;
  results[k++] =
      -0.387109752404978408e-1 * wr_2_0 - 0.883857295716085313e-1 * wr_4_0 -
      0.127617560636618915e0 * wr_6_0 - 0.125088226139938337e0 * wr_8_0 -
      0.109711060707914256e-1 * wr_10_0 + 0.602544979002991541e0 * wr_12_0;
  results[k++] =
      -0.214324003994896539e0 * wr_4_4 + 0.189466596694542096e0 * wr_6_4 +
      0.214238314349355589e0 * wr_8_4 + 0.916611512847966649e-2 * wr_10_4 +
      0.398641880938846336e0 * wr_12_4;
  results[k++] =
      0.290568081996112303e0 * wr_4_4 - 0.534285123092250196e-1 * wr_6_4 +
      0.701441360074218359e-1 * wr_8_4 + 0.139146580188367534e0 * wr_10_4 -
      0.383529919686984408e0 * wr_12_4;
  results[k++] =
      0.936729855713868485e-1 * wr_6_0 - 0.490962803717273227e-1 * wr_8_0 +
      0.495375059630722640e0 * wr_2_0 - 0.153737900863113594e0 * wr_10_0 +
      wr_0_0 + 0.266556972439325381e0 * wr_4_0 -
      0.187632251985462377e0 * wr_12_0;
  results[k++] =
      0.354069874265983655e0 * wr_4_4 + 0.450726724301055782e-1 * wr_6_4 +
      0.149239771697006893e-1 * wr_8_4 + 0.190318154034191578e0 * wr_10_4 +
      0.440642330092716145e0 * wr_12_4;
  results[k++] =
      -0.310630345817568538e0 * wr_4_4 - 0.184533404073373152e0 * wr_6_4 +
      0.152751776240291272e-1 * wr_8_4 + 0.208255531842455181e0 * wr_10_4 +
      0.192192529961467191e0 * wr_12_4;
  results[k++] =
      -0.275208366461512579e-1 * wr_2_0 - 0.666392431098313451e-1 * wr_4_0 -
      0.109285149833284657e0 * wr_6_0 - 0.147288841115181968e0 * wr_8_0 -
      0.169111690949424954e0 * wr_10_0 - 0.152451204738188181e0 * wr_12_0;
  results[k++] =
      0.313849399108419540e0 * wr_4_4 + 0.284107761376639927e0 * wr_6_4 +
      0.247737320469467501e0 * wr_8_4 + 0.152135837079737777e0 * wr_10_4 +
      0.133154890691385957e-1 * wr_12_4;
  results[k++] = 0.174906303481691979e0 * wr_12_8 -
                 0.388456598550501506e0 * wr_10_8 +
                 0.180524826465798776e0 * wr_8_8;
  results[k++] =
      0.172760431497593251e0 * wr_8_8 - 0.479859720542843659e0 * wr_10_8;
  results[k++] =
      0.114325019771971905e0 * wr_4_4 + 0.154910550669069811e0 * wr_6_4 +
      0.259750151766697438e0 * wr_8_4 + 0.349189141365977335e0 * wr_10_4;
  results[k++] =
      0.108437385468348868e0 * wr_6_0 + 0.131655812432889662e0 * wr_10_0 -
      0.244982185225654082e-1 * wr_2_0 - 0.296954299738517282e0 * wr_8_0 +
      0.949514487031079113e-1 * wr_4_0;
  results[k++] = 0.238382389761510800e0 * wr_8_8 -
                 0.195920523908029598e-2 * wr_10_8 +
                 0.605508392085426558e0 * wr_12_8;
  results[k++] =
      0.362273687733476786e0 * wr_4_4 + 0.277091926649908744e0 * wr_6_4 +
      0.147869278700215680e0 * wr_8_4 + 0.266692467546698826e-2 * wr_10_4 +
      0.471679434503822598e0 * wr_12_4;
  results[k++] =
      -0.188748917612697632e0 * wr_6_0 + 0.229017218004379074e0 * wr_2_0 +
      0.156869108349930936e0 * wr_4_0 + 0.126721118655698825e-1 * wr_10_0 -
      0.190293923769501115e0 * wr_8_0 + 0.848739087782804975e-1 * wr_12_0;
  results[k++] = -0.969573850241594775e-1 * wr_8_8 -
                 0.231816290117315776e0 * wr_10_8 -
                 0.260526251411908917e0 * wr_12_8;
  results[k++] =
      0.354069874265983655e0 * wr_4_4 + 0.450726724301055782e-1 * wr_6_4 +
      0.149239771697006893e-1 * wr_8_4 + 0.190318154034191578e0 * wr_10_4 +
      0.440642330092716145e0 * wr_12_4;
  results[k++] =
      -0.106318838623524073e0 * wr_6_0 - 0.687347925204182516e-2 * wr_8_0 +
      0.123843764907680660e0 * wr_2_0 - 0.279005820084909857e0 * wr_10_0 +
      wr_0_0 - 0.227067050596462361e0 * wr_4_0 +
      0.218904293983039440e0 * wr_12_0;
  results[k++] = -0.414607218146207348e0 * wr_8_8 -
                 0.284995344124509555e0 * wr_10_8 -
                 0.200182137321513942e0 * wr_12_8;
  results[k++] =
      -0.202325642437704946e0 * wr_4_4 + 0.131640821065705181e0 * wr_6_4 +
      0.268631589054612408e0 * wr_8_4 + 0.243607237163765220e0 * wr_10_4 +
      0.826204368923842771e-1 * wr_12_4;
  results[k++] =
      -0.271238608756854932e-1 * wr_6_0 + 0.170762300621681329e0 * wr_2_0 -
      0.271559815419004646e0 * wr_8_0 - 0.157976993734598647e0 * wr_10_0 +
      0.199085673465093956e0 * wr_4_0 + 0.192462934618474812e0 * wr_12_0;
  results[k++] =
      -0.382609523624349643e0 * wr_6_4 + 0.362781315877931428e0 * wr_8_4 +
      0.135252081535041617e0 * wr_4_4 - 0.155446099761592634e0 * wr_10_4 +
      0.257485762619061233e-1 * wr_12_4;
  results[k++] =
      0.138522897906069406e-1 * wr_4_0 - 0.700984436808696867e-1 * wr_6_0 +
      0.110220876069598803e0 * wr_8_0 - 0.712195160103871948e-1 * wr_10_0 +
      0.166206345084856732e-1 * wr_12_0;
  results[k++] =
      -0.165198195284391717e-1 * wr_4_4 - 0.358837271223499586e-1 * wr_6_4 -
      0.116314955904993249e0 * wr_8_4 - 0.233599745667369343e0 * wr_10_4 +
      0.357738734592202305e0 * wr_12_4;
  results[k++] = -0.101043393748086223e0 * wr_8_8 +
                 0.168247090180504464e0 * wr_10_8 +
                 0.795426067186680475e0 * wr_12_8;
  results[k++] =
      -0.186489700532715831e-1 * wr_2_0 + 0.246553549920449742e0 * wr_10_0 -
      0.657399598649084002e-1 * wr_12_0 + 0.296219989633671561e-1 * wr_6_0 -
      0.279460927110377894e0 * wr_8_0 + 0.953310477561484752e-1 * wr_4_0;
  results[k++] =
      0.108821428309577637e0 * wr_4_4 + 0.162471556216631008e0 * wr_6_4 +
      0.186483628636559402e0 * wr_8_4 + 0.238227004881033479e-1 * wr_10_4 -
      0.397993673190952644e0 * wr_12_4;
  results[k++] = 0.286431098017944406e0 * wr_8_8 +
                 0.136476976571842102e0 * wr_10_8 +
                 0.601285588604031714e-1 * wr_12_8;
  results[k++] =
      0.102478083626605950e0 * wr_12_0 + 0.269879008171348294e0 * wr_6_0 -
      0.198591830474022329e0 * wr_2_0 + 0.135414219171221387e0 * wr_8_0 -
      0.306335225916473125e0 * wr_10_0 - 0.653036518700041483e-1 * wr_4_0;
  results[k++] =
      -0.310630345817568538e0 * wr_4_4 - 0.184533404073373152e0 * wr_6_4 +
      0.152751776240291272e-1 * wr_8_4 + 0.208255531842455181e0 * wr_10_4 +
      0.192192529961467191e0 * wr_12_4;
  results[k++] = -0.414607218146207348e0 * wr_8_8 -
                 0.284995344124509555e0 * wr_10_8 -
                 0.200182137321513942e0 * wr_12_8;
  results[k++] =
      -0.202645892119433549e0 * wr_6_0 + 0.146306915507747421e0 * wr_8_0 +
      0.255550625999975966e-1 * wr_2_0 + 0.128480960007030647e0 * wr_10_0 +
      wr_0_0 - 0.389786683904330963e0 * wr_4_0 -
      0.698290483241351460e-1 * wr_12_0;
  results[k++] =
      0.427116725499156740e0 * wr_4_4 - 0.483301772573120159e-1 * wr_6_4 -
      0.190245394044726403e0 * wr_8_4 - 0.138128669079179457e0 * wr_10_4 -
      0.192192529961467191e-1 * wr_12_4;
  results[k++] = 0.321571266779160714e0 * wr_8_8 +
                 0.142785992999243098e0 * wr_10_8 +
                 0.540042389981937878e-1 * wr_12_8;
  results[k++] = 0.684894612304444943e-1 * wr_12_12;
  results[k++] =
      0.880509339382158491e-3 * wr_4_4 - 0.298900768163496613e-1 * wr_6_4 +
      0.155875857794270746e0 * wr_8_4 - 0.248078474392975261e0 * wr_10_4 +
      0.119853099902182627e0 * wr_12_4;
  results[k++] =
      0.459405038792452447e-2 * wr_4_0 + 0.224175576122622460e-1 * wr_6_0 +
      0.704975092061442728e-1 * wr_8_0 + 0.194861998509568343e0 * wr_10_0 +
      0.701619174331797080e0 * wr_12_0;
  results[k++] =
      -0.234802490501908930e-2 * wr_4_4 + 0.523076344286119073e-1 * wr_6_4 -
      0.779379288971353732e-1 * wr_8_4 - 0.268751680592389866e0 * wr_10_4 +
      0.359559299706547882e0 * wr_12_4;
  results[k++] =
      0.200924877916897190e-1 * wr_4_4 - 0.172621791569250748e0 * wr_6_4 +
      0.131739144424285125e0 * wr_8_4 + 0.326592900563891799e0 * wr_10_4 -
      0.295779523388216276e0 * wr_12_4;
  results[k++] =
      -0.321374134072057547e-1 * wr_2_0 - 0.778178706010901200e-1 * wr_4_0 -
      0.127617560636618915e0 * wr_6_0 - 0.171996310942415213e0 * wr_8_0 -
      0.197479909274245660e0 * wr_10_0 - 0.178024652887247500e0 * wr_12_0;
  results[k++] =
      0.359425348314422766e-1 * wr_4_4 - 0.174168051619827517e0 * wr_6_4 -
      0.147288841115181968e0 * wr_8_4 + 0.973711902172921953e-1 * wr_10_4 +
      0.425822009184676768e0 * wr_12_4;
  results[k++] =
      0.145284040998056151e0 * wr_4_4 - 0.290431913065530876e0 * wr_6_4 -
      0.218226200911979045e0 * wr_8_4 + 0.874635646898310215e-1 * wr_10_4 +
      0.215735579823928729e0 * wr_12_4;
  results[k++] =
      -0.275208366461512579e-1 * wr_2_0 - 0.666392431098313451e-1 * wr_4_0 -
      0.109285149833284657e0 * wr_6_0 - 0.147288841115181968e0 * wr_8_0 -
      0.169111690949424954e0 * wr_10_0 - 0.152451204738188181e0 * wr_12_0;
  results[k++] =
      -0.202325642437704946e0 * wr_4_4 + 0.131640821065705181e0 * wr_6_4 +
      0.268631589054612408e0 * wr_8_4 + 0.243607237163765220e0 * wr_10_4 +
      0.826204368923842771e-1 * wr_12_4;
  results[k++] =
      0.427116725499156740e0 * wr_4_4 - 0.483301772573120159e-1 * wr_6_4 -
      0.190245394044726403e0 * wr_8_4 - 0.138128669079179457e0 * wr_10_4 -
      0.192192529961467191e-1 * wr_12_4;
  results[k++] =
      0.257600710321313834e0 * wr_6_0 + 0.171836981301045629e0 * wr_8_0 +
      0.536656314599949528e0 * wr_2_0 + 0.999296355610238366e-1 * wr_10_0 +
      wr_0_0 + 0.366515837104072398e0 * wr_4_0 +
      0.410445551218198950e-1 * wr_12_0;
  results[k++] =
      0.493191912884659276e0 * wr_4_4 + 0.167420645096948528e0 * wr_6_4 +
      0.962086681434825244e-2 * wr_8_4 - 0.637988994205351970e-1 * wr_10_4 -
      0.599197008111236805e-1 * wr_12_4;
  results[k++] = 0.874531517408459892e-1 * wr_12_8 -
                 0.194228299275250753e0 * wr_10_8 +
                 0.902624132328993884e-1 * wr_8_8;
  results[k++] = 0.437530729352181969e-1 * wr_8_8 -
                 0.349695010101907779e0 * wr_10_8 +
                 0.459239454010675322e0 * wr_12_8;
  results[k++] =
      0.119221528146354904e-1 * wr_4_4 - 0.722702773730784547e-2 * wr_6_4 -
      0.959349587178961468e-2 * wr_8_4 + 0.636173943602282094e-1 * wr_10_4 +
      0.619621664149092262e0 * wr_12_4;
  results[k++] =
      -0.186611208921657843e-1 * wr_4_0 + 0.202356776644619673e-1 * wr_6_0 +
      0.127272104938198499e0 * wr_8_0 - 0.212446134824118196e0 * wr_10_0 +
      0.863633502681892799e-1 * wr_12_0;
  results[k++] = 0.184890478743233822e0 * wr_8_8 -
                 0.289862644382555888e0 * wr_10_8 -
                 0.450228687055734874e0 * wr_12_8;
  results[k++] =
      0.942421213922013155e-1 * wr_4_4 + 0.113550996026240765e0 * wr_6_4 +
      0.191927013082774207e0 * wr_8_4 + 0.304308191189320321e0 * wr_10_4 +
      0.374907072891026211e0 * wr_12_4;
  results[k++] =
      0.505242345723039028e-1 * wr_4_0 - 0.357750440679153161e0 * wr_10_0 +
      0.198029820906659950e0 * wr_12_0 - 0.240757168134138951e-1 * wr_2_0 +
      0.152967344888659150e0 * wr_6_0;
  results[k++] = 0.343774144491000119e0 * wr_8_8 +
                 0.410966358025746322e-1 * wr_10_8 -
                 0.865994398991559181e-1 * wr_12_8;
  results[k++] =
      0.313849399108419540e0 * wr_4_4 + 0.284107761376639927e0 * wr_6_4 +
      0.247737320469467501e0 * wr_8_4 + 0.152135837079737777e0 * wr_10_4 +
      0.133154890691385957e-1 * wr_12_4;
  results[k++] =
      -0.271238608756854932e-1 * wr_6_0 + 0.170762300621681329e0 * wr_2_0 -
      0.271559815419004646e0 * wr_8_0 - 0.157976993734598647e0 * wr_10_0 +
      0.199085673465093956e0 * wr_4_0 + 0.192462934618474812e0 * wr_12_0;
  results[k++] = 0.321571266779160714e0 * wr_8_8 +
                 0.142785992999243098e0 * wr_10_8 +
                 0.540042389981937878e-1 * wr_12_8;
  results[k++] =
      0.493191912884659276e0 * wr_4_4 + 0.167420645096948528e0 * wr_6_4 +
      0.962086681434825244e-2 * wr_8_4 - 0.637988994205351970e-1 * wr_10_4 -
      0.599197008111236805e-1 * wr_12_4;
  results[k++] =
      -0.298816823972724047e0 * wr_6_0 - 0.130596105788794678e0 * wr_8_0 +
      0.229995563399978369e0 * wr_2_0 + 0.703208546540538109e-1 * wr_10_0 +
      wr_0_0 - 0.195862960568842922e0 * wr_4_0 +
      0.733826894602234486e-1 * wr_12_0;
  results[k++] =
      -0.339147094430443415e0 * wr_6_4 + 0.321571266779160713e0 * wr_8_4 +
      0.119888156556486609e0 * wr_4_4 - 0.137788240541678692e0 * wr_10_4 +
      0.228236734470830129e-1 * wr_12_4;
  results[k++] = 0.128132049264530059e1 * wr_12_12;
  results[k++] = 0.139526962198385986e0 * wr_12_8 -
                 0.309881165302557176e0 * wr_10_8 +
                 0.144008993025229737e0 * wr_8_8;
  results[k++] =
      -0.666037690188529811e-1 * wr_6_4 + 0.631521210925538889e-1 * wr_8_4 +
      0.235443653167489671e-1 * wr_4_4 - 0.270596926739536064e-1 * wr_10_4 +
      0.448225179986914244e-2 * wr_12_4;
  results[k++] = 0.649748079618008837e0 * wr_12_12;
  results[k++] = 0.204246558881538173e0 * wr_12_8 -
                 0.453619577736213026e0 * wr_10_8 +
                 0.210807580197849759e0 * wr_8_8;
  results[k++] =
      -0.226564726118751559e0 * wr_6_4 + 0.214823323513458305e0 * wr_8_4 +
      0.800904026635357556e-1 * wr_4_4 - 0.920484223317226942e-1 * wr_10_4 +
      0.152471874548898058e-1 * wr_12_4;
  results[k++] = 0.256264098529060119e0 * wr_12_12;
  results[k++] = 0.174906303481691979e0 * wr_12_8 -
                 0.388456598550501506e0 * wr_10_8 +
                 0.180524826465798776e0 * wr_8_8;
  results[k++] =
      -0.382609523624349643e0 * wr_6_4 + 0.362781315877931428e0 * wr_8_4 +
      0.135252081535041617e0 * wr_4_4 - 0.155446099761592634e0 * wr_10_4 +
      0.257485762619061233e-1 * wr_12_4;
  results[k++] = 0.684894612304444943e-1 * wr_12_12;
  results[k++] = 0.874531517408459892e-1 * wr_12_8 -
                 0.194228299275250753e0 * wr_10_8 +
                 0.902624132328993884e-1 * wr_8_8;
  results[k++] =
      -0.339147094430443415e0 * wr_6_4 + 0.321571266779160713e0 * wr_8_4 +
      0.119888156556486609e0 * wr_4_4 - 0.137788240541678692e0 * wr_10_4 +
      0.228236734470830129e-1 * wr_12_4;
  results[k++] =
      wr_0_0 - 0.894427190999915880e0 * wr_2_0 +
      0.529411764705882353e0 * wr_4_0 - 0.223253948945138656e0 * wr_6_0 +
      0.638251644832455195e-1 * wr_8_0 - 0.111032928401137596e-1 * wr_10_0 +
      0.888410284022075649e-3 * wr_12_0;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 3)
void BoxMatrix::setup___oa_3_G2(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 0)
  if (lmax >= 0) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 3, 0, 1));
  }
#endif
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 3, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 5, 1, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 3, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 3, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 5, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 1, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 5, 1, 2));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 5, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 5, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 7, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 3, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 5, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 5, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 5, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 5, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 2, 2));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 3, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 5, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 5, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 3, 2));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 5, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 5, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 7, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 7, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 4, 3));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 7, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 7, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 9, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 9, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 11, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 11, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 11, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 13, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 13, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 13, 5, 4));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 0, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 1, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 1, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 2, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 2, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 2, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(3, 3, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 3, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 3, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 3, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(5, 4, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 4, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 4, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 4, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(7, 5, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 5, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 5, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 5, 4, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 9, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 9, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 11, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 11, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 11, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 13, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 13, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 13, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 13, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 15, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 15, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 15, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(9, 6, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(11, 6, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(13, 6, 4, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 1, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 2, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 3, 15, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(15, 6, 4, 15, 6, 4));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 3)
void BoxMatrix::evaluate___oa_3_G2(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 0)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 1)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = 0.774596669241483378e0 * wr_1_0;
  results[k++] = 0.632455532033675868e0 * wr_1_0;
  results[k++] = wr_0_0 + 0.357770876399966352e0 * wr_2_0;
  results[k++] = 0.657267069006199338e0 * wr_2_0;
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0;
  results[k++] = 0.657267069006199338e0 * wr_2_0;
  results[k++] = wr_0_0 + 0.894427190999915880e-1 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] = 0.447213595499957940e0 * wr_2_0;
  results[k++] = 0.717137165600636184e0 * wr_2_0;
  results[k++] = 0.534522483824848769e0 * wr_2_0;
  results[k++] =
      0.619677335393186701e0 * wr_1_0 + 0.101418510567421990e0 * wr_3_0;
  results[k++] =
      -0.126491106406735174e0 * wr_1_0 + 0.496847202726495038e0 * wr_3_0;
  results[k++] =
      0.331970001103492875e0 * wr_3_0 - 0.507092552837109947e0 * wr_1_0;
  results[k++] =
      0.579655069847577544e0 * wr_1_0 + 0.433683793394520596e0 * wr_3_0;
  results[k++] =
      0.304255531702265968e0 * wr_1_0 + 0.464758001544890026e0 * wr_3_0;
  results[k++] =
      -0.383325938999963950e0 * wr_3_0 + 0.585540043769119909e0 * wr_1_0;
  results[k++] = 0.606091526731326449e0 * wr_3_0;
  results[k++] = 0.755928946018454454e0 * wr_1_0;
  results[k++] = wr_0_0;
  results[k++] = 0.571428571428571429e0 * wr_4_4;
  results[k++] =
      0.512240832571882989e0 * wr_2_0 + 0.152720709664242506e0 * wr_4_0;
  results[k++] = 0.494871659305393511e0 * wr_4_4;
  results[k++] =
      -0.152720709664242506e0 * wr_2_0 + 0.512240832571882989e0 * wr_4_0;
  results[k++] = 0.571428571428571429e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.228170201785692826e0 * wr_2_0 -
                 0.163265306122448980e0 * wr_4_0;
  results[k++] = -0.610882838656970024e0 * wr_4_4;
  results[k++] =
      -0.474242858719275538e0 * wr_2_0 + 0.353479756646709650e0 * wr_4_0;
  results[k++] = 0.341493888381255327e0 * wr_4_4;
  results[k++] =
      0.512240832571882989e0 * wr_2_0 + 0.152720709664242506e0 * wr_4_0;
  results[k++] = -0.610882838656970024e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.456340403571385652e-1 * wr_2_0 +
                 0.489795918367346939e0 * wr_4_0;
  results[k++] = -0.529040057012886549e0 * wr_4_4;
  results[k++] =
      0.367346938775510204e0 * wr_2_0 + 0.365072322857108523e0 * wr_4_0;
  results[k++] = 0.494871659305393511e0 * wr_4_4;
  results[k++] =
      -0.474242858719275538e0 * wr_2_0 + 0.353479756646709650e0 * wr_4_0;
  results[k++] = -0.529040057012886549e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.912680807142771306e-1 * wr_2_0 -
                 0.265306122448979592e0 * wr_4_0;
  results[k++] = 0.295742382575294665e0 * wr_4_4;
  results[k++] =
      -0.152720709664242506e0 * wr_2_0 + 0.512240832571882989e0 * wr_4_0;
  results[k++] = 0.341493888381255327e0 * wr_4_4;
  results[k++] =
      0.367346938775510204e0 * wr_2_0 + 0.365072322857108523e0 * wr_4_0;
  results[k++] = 0.295742382575294665e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.273804242142831393e0 * wr_2_0 -
                 0.612244897959183673e-1 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = 0.169030850945703315e0 * wr_3_0;
  results[k++] = 0.507092552837109946e0 * wr_3_0;
  results[k++] = 0.690065559342354218e0 * wr_3_0;
  results[k++] = 0.487950036474266590e0 * wr_3_0;
  results[k++] = 0.268328157299974764e0 * wr_2_0;
  results[k++] = 0.872871560943969523e0 * wr_4_4;
  results[k++] =
      -0.938952955723141914e-1 * wr_2_0 + 0.233284737407921724e0 * wr_4_0;
  results[k++] = 0.534522483824848769e0 * wr_4_4;
  results[k++] =
      0.234738238930785478e0 * wr_2_0 - 0.174963553055941293e0 * wr_4_0;
  results[k++] = -0.654653670707977142e0 * wr_4_4;
  results[k++] =
      0.613321502399942318e0 * wr_2_0 + 0.142857142857142857e0 * wr_4_0;
  results[k++] = -0.654653670707977142e0 * wr_4_4;
  results[k++] =
      -0.469476477861570956e-1 * wr_2_0 + 0.524890659167823879e0 * wr_4_0;
  results[k++] = 0.450748935855208842e0 * wr_4_4;
  results[k++] =
      -0.494871659305393511e0 * wr_2_0 + 0.368855556781658750e0 * wr_4_0;
  results[k++] = -0.552052447473883375e0 * wr_4_4;
  results[k++] =
      0.469476477861570956e0 * wr_2_0 + 0.466569474815843447e0 * wr_4_0;
  results[k++] = 0.356348322549899180e0 * wr_4_4;
  results[k++] =
      0.383325938999963950e0 * wr_2_0 + 0.380952380952380952e0 * wr_4_0;
  results[k++] = 0.210818510677891956e0 * wr_4_4;
  results[k++] =
      0.462910049886275731e0 * wr_2_0 - 0.345032779671177109e0 * wr_4_0;
  results[k++] = -0.258198889747161125e0 * wr_4_4;
  results[k++] = 0.577350269189625763e0 * wr_4_0;
  results[k++] = -0.125988157669742409e0 * wr_4_4;
  results[k++] =
      0.677630927178938431e0 * wr_2_0 - 0.336717514850736916e-1 * wr_4_0;
  results[k++] =
      0.464758001544890026e0 * wr_1_0 - 0.135224680756562652e0 * wr_3_0;
  results[k++] =
      -0.828078671210825063e-1 * wr_1_0 + 0.325262845045890446e0 * wr_3_0;
  results[k++] = 0.778498944161522970e0 * wr_5_4;
  results[k++] =
      0.268607654675126766e0 * wr_5_0 - 0.134687005940294767e0 * wr_3_0;
  results[k++] = -0.473187812120471464e0 * wr_1_0 +
                 0.255993905823154518e0 * wr_3_0 +
                 0.429017839378837602e-1 * wr_5_0;
  results[k++] = 0.481571330330887205e0 * wr_5_4;
  results[k++] = -0.512240832571882989e-1 * wr_1_0 +
                 0.312984318574380637e0 * wr_3_0 -
                 0.222924208547271165e0 * wr_5_0;
  results[k++] = -0.646095738380922048e0 * wr_5_4;
  results[k++] =
      0.619677335393186701e0 * wr_1_0 + 0.101418510567421990e0 * wr_3_0;
  results[k++] = 0.481571330330887205e0 * wr_5_4;
  results[k++] = 0.283912687272282879e0 * wr_1_0 +
                 0.358391468152416324e0 * wr_3_0 +
                 0.214508919689418800e0 * wr_5_0;
  results[k++] = -0.166821202320326350e0 * wr_5_4;
  results[k++] =
      -0.661300071266108185e-1 * wr_1_0 + 0.518029048302030192e0 * wr_5_0;
  results[k++] = 0.531816023478310428e0 * wr_5_4;
  results[k++] = 0.561131717749694695e0 * wr_1_0 -
                 0.952380952380952381e-1 * wr_3_0 -
                 0.217067764685024665e0 * wr_5_0;
  results[k++] = -0.162438641032846045e0 * wr_5_4;
  results[k++] = -0.269974623578019447e0 * wr_1_0 -
                 0.274928699614107506e0 * wr_3_0 +
                 0.360306880573206826e0 * wr_5_0;
  results[k++] = -0.227014902201331504e0 * wr_5_4;
  results[k++] =
      0.460043706228236146e0 * wr_3_0 + 0.183493960854393434e0 * wr_5_0;
  results[k++] = -0.629122151500777489e0 * wr_5_4;
  results[k++] =
      0.724417932624442783e0 * wr_1_0 + 0.504419902574142588e0 * wr_5_0;
  results[k++] = -0.227014902201331504e0 * wr_5_4;
  results[k++] = 0.161984774146811669e0 * wr_1_0 +
                 0.384900179459750509e0 * wr_3_0 +
                 0.266313781293239827e0 * wr_5_0;
  results[k++] = 0.568535243614961158e0 * wr_5_4;
  results[k++] =
      -0.445435403187373976e0 * wr_3_0 + 0.355334527259350724e0 * wr_5_0;
  results[k++] = -0.417855447018672479e0 * wr_5_4;
  results[k++] = 0.707106781186547525e0 * wr_1_0 -
                 0.205737799949455880e0 * wr_3_0 -
                 0.205152484965554554e0 * wr_5_0;
  results[k++] = 0.849411985729375908e-1 * wr_5_4;
  results[k++] =
      -0.162650012158088863e0 * wr_3_0 + 0.518999296107681979e0 * wr_5_0;
  results[k++] = 0.389249472080761484e0 * wr_5_4;
  results[k++] =
      0.391230398217975796e0 * wr_3_0 + 0.312093891966179631e0 * wr_5_0;
  results[k++] = 0.224733287487747362e0 * wr_5_4;
  results[k++] = 0.801783725737273156e0 * wr_1_0 +
                 0.155523158271947816e0 * wr_3_0 -
                 0.775403508665392387e-1 * wr_5_0;
  results[k++] = wr_0_0 - 0.357770876399966352e0 * wr_2_0;
  results[k++] = -0.534522483824848769e0 * wr_4_4;
  results[k++] =
      0.459991126799956738e0 * wr_2_0 - 0.142857142857142857e0 * wr_4_0;
  results[k++] = 0.338061701891406632e0 * wr_4_4;
  results[k++] =
      -0.104328106191460212e0 * wr_2_0 + 0.349927106111882585e0 * wr_4_0;
  results[k++] =
      -0.574959574576068970e-1 * wr_4_4 + 0.713149582320669206e0 * wr_6_4;
  results[k++] =
      -0.157459164324443390e0 * wr_4_0 + 0.291142097827431151e0 * wr_6_0;
  results[k++] = -0.534522483824848769e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.351382110749966953e0 * wr_2_0 -
                 0.714285714285714286e-1 * wr_4_0;
  results[k++] = -0.267261241912424385e0 * wr_4_4;
  results[k++] = -0.437732769305957992e0 * wr_2_0 +
                 0.246411246246886702e0 * wr_4_0 +
                 0.664437893414416073e-1 * wr_6_0;
  results[k++] =
      0.238055880257446234e0 * wr_4_4 + 0.430604969741519019e0 * wr_6_4;
  results[k++] = -0.629940788348712045e-1 * wr_2_0 +
                 0.345744922388938601e0 * wr_4_0 -
                 0.248609895194656664e0 * wr_6_0;
  results[k++] =
      0.126248195423529745e0 * wr_4_4 - 0.608967388233712415e0 * wr_6_4;
  results[k++] =
      0.459991126799956738e0 * wr_2_0 - 0.142857142857142857e0 * wr_4_0;
  results[k++] = -0.267261241912424385e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.702764221499933906e-1 * wr_2_0 +
                 0.214285714285714286e0 * wr_4_0;
  results[k++] =
      -0.368794583881534507e0 * wr_4_4 + 0.555908625534350611e0 * wr_6_4;
  results[k++] = 0.339066345122245690e0 * wr_2_0 +
                 0.254492440808641880e0 * wr_4_0 +
                 0.257335689578317216e0 * wr_6_0;
  results[k++] =
      0.258731808559231037e0 * wr_4_4 + 0.594291318600557672e-1 * wr_6_4;
  results[k++] = -0.922138891954146875e-1 * wr_2_0 +
                 0.337412494980950121e-1 * wr_4_0 +
                 0.509498671198004514e0 * wr_6_0;
  results[k++] = 0.338061701891406632e0 * wr_4_4;
  results[k++] = -0.437732769305957992e0 * wr_2_0 +
                 0.246411246246886702e0 * wr_4_0 +
                 0.664437893414416073e-1 * wr_6_0;
  results[k++] =
      -0.368794583881534507e0 * wr_4_4 + 0.555908625534350611e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.709862849999933237e-1 * wr_2_0 +
                 0.562770562770562771e-1 * wr_4_0 -
                 0.280151614255166223e0 * wr_6_0;
  results[k++] =
      -0.627332326674867471e-1 * wr_4_4 - 0.363117993645623080e0 * wr_6_4;
  results[k++] = -0.332007947037331567e0 * wr_2_0 -
                 0.161976510249954173e0 * wr_4_0 +
                 0.340675190990708118e0 * wr_6_0;
  results[k++] =
      0.354872753799466611e0 * wr_4_4 - 0.641907989194184382e-1 * wr_6_4;
  results[k++] =
      -0.104328106191460212e0 * wr_2_0 + 0.349927106111882585e0 * wr_4_0;
  results[k++] =
      0.238055880257446234e0 * wr_4_4 + 0.430604969741519019e0 * wr_6_4;
  results[k++] = 0.339066345122245690e0 * wr_2_0 +
                 0.254492440808641880e0 * wr_4_0 +
                 0.257335689578317216e0 * wr_6_0;
  results[k++] =
      -0.627332326674867471e-1 * wr_4_4 - 0.363117993645623080e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.212958854999979971e0 * wr_2_0 +
                 0.129870129870129870e-1 * wr_4_0 +
                 0.504272905659299201e0 * wr_6_0;
  results[k++] =
      -0.469452526813020227e0 * wr_4_4 - 0.315403939313050413e0 * wr_6_4;
  results[k++] = 0.225876975726312810e0 * wr_2_0 +
                 0.367328198018985727e0 * wr_4_0 +
                 0.208001961510195185e0 * wr_6_0;
  results[k++] =
      -0.574959574576068970e-1 * wr_4_4 + 0.713149582320669206e0 * wr_6_4;
  results[k++] = -0.629940788348712045e-1 * wr_2_0 +
                 0.345744922388938601e0 * wr_4_0 -
                 0.248609895194656664e0 * wr_6_0;
  results[k++] =
      0.258731808559231037e0 * wr_4_4 + 0.594291318600557672e-1 * wr_6_4;
  results[k++] = -0.332007947037331567e0 * wr_2_0 -
                 0.161976510249954173e0 * wr_4_0 +
                 0.340675190990708118e0 * wr_6_0;
  results[k++] =
      -0.469452526813020227e0 * wr_4_4 - 0.315403939313050413e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.124225998749988317e0 * wr_2_0 -
                 0.257575757575757576e0 * wr_4_0 -
                 0.140075807127583111e0 * wr_6_0;
  results[k++] =
      0.414941331443307663e0 * wr_4_4 + 0.137245701108435848e0 * wr_6_4;
  results[k++] =
      -0.157459164324443390e0 * wr_4_0 + 0.291142097827431151e0 * wr_6_0;
  results[k++] =
      0.126248195423529745e0 * wr_4_4 - 0.608967388233712415e0 * wr_6_4;
  results[k++] = -0.922138891954146875e-1 * wr_2_0 +
                 0.337412494980950121e-1 * wr_4_0 +
                 0.509498671198004514e0 * wr_6_0;
  results[k++] =
      0.354872753799466611e0 * wr_4_4 - 0.641907989194184382e-1 * wr_6_4;
  results[k++] = 0.225876975726312810e0 * wr_2_0 +
                 0.367328198018985727e0 * wr_4_0 +
                 0.208001961510195185e0 * wr_6_0;
  results[k++] =
      0.414941331443307663e0 * wr_4_4 + 0.137245701108435848e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.372677996249964951e0 * wr_2_0 +
                 0.454545454545454545e-1 * wr_4_0 -
                 0.840454842765498668e-1 * wr_6_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] = 0.816496580927726033e0 * wr_4_4;
  results[k++] = 0.218217890235992381e0 * wr_4_0;
  results[k++] = 0.516397779494322249e0 * wr_4_4;
  results[k++] = 0.534522483824848769e0 * wr_4_0;
  results[k++] = 0.246182981958665465e0 * wr_4_4;
  results[k++] = 0.674199862463242087e0 * wr_4_0;
  results[k++] = 0.778498944161522970e-1 * wr_4_4;
  results[k++] = 0.460566186471838290e0 * wr_4_0;
  results[k++] = wr_4_4;
  results[k++] =
      0.600624975130372640e-1 * wr_5_0 - 0.752923252421042699e-1 * wr_3_0;
  results[k++] = 0.674199862463242087e0 * wr_5_4;
  results[k++] = 0.331970001103492875e0 * wr_3_0;
  results[k++] = 0.674199862463242087e0 * wr_5_4;
  results[k++] =
      -0.105409255338945978e0 * wr_3_0 + 0.300312487565186320e0 * wr_5_0;
  results[k++] = 0.487417436675953946e0 * wr_5_4;
  results[k++] =
      -0.227921152919275897e0 * wr_5_0 + 0.285714285714285714e0 * wr_3_0;
  results[k++] = -0.170560573084488347e0 * wr_5_4;
  results[k++] =
      0.602338601936834159e0 * wr_3_0 + 0.168174993036504340e0 * wr_5_0;
  results[k++] = -0.660578259075816363e0 * wr_5_4;
  results[k++] = 0.529640897702849716e0 * wr_5_0;
  results[k++] = 0.531124904247433808e0 * wr_5_4;
  results[k++] =
      0.380300012060943431e0 * wr_5_0 - 0.476731294622796159e0 * wr_3_0;
  results[k++] = -0.447213595499957940e0 * wr_5_4;
  results[k++] =
      0.417855447018672479e0 * wr_3_0 + 0.484848484848484848e0 * wr_5_0;
  results[k++] = 0.416597790450530909e0 * wr_5_4;
  results[k++] =
      0.418717894679311889e0 * wr_3_0 + 0.334021328561342469e0 * wr_5_0;
  results[k++] = 0.283426495783998101e0 * wr_5_4;
  results[k++] =
      -0.320697128613889768e0 * wr_5_0 + 0.402015126103684830e0 * wr_3_0;
  results[k++] = -0.282842712474619010e0 * wr_5_4;
  results[k++] = 0.558924587234159913e0 * wr_5_0;
  results[k++] = -0.162623125636348342e0 * wr_5_4;
  results[k++] =
      0.635641726163728213e0 * wr_3_0 - 0.507066682747924576e-1 * wr_5_0;
  results[k++] = 0.404519917477945253e0 * wr_5_4;
  results[k++] = 0.330289129537908181e0 * wr_5_4;
  results[k++] = -0.583211843519804309e0 * wr_4_4;
  results[k++] =
      0.167670170664846770e0 * wr_2_0 - 0.124973966468529495e0 * wr_4_0;
  results[k++] = -0.467609764791412244e0 * wr_4_4;
  results[k++] = 0.322681393894732585e-1 * wr_2_0 -
                 0.131188642149637760e0 * wr_4_0 +
                 0.891436977900836508e-1 * wr_6_0;
  results[k++] =
      -0.126740269214095218e0 * wr_4_4 + 0.577717190274765943e0 * wr_6_4;
  results[k++] =
      0.501891466087817065e0 * wr_2_0 - 0.155869921597137415e0 * wr_4_0;
  results[k++] = -0.467609764791412244e0 * wr_4_4;
  results[k++] =
      -0.335340341329693540e-1 * wr_2_0 + 0.374921899405588484e0 * wr_4_0;
  results[k++] =
      0.196345180784014144e0 * wr_4_4 + 0.745829685583969992e0 * wr_6_4;
  results[k++] = -0.249947932937058989e-1 * wr_2_0 -
                 0.135491047001896380e0 * wr_4_0 +
                 0.345252056960340893e0 * wr_6_0;
  results[k++] = 0.147542222712663500e0 * wr_4_4;
  results[k++] = -0.471306342195612868e0 * wr_2_0 +
                 0.273048918656552581e0 * wr_4_0 +
                 0.651013521854029892e-1 * wr_6_0;
  results[k++] =
      -0.408662201376770811e0 * wr_4_4 + 0.544676990468434620e0 * wr_6_4;
  results[k++] = 0.204081632653061224e-1 * wr_2_0 +
                 0.323586831623346190e0 * wr_4_0 -
                 0.281897124066382855e0 * wr_6_0;
  results[k++] =
      -0.360709129781513557e0 * wr_4_4 - 0.365380432940227450e0 * wr_6_4;
  results[k++] =
      0.512240832571882989e0 * wr_2_0 + 0.152720709664242506e0 * wr_4_0;
  results[k++] =
      0.263790316692782510e0 * wr_4_4 + 0.421904982629324647e0 * wr_6_4;
  results[k++] = 0.365072322857108523e0 * wr_2_0 +
                 0.282003710575139147e0 * wr_4_0 +
                 0.252136452829649601e0 * wr_6_0;
  results[k++] =
      -0.360709129781513557e0 * wr_4_4 - 0.365380432940227450e0 * wr_6_4;
  results[k++] = -0.612244897959183673e-1 * wr_2_0 +
                 0.746738842207721979e-1 * wr_4_0 +
                 0.507414823319489140e0 * wr_6_0;
  results[k++] =
      0.156661897610059841e0 * wr_4_4 + 0.499667577179284878e0 * wr_6_4;
  results[k++] = 0.432521479156784523e0 * wr_2_0 -
                 0.239788618790907921e-1 * wr_4_0 -
                 0.248286815272334135e0 * wr_6_0;
  results[k++] =
      -0.179441371352664269e-1 * wr_4_4 + 0.593519009868034830e-1 * wr_6_4;
  results[k++] = -0.340522353301997256e0 * wr_2_0 -
                 0.166130428329047092e0 * wr_4_0 +
                 0.349411870357185183e0 * wr_6_0;
  results[k++] =
      -0.481491725184408834e0 * wr_4_4 - 0.323492532675803003e0 * wr_6_4;
  results[k++] =
      0.429036276112972237e0 * wr_4_0 + 0.203988434183663384e0 * wr_6_0;
  results[k++] =
      -0.875584236965249464e-2 * wr_4_4 - 0.608176007277884196e0 * wr_6_4;
  results[k++] = 0.633146614591370234e0 * wr_2_0 -
                 0.234009730570275055e-2 * wr_4_0 +
                 0.508836554386502718e0 * wr_6_0;
  results[k++] =
      0.363973532335257492e0 * wr_4_4 - 0.658369840343546697e-1 * wr_6_4;
  results[k++] = 0.231669633264572304e0 * wr_2_0 +
                 0.376748398765112867e0 * wr_4_0 +
                 0.213336210945935413e0 * wr_6_0;
  results[k++] =
      -0.283090525149644717e-1 * wr_4_4 + 0.592532856309192027e0 * wr_6_4;
  results[k++] =
      -0.424635787724467075e0 * wr_4_0 + 0.353318332162524940e0 * wr_6_0;
  results[k++] =
      0.181581900780322694e0 * wr_4_4 - 0.316722134102221536e0 * wr_6_4;
  results[k++] = 0.603022689155527245e0 * wr_2_0 -
                 0.245163586350269850e0 * wr_4_0 -
                 0.169990361819719487e0 * wr_6_0;
  results[k++] =
      -0.338357894690353043e0 * wr_4_4 - 0.157380493740304818e-1 * wr_6_4;
  results[k++] =
      -0.167478613262486651e0 * wr_4_0 + 0.522564860476297158e0 * wr_6_0;
  results[k++] =
      -0.717765485410657077e-1 * wr_4_4 + 0.400625331660923511e0 * wr_6_4;
  results[k++] =
      0.402844879568725306e0 * wr_4_0 + 0.279322667181375902e0 * wr_6_0;
  results[k++] =
      -0.207201048108432634e0 * wr_4_4 + 0.167050825556779155e0 * wr_6_4;
  results[k++] = 0.738548945875996397e0 * wr_2_0 +
                 0.100087615011487328e0 * wr_4_0 -
                 0.832779295298808125e-1 * wr_6_0;
  results[k++] =
      -0.363636363636363636e0 * wr_4_4 + 0.169138274439829713e0 * wr_6_4;
  results[k++] =
      -0.583115436899835021e0 * wr_4_4 + 0.271224631690280131e0 * wr_6_4;
  results[k++] =
      -0.434628585212506780e0 * wr_4_4 + 0.202158904543936686e0 * wr_6_4;
  results[k++] = -0.362208966312221391e0 * wr_1_0 +
                 0.276641667586244063e0 * wr_3_0 -
                 0.315262439108839117e-1 * wr_5_0;
  results[k++] = -0.353881210219187337e0 * wr_5_4;
  results[k++] = -0.381801774160606263e-1 * wr_1_0 +
                 0.233284737407921724e0 * wr_3_0 -
                 0.166157894714012655e0 * wr_5_0;
  results[k++] = -0.481571330330887205e0 * wr_5_4;
  results[k++] = 0.495949750536346320e-1 * wr_3_0 -
                 0.167382361495863305e0 * wr_5_0 +
                 0.109457873024465230e0 * wr_7_0;
  results[k++] =
      -0.183358190239536984e0 * wr_5_4 + 0.513402932670703555e0 * wr_7_4;
  results[k++] =
      0.676123403782813265e0 * wr_1_0 - 0.331970001103492875e0 * wr_3_0;
  results[k++] = -0.353881210219187337e0 * wr_5_4;
  results[k++] = 0.217325379787332834e0 * wr_1_0 +
                 0.387298334620741688e0 * wr_3_0 -
                 0.157631219554419559e0 * wr_5_0;
  results[k++] = -0.124341182825498456e0 * wr_5_4;
  results[k++] =
      -0.492903970958824441e-1 * wr_1_0 + 0.386116055440953839e0 * wr_5_0;
  results[k++] =
      0.196833198353522683e0 * wr_5_4 + 0.751544939167995699e0 * wr_7_4;
  results[k++] = -0.435597657954504487e-1 * wr_3_0 -
                 0.147013612914699677e0 * wr_5_0 +
                 0.373869811942784149e0 * wr_7_0;
  results[k++] = -0.417786374293674811e0 * wr_5_4;
  results[k++] = 0.572702661240909395e0 * wr_1_0 -
                 0.233284737407921724e0 * wr_3_0 -
                 0.112987368405528605e0 * wr_5_0;
  results[k++] = -0.845520043213389497e-1 * wr_5_4;
  results[k++] =
      -0.268302938009052882e0 * wr_1_0 - 0.251492425078403694e0 * wr_3_0 +
      0.223108803061639990e0 * wr_5_0 + 0.100731790397952555e0 * wr_7_0;
  results[k++] =
      -0.140571900893809078e0 * wr_5_4 + 0.535735133406405707e0 * wr_7_4;
  results[k++] =
      -0.351364184463153260e-1 * wr_1_0 + 0.752798792009840967e-1 * wr_3_0 +
      0.317585701478757867e0 * wr_5_0 - 0.307676610306500865e0 * wr_7_0;
  results[k++] =
      -0.347897705282034949e0 * wr_5_4 - 0.432939366573199048e0 * wr_7_4;
  results[k++] =
      0.451753951452625620e0 * wr_3_0 - 0.144149994031289434e0 * wr_5_0;
  results[k++] = -0.327468504625003299e0 * wr_5_4;
  results[k++] =
      0.739355956438236663e0 * wr_1_0 + 0.262558917699848611e0 * wr_5_0;
  results[k++] =
      -0.140571900893809078e0 * wr_5_4 + 0.535735133406405707e0 * wr_7_4;
  results[k++] =
      0.160981762805431729e0 * wr_1_0 + 0.352089395109765171e0 * wr_3_0 +
      0.164906506610777384e0 * wr_5_0 + 0.302195371193857666e0 * wr_7_0;
  results[k++] =
      -0.131492972838043787e0 * wr_5_4 - 0.163635699531787824e0 * wr_7_4;
  results[k++] =
      -0.398409536444797881e-1 * wr_1_0 - 0.569062397407964793e-1 * wr_3_0 +
      0.120036112294684473e0 * wr_5_0 + 0.488421477061400274e0 * wr_7_0;
  results[k++] = 0.398343678185575356e0 * wr_5_4;
  results[k++] = -0.406942629902614280e0 * wr_3_0 +
                 0.226913828150620477e0 * wr_5_0 +
                 0.836773463514824100e-1 * wr_7_0;
  results[k++] =
      -0.266839194682004004e0 * wr_5_4 + 0.574534151229195224e0 * wr_7_4;
  results[k++] =
      0.689426313666158701e0 * wr_1_0 - 0.134281626522908435e0 * wr_3_0 +
      0.113299662559577976e0 * wr_5_0 - 0.313613040627513921e0 * wr_7_0;
  results[k++] =
      -0.469105170104850986e-1 * wr_5_4 - 0.166792949370613684e0 * wr_7_4;
  results[k++] =
      -0.167506302543202012e0 * wr_1_0 - 0.314022399867162471e0 * wr_3_0 -
      0.302806085239314211e-1 * wr_5_0 + 0.315359997826629166e0 * wr_7_0;
  results[k++] =
      -0.165853723435404511e0 * wr_5_4 - 0.206395744719614502e0 * wr_7_4;
  results[k++] =
      -0.113960576459637949e0 * wr_3_0 + 0.363636363636363636e0 * wr_5_0;
  results[k++] =
      0.248571644575891211e0 * wr_5_4 + 0.392481544067196649e0 * wr_7_4;
  results[k++] = 0.357421807987046294e0 * wr_3_0 +
                 0.199300699300699301e0 * wr_5_0 +
                 0.285812549429929762e0 * wr_7_0;
  results[k++] =
      -0.124113561883208728e0 * wr_5_4 - 0.441292664473631034e0 * wr_7_4;
  results[k++] =
      0.781735959970571595e0 * wr_1_0 + 0.101507368407105913e0 * wr_3_0 +
      0.497845268044318600e0 * wr_7_0 + 0.428232472514541625e-1 * wr_5_0;
  results[k++] =
      -0.165853723435404511e0 * wr_5_4 - 0.206395744719614502e0 * wr_7_4;
  results[k++] =
      0.100503781525921207e0 * wr_1_0 + 0.278134125596629617e0 * wr_3_0 +
      0.333086693763245633e0 * wr_5_0 + 0.154013022194400290e0 * wr_7_0;
  results[k++] =
      -0.872081525489224928e-1 * wr_5_4 + 0.666173387526491265e0 * wr_7_4;
  results[k++] = -0.671408132614542178e-1 * wr_3_0 +
                 0.362558920190649524e0 * wr_5_0 -
                 0.264611003029464870e0 * wr_7_0;
  results[k++] =
      0.319763226012715807e0 * wr_5_4 + 0.181683651143588527e0 * wr_7_4;
  results[k++] = -0.353863156437055896e0 * wr_3_0 -
                 0.955426644844717800e-1 * wr_5_0 +
                 0.323552405892398652e0 * wr_7_0;
  results[k++] =
      -0.395584213251215398e0 * wr_5_4 - 0.306577765269691934e0 * wr_7_4;
  results[k++] =
      0.762770071396473855e0 * wr_1_0 - 0.264806938637970596e-1 * wr_3_0 -
      0.255348511657420100e0 * wr_5_0 - 0.104363987027221891e0 * wr_7_0;
  results[k++] =
      0.139860139860139860e0 * wr_5_4 + 0.629370629370629371e-1 * wr_7_4;
  results[k++] =
      -0.171976796072049204e0 * wr_5_0 + 0.306816936622102170e0 * wr_7_0;
  results[k++] =
      0.183850928393342472e0 * wr_5_4 - 0.574534151229195224e0 * wr_7_4;
  results[k++] = -0.106158946931116769e0 * wr_3_0 +
                 0.573255986906830680e-1 * wr_5_0 +
                 0.502064078108894460e0 * wr_7_0;
  results[k++] =
      0.403741446985752282e0 * wr_5_4 + 0.242244868191451369e-1 * wr_7_4;
  results[k++] = 0.260035251612434268e0 * wr_3_0 +
                 0.351046164979332398e0 * wr_5_0 +
                 0.173083076899295979e0 * wr_7_0;
  results[k++] =
      0.302132433492207936e0 * wr_5_4 + 0.135959595071493571e0 * wr_7_4;
  results[k++] = 0.823885840871099560e0 * wr_1_0 +
                 0.257421765667783343e0 * wr_3_0 -
                 0.837393066312433255e-1 * wr_7_0;
  results[k++] =
      -0.124467666916290847e0 * wr_5_4 + 0.518615278817878529e-1 * wr_7_4;
  results[k++] =
      -0.373403000748872540e0 * wr_5_4 + 0.155584583645363558e0 * wr_7_4;
  results[k++] =
      -0.508137122366012587e0 * wr_5_4 + 0.211723800985838578e0 * wr_7_4;
  results[k++] =
      -0.359307204997625986e0 * wr_5_4 + 0.149711335415677494e0 * wr_7_4;
  results[k++] = wr_0_0 - 0.570425504464232067e0 * wr_2_0 +
                 0.918367346938775510e-1 * wr_4_0;
  results[k++] = 0.343621596744545638e0 * wr_4_4;
  results[k++] = -0.360768765911503840e0 * wr_2_0 +
                 0.316814459460282901e0 * wr_4_0 -
                 0.398662736048649643e-1 * wr_6_0;
  results[k++] =
      0.306071846045288015e0 * wr_4_4 - 0.258362981844911412e0 * wr_6_4;
  results[k++] = -0.481571330330887205e-1 * wr_2_0 +
                 0.264311892974013565e0 * wr_4_0 -
                 0.190055002274338812e0 * wr_6_0;
  results[k++] =
      0.965130573325056376e-1 * wr_4_4 - 0.465537778635626505e0 * wr_6_4;
  results[k++] = 0.600081349874848312e-1 * wr_4_0 -
                 0.192322140126525488e0 * wr_6_0 +
                 0.124518501170775462e0 * wr_8_0;
  results[k++] = 0.101432261205991926e-1 * wr_4_4 -
                 0.218072809022786879e0 * wr_6_4 +
                 0.468276605719285256e0 * wr_8_4;
  results[k++] = 0.109971762577385290e1 * wr_8_8;
  results[k++] = 0.343621596744545638e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.114085100892846413e0 * wr_2_0 -
                 0.275510204081632653e0 * wr_4_0;
  results[k++] =
      -0.474164464990544366e0 * wr_4_4 - 0.333545175320610366e0 * wr_6_4;
  results[k++] = 0.279450284441411283e0 * wr_2_0 +
                 0.327204566753968132e0 * wr_4_0 -
                 0.154401413746990329e0 * wr_6_0;
  results[k++] =
      0.197792909351684255e0 * wr_4_4 + 0.454318352130805998e-1 * wr_6_4;
  results[k++] = -0.704948244599752486e-1 * wr_2_0 +
                 0.257941995634504733e-1 * wr_4_0 +
                 0.389496850225897860e0 * wr_6_0;
  results[k++] = -0.256605578905657618e-1 * wr_4_4 +
                 0.172401693065731082e0 * wr_6_4 +
                 0.740410324522786045e0 * wr_8_4;
  results[k++] = -0.569287154097875371e-1 * wr_4_0 -
                 0.152044001819471048e0 * wr_6_0 +
                 0.393762074529993429e0 * wr_8_0;
  results[k++] = 0.576408655887279515e-1 * wr_8_4 -
                 0.147635989625663664e0 * wr_6_4 +
                 0.824039585506544655e-1 * wr_4_4;
  results[k++] = -0.360768765911503840e0 * wr_2_0 +
                 0.316814459460282901e0 * wr_4_0 -
                 0.398662736048649643e-1 * wr_6_0;
  results[k++] =
      -0.474164464990544366e0 * wr_4_4 - 0.333545175320610366e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.790990032857068466e-1 * wr_2_0 -
                 0.723562152133580705e-1 * wr_4_0 -
                 0.168090968553099734e0 * wr_6_0;
  results[k++] =
      0.806570134296258179e-1 * wr_4_4 - 0.217870796187373848e0 * wr_6_4;
  results[k++] =
      -0.327646122537842875e0 * wr_2_0 - 0.142876511874963884e0 * wr_4_0 +
      0.177096637366508887e0 * wr_6_0 + 0.126782473919335015e0 * wr_8_0;
  results[k++] = 0.313026753966289818e0 * wr_4_4 -
                 0.333689535931273553e-1 * wr_6_4 +
                 0.514992843577717344e0 * wr_8_4;
  results[k++] =
      -0.490327172700539700e-1 * wr_2_0 + 0.113857430819575074e0 * wr_4_0 +
      0.304088003638942098e0 * wr_6_0 - 0.322168970069994624e0 * wr_8_0;
  results[k++] = 0.962270920896216065e-1 * wr_4_4 -
                 0.298829601313933876e0 * wr_6_4 -
                 0.457708200614085918e0 * wr_8_4;
  results[k++] = 0.695522496095612988e0 * wr_8_8;
  results[k++] =
      0.306071846045288015e0 * wr_4_4 - 0.258362981844911412e0 * wr_6_4;
  results[k++] = 0.279450284441411283e0 * wr_2_0 +
                 0.327204566753968132e0 * wr_4_0 -
                 0.154401413746990329e0 * wr_6_0;
  results[k++] =
      0.806570134296258179e-1 * wr_4_4 - 0.217870796187373848e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.237297009857120540e0 * wr_2_0 -
                 0.166975881261595547e-1 * wr_4_0 +
                 0.302563743395579521e0 * wr_6_0;
  results[k++] = -0.414095472352302160e0 * wr_4_4 -
                 0.163959626476044621e0 * wr_6_4 +
                 0.583946996179125981e0 * wr_8_4;
  results[k++] =
      0.222909469269358446e0 * wr_2_0 + 0.324013473097303923e0 * wr_4_0 +
      0.108127767807131828e0 * wr_6_0 + 0.335434896592092881e0 * wr_8_0;
  results[k++] = 0.157138183367586947e0 * wr_4_4 +
                 0.281530785868641366e-1 * wr_6_4 -
                 0.329750453703514292e-1 * wr_8_4;
  results[k++] =
      -0.600525690068923967e-1 * wr_2_0 - 0.464821014886990738e-1 * wr_4_0 +
      0.148972089163400481e0 * wr_6_0 + 0.473489752577683517e0 * wr_8_0;
  results[k++] = 0.141190709024732971e0 * wr_8_4 -
                 0.361632842253706840e0 * wr_6_4 +
                 0.201847651234558277e0 * wr_4_4;
  results[k++] = -0.481571330330887205e-1 * wr_2_0 +
                 0.264311892974013565e0 * wr_4_0 -
                 0.190055002274338812e0 * wr_6_0;
  results[k++] =
      0.197792909351684255e0 * wr_4_4 + 0.454318352130805998e-1 * wr_6_4;
  results[k++] =
      -0.327646122537842875e0 * wr_2_0 - 0.142876511874963884e0 * wr_4_0 +
      0.177096637366508887e0 * wr_6_0 + 0.126782473919335015e0 * wr_8_0;
  results[k++] = -0.414095472352302160e0 * wr_4_4 -
                 0.163959626476044621e0 * wr_6_4 +
                 0.583946996179125981e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.107799420402882424e0 * wr_2_0 -
                 0.113477431659249841e0 * wr_4_0 +
                 0.145169472841313406e0 * wr_6_0 -
                 0.345378131011688405e0 * wr_8_0;
  results[k++] = 0.182806320845653026e0 * wr_4_4 -
                 0.142236453876015334e0 * wr_6_4 -
                 0.280586520046034678e0 * wr_8_4;
  results[k++] =
      -0.233754307830263644e0 * wr_2_0 - 0.271397001985207381e0 * wr_4_0 +
      0.405911149431352364e-1 * wr_6_0 + 0.288745496754871441e0 * wr_8_0;
  results[k++] = 0.321121263327706349e0 * wr_4_4 +
                 0.153419993683390781e-1 * wr_6_4 -
                 0.125788086222034830e0 * wr_8_4;
  results[k++] = 0.331577340002940266e0 * wr_8_8;
  results[k++] =
      0.965130573325056376e-1 * wr_4_4 - 0.465537778635626505e0 * wr_6_4;
  results[k++] = -0.704948244599752486e-1 * wr_2_0 +
                 0.257941995634504733e-1 * wr_4_0 +
                 0.389496850225897860e0 * wr_6_0;
  results[k++] = 0.313026753966289818e0 * wr_4_4 -
                 0.333689535931273553e-1 * wr_6_4 +
                 0.514992843577717344e0 * wr_8_4;
  results[k++] =
      0.222909469269358446e0 * wr_2_0 + 0.324013473097303923e0 * wr_4_0 +
      0.108127767807131828e0 * wr_6_0 + 0.335434896592092881e0 * wr_8_0;
  results[k++] = 0.182806320845653026e0 * wr_4_4 -
                 0.142236453876015334e0 * wr_6_4 -
                 0.280586520046034678e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.323398261208647271e0 * wr_2_0 +
                 0.200254291163382072e-1 * wr_4_0 +
                 0.871016837047880438e-1 * wr_6_0 +
                 0.483529383416363768e0 * wr_8_0;
  results[k++] = -0.396400693404193150e0 * wr_4_4 -
                 0.305384524796981295e0 * wr_6_4 -
                 0.241232644110871082e0 * wr_8_4;
  results[k++] =
      0.151490105618374876e0 * wr_2_0 + 0.293142266031902052e0 * wr_4_0 +
      0.300640560692260553e0 * wr_6_0 + 0.119443703763912132e0 * wr_8_0;
  results[k++] = 0.178085598802901834e0 * wr_8_4 -
                 0.456132005458413146e0 * wr_6_4 +
                 0.254592955056049460e0 * wr_4_4;
  results[k++] = 0.600081349874848312e-1 * wr_4_0 -
                 0.192322140126525488e0 * wr_6_0 +
                 0.124518501170775462e0 * wr_8_0;
  results[k++] = -0.256605578905657618e-1 * wr_4_4 +
                 0.172401693065731082e0 * wr_6_4 +
                 0.740410324522786045e0 * wr_8_4;
  results[k++] =
      -0.490327172700539700e-1 * wr_2_0 + 0.113857430819575074e0 * wr_4_0 +
      0.304088003638942098e0 * wr_6_0 - 0.322168970069994624e0 * wr_8_0;
  results[k++] = 0.157138183367586947e0 * wr_4_4 +
                 0.281530785868641366e-1 * wr_6_4 -
                 0.329750453703514292e-1 * wr_8_4;
  results[k++] =
      -0.233754307830263644e0 * wr_2_0 - 0.271397001985207381e0 * wr_4_0 +
      0.405911149431352364e-1 * wr_6_0 + 0.288745496754871441e0 * wr_8_0;
  results[k++] = -0.396400693404193150e0 * wr_4_4 -
                 0.305384524796981295e0 * wr_6_4 -
                 0.241232644110871082e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.251326648710720164e0 * wr_2_0 -
                 0.148760330578512397e0 * wr_4_0 -
                 0.229214957117863273e0 * wr_6_0 -
                 0.701549328617492073e-1 * wr_8_0;
  results[k++] = 0.473888145372251508e0 * wr_4_4 +
                 0.218320478391672240e0 * wr_6_4 +
                 0.852378974947017122e-1 * wr_8_4;
  results[k++] = 0.104853961490935311e0 * wr_8_8;
  results[k++] = 0.101432261205991926e-1 * wr_4_4 -
                 0.218072809022786879e0 * wr_6_4 +
                 0.468276605719285256e0 * wr_8_4;
  results[k++] = -0.569287154097875371e-1 * wr_4_0 -
                 0.152044001819471048e0 * wr_6_0 +
                 0.393762074529993429e0 * wr_8_0;
  results[k++] = 0.962270920896216065e-1 * wr_4_4 -
                 0.298829601313933876e0 * wr_6_4 -
                 0.457708200614085918e0 * wr_8_4;
  results[k++] =
      -0.600525690068923967e-1 * wr_2_0 - 0.464821014886990738e-1 * wr_4_0 +
      0.148972089163400481e0 * wr_6_0 + 0.473489752577683517e0 * wr_8_0;
  results[k++] = 0.321121263327706349e0 * wr_4_4 +
                 0.153419993683390781e-1 * wr_6_4 -
                 0.125788086222034830e0 * wr_8_4;
  results[k++] =
      0.151490105618374876e0 * wr_2_0 + 0.293142266031902052e0 * wr_4_0 +
      0.300640560692260553e0 * wr_6_0 + 0.119443703763912132e0 * wr_8_0;
  results[k++] = 0.473888145372251508e0 * wr_4_4 +
                 0.218320478391672240e0 * wr_6_4 +
                 0.852378974947017122e-1 * wr_8_4;
  results[k++] = wr_0_0 + 0.428733694859463811e0 * wr_2_0 +
                 0.137317228226319135e0 * wr_4_0 -
                 0.366743931388581237e-1 * wr_6_0 -
                 0.798686927964529438e-1 * wr_8_0;
  results[k++] = 0.121655624203984579e0 * wr_8_4 -
                 0.311597480180718286e0 * wr_6_4 +
                 0.173920098387966907e0 * wr_4_4;
  results[k++] = 0.109971762577385290e1 * wr_8_8;
  results[k++] = 0.576408655887279515e-1 * wr_8_4 -
                 0.147635989625663664e0 * wr_6_4 +
                 0.824039585506544655e-1 * wr_4_4;
  results[k++] = 0.695522496095612988e0 * wr_8_8;
  results[k++] = 0.141190709024732971e0 * wr_8_4 -
                 0.361632842253706840e0 * wr_6_4 +
                 0.201847651234558277e0 * wr_4_4;
  results[k++] = 0.331577340002940266e0 * wr_8_8;
  results[k++] = 0.178085598802901834e0 * wr_8_4 -
                 0.456132005458413146e0 * wr_6_4 +
                 0.254592955056049460e0 * wr_4_4;
  results[k++] = 0.104853961490935311e0 * wr_8_8;
  results[k++] = 0.121655624203984579e0 * wr_8_4 -
                 0.311597480180718286e0 * wr_6_4 +
                 0.173920098387966907e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.813115628181741708e0 * wr_2_0 +
                 0.377622377622377622e0 * wr_4_0 -
                 0.100854581131859840e0 * wr_6_0 +
                 0.118723732535267889e-1 * wr_8_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] = 0.713506068012675763e0 * wr_5_4;
  results[k++] = 0.246182981958665466e0 * wr_5_0;
  results[k++] = 0.603022689155527245e0 * wr_5_4;
  results[k++] = 0.550481882563180302e0 * wr_5_0;
  results[k++] = 0.336580916403044584e0 * wr_5_4;
  results[k++] = 0.663746518303064666e0 * wr_5_0;
  results[k++] = 0.480384461415261399e0 * wr_5_4;
  results[k++] = 0.118262479197816524e0 * wr_5_4;
  results[k++] = 0.442497678868709777e0 * wr_5_0;
  results[k++] = 0.877058019307029216e0 * wr_5_4;
  results[k++] = 0.352766841475278744e0 * wr_4_4;
  results[k++] =
      0.873426293482293452e-1 * wr_6_0 - 0.104972776216295593e0 * wr_4_0;
  results[k++] =
      0.157108865415948127e0 * wr_4_4 + 0.730760865880454899e0 * wr_6_4;
  results[k++] = 0.365148371670110743e0 * wr_4_0;
  results[k++] =
      0.566044932723022720e0 * wr_6_4 - 0.101413336549584915e0 * wr_4_4;
  results[k++] =
      -0.108415417090898894e0 * wr_4_0 + 0.338276548879659426e0 * wr_6_0;
  results[k++] =
      0.216830834181797789e0 * wr_4_4 + 0.453845615093369281e0 * wr_6_4;
  results[k++] =
      -0.258362981844911413e0 * wr_6_0 + 0.310513659574533285e0 * wr_4_0;
  results[k++] =
      0.232367145608252291e0 * wr_4_4 + 0.617605654987961318e-1 * wr_6_4;
  results[k++] =
      0.593815695220164387e0 * wr_4_0 + 0.185281696496388395e0 * wr_6_0;
  results[k++] =
      -0.632857473943986971e0 * wr_6_4 + 0.113383557174967921e0 * wr_4_4;
  results[k++] =
      0.303030303030303030e-1 * wr_4_0 + 0.529486550942264161e0 * wr_6_0;
  results[k++] =
      0.655554777357088961e-1 * wr_4_4 + 0.562926204125821183e0 * wr_6_4;
  results[k++] =
      0.384551806569720839e0 * wr_6_0 - 0.462173752219812755e0 * wr_4_0;
  results[k++] =
      0.197633809596147622e0 * wr_4_4 - 0.344720490737517136e0 * wr_6_4;
  results[k++] =
      0.387831436503664396e0 * wr_4_0 + 0.496454247532834913e0 * wr_6_0;
  results[k++] =
      0.436040762744612464e0 * wr_6_4 - 0.781216226224835872e-1 * wr_4_4;
  results[k++] =
      0.438456519528272940e0 * wr_4_0 + 0.304014896773205005e0 * wr_6_0;
  results[k++] =
      0.842075358320684436e0 * wr_4_4 + 0.160687067036028773e0 * wr_6_4;
  results[k++] =
      -0.634663062417534110e0 * wr_4_4 + 0.295200991876999063e0 * wr_6_4;
  results[k++] =
      0.116774841624228445e1 * wr_4_4 - 0.144841364875580273e0 * wr_6_4;
  results[k++] = 0.326356975932252704e0 * wr_6_4;
  results[k++] =
      -0.304014896773205005e0 * wr_6_0 + 0.365380432940227450e0 * wr_4_0;
  results[k++] =
      0.976520282781044840e-1 * wr_4_4 - 0.278581598420169074e0 * wr_6_4;
  results[k++] = 0.546099672286118405e0 * wr_6_0;
  results[k++] =
      -0.181683651143588527e0 * wr_6_4 + 0.325506760927014946e-1 * wr_4_4;
  results[k++] =
      0.608967388233712415e0 * wr_4_0 - 0.608029793546410011e-1 * wr_6_0;
  results[k++] = 0.484065622232377638e0 * wr_6_4;
  results[k++] =
      0.724206824377901366e0 * wr_4_4 + 0.305411124247982088e0 * wr_6_4;
  results[k++] = -0.475670712008450509e0 * wr_5_4;
  results[k++] =
      0.212958854999979971e0 * wr_3_0 - 0.169882397145875182e0 * wr_5_0;
  results[k++] = -0.127128345232745642e0 * wr_5_4;
  results[k++] = 0.279436027864892993e-1 * wr_3_0 -
                 0.173529069047942215e0 * wr_5_0 +
                 0.129512301940224714e0 * wr_7_0;
  results[k++] =
      0.109333700695184838e0 * wr_5_4 + 0.688802314379664480e0 * wr_7_4;
  results[k++] =
      0.514344499873639701e0 * wr_3_0 - 0.164121987972443643e0 * wr_5_0;
  results[k++] = -0.492365963917330931e0 * wr_5_4;
  results[k++] = 0.394771016975861392e0 * wr_5_0;
  results[k++] =
      0.109333700695184838e0 * wr_5_4 + 0.688802314379664480e0 * wr_7_4;
  results[k++] = -0.391210439010850190e-1 * wr_3_0 -
                 0.128260616252826854e0 * wr_5_0 +
                 0.388536905820674142e0 * wr_7_0;
  results[k++] = 0.201007563051842415e0 * wr_5_4;
  results[k++] = -0.458138755162699669e0 * wr_3_0 +
                 0.270587104108249405e0 * wr_5_0 +
                 0.812513988714842701e-1 * wr_7_0;
  results[k++] =
      -0.318196760153611707e0 * wr_5_4 + 0.557877436632955591e0 * wr_7_4;
  results[k++] = 0.661266334048461760e-1 * wr_3_0 +
                 0.312447074792278171e0 * wr_5_0 -
                 0.312736780069900657e0 * wr_7_0;
  results[k++] =
      -0.129365379258849492e0 * wr_5_4 - 0.166326916189949346e0 * wr_7_4;
  results[k++] =
      0.460043706228236146e0 * wr_3_0 + 0.183493960854393434e0 * wr_5_0;
  results[k++] =
      0.296413321380174009e0 * wr_5_4 + 0.381102841774509440e0 * wr_7_4;
  results[k++] = 0.402387880125445909e0 * wr_3_0 +
                 0.237659377174355642e0 * wr_5_0 +
                 0.277526361300481530e0 * wr_7_0;
  results[k++] =
      -0.342268621780469037e0 * wr_5_4 - 0.440059656574888762e0 * wr_7_4;
  results[k++] = -0.499870362934740920e-1 * wr_3_0 +
                 0.118093893967138023e0 * wr_5_0 +
                 0.496454247532834913e0 * wr_7_0;
  results[k++] =
      0.207126717786488975e0 * wr_5_4 + 0.474665394927370567e0 * wr_7_4;
  results[k++] = 0.369363272860632758e0 * wr_3_0 +
                 0.191783997950452755e-1 * wr_5_0 -
                 0.268746551840705678e0 * wr_7_0;
  results[k++] =
      0.169146217254853926e-1 * wr_5_4 + 0.184523146096204282e0 * wr_7_4;
  results[k++] = -0.369089974064159161e0 * wr_3_0 -
                 0.996538885586608803e-1 * wr_5_0 +
                 0.337474944556607927e0 * wr_7_0;
  results[k++] =
      -0.412606298093237722e0 * wr_5_4 - 0.319769881022259234e0 * wr_7_4;
  results[k++] =
      0.408459395878809026e0 * wr_5_0 + 0.218614830791848118e0 * wr_7_0;
  results[k++] =
      0.972522371140021489e-2 * wr_5_4 - 0.583513422684012892e0 * wr_7_4;
  results[k++] = 0.584014613126928203e0 * wr_3_0 +
                 0.303237126148247496e-2 * wr_5_0 +
                 0.509910730279888085e0 * wr_7_0;
  results[k++] =
      0.421114539577968405e0 * wr_5_4 + 0.252668723746781043e-1 * wr_7_4;
  results[k++] = 0.271224631690280130e0 * wr_3_0 +
                 0.366151766779346603e0 * wr_5_0 +
                 0.180530883765711770e0 * wr_7_0;
  results[k++] =
      0.295621207024776245e0 * wr_5_4 + 0.369526508780970307e-1 * wr_7_4;
  results[k++] =
      -0.197520227312729038e-1 * wr_5_4 + 0.158016181850183230e0 * wr_7_4;
  results[k++] =
      -0.530002386242967289e0 * wr_5_4 + 0.220834327601236371e0 * wr_7_4;
  results[k++] =
      -0.436112853472185262e0 * wr_5_4 + 0.872225706944370523e-1 * wr_7_4;
  results[k++] =
      0.503579746698443956e0 * wr_5_4 - 0.100715949339688791e0 * wr_7_4;
  results[k++] =
      -0.454855689222371245e-1 * wr_5_4 + 0.600409509773530044e0 * wr_7_4;
  results[k++] =
      -0.409370120300134120e0 * wr_5_0 + 0.350563627067423059e0 * wr_7_0;
  results[k++] =
      0.255287122424255641e0 * wr_5_4 - 0.240699286857155319e0 * wr_7_4;
  results[k++] = 0.544676990468434620e0 * wr_3_0 -
                 0.262611054614968797e0 * wr_5_0 -
                 0.147198548694886022e0 * wr_7_0;
  results[k++] =
      -0.380559573013964348e0 * wr_5_4 - 0.652387839452510310e-1 * wr_7_4;
  results[k++] =
      -0.170191414949503761e0 * wr_5_0 + 0.524675593900435482e0 * wr_7_0;
  results[k++] =
      -0.109408766753252417e0 * wr_5_4 + 0.401165478095258866e0 * wr_7_4;
  results[k++] =
      0.409370120300134120e0 * wr_5_0 + 0.257079993182776909e0 * wr_7_0;
  results[k++] =
      -0.266705875066046657e0 * wr_5_4 + 0.126334361873390522e0 * wr_7_4;
  results[k++] = 0.703174971048874410e0 * wr_3_0 +
                 0.678058827369160374e-1 * wr_5_0 -
                 0.855146291521792594e-1 * wr_7_0;
  results[k++] =
      -0.337330007425780467e0 * wr_5_4 + 0.242877605346561937e0 * wr_7_4;
  results[k++] =
      -0.270465710156824284e0 * wr_5_4 + 0.335377480594462111e0 * wr_7_4;
  results[k++] =
      0.806372951324552534e-1 * wr_5_4 + 0.193529508317892608e0 * wr_7_4;
  results[k++] = -0.302371578407381782e0 * wr_4_4;
  results[k++] = -0.376461626210521351e0 * wr_2_0 +
                 0.330595378217087154e0 * wr_4_0 -
                 0.416003923020390371e-1 * wr_6_0;
  results[k++] =
      -0.494789855575715643e0 * wr_4_4 - 0.348053853272519330e0 * wr_6_4;
  results[k++] = 0.158730158730158730e-1 * wr_2_0 +
                 0.251678646818158148e0 * wr_4_0 -
                 0.219253318718297776e0 * wr_6_0;
  results[k++] =
      -0.280551545385621655e0 * wr_4_4 - 0.284184781175732461e0 * wr_6_4;
  results[k++] =
      0.134980425208295144e-1 * wr_2_0 + 0.278608067443914602e-1 * wr_4_0 -
      0.213296407884825238e0 * wr_6_0 + 0.158930241941090754e0 * wr_8_0;
  results[k++] = -0.610399692967810855e-1 * wr_4_4 +
                 0.401897971758751085e-1 * wr_6_4 +
                 0.645577694593753056e0 * wr_8_4;
  results[k++] =
      0.583211843519804309e0 * wr_2_0 - 0.312984318574380637e0 * wr_4_0;
  results[k++] =
      0.319385478419519950e0 * wr_4_4 - 0.269601355461557440e0 * wr_6_4;
  results[k++] = 0.291605921759902156e0 * wr_2_0 +
                 0.341437438444778876e0 * wr_4_0 -
                 0.161117626581492417e0 * wr_6_0;
  results[k++] =
      -0.280551545385621655e0 * wr_4_4 - 0.284184781175732461e0 * wr_6_4;
  results[k++] = -0.476190476190476190e-1 * wr_2_0 +
                 0.580796877272672649e-1 * wr_4_0 +
                 0.394655973692935997e0 * wr_6_0;
  results[k++] = 0.807482893971504563e-1 * wr_4_4 +
                 0.197474101629055734e0 * wr_6_4 +
                 0.732016299370919148e0 * wr_8_4;
  results[k++] =
      -0.918320495047464319e-2 * wr_2_0 - 0.631823708325350517e-1 * wr_4_0 -
      0.130229827109225550e0 * wr_6_0 + 0.420489895983453445e0 * wr_8_0;
  results[k++] =
      0.162623125636348342e0 * wr_4_4 - 0.352991033961509441e0 * wr_6_4;
  results[k++] = 0.445435403187373976e0 * wr_2_0 -
                 0.162985719454690042e0 * wr_4_0 -
                 0.140634994209774882e0 * wr_6_0;
  results[k++] =
      -0.121967344227261256e0 * wr_4_4 + 0.336181937106199468e-1 * wr_6_4;
  results[k++] =
      -0.341476466556976396e0 * wr_2_0 - 0.149776131495497969e0 * wr_4_0 +
      0.192714990185241545e0 * wr_6_0 + 0.125645388403866723e0 * wr_8_0;
  results[k++] = -0.434092469817614171e0 * wr_4_4 -
                 0.178419411440966603e0 * wr_6_4 +
                 0.578709697594946524e0 * wr_8_4;
  results[k++] =
      -0.159710992937796936e-1 * wr_2_0 + 0.140102742193138787e0 * wr_4_0 -
      0.335801425453863458e0 * wr_8_0 + 0.277335948680260247e0 * wr_6_0;
  results[k++] = -0.225698330198567417e0 * wr_4_4 -
                 0.271732624638935741e0 * wr_6_4 -
                 0.272806367671868626e0 * wr_8_4;
  results[k++] =
      0.445361771415123290e0 * wr_4_0 - 0.144107986163857641e0 * wr_6_0;
  results[k++] =
      -0.595139700643615584e-1 * wr_4_4 - 0.344483975793215216e0 * wr_6_4;
  results[k++] = 0.652050663696626329e0 * wr_2_0 -
                 0.159057775505401175e-1 * wr_4_0 +
                 0.288215972327715282e0 * wr_6_0;
  results[k++] = 0.328143063183776831e0 * wr_4_4 -
                 0.363117993645623080e-1 * wr_6_4 +
                 0.510373980379207502e0 * wr_8_4;
  results[k++] =
      0.232318750909069060e0 * wr_2_0 + 0.339660339660339660e0 * wr_4_0 +
      0.117663677987169814e0 * wr_6_0 + 0.332426451098750089e0 * wr_8_0;
  results[k++] = -0.225698330198567417e0 * wr_4_4 -
                 0.271732624638935741e0 * wr_6_4 -
                 0.272806367671868626e0 * wr_8_4;
  results[k++] =
      -0.479132978813390809e-1 * wr_2_0 - 0.247240133282009624e-1 * wr_4_0 +
      0.166401569208156148e0 * wr_6_0 + 0.470121995635408841e0 * wr_8_0;
  results[k++] =
      -0.201709162263719681e-1 * wr_4_4 + 0.422194653094365887e0 * wr_6_4;
  results[k++] = -0.384620274798976977e0 * wr_4_0 +
                 0.209323490169171546e0 * wr_6_0 +
                 0.968042741745449354e-1 * wr_8_0;
  results[k++] = 0.164470547691956047e0 * wr_4_4 -
                 0.187642068041940394e0 * wr_6_4 +
                 0.575616341209138277e0 * wr_8_4;
  results[k++] =
      0.578144970555724636e0 * wr_2_0 - 0.137691634261655999e0 * wr_4_0 +
      0.137903957648009698e0 * wr_6_0 - 0.333951265779248977e0 * wr_8_0;
  results[k++] = -0.190032509227065021e0 * wr_4_4 +
                 0.127674255828710050e-1 * wr_6_4 -
                 0.341810017835191807e-1 * wr_8_4;
  results[k++] =
      -0.237716527440223069e0 * wr_2_0 - 0.275997278802911291e0 * wr_4_0 +
      0.412791489439229004e-1 * wr_6_0 + 0.293639836799977151e0 * wr_8_0;
  results[k++] = -0.403119827761058517e0 * wr_4_4 -
                 0.310560902353228766e0 * wr_6_4 -
                 0.245321624211090261e0 * wr_8_4;
  results[k++] =
      -0.119332749693435199e0 * wr_4_0 + 0.372340685649626185e0 * wr_6_0;
  results[k++] = -0.650126923402413265e-1 * wr_4_4 +
                 0.237350527950729239e0 * wr_6_4 +
                 0.364051739326703451e0 * wr_8_4;
  results[k++] = 0.364882830793388397e0 * wr_4_0 +
                 0.165484749177611638e0 * wr_6_0 +
                 0.306121993630978229e0 * wr_8_0;
  results[k++] = -0.116370670536761354e0 * wr_4_4 -
                 0.135519271363623618e0 * wr_6_4 -
                 0.474447408511774580e0 * wr_8_4;
  results[k++] =
      0.708080087608965005e0 * wr_2_0 + 0.562123742984965307e-1 * wr_4_0 +
      0.675588659496011123e-1 * wr_6_0 + 0.490806120069437591e0 * wr_8_0;
  results[k++] = 0.326564384263282338e0 * wr_4_4 +
                 0.156020517768592177e-1 * wr_6_4 -
                 0.127920239535291060e0 * wr_8_4;
  results[k++] =
      0.154057917406604252e0 * wr_2_0 + 0.298111132897974707e0 * wr_4_0 +
      0.305736526350309696e0 * wr_6_0 + 0.121468317512135362e0 * wr_8_0;
  results[k++] =
      -0.259100110252518288e0 * wr_4_4 + 0.120515300277021580e0 * wr_6_4;
  results[k++] = 0.854952200348017385e0 * wr_8_8;
  results[k++] = -0.528165609360902663e0 * wr_4_4 +
                 0.160687067036028773e0 * wr_6_4 +
                 0.448116713873433091e-1 * wr_8_4;
  results[k++] = 0.720958998312622904e0 * wr_8_8;
  results[k++] = -0.164000551042777257e0 * wr_6_4 +
                 0.146354305893690486e0 * wr_8_4 -
                 0.244101177852897735e0 * wr_4_4;
  results[k++] = 0.337197695199695879e0 * wr_8_8;
  results[k++] = 0.258908397233111219e0 * wr_4_4 -
                 0.463863607042713265e0 * wr_6_4 +
                 0.181104213768237971e0 * wr_8_4;
  results[k++] = 0.100676445141526733e1 * wr_8_8;
  results[k++] = -0.220029828287444381e0 * wr_4_4 +
                 0.177393718796724785e0 * wr_6_4 -
                 0.395765965713481933e-1 * wr_8_4;
  results[k++] = -0.755073338561450494e0 * wr_8_8;
  results[k++] = 0.463863607042713265e0 * wr_4_4 -
                 0.373978796003382871e0 * wr_6_4 +
                 0.834347914687139125e-1 * wr_8_4;
  results[k++] = 0.411009866190071760e0 * wr_8_8;
  results[k++] = -0.433904672936743237e0 * wr_4_4 +
                 0.349825131140720619e0 * wr_6_4 -
                 0.780461009532142093e-1 * wr_8_4;
  results[k++] = -0.145313931758787625e0 * wr_8_8;
  results[k++] =
      -0.108785658644084235e0 * wr_6_4 + 0.631023014832952649e0 * wr_8_4;
  results[k++] = -0.688458171308279994e-1 * wr_4_0 +
                 0.372340685649626185e0 * wr_6_0 -
                 0.275509794267880406e0 * wr_8_0;
  results[k++] = -0.183998185868607528e-1 * wr_4_4 +
                 0.341191383929173282e0 * wr_6_4 +
                 0.254836217528692416e0 * wr_8_4;
  results[k++] = -0.362849315848091488e0 * wr_4_0 -
                 0.523308725422928865e-1 * wr_6_0 +
                 0.309773677358543794e0 * wr_8_0;
  results[k++] = 0.150233889658622283e0 * wr_4_4 -
                 0.298768670769456688e0 * wr_6_4 -
                 0.277430533744975469e0 * wr_8_4;
  results[k++] =
      0.676553097759318853e0 * wr_2_0 - 0.969755587806344618e-1 * wr_4_0 -
      0.823200971673808962e-1 * wr_8_0 - 0.244755244755244755e0 * wr_6_0;
  results[k++] = -0.371809907495751730e0 * wr_4_4 -
                 0.142744157504847209e-1 * wr_6_4 +
                 0.159231340681230080e-1 * wr_8_4;
  results[k++] =
      -0.182033224095372801e0 * wr_6_0 + 0.318366873376217358e0 * wr_8_0;
  results[k++] = -0.613327286228691759e-2 * wr_4_4 +
                 0.222516119953808662e0 * wr_6_4 -
                 0.546077608990055177e0 * wr_8_4;
  results[k++] = -0.114743028551379999e0 * wr_4_0 +
                 0.744681371299252369e-1 * wr_6_0 +
                 0.495917629682184730e0 * wr_8_0;
  results[k++] = -0.775804470245075695e-1 * wr_4_4 +
                 0.406557814090870854e0 * wr_6_4 +
                 0.767488454945517702e-1 * wr_8_4;
  results[k++] = 0.281061871492482654e0 * wr_4_0 +
                 0.337794329748005561e0 * wr_6_0 +
                 0.149968536687883708e0 * wr_8_0;
  results[k++] = -0.253994521093664041e0 * wr_4_4 +
                 0.204776929571277232e0 * wr_6_4 +
                 0.124004313835231129e0 * wr_8_4;
  results[k++] =
      0.770289587033021258e0 * wr_2_0 + 0.198740755265316471e0 * wr_4_0 -
      0.238856661211179450e-1 * wr_6_0 - 0.819429126073929032e-1 * wr_8_0;
  results[k++] =
      -0.161355207410792546e0 * wr_6_4 + 0.850871259623034098e-1 * wr_8_4;
  results[k++] = -0.468276605719285254e0 * wr_8_8;
  results[k++] = -0.136456706766711374e0 * wr_4_4 -
                 0.374050708088655448e0 * wr_6_4 +
                 0.230717014628553476e0 * wr_8_4;
  results[k++] = -0.394885506412152558e0 * wr_8_8;
  results[k++] = -0.299422670831354988e0 * wr_6_4 +
                 0.267205182419951863e0 * wr_8_4 -
                 0.445665738078708534e0 * wr_4_4;
  results[k++] = -0.184690783999624902e0 * wr_8_8;
  results[k++] = -0.551483214691434472e0 * wr_4_4 -
                 0.211723800985838578e-1 * wr_6_4 +
                 0.146430512254435724e0 * wr_8_4;
  results[k++] = 0.597614304667196822e0 * wr_1_0 -
                 0.521640530957301061e0 * wr_3_0 +
                 0.104031297322059877e0 * wr_5_0;
  results[k++] = 0.778498944161522970e-1 * wr_5_4;
  results[k++] =
      -0.209980262782904015e0 * wr_1_0 - 0.224941663320633414e0 * wr_3_0 +
      0.349220515017108154e0 * wr_5_0 - 0.514841441885902873e-1 * wr_7_0;
  results[k++] =
      -0.220029828287444381e0 * wr_5_4 - 0.273814897424375230e0 * wr_7_4;
  results[k++] =
      -0.280291655060840565e-1 * wr_1_0 + 0.600525690068923967e-1 * wr_3_0 +
      0.253345747311004171e0 * wr_5_0 - 0.245441027115733549e0 * wr_7_0;
  results[k++] =
      -0.277526361300481530e0 * wr_5_4 - 0.345366138507265904e0 * wr_7_4;
  results[k++] =
      0.243465253084892081e-1 * wr_3_0 + 0.213639892538733799e-1 * wr_5_0 -
      0.238324527859437565e0 * wr_7_0 + 0.180723561147159503e0 * wr_9_0;
  results[k++] = -0.902793320794269668e-1 * wr_5_4 -
                 0.178434444580514476e-1 * wr_7_4 +
                 0.608832071758413405e0 * wr_9_4;
  results[k++] = 0.731213209387641123e0 * wr_9_8;
  results[k++] = 0.301511344577763623e0 * wr_5_4;
  results[k++] =
      0.771516749810459554e0 * wr_1_0 - 0.241746889207614089e0 * wr_5_0;
  results[k++] =
      -0.220029828287444381e0 * wr_5_4 - 0.273814897424375230e0 * wr_7_4;
  results[k++] =
      0.125988157669742409e0 * wr_1_0 + 0.314918328648886780e0 * wr_3_0 +
      0.258119511099601679e0 * wr_5_0 - 0.154452432565770862e0 * wr_7_0;
  results[k++] =
      -0.104895104895104895e0 * wr_5_4 - 0.130536130536130536e0 * wr_7_4;
  results[k++] =
      -0.317820863081864106e-1 * wr_1_0 - 0.453954751950806736e-1 * wr_3_0 +
      0.957556918715325375e-1 * wr_5_0 + 0.389625551568295060e0 * wr_7_0;
  results[k++] = 0.884553191655490724e-1 * wr_5_4 +
                 0.225821226575578220e0 * wr_7_4 +
                 0.745663957424832741e0 * wr_9_4;
  results[k++] =
      -0.178909692046666099e-1 * wr_3_0 - 0.784963088134393298e-1 * wr_5_0 -
      0.127490761407602133e0 * wr_7_0 + 0.442680509309215689e0 * wr_9_0;
  results[k++] = 0.580498603554535102e-1 * wr_9_4 +
                 0.113622914750153292e0 * wr_5_4 -
                 0.155953020245308439e0 * wr_7_4;
  results[k++] = -0.350689431732027069e0 * wr_3_0 +
                 0.331400168021280434e0 * wr_5_0 -
                 0.442276595827745362e-1 * wr_7_0;
  results[k++] =
      -0.389709850091555477e0 * wr_5_4 - 0.303670013058354917e0 * wr_7_4;
  results[k++] = 0.695665592999934573e0 * wr_1_0 -
                 0.159692739209759975e0 * wr_3_0 -
                 0.202020202020202020e0 * wr_7_0;
  results[k++] = -0.107443061870050707e0 * wr_7_4;
  results[k++] =
      -0.172283407156048836e0 * wr_1_0 - 0.307450202386907331e0 * wr_3_0 -
      0.256939483508724975e-1 * wr_5_0 + 0.131172466457755513e0 * wr_7_0 +
      0.158074047474629945e0 * wr_9_0;
  results[k++] = -0.140731551031455296e0 * wr_5_4 -
                 0.858493121760511609e-1 * wr_7_4 +
                 0.575197135397995957e0 * wr_9_4;
  results[k++] =
      -0.245163586350269850e-1 * wr_1_0 + 0.576143944665104588e-2 * wr_3_0 +
      0.180558664158853934e0 * wr_5_0 + 0.243094296738962032e0 * wr_7_0 -
      0.347134742348207010e0 * wr_9_0;
  results[k++] = -0.213639892538733799e0 * wr_5_4 -
                 0.316689723057417162e0 * wr_7_4 -
                 0.327445373730236747e0 * wr_9_4;
  results[k++] = 0.617987955027658577e0 * wr_9_8;
  results[k++] =
      0.363030695172514970e0 * wr_5_4 - 0.207446111527151411e0 * wr_7_4;
  results[k++] = 0.308014057808608377e0 * wr_3_0 +
                 0.291072103332411356e0 * wr_5_0 -
                 0.151066216746103968e0 * wr_7_0;
  results[k++] = -0.284267621807480580e0 * wr_7_4;
  results[k++] = 0.788810637746615471e0 * wr_1_0 +
                 0.120716364037633773e0 * wr_3_0 +
                 0.320697128613889768e0 * wr_7_0;
  results[k++] = -0.140731551031455296e0 * wr_5_4 -
                 0.858493121760511609e-1 * wr_7_4 +
                 0.575197135397995957e0 * wr_9_4;
  results[k++] =
      0.103370044293629302e0 * wr_1_0 + 0.272313036399832207e0 * wr_3_0 +
      0.282633431859597474e0 * wr_5_0 + 0.640609719909968787e-1 * wr_7_0 +
      0.368839444107469872e0 * wr_9_0;
  results[k++] = -0.146598855498979825e0 * wr_7_4 -
                 0.151577754288494094e0 * wr_9_4 -
                 0.988960533128038497e-1 * wr_5_4;
  results[k++] =
      -0.264806938637970596e-1 * wr_1_0 - 0.560075926549858424e-1 * wr_3_0 +
      0.195053374586203518e0 * wr_7_0 + 0.449938050513470344e0 * wr_9_0;
  results[k++] = 0.129803433839164154e0 * wr_9_4 +
                 0.254068561183006293e0 * wr_5_4 -
                 0.348721554564910598e0 * wr_7_4;
  results[k++] = -0.521972047057467787e-1 * wr_3_0 +
                 0.281863761485750444e0 * wr_5_0 -
                 0.205716225669423810e0 * wr_7_0;
  results[k++] =
      0.248593154517803820e0 * wr_5_4 + 0.141246110521479443e0 * wr_7_4;
  results[k++] =
      -0.347053550201690897e0 * wr_3_0 - 0.817053853144298978e-1 * wr_5_0 +
      0.142045537267114908e0 * wr_7_0 + 0.146611219928259938e0 * wr_9_0;
  results[k++] = -0.338292434509707852e0 * wr_5_4 -
                 0.134593353623113712e0 * wr_7_4 +
                 0.604916712356999018e0 * wr_9_4;
  results[k++] =
      0.750056346493449404e0 * wr_1_0 - 0.209033578865327939e-1 * wr_3_0 -
      0.708209347610955676e-1 * wr_5_0 + 0.148132146917873844e0 * wr_7_0 -
      0.363086528221438191e0 * wr_9_0;
  results[k++] = 0.387902235122537847e-1 * wr_5_4 -
                 0.893316029708668043e-1 * wr_7_4 -
                 0.158543164501252064e0 * wr_9_4;
  results[k++] =
      -0.114033001364603287e0 * wr_1_0 - 0.267981979731434440e0 * wr_3_0 -
      0.194841250084511616e0 * wr_5_0 + 0.107255457249509888e0 * wr_7_0 +
      0.260923999741149891e0 * wr_9_0;
  results[k++] = -0.119244453159189882e0 * wr_5_4 -
                 0.176762365859505002e0 * wr_7_4 -
                 0.182765700103923387e0 * wr_9_4;
  results[k++] = 0.344933873915324953e0 * wr_9_8;
  results[k++] =
      0.142931014364079462e0 * wr_5_4 - 0.446659419887748319e0 * wr_7_4;
  results[k++] = -0.825310271821094205e-1 * wr_3_0 +
                 0.445665738078708534e-1 * wr_5_0 +
                 0.390319094861145492e0 * wr_7_0;
  results[k++] = 0.345268270163616416e0 * wr_5_4 +
                 0.106350012627937463e-1 * wr_7_4 +
                 0.493912427385530418e0 * wr_9_4;
  results[k++] =
      0.255031233424658589e0 * wr_3_0 + 0.300204754886765022e0 * wr_5_0 +
      0.759866970613166559e-1 * wr_7_0 + 0.359122679391201392e0 * wr_9_0;
  results[k++] = 0.837964600720668647e-1 * wr_5_4 -
                 0.192978318342436338e0 * wr_7_4 -
                 0.342492379545878858e0 * wr_9_4;
  results[k++] =
      0.810153448469867544e0 * wr_1_0 + 0.203203863282956987e0 * wr_3_0 +
      0.118857889833824451e0 * wr_7_0 + 0.470613928097657722e0 * wr_9_0;
  results[k++] = -0.119244453159189882e0 * wr_5_4 -
                 0.176762365859505002e0 * wr_7_4 -
                 0.182765700103923387e0 * wr_9_4;
  results[k++] =
      0.684198008187619720e-1 * wr_1_0 + 0.203666304595890174e0 * wr_3_0 +
      0.295621207024776245e0 * wr_5_0 + 0.263615822637349604e0 * wr_7_0 +
      0.878358018930603593e-1 * wr_9_0;
  results[k++] = 0.306344546909106769e0 * wr_5_4 -
                 0.420472907522303408e0 * wr_7_4 +
                 0.156511195015830497e0 * wr_9_4;
  results[k++] =
      -0.290294262476838913e0 * wr_5_4 + 0.120955942698682881e0 * wr_7_4;
  results[k++] = 0.593193604505646949e0 * wr_9_8;
  results[k++] = -0.434544500088003883e0 * wr_5_4 +
                 0.929506952059901355e-1 * wr_7_4 +
                 0.470927021875583428e-1 * wr_9_4;
  results[k++] = 0.646386182943862853e0 * wr_9_8;
  results[k++] = -0.996538885586608805e-1 * wr_5_4 -
                 0.212497262367732760e0 * wr_7_4 +
                 0.135768254785076519e0 * wr_9_4;
  results[k++] = 0.344933873915324953e0 * wr_9_8;
  results[k++] = 0.306344546909106769e0 * wr_5_4 -
                 0.420472907522303408e0 * wr_7_4 +
                 0.156511195015830497e0 * wr_9_4;
  results[k++] =
      -0.710728933581089621e-1 * wr_7_0 + 0.947248843944768581e-2 * wr_9_0 +
      0.250872603002127231e0 * wr_1_0 - 0.353736213245493461e0 * wr_3_0 +
      0.221715905268582184e0 * wr_5_0;
  results[k++] = 0.121282251740997702e-1 * wr_9_4 +
                 0.712169307517347277e-1 * wr_5_4 -
                 0.523653902586284763e-1 * wr_7_4;
  results[k++] = 0.591678420410385098e0 * wr_9_8;
  results[k++] = -0.460233786306569476e-1 * wr_9_4 -
                 0.270249250970363034e0 * wr_5_4 +
                 0.198712684537031643e0 * wr_7_4;
  results[k++] = -0.579724088728556522e0 * wr_9_8;
  results[k++] = 0.767927470712787629e-1 * wr_9_4 +
                 0.450926963500797419e0 * wr_5_4 -
                 0.331563943750586337e0 * wr_7_4;
  results[k++] = 0.365606604693820562e0 * wr_9_8;
  results[k++] = -0.647573302737241528e-1 * wr_9_4 -
                 0.380255003478969028e0 * wr_5_4 +
                 0.279599267263947815e0 * wr_7_4;
  results[k++] = -0.142718204876466008e0 * wr_9_8;
  results[k++] = 0.668498607118062801e-1 * wr_5_0 -
                 0.210466178601598059e0 * wr_7_0 +
                 0.136138989933384228e0 * wr_9_0;
  results[k++] = -0.416882125228565098e-1 * wr_5_4 +
                 0.144507459375447985e0 * wr_7_4 +
                 0.725162394914656997e0 * wr_9_4;
  results[k++] =
      -0.562123742984965310e-1 * wr_3_0 + 0.140931880742875222e0 * wr_5_0 +
      0.290422906827421849e0 * wr_7_0 - 0.331160989649406790e0 * wr_9_0;
  results[k++] = 0.204229697939404513e0 * wr_5_4 +
                 0.128716196180296962e0 * wr_7_4 +
                 0.546547030214011257e-1 * wr_9_4;
  results[k++] =
      -0.267981979731434440e0 * wr_3_0 - 0.235153232860617468e0 * wr_5_0 +
      0.823799445741717514e-1 * wr_7_0 + 0.268387172451017764e0 * wr_9_0;
  results[k++] = -0.349596553150354303e0 * wr_5_4 -
                 0.319832140730432496e0 * wr_7_4 -
                 0.241278300375954109e0 * wr_9_4;
  results[k++] =
      0.793328828021917638e0 * wr_1_0 + 0.101692011339889268e0 * wr_3_0 -
      0.191216523854958032e0 * wr_5_0 - 0.204320202645343233e0 * wr_7_0 -
      0.499243976304477512e-1 * wr_9_0;
  results[k++] = 0.175972566151340416e0 * wr_5_4 +
                 0.110907079507147321e0 * wr_7_4 +
                 0.470927021875583428e-1 * wr_9_4;
  results[k++] = 0.121197409301974285e0 * wr_9_8;
  results[k++] = 0.178663767955099328e-1 * wr_5_4 -
                 0.240845765625746642e0 * wr_7_4 +
                 0.435097436948794198e0 * wr_9_4;
  results[k++] = -0.668498607118062801e-1 * wr_5_0 -
                 0.154341864307838577e0 * wr_7_0 +
                 0.408416969800152686e0 * wr_9_0;
  results[k++] = -0.249257842096728428e0 * wr_7_4 -
                 0.465688860106357251e0 * wr_9_4 +
                 0.143129391995099169e0 * wr_5_4;
  results[k++] =
      -0.725698631696182975e-1 * wr_3_0 - 0.363884551377896996e-1 * wr_5_0 +
      0.168720462224962970e0 * wr_7_0 + 0.461729159217258932e0 * wr_9_0;
  results[k++] = 0.364514601313490861e0 * wr_5_4 +
                 0.116452433482504687e0 * wr_7_4 -
                 0.706390532813375144e-1 * wr_9_4;
  results[k++] =
      0.183066543498159448e0 * wr_3_0 + 0.298331874233587997e0 * wr_5_0 +
      0.276651984958039672e0 * wr_7_0 + 0.970641226701419054e-1 * wr_9_0;
  results[k++] = 0.210431387927982146e0 * wr_7_4 +
                 0.893521200508069895e-1 * wr_9_4 +
                 0.333884468845731671e0 * wr_5_4;
  results[k++] =
      0.836242010007090770e0 * wr_1_0 + 0.321578375677721328e0 * wr_3_0 +
      0.806239655522117035e-1 * wr_5_0 - 0.538431010288704257e-1 * wr_7_0 -
      0.757799075155814864e-1 * wr_9_0;
  results[k++] = 0.104340796677220331e0 * wr_9_4 +
                 0.204229697939404513e0 * wr_5_4 -
                 0.280315271681535606e0 * wr_7_4;
  results[k++] = 0.954052785890934791e0 * wr_9_8;
  results[k++] = 0.441668655202472741e-1 * wr_5_4 -
                 0.201348945754068456e0 * wr_7_4 +
                 0.977808773829953985e-1 * wr_9_4;
  results[k++] = 0.278490444133320837e0 * wr_9_8;
  results[k++] = -0.432745136250918854e-1 * wr_5_4 -
                 0.381833943750810752e0 * wr_7_4 +
                 0.213719520907988289e0 * wr_9_4;
  results[k++] = -0.663825549858777647e-1 * wr_9_8;
  results[k++] = -0.300204754886765022e0 * wr_5_4 -
                 0.301007441397157441e0 * wr_7_4 +
                 0.227737715700366300e0 * wr_9_4;
  results[k++] = -0.979626996398121498e-1 * wr_9_8;
  results[k++] = -0.410157779070886711e0 * wr_5_4 -
                 0.548339276832736243e-1 * wr_7_4 +
                 0.120649594683922167e0 * wr_9_4;
  results[k++] =
      -0.129760756397984582e0 * wr_7_0 + 0.172943186466413545e-1 * wr_9_0 +
      0.458028612414344474e0 * wr_1_0 - 0.645831011336714989e0 * wr_3_0 +
      0.404796008910936561e0 * wr_5_0;
  results[k++] = wr_0_0 - 0.993807989999906532e-1 * wr_2_0 -
                 0.393939393939393939e0 * wr_4_0 +
                 0.112060645702066489e0 * wr_6_0;
  results[k++] =
      0.439132628672407230e0 * wr_4_4 + 0.145247197458249232e0 * wr_6_4;
  results[k++] =
      -0.267247607178241473e0 * wr_2_0 - 0.137903957648009698e0 * wr_4_0 +
      0.344739054669923908e0 * wr_6_0 - 0.561903259060819587e-1 * wr_8_0;
  results[k++] = 0.302132433492207936e0 * wr_4_4 -
                 0.649565214115959910e-1 * wr_6_4 -
                 0.228246182815010374e0 * wr_8_4;
  results[k++] =
      -0.397775832311450663e-1 * wr_2_0 + 0.923663562426305631e-1 * wr_4_0 +
      0.246690098933761360e0 * wr_6_0 - 0.261358206009074995e0 * wr_8_0;
  results[k++] = 0.780638189722290984e-1 * wr_4_4 -
                 0.242424242424242424e0 * wr_6_4 -
                 0.371313830013329103e0 * wr_8_4;
  results[k++] = 0.564239665226013348e0 * wr_8_8;
  results[k++] =
      -0.687347925204182516e-1 * wr_8_4 + 0.161283555812593039e-1 * wr_10_4 +
      0.983814129420106787e-1 * wr_6_4 - 0.414892223054302823e-1 * wr_4_4;
  results[k++] =
      0.324542294330249729e-1 * wr_4_0 + 0.137665162736993097e-1 * wr_6_0 -
      0.255196052710344206e0 * wr_8_0 + 0.197531207821272436e0 * wr_10_0;
  results[k++] =
      0.693900613086480875e-2 * wr_4_4 - 0.106951871657754011e0 * wr_6_4 -
      0.632268131601643981e-1 * wr_8_4 + 0.578601244194460392e0 * wr_10_4;
  results[k++] =
      0.325312413140474497e0 * wr_8_8 + 0.830571165018198272e0 * wr_10_8;
  results[k++] =
      0.439132628672407230e0 * wr_4_4 + 0.145247197458249232e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.298142396999971959e0 * wr_2_0 -
                 0.909090909090909091e-1 * wr_4_0 -
                 0.201709162263719681e0 * wr_6_0;
  results[k++] = -0.399683641013572184e0 * wr_4_4 -
                 0.319166345990004024e0 * wr_6_4 -
                 0.258806844612129396e0 * wr_8_4;
  results[k++] =
      0.181818181818181818e0 * wr_2_0 + 0.312736780069900657e0 * wr_4_0 +
      0.210483185969565865e0 * wr_6_0 - 0.148665628435162971e0 * wr_8_0;
  results[k++] = 0.127477682569972022e0 * wr_4_4 +
                 0.228390652007755534e-1 * wr_6_4 -
                 0.267508652344466533e-1 * wr_8_4;
  results[k++] =
      -0.487173910586969933e-1 * wr_2_0 - 0.377084070324300891e-1 * wr_4_0 +
      0.120852973396883174e0 * wr_6_0 + 0.384116546886865190e0 * wr_8_0;
  results[k++] = 0.163748048120053648e0 * wr_4_4 -
                 0.293373104383259175e0 * wr_6_4 +
                 0.114540361872331513e0 * wr_8_4;
  results[k++] =
      0.398993481774313376e0 * wr_10_8 - 0.338595894819402667e0 * wr_8_8;
  results[k++] =
      -0.134373275920352839e-1 * wr_4_4 + 0.785961243985599477e-1 * wr_6_4 +
      0.228551301442879010e0 * wr_8_4 + 0.746970994286678646e0 * wr_10_4;
  results[k++] =
      -0.251389380216200594e-1 * wr_4_0 - 0.888624804388846871e-1 * wr_6_0 -
      0.123546257770629154e0 * wr_8_0 + 0.459021046948814638e0 * wr_10_0;
  results[k++] =
      0.398615554234643520e-1 * wr_4_4 + 0.787681701157003791e-1 * wr_6_4 -
      0.220127508569405729e0 * wr_8_4 + 0.100721548322421987e0 * wr_10_4;
  results[k++] =
      -0.267247607178241473e0 * wr_2_0 - 0.137903957648009698e0 * wr_4_0 +
      0.344739054669923908e0 * wr_6_0 - 0.561903259060819587e-1 * wr_8_0;
  results[k++] = -0.399683641013572184e0 * wr_4_4 -
                 0.319166345990004024e0 * wr_6_4 -
                 0.258806844612129396e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.112932726136353015e0 * wr_2_0 -
                 0.158508158508158508e0 * wr_4_0 +
                 0.560303228510332445e-1 * wr_6_0 -
                 0.237447465070535778e0 * wr_8_0;
  results[k++] = 0.255348511657420100e0 * wr_4_4 -
                 0.548982804433743394e-1 * wr_6_4 -
                 0.192903232531648841e0 * wr_8_4;
  results[k++] =
      -0.239206378325565006e0 * wr_2_0 - 0.260212729907430328e0 * wr_4_0 +
      0.326227386268994411e-1 * wr_6_0 + 0.874251451906420917e-1 * wr_8_0 +
      0.182743047411142390e0 * wr_10_0;
  results[k++] =
      0.307887854142101877e0 * wr_4_4 + 0.123302362132338083e-1 * wr_6_4 -
      0.380855868742786530e-1 * wr_8_4 + 0.564239196140955694e0 * wr_10_4;
  results[k++] =
      0.100393590263654527e0 * wr_8_8 + 0.443630468576164982e0 * wr_10_8;
  results[k++] =
      0.203320258212796560e0 * wr_8_4 - 0.477083191944650121e-1 * wr_10_4 -
      0.291016144069502148e0 * wr_6_4 + 0.122726774648840868e0 * wr_4_4;
  results[k++] =
      -0.367996371737215056e-1 * wr_2_0 + 0.274288300892565080e-1 * wr_4_0 +
      0.203609521526360866e0 * wr_6_0 + 0.214454575023649336e0 * wr_8_0 -
      0.353151490009600679e0 * wr_10_0;
  results[k++] =
      0.718404992998237713e-1 * wr_4_4 - 0.170351947682835510e0 * wr_6_4 -
      0.323047388665756432e0 * wr_8_4 - 0.357351490889271939e0 * wr_10_4;
  results[k++] =
      0.481143547642927761e0 * wr_8_8 + 0.458974339134198806e0 * wr_10_8;
  results[k++] = 0.302132433492207936e0 * wr_4_4 -
                 0.649565214115959910e-1 * wr_6_4 -
                 0.228246182815010374e0 * wr_8_4;
  results[k++] =
      0.181818181818181818e0 * wr_2_0 + 0.312736780069900657e0 * wr_4_0 +
      0.210483185969565865e0 * wr_6_0 - 0.148665628435162971e0 * wr_8_0;
  results[k++] = 0.255348511657420100e0 * wr_4_4 -
                 0.548982804433743394e-1 * wr_6_4 -
                 0.192903232531648841e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.338798178409059045e0 * wr_2_0 +
                 0.279720279720279720e-1 * wr_4_0 +
                 0.336181937106199468e-1 * wr_6_0 +
                 0.332426451098750089e0 * wr_8_0;
  results[k++] =
      -0.380065018454130042e0 * wr_4_4 - 0.245434981204837908e0 * wr_6_4 -
      0.730394038110988805e-1 * wr_8_4 + 0.609447987011271138e0 * wr_10_4;
  results[k++] =
      0.155023451133323700e0 * wr_2_0 + 0.281061871492482654e0 * wr_4_0 +
      0.241622297043279273e0 * wr_6_0 + 0.361646614788006647e-1 * wr_8_0 +
      0.394770101569489215e0 * wr_10_0;
  results[k++] =
      0.244101177852897735e0 * wr_4_4 - 0.366589467036796222e0 * wr_6_4 +
      0.539200074345175475e-1 * wr_8_4 + 0.474454614409640149e-1 * wr_10_4;
  results[k++] =
      -0.446088273913344057e0 * wr_10_8 + 0.378561718859276621e0 * wr_8_8;
  results[k++] =
      0.105163722761035598e0 * wr_4_4 + 0.118747484407574201e-1 * wr_6_4 -
      0.414818381795716909e-1 * wr_8_4 - 0.642414584786777111e-1 * wr_10_4;
  results[k++] =
      -0.418982300360334323e-1 * wr_2_0 - 0.562123742984965307e-1 * wr_4_0 +
      0.198702546910591507e-1 * wr_6_0 + 0.213471960117920590e0 * wr_8_0 +
      0.434247111726438137e0 * wr_10_0;
  results[k++] =
      0.155983008327547987e0 * wr_4_4 + 0.176130982841973523e-1 * wr_6_4 -
      0.381470556481115489e0 * wr_8_4 + 0.199233279365507915e0 * wr_10_4;
  results[k++] =
      -0.397775832311450663e-1 * wr_2_0 + 0.923663562426305631e-1 * wr_4_0 +
      0.246690098933761360e0 * wr_6_0 - 0.261358206009074995e0 * wr_8_0;
  results[k++] = 0.127477682569972022e0 * wr_4_4 +
                 0.228390652007755534e-1 * wr_6_4 -
                 0.267508652344466533e-1 * wr_8_4;
  results[k++] =
      -0.239206378325565006e0 * wr_2_0 - 0.260212729907430328e0 * wr_4_0 +
      0.326227386268994411e-1 * wr_6_0 + 0.874251451906420917e-1 * wr_8_0 +
      0.182743047411142390e0 * wr_10_0;
  results[k++] =
      -0.380065018454130042e0 * wr_4_4 - 0.245434981204837908e0 * wr_6_4 -
      0.730394038110988805e-1 * wr_8_4 + 0.609447987011271138e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.229019549712727251e0 * wr_2_0 -
      0.979020979020979021e-1 * wr_4_0 - 0.114088892683099367e-1 * wr_6_0 +
      0.134345276289908401e0 * wr_8_0 - 0.377774756394403064e0 * wr_10_0;
  results[k++] =
      0.311875104219345009e0 * wr_4_4 + 0.108666301461918310e-1 * wr_6_4 -
      0.163228848238841740e0 * wr_8_4 - 0.233284196460572573e0 * wr_10_4;
  results[k++] =
      -0.200793213705313369e0 * wr_8_8 + 0.550255874255308054e0 * wr_10_8;
  results[k++] =
      -0.302625291168402626e0 * wr_8_4 + 0.710098645077924859e-1 * wr_10_4 +
      0.433153322290026593e0 * wr_6_4 - 0.182668595046702886e0 * wr_4_4;
  results[k++] =
      -0.171166246118314355e0 * wr_2_0 - 0.265365957496647217e0 * wr_4_0 -
      0.136375125996732638e0 * wr_6_0 + 0.142271017438010565e0 * wr_8_0 +
      0.236536477198871339e0 * wr_10_0;
  results[k++] =
      0.285142952429115438e0 * wr_4_4 + 0.543331507309591547e-1 * wr_6_4 -
      0.759203945296938327e-1 * wr_8_4 - 0.135304833947132092e0 * wr_10_4;
  results[k++] =
      0.409224083871090642e0 * wr_8_8 + 0.904162664188075253e-1 * wr_10_8;
  results[k++] = 0.780638189722290984e-1 * wr_4_4 -
                 0.242424242424242424e0 * wr_6_4 -
                 0.371313830013329103e0 * wr_8_4;
  results[k++] =
      -0.487173910586969933e-1 * wr_2_0 - 0.377084070324300891e-1 * wr_4_0 +
      0.120852973396883174e0 * wr_6_0 + 0.384116546886865190e0 * wr_8_0;
  results[k++] =
      0.307887854142101877e0 * wr_4_4 + 0.123302362132338083e-1 * wr_6_4 -
      0.380855868742786530e-1 * wr_8_4 + 0.564239196140955694e0 * wr_10_4;
  results[k++] =
      0.155023451133323700e0 * wr_2_0 + 0.281061871492482654e0 * wr_4_0 +
      0.241622297043279273e0 * wr_6_0 + 0.361646614788006647e-1 * wr_8_0 +
      0.394770101569489215e0 * wr_10_0;
  results[k++] =
      0.311875104219345009e0 * wr_4_4 + 0.108666301461918310e-1 * wr_6_4 -
      0.163228848238841740e0 * wr_8_4 - 0.233284196460572573e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.390680408333475898e0 * wr_2_0 +
      0.903711672942442173e-1 * wr_4_0 - 0.182542228292958987e-2 * wr_6_0 +
      0.152946929930049564e0 * wr_8_0 + 0.453329707673283677e0 * wr_10_0;
  results[k++] =
      0.114460235691226084e0 * wr_4_4 - 0.155093768415742134e-1 * wr_6_4 -
      0.232968057686172898e0 * wr_8_4 + 0.127128050443887528e0 * wr_10_4;
  results[k++] =
      0.307356204543802398e0 * wr_10_8 - 0.260830198636352701e0 * wr_8_8;
  results[k++] =
      -0.338137945657892498e0 * wr_4_4 - 0.269179197062148305e0 * wr_6_4 -
      0.248084079824834453e0 * wr_8_4 - 0.199181538793151987e0 * wr_10_4;
  results[k++] =
      0.108255039254965612e0 * wr_2_0 + 0.228079612694997310e0 * wr_4_0 +
      0.287504009561410404e0 * wr_6_0 + 0.233602161992470421e0 * wr_8_0 +
      0.664883571254149391e-1 * wr_10_0;
  results[k++] =
      0.286594070973451182e0 * wr_4_4 - 0.212370888724460593e0 * wr_6_4 -
      0.296748512495073702e0 * wr_8_4 + 0.201929612667338353e0 * wr_10_4;
  results[k++] = 0.564239665226013348e0 * wr_8_8;
  results[k++] = 0.163748048120053648e0 * wr_4_4 -
                 0.293373104383259175e0 * wr_6_4 +
                 0.114540361872331513e0 * wr_8_4;
  results[k++] =
      0.100393590263654527e0 * wr_8_8 + 0.443630468576164982e0 * wr_10_8;
  results[k++] =
      0.244101177852897735e0 * wr_4_4 - 0.366589467036796222e0 * wr_6_4 +
      0.539200074345175475e-1 * wr_8_4 + 0.474454614409640149e-1 * wr_10_4;
  results[k++] =
      -0.200793213705313369e0 * wr_8_8 + 0.550255874255308054e0 * wr_10_8;
  results[k++] =
      0.114460235691226084e0 * wr_4_4 - 0.155093768415742134e-1 * wr_6_4 -
      0.232968057686172898e0 * wr_8_4 + 0.127128050443887528e0 * wr_10_4;
  results[k++] =
      wr_0_0 - 0.740945602011764634e0 * wr_2_0 +
      0.248520710059171598e0 * wr_4_0 - 0.501991127805637214e-2 * wr_6_0 -
      0.227353544490614217e-1 * wr_8_0 + 0.503699675192537419e-2 * wr_10_0;
  results[k++] =
      -0.177199226236389131e0 * wr_8_8 + 0.319011340731229943e0 * wr_10_8;
  results[k++] =
      -0.654058489664149052e-1 * wr_4_4 + 0.325696913673058481e0 * wr_6_4 -
      0.390086050079173225e0 * wr_8_4 + 0.139840855488276281e0 * wr_10_4;
  results[k++] =
      0.217410332199690364e0 * wr_2_0 - 0.388915425447455229e0 * wr_4_0 +
      0.288699457584936639e0 * wr_6_0 - 0.104254882196872009e0 * wr_8_0 +
      0.151738220871037938e-1 * wr_10_0;
  results[k++] =
      -0.687347925204182516e-1 * wr_8_4 + 0.161283555812593039e-1 * wr_10_4 +
      0.983814129420106787e-1 * wr_6_4 - 0.414892223054302823e-1 * wr_4_4;
  results[k++] =
      0.398993481774313376e0 * wr_10_8 - 0.338595894819402667e0 * wr_8_8;
  results[k++] =
      0.203320258212796560e0 * wr_8_4 - 0.477083191944650121e-1 * wr_10_4 -
      0.291016144069502148e0 * wr_6_4 + 0.122726774648840868e0 * wr_4_4;
  results[k++] =
      -0.446088273913344057e0 * wr_10_8 + 0.378561718859276621e0 * wr_8_8;
  results[k++] =
      -0.302625291168402626e0 * wr_8_4 + 0.710098645077924859e-1 * wr_10_4 +
      0.433153322290026593e0 * wr_6_4 - 0.182668595046702886e0 * wr_4_4;
  results[k++] =
      0.307356204543802398e0 * wr_10_8 - 0.260830198636352701e0 * wr_8_8;
  results[k++] =
      wr_0_0 - 0.860026145192226807e0 * wr_2_0 +
      0.461538461538461538e0 * wr_4_0 - 0.163147116536832095e0 * wr_6_0 +
      0.343673962602091258e-1 * wr_8_0 - 0.327404788875149322e-2 * wr_10_0;
  results[k++] =
      0.239246299415947693e0 * wr_8_4 - 0.561382270461439171e-1 * wr_10_4 -
      0.342437768626366300e0 * wr_6_4 + 0.144412204332633203e0 * wr_4_4;
  results[k++] =
      -0.128065085226584333e0 * wr_10_8 + 0.108679249431813625e0 * wr_8_8;
  results[k++] =
      0.324542294330249729e-1 * wr_4_0 + 0.137665162736993097e-1 * wr_6_0 -
      0.255196052710344206e0 * wr_8_0 + 0.197531207821272436e0 * wr_10_0;
  results[k++] =
      -0.134373275920352839e-1 * wr_4_4 + 0.785961243985599477e-1 * wr_6_4 +
      0.228551301442879010e0 * wr_8_4 + 0.746970994286678646e0 * wr_10_4;
  results[k++] =
      -0.367996371737215056e-1 * wr_2_0 + 0.274288300892565080e-1 * wr_4_0 +
      0.203609521526360866e0 * wr_6_0 + 0.214454575023649336e0 * wr_8_0 -
      0.353151490009600679e0 * wr_10_0;
  results[k++] =
      0.105163722761035598e0 * wr_4_4 + 0.118747484407574201e-1 * wr_6_4 -
      0.414818381795716909e-1 * wr_8_4 - 0.642414584786777111e-1 * wr_10_4;
  results[k++] =
      -0.171166246118314355e0 * wr_2_0 - 0.265365957496647217e0 * wr_4_0 -
      0.136375125996732638e0 * wr_6_0 + 0.142271017438010565e0 * wr_8_0 +
      0.236536477198871339e0 * wr_10_0;
  results[k++] =
      -0.338137945657892498e0 * wr_4_4 - 0.269179197062148305e0 * wr_6_4 -
      0.248084079824834453e0 * wr_8_4 - 0.199181538793151987e0 * wr_10_4;
  results[k++] =
      -0.177199226236389131e0 * wr_8_8 + 0.319011340731229943e0 * wr_10_8;
  results[k++] =
      0.239246299415947693e0 * wr_8_4 - 0.561382270461439171e-1 * wr_10_4 -
      0.342437768626366300e0 * wr_6_4 + 0.144412204332633203e0 * wr_4_4;
  results[k++] =
      wr_0_0 + 0.330779286612394927e0 * wr_2_0 -
      0.419580419580419580e-1 * wr_4_0 - 0.211064451463733829e0 * wr_6_0 -
      0.171836981301045629e0 * wr_8_0 - 0.314812296995335887e-1 * wr_10_0;
  results[k++] =
      0.507206918486838747e0 * wr_4_4 + 0.267270124742558600e0 * wr_6_4 +
      0.146716391294256934e0 * wr_8_4 + 0.590167522350079962e-1 * wr_10_4;
  results[k++] =
      0.202200027879440803e0 * wr_8_8 - 0.370638773311887465e-1 * wr_10_8;
  results[k++] =
      0.693900613086480875e-2 * wr_4_4 - 0.106951871657754011e0 * wr_6_4 -
      0.632268131601643981e-1 * wr_8_4 + 0.578601244194460392e0 * wr_10_4;
  results[k++] =
      -0.251389380216200594e-1 * wr_4_0 - 0.888624804388846871e-1 * wr_6_0 -
      0.123546257770629154e0 * wr_8_0 + 0.459021046948814638e0 * wr_10_0;
  results[k++] =
      0.718404992998237713e-1 * wr_4_4 - 0.170351947682835510e0 * wr_6_4 -
      0.323047388665756432e0 * wr_8_4 - 0.357351490889271939e0 * wr_10_4;
  results[k++] =
      -0.418982300360334323e-1 * wr_2_0 - 0.562123742984965307e-1 * wr_4_0 +
      0.198702546910591507e-1 * wr_6_0 + 0.213471960117920590e0 * wr_8_0 +
      0.434247111726438137e0 * wr_10_0;
  results[k++] =
      0.285142952429115438e0 * wr_4_4 + 0.543331507309591547e-1 * wr_6_4 -
      0.759203945296938327e-1 * wr_8_4 - 0.135304833947132092e0 * wr_10_4;
  results[k++] =
      0.108255039254965612e0 * wr_2_0 + 0.228079612694997310e0 * wr_4_0 +
      0.287504009561410404e0 * wr_6_0 + 0.233602161992470421e0 * wr_8_0 +
      0.664883571254149391e-1 * wr_10_0;
  results[k++] =
      -0.654058489664149052e-1 * wr_4_4 + 0.325696913673058481e0 * wr_6_4 -
      0.390086050079173225e0 * wr_8_4 + 0.139840855488276281e0 * wr_10_4;
  results[k++] =
      -0.128065085226584333e0 * wr_10_8 + 0.108679249431813625e0 * wr_8_8;
  results[k++] =
      0.507206918486838747e0 * wr_4_4 + 0.267270124742558600e0 * wr_6_4 +
      0.146716391294256934e0 * wr_8_4 + 0.590167522350079962e-1 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.463091001257352896e0 * wr_2_0 +
      0.203335126412049489e0 * wr_4_0 + 0.285222231707748417e-1 * wr_6_0 -
      0.660911466542483189e-1 * wr_8_0 - 0.702661046893589698e-1 * wr_10_0;
  results[k++] =
      0.268681941537610483e0 * wr_4_4 - 0.325635362710839576e0 * wr_6_4 -
      0.692413195821838635e-1 * wr_8_4 + 0.104446351379657769e0 * wr_10_4;
  results[k++] =
      0.325312413140474497e0 * wr_8_8 + 0.830571165018198272e0 * wr_10_8;
  results[k++] =
      0.398615554234643520e-1 * wr_4_4 + 0.787681701157003791e-1 * wr_6_4 -
      0.220127508569405729e0 * wr_8_4 + 0.100721548322421987e0 * wr_10_4;
  results[k++] =
      0.481143547642927761e0 * wr_8_8 + 0.458974339134198806e0 * wr_10_8;
  results[k++] =
      0.155983008327547987e0 * wr_4_4 + 0.176130982841973523e-1 * wr_6_4 -
      0.381470556481115489e0 * wr_8_4 + 0.199233279365507915e0 * wr_10_4;
  results[k++] =
      0.409224083871090642e0 * wr_8_8 + 0.904162664188075253e-1 * wr_10_8;
  results[k++] =
      0.286594070973451182e0 * wr_4_4 - 0.212370888724460593e0 * wr_6_4 -
      0.296748512495073702e0 * wr_8_4 + 0.201929612667338353e0 * wr_10_4;
  results[k++] =
      0.217410332199690364e0 * wr_2_0 - 0.388915425447455229e0 * wr_4_0 +
      0.288699457584936639e0 * wr_6_0 - 0.104254882196872009e0 * wr_8_0 +
      0.151738220871037938e-1 * wr_10_0;
  results[k++] =
      0.202200027879440803e0 * wr_8_8 - 0.370638773311887465e-1 * wr_10_8;
  results[k++] =
      0.268681941537610483e0 * wr_4_4 - 0.325635362710839576e0 * wr_6_4 -
      0.692413195821838635e-1 * wr_8_4 + 0.104446351379657769e0 * wr_10_4;
  results[k++] =
      wr_0_0 - 0.463091001257352896e0 * wr_2_0 -
      0.248520710059171598e0 * wr_4_0 + 0.363943567659086981e0 * wr_6_0 -
      0.155975106104026032e0 * wr_8_0 + 0.244294342468380648e-1 * wr_10_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] = 0.647750275631295721e0 * wr_6_4;
  results[k++] = 0.264442942673972545e0 * wr_6_0;
  results[k++] = 0.636078143466197552e0 * wr_6_4;
  results[k++] = 0.560968194005074306e0 * wr_6_0;
  results[k++] = 0.181568259800640725e0 * wr_6_4;
  results[k++] = 0.392232270276368064e0 * wr_6_4;
  results[k++] = 0.656330123313893590e0 * wr_6_0;
  results[k++] = 0.581774473882739601e0 * wr_6_4;
  results[k++] = 0.148249863332220236e0 * wr_6_4;
  results[k++] = 0.429668924423659726e0 * wr_6_0;
  results[k++] = 0.792824967172091882e0 * wr_6_4;
  results[k++] = 0.422507274131718205e0 * wr_5_4;
  results[k++] =
      0.106284504570424221e0 * wr_7_0 - 0.124113561883208728e0 * wr_5_0;
  results[k++] =
      0.145951276623155969e0 * wr_5_4 + 0.729756383115779847e0 * wr_7_4;
  results[k++] = 0.385694607919935013e0 * wr_5_0;
  results[k++] =
      -0.135959595071493571e0 * wr_5_4 + 0.498518515262143096e0 * wr_7_4;
  results[k++] =
      -0.109010190686153116e0 * wr_5_0 + 0.363030695172514970e0 * wr_7_0;
  results[k++] =
      0.297872548519700948e0 * wr_5_4 + 0.429078313939093032e0 * wr_7_4;
  results[k++] =
      -0.278318164225627959e0 * wr_7_0 + 0.325005595485937081e0 * wr_5_0;
  results[k++] =
      0.286642616957593291e0 * wr_5_4 + 0.191095077971728860e0 * wr_7_4;
  results[k++] =
      0.587412587412587413e0 * wr_5_0 + 0.197618962748694292e0 * wr_7_0;
  results[k++] =
      0.164807917101308931e0 * wr_5_4 - 0.604295696038132747e0 * wr_7_4;
  results[k++] =
      0.513878967017449951e-1 * wr_5_0 + 0.528071587889866514e0 * wr_7_0;
  results[k++] =
      0.425138018281696883e0 * wr_5_4 + 0.334037014364190408e-1 * wr_7_4;
  results[k++] =
      -0.334726461979773355e0 * wr_5_4 + 0.163644048079000307e0 * wr_7_4;
  results[k++] =
      -0.480384461415261399e0 * wr_5_4 + 0.960768922830522798e-1 * wr_7_4;
  results[k++] =
      0.984003306256663543e-1 * wr_5_4 + 0.577281939670575946e0 * wr_7_4;
  results[k++] =
      0.386150781477265638e0 * wr_7_0 - 0.450926963500797419e0 * wr_5_0;
  results[k++] =
      0.281202367313050353e0 * wr_5_4 - 0.265133660609447476e0 * wr_7_4;
  results[k++] =
      0.368180323946522604e0 * wr_5_0 + 0.504465268478010998e0 * wr_7_0;
  results[k++] =
      -0.120515300277021580e0 * wr_5_4 + 0.441889434349079127e0 * wr_7_4;
  results[k++] =
      0.450926963500797419e0 * wr_5_0 + 0.283177239749994802e0 * wr_7_0;
  results[k++] =
      0.729756383115779847e0 * wr_5_4 + 0.233522042597049551e0 * wr_7_4;
  results[k++] =
      -0.297921795862108991e0 * wr_5_4 + 0.369423026869015148e0 * wr_7_4;
  results[k++] =
      0.960768922830522798e0 * wr_5_4 - 0.192153784566104560e0 * wr_7_4;
  results[k++] = 0.354562104171167331e0 * wr_7_4;
  results[k++] =
      -0.291902553246311939e0 * wr_7_0 + 0.340868744250459874e0 * wr_5_0;
  results[k++] =
      0.151835006529177459e0 * wr_5_4 - 0.267229611491352327e0 * wr_7_4;
  results[k++] = 0.536656314599949528e0 * wr_7_0;
  results[k++] =
      0.525971891352175149e-1 * wr_5_4 - 0.192856360162464221e0 * wr_7_4;
  results[k++] =
      0.590401983753998126e0 * wr_5_0 - 0.674120070775589065e-1 * wr_7_0;
  results[k++] = 0.517134964422800782e0 * wr_7_4;
  results[k++] =
      0.811997942941150151e0 * wr_5_4 + 0.259839341741168049e0 * wr_7_4;
  results[k++] =
      0.189902897406215823e0 * wr_4_4 - 0.412204720856279095e0 * wr_6_4;
  results[k++] =
      0.237378621757769779e0 * wr_4_0 - 0.197510952103064009e0 * wr_6_0;
  results[k++] =
      0.177637894712435347e0 * wr_4_4 + 0.472141481220914454e-1 * wr_6_4;
  results[k++] = 0.210847094110324212e-1 * wr_4_0 -
                 0.197657202365312363e0 * wr_6_0 +
                 0.157504829811997371e0 * wr_8_0;
  results[k++] = 0.611092935318393681e-1 * wr_4_4 +
                 0.182995010814616887e0 * wr_6_4 +
                 0.725450998147731445e0 * wr_8_4;
  results[k++] =
      0.520070503224868537e0 * wr_4_0 - 0.168281872610709802e0 * wr_6_0;
  results[k++] =
      0.866784172041447562e-1 * wr_4_4 - 0.483801051263794870e0 * wr_6_4;
  results[k++] =
      0.231657814289829793e-1 * wr_4_0 + 0.404777000387580260e0 * wr_6_0;
  results[k++] = -0.461942838514556898e-1 * wr_4_4 +
                 0.372430222908501201e-1 * wr_6_4 +
                 0.639787643154158788e0 * wr_8_4;
  results[k++] = -0.478156264865613771e-1 * wr_4_0 -
                 0.120681185146011757e0 * wr_6_0 +
                 0.416718609974097256e0 * wr_8_0;
  results[k++] =
      0.725203668379514220e-1 * wr_4_4 + 0.231301143078617292e0 * wr_6_4;
  results[k++] = -0.446279180541239520e0 * wr_4_0 +
                 0.264349262700787659e0 * wr_6_0 +
                 0.935490757084708125e-1 * wr_8_0;
  results[k++] = 0.190837004849777172e0 * wr_4_4 -
                 0.236968351227326048e0 * wr_6_4 +
                 0.556260321581609331e0 * wr_8_4;
  results[k++] = 0.966222768822038372e-1 * wr_4_0 +
                 0.298608491700741233e0 * wr_6_0 -
                 0.331428583898547776e0 * wr_8_0;
  results[k++] = 0.133351411083299624e0 * wr_4_4 +
                 0.276457743579311354e-1 * wr_6_4 -
                 0.339227970611555943e-1 * wr_8_4;
  results[k++] =
      0.429036276112972237e0 * wr_4_0 + 0.203988434183663384e0 * wr_6_0;
  results[k++] = -0.754349496462368768e-1 * wr_4_4 +
                 0.299743889301242925e0 * wr_6_4 +
                 0.351809917635120357e0 * wr_8_4;
  results[k++] = 0.423377604847143792e0 * wr_4_0 +
                 0.208986441980170760e0 * wr_6_0 +
                 0.295828152242297657e0 * wr_8_0;
  results[k++] = 0.816607284085513604e-1 * wr_4_4 -
                 0.293444843124552242e0 * wr_6_4 -
                 0.470863412870957142e0 * wr_8_4;
  results[k++] = -0.394458793578857489e-1 * wr_4_0 +
                 0.146287687505784283e0 * wr_6_0 +
                 0.487098550034788054e0 * wr_8_0;
  results[k++] =
      0.931540978723599855e0 * wr_4_4 + 0.660248217456875364e-1 * wr_6_4;
  results[k++] = 0.826203065923213516e0 * wr_8_8;
  results[k++] = -0.612836427977808240e0 * wr_4_4 +
                 0.202927572353187290e0 * wr_6_4 +
                 0.433048073030232091e-1 * wr_8_4;
  results[k++] = 0.715512843774092172e0 * wr_8_8;
  results[k++] = 0.171292989005816650e0 * wr_4_4 -
                 0.355116401444922060e0 * wr_6_4 +
                 0.145248739323133844e0 * wr_8_4;
  results[k++] = 0.725988170378424118e0 * wr_8_8;
  results[k++] = 0.106013023911032925e1 * wr_4_4 +
                 0.227921152919275897e-1 * wr_6_4 -
                 0.406794268944737134e-1 * wr_8_4;
  results[k++] = -0.776114000116265516e0 * wr_8_8;
  results[k++] = 0.489653183141128739e0 * wr_4_4 -
                 0.394771016975861392e0 * wr_6_4 +
                 0.880735427550153768e-1 * wr_8_4;
  results[k++] = 0.433860915637312345e0 * wr_8_8;
  results[k++] =
      0.235339362165820838e0 * wr_6_4 + 0.455037167195616853e0 * wr_8_4;
  results[k++] = -0.283187072805182932e0 * wr_8_0 +
                 0.331707446870809021e0 * wr_4_0 +
                 0.478395283258379572e-1 * wr_6_0;
  results[k++] = 0.886525442022919487e-1 * wr_4_4 +
                 0.438373658992802195e-1 * wr_6_4 +
                 0.261937411983718277e0 * wr_8_4;
  results[k++] = 0.326996265430189031e0 * wr_8_0 -
                 0.383022767486130150e0 * wr_4_0 -
                 0.552403291136545429e-1 * wr_6_0;
  results[k++] = 0.158586492171703732e0 * wr_4_4 -
                 0.315379409904078740e0 * wr_6_4 -
                 0.292854929522981052e0 * wr_8_4;
  results[k++] =
      0.393798073988336155e0 * wr_6_0 + 0.229577617273420574e0 * wr_8_0;
  results[k++] = 0.295508480674306496e-1 * wr_4_4 +
                 0.285895864560523171e-1 * wr_6_4 -
                 0.561294454250824879e0 * wr_8_4;
  results[k++] = 0.552845744784681702e0 * wr_4_0 +
                 0.956790566516759144e-2 * wr_6_0 +
                 0.509736731049329277e0 * wr_8_0;
  results[k++] = -0.818937124152615257e-1 * wr_4_4 +
                 0.429161341346968987e0 * wr_6_4 +
                 0.810158760640894562e-1 * wr_8_4;
  results[k++] = 0.296688159938411549e0 * wr_4_0 +
                 0.356574791160334604e0 * wr_6_0 +
                 0.158306386285392773e0 * wr_8_0;
  results[k++] =
      0.349064684329643761e0 * wr_6_4 + 0.613571991077896353e-1 * wr_8_4;
  results[k++] = -0.481325470076949472e0 * wr_8_8;
  results[k++] = 0.657464864190218936e0 * wr_4_4 -
                 0.480592375063349263e-1 * wr_6_4 +
                 0.237146110150566306e0 * wr_8_4;
  results[k++] = -0.416840084575124904e0 * wr_8_8;
  results[k++] = -0.470443561327038965e0 * wr_4_4 -
                 0.316069770620506984e0 * wr_6_4 +
                 0.282061076008680398e0 * wr_8_4;
  results[k++] = 0.362994085189212060e0 * wr_8_8;
  results[k++] =
      -0.501426536422406975e0 * wr_6_4 + 0.132208137407039569e0 * wr_8_4;
  results[k++] = -0.388057000058132758e0 * wr_8_8;
  results[k++] = 0.856893070496975294e0 * wr_4_4 +
                 0.394771016975861392e0 * wr_6_4 -
                 0.132110314132523065e0 * wr_8_4;
  results[k++] = 0.216930457818656173e0 * wr_8_8;
  results[k++] =
      -0.592999453328880944e-1 * wr_6_4 + 0.601957590845460300e0 * wr_8_4;
  results[k++] =
      -0.397796126479077523e0 * wr_6_0 + 0.347862621391469050e0 * wr_8_0;
  results[k++] =
      0.301122963665124380e0 * wr_6_4 - 0.183862780923392850e0 * wr_8_4;
  results[k++] = 0.506691494622008342e0 * wr_4_0 -
                 0.271425464469883250e0 * wr_6_0 -
                 0.131317531835513458e0 * wr_8_0;
  results[k++] = 0.104895104895104895e0 * wr_4_4 -
                 0.376936725894477646e0 * wr_6_4 -
                 0.909229092650743576e-1 * wr_8_4;
  results[k++] =
      -0.171867569769463892e0 * wr_6_0 + 0.526028404511525572e0 * wr_8_0;
  results[k++] =
      -0.137252703261503257e0 * wr_6_4 + 0.398074597725277690e0 * wr_8_4;
  results[k++] =
      0.413401861269514488e0 * wr_6_0 + 0.241006293721648228e0 * wr_8_0;
  results[k++] = 0.469105170104850986e-1 * wr_4_4 -
                 0.295359844743303818e0 * wr_6_4 +
                 0.972351245267942955e-1 * wr_8_4;
  results[k++] = 0.679797975357467856e0 * wr_4_0 +
                 0.466865991830086817e-1 * wr_6_0 -
                 0.863632140652061242e-1 * wr_8_0;
  results[k++] =
      -0.317129986868836755e0 * wr_6_4 + 0.292655187590326874e0 * wr_8_4;
  results[k++] = 0.163984012338157552e0 * wr_8_8;
  results[k++] =
      -0.847565541382361483e-1 * wr_6_4 + 0.357556063485733894e0 * wr_8_4;
  results[k++] = 0.142014320499345264e0 * wr_8_8;
  results[k++] = 0.560968194005074306e0 * wr_4_4 +
                 0.258438295352368820e0 * wr_6_4 +
                 0.163363392827675884e0 * wr_8_4;
  results[k++] = -0.328616768769114160e0 * wr_5_4;
  results[k++] = -0.375328556293077479e0 * wr_3_0 +
                 0.354684046235405840e0 * wr_5_0 -
                 0.473350552294628986e-1 * wr_7_0;
  results[k++] =
      -0.417090514206952586e0 * wr_5_4 - 0.325005595485937081e0 * wr_7_4;
  results[k++] = 0.527508048350599509e-1 * wr_3_0 +
                 0.249246541295189433e0 * wr_5_0 -
                 0.249477646158278238e0 * wr_7_0;
  results[k++] =
      -0.103197872359807251e0 * wr_5_4 - 0.132682978748323609e0 * wr_7_4;
  results[k++] =
      0.189784075547473662e-1 * wr_3_0 + 0.666139401689286973e-2 * wr_5_0 -
      0.236110439623959925e0 * wr_7_0 + 0.193201613580103266e0 * wr_9_0;
  results[k++] = 0.364859576748217433e-1 * wr_5_4 +
                 0.154528761916892089e0 * wr_7_4 +
                 0.703018721041995059e0 * wr_9_4;
  results[k++] =
      0.537215309350253532e0 * wr_3_0 - 0.299984695048838344e0 * wr_5_0;
  results[k++] =
      0.388536905820674142e0 * wr_5_4 - 0.222021089040385224e0 * wr_7_4;
  results[k++] = 0.329654848919473759e0 * wr_3_0 +
                 0.311522567935332127e0 * wr_5_0 -
                 0.161679993480094914e0 * wr_7_0;
  results[k++] =
      -0.273035906095036310e0 * wr_5_4 - 0.351046164979332398e0 * wr_7_4;
  results[k++] = -0.398758603005920598e-1 * wr_3_0 +
                 0.942063376300088659e-1 * wr_5_0 +
                 0.396033485642743604e0 * wr_7_0;
  results[k++] = 0.364859576748217433e-1 * wr_5_4 +
                 0.154528761916892089e0 * wr_7_4 +
                 0.703018721041995059e0 * wr_9_4;
  results[k++] =
      -0.168094466913476672e-1 * wr_3_0 - 0.732753341858215670e-1 * wr_5_0 -
      0.115309749583794382e0 * wr_7_0 + 0.450803765020240953e0 * wr_9_0;
  results[k++] =
      0.223404411389775711e0 * wr_5_4 - 0.312056955592067660e0 * wr_7_4;
  results[k++] = 0.382215893264782590e0 * wr_3_0 -
                 0.117940425554065430e0 * wr_5_0 -
                 0.160105016238852366e0 * wr_7_0;
  results[k++] =
      -0.104018985197355886e0 * wr_5_4 + 0.109929154810842016e0 * wr_7_4;
  results[k++] =
      -0.371899317117699600e0 * wr_3_0 - 0.885780885780885781e-1 * wr_5_0 +
      0.167164314624563961e0 * wr_7_0 + 0.144602752174717869e0 * wr_9_0;
  results[k++] = -0.366748129440691752e0 * wr_5_4 -
                 0.158394315965871515e0 * wr_7_4 +
                 0.596629790585648774e0 * wr_9_4;
  results[k++] =
      0.496971366796294720e-2 * wr_3_0 + 0.174436241807642955e0 * wr_5_0 +
      0.242639841964656315e0 * wr_7_0 - 0.351333737546996579e0 * wr_9_0;
  results[k++] = -0.955426644844717800e-1 * wr_5_4 -
                 0.146324794977268756e0 * wr_7_4 -
                 0.153411262102189824e0 * wr_9_4;
  results[k++] =
      0.440559440559440559e0 * wr_5_0 - 0.143722881999050394e0 * wr_7_0;
  results[k++] =
      -0.598067114769061560e-1 * wr_5_4 - 0.347626510459517032e0 * wr_7_4;
  results[k++] = 0.604336390316261850e0 * wr_3_0 -
                 0.186480186480186480e-1 * wr_5_0 +
                 0.303777909679811061e0 * wr_7_0;
  results[k++] = 0.374310742187454895e0 * wr_5_4 +
                 0.125156532991470987e-1 * wr_7_4 +
                 0.487146184092807409e0 * wr_9_4;
  results[k++] =
      0.273289068788362071e0 * wr_3_0 + 0.325456679111051635e0 * wr_5_0 +
      0.894238874323303367e-1 * wr_7_0 + 0.354202958230189321e0 * wr_9_0;
  results[k++] = -0.206395744719614502e0 * wr_5_4 -
                 0.316097684665123891e0 * wr_7_4 -
                 0.331406203299925662e0 * wr_9_4;
  results[k++] = -0.483111384411019186e-1 * wr_3_0 +
                 0.194688730336978998e0 * wr_7_0 +
                 0.455380570328913294e0 * wr_9_0;
  results[k++] =
      0.318853513711272663e0 * wr_5_4 - 0.242936010446683933e-1 * wr_7_4;
  results[k++] =
      0.121468005223341967e0 * wr_5_4 + 0.941377040480900244e-1 * wr_7_4;
  results[k++] = 0.585067280839286606e0 * wr_9_8;
  results[k++] = -0.471096502045606943e0 * wr_5_4 +
                 0.109387732673128547e0 * wr_7_4 +
                 0.464475662026238125e-1 * wr_9_4;
  results[k++] = 0.625463232317731655e0 * wr_9_8;
  results[k++] = 0.245453549297681736e0 * wr_5_4 -
                 0.348069633983057084e0 * wr_7_4 +
                 0.131373556125945586e0 * wr_9_4;
  results[k++] = -0.392232270276368064e0 * wr_5_4 +
                 0.484522216223748785e-1 * wr_7_4 +
                 0.954243653710367873e-2 * wr_9_4;
  results[k++] = 0.465530091673857284e0 * wr_9_8;
  results[k++] = 0.248069469178416912e0 * wr_5_4 +
                 0.102146252014642258e0 * wr_7_4 -
                 0.482813342157719575e-1 * wr_9_4;
  results[k++] = -0.608165965073080537e0 * wr_9_8;
  results[k++] = 0.464095480892257110e0 * wr_5_4 -
                 0.341246677126659639e0 * wr_7_4 +
                 0.790353422301382561e-1 * wr_9_4;
  results[k++] = 0.376283493241281730e0 * wr_9_8;
  results[k++] =
      -0.328001102085554515e-1 * wr_5_4 + 0.432961454752931959e0 * wr_7_4;
  results[k++] = -0.368180323946522604e0 * wr_5_0 +
                 0.194738430846291011e0 * wr_7_0 +
                 0.107113584470626587e0 * wr_9_0;
  results[k++] = 0.229600771459888160e0 * wr_5_4 -
                 0.133708684556052517e0 * wr_7_4 +
                 0.570554721175916841e0 * wr_9_4;
  results[k++] =
      0.515989361799036255e0 * wr_3_0 - 0.129365379258849492e0 * wr_5_0 +
      0.149288967137326274e0 * wr_7_0 - 0.347408097714893434e0 * wr_9_0;
  results[k++] = -0.187468244875366902e0 * wr_5_4 +
                 0.661652628971883184e-1 * wr_7_4 +
                 0.573361205012071565e-1 * wr_9_4;
  results[k++] =
      -0.275807915296019396e0 * wr_3_0 - 0.242020463448343313e0 * wr_5_0 +
      0.847857038670079791e-1 * wr_7_0 + 0.276224940946003026e0 * wr_9_0;
  results[k++] = -0.359805896708818756e0 * wr_5_4 -
                 0.329172267732061742e0 * wr_7_4 -
                 0.248324402631662238e0 * wr_9_4;
  results[k++] =
      -0.122726774648840868e0 * wr_5_0 + 0.378348951358508249e0 * wr_7_0;
  results[k++] = -0.984003306256663543e-1 * wr_5_4 +
                 0.222847807593420861e0 * wr_7_4 +
                 0.342332832705550104e0 * wr_9_4;
  results[k++] = 0.368180323946522604e0 * wr_5_0 +
                 0.142808182620613407e0 * wr_7_0 +
                 0.321340753411879762e0 * wr_9_0;
  results[k++] = -0.131382537300529227e0 * wr_5_4 -
                 0.128128480649122931e0 * wr_7_4 -
                 0.488536047642097335e0 * wr_9_4;
  results[k++] =
      0.666139401689286973e0 * wr_3_0 + 0.334019972963553644e-1 * wr_5_0 +
      0.867290525243056516e-1 * wr_7_0 + 0.484382079643457241e0 * wr_9_0;
  results[k++] = 0.375159599850663526e0 * wr_5_4 +
                 0.119853219019228205e0 * wr_7_4 -
                 0.727019407929420314e-1 * wr_9_4;
  results[k++] =
      0.188412675260017731e0 * wr_3_0 + 0.307044124314558860e0 * wr_5_0 +
      0.284731112555596494e0 * wr_7_0 + 0.998987071836631952e-1 * wr_9_0;
  results[k++] =
      -0.243252127705259949e0 * wr_5_4 + 0.175141531947787163e0 * wr_7_4;
  results[k++] = 0.750644717732738005e0 * wr_9_8;
  results[k++] = -0.243252127705259949e0 * wr_5_4 +
                 0.186302511924852032e0 * wr_7_4 +
                 0.769335829089113145e-1 * wr_9_4;
  results[k++] = 0.292153479582724468e0 * wr_9_8;
  results[k++] = 0.397229061149478654e-1 * wr_5_4 -
                 0.196277889038565923e0 * wr_7_4 +
                 0.224204826425320492e0 * wr_9_4;
  results[k++] = -0.683211390595256799e-1 * wr_9_8;
  results[k++] = -0.308971699105478321e0 * wr_5_4 -
                 0.309797826643193503e0 * wr_7_4 +
                 0.234388389340746806e0 * wr_9_4;
  results[k++] = 0.931060183347714570e0 * wr_9_8;
  results[k++] = -0.196116135138184032e0 * wr_5_4 +
                 0.249182854057927946e0 * wr_7_4 -
                 0.667970557597257513e-1 * wr_9_4;
  results[k++] = -0.465530091673857284e0 * wr_9_8;
  results[k++] = 0.124034734589208456e0 * wr_5_4 -
                 0.423177329774946498e0 * wr_7_4 +
                 0.126738502316401388e0 * wr_9_4;
  results[k++] = 0.760207456341350671e-1 * wr_9_8;
  results[k++] = 0.272997341701327712e0 * wr_7_4 -
                 0.101616868581606329e0 * wr_9_4 +
                 0.232047740446128555e0 * wr_5_4;
  results[k++] = 0.537547847487545328e-1 * wr_9_8;
  results[k++] =
      -0.125139566178059059e0 * wr_7_4 + 0.603818360634109563e0 * wr_9_4;
  results[k++] = -0.695795410564069898e-1 * wr_5_0 +
                 0.378535928860091423e0 * wr_7_0 -
                 0.283395906545988064e0 * wr_9_0;
  results[k++] = -0.309931909240530884e-1 * wr_5_4 +
                 0.346540337108471238e0 * wr_7_4 +
                 0.301909180317054782e0 * wr_9_4;
  results[k++] = -0.366716380479073968e0 * wr_5_0 -
                 0.221673279889880371e-1 * wr_7_0 +
                 0.298725514751181277e0 * wr_9_0;
  results[k++] = 0.217630176025154357e0 * wr_5_4 -
                 0.216141597529770265e0 * wr_7_4 -
                 0.246507813479567550e0 * wr_9_4;
  results[k++] =
      0.625473560139801314e0 * wr_3_0 - 0.137212705387053032e0 * wr_5_0 -
      0.233747176542379333e0 * wr_7_0 - 0.675550209766629646e-1 * wr_9_0;
  results[k++] = -0.425875465528530896e0 * wr_5_4 -
                 0.959956560954078540e-1 * wr_7_4 -
                 0.134082574251439109e-1 * wr_9_4;
  results[k++] =
      -0.189408111035276304e0 * wr_7_0 + 0.327237405863128469e0 * wr_9_0;
  results[k++] = -0.107363562738285100e-1 * wr_5_4 +
                 0.250093946143299410e0 * wr_7_4 -
                 0.522922039580612527e0 * wr_9_4;
  results[k++] = -0.120515300277021580e0 * wr_5_0 +
                 0.874191281701275248e-1 * wr_7_0 +
                 0.490856108794692704e0 * wr_9_0;
  results[k++] = -0.119961399907055706e0 * wr_5_4 +
                 0.395433249416154769e0 * wr_7_4 +
                 0.110241645585030402e0 * wr_9_4;
  results[k++] = 0.295200991876999063e0 * wr_5_0 +
                 0.327146504935212340e0 * wr_7_0 +
                 0.133594111519451502e0 * wr_9_0;
  results[k++] = -0.326054653518191410e0 * wr_5_4 +
                 0.134506885332179802e0 * wr_7_4 +
                 0.111054048951284887e0 * wr_9_4;
  results[k++] =
      0.740070296801284080e0 * wr_3_0 + 0.162352262464949643e0 * wr_5_0 -
      0.382359524101102448e-1 * wr_7_0 - 0.799321787693812485e-1 * wr_9_0;
  results[k++] =
      -0.182518222737459099e0 * wr_7_4 + 0.112907631757340366e0 * wr_9_4;
  results[k++] = -0.550822632755243596e0 * wr_9_8;
  results[k++] = -0.165748386032948968e0 * wr_5_4 -
                 0.336956718899924491e0 * wr_7_4 +
                 0.282269079393350915e0 * wr_9_4;
  results[k++] = -0.348370821255407645e0 * wr_9_8;
  results[k++] = -0.351865775274498399e0 * wr_5_4 -
                 0.124187920685117082e0 * wr_7_4 +
                 0.285784955400596958e0 * wr_9_4;
  results[k++] = -0.931060183347714576e-1 * wr_9_8;
  results[k++] = -0.133972825411416731e0 * wr_5_4 +
                 0.135098647473697544e0 * wr_7_4 +
                 0.123855778018460838e0 * wr_9_4;
  results[k++] = 0.476731294622796159e0 * wr_2_0 -
                 0.484547082626387351e0 * wr_4_0 +
                 0.107511344725287749e0 * wr_6_0;
  results[k++] =
      -0.362601834189757110e0 * wr_4_4 - 0.257001270087352547e-1 * wr_6_4;
  results[k++] =
      -0.274101222343421475e0 * wr_2_0 - 0.141440530586694144e0 * wr_4_0 +
      0.353579952585016533e0 * wr_6_0 - 0.576313373854082524e-1 * wr_8_0;
  results[k++] = -0.409933603182543109e0 * wr_4_4 -
                 0.327351426979834022e0 * wr_6_4 -
                 0.265443994833283888e0 * wr_8_4;
  results[k++] =
      -0.130672630585470221e-1 * wr_2_0 + 0.114629516339840826e0 * wr_4_0 +
      0.226911230738394748e0 * wr_6_0 - 0.274746620825888284e0 * wr_8_0;
  results[k++] = -0.184662270162464251e0 * wr_4_4 -
                 0.222326692886401970e0 * wr_6_4 -
                 0.223205209913347058e0 * wr_8_4;
  results[k++] =
      0.635727908455181182e-2 * wr_2_0 + 0.284306163699909687e-1 * wr_4_0 -
      0.118185746132643935e-1 * wr_6_0 - 0.257903872158881491e0 * wr_8_0 +
      0.219629809225140238e0 * wr_10_0;
  results[k++] =
      -0.336395589455129126e-1 * wr_4_4 - 0.446700132542270798e-2 * wr_6_4 +
      0.112352347907468155e0 * wr_8_4 + 0.678131117770932942e0 * wr_10_4;
  results[k++] =
      0.533177467269826287e0 * wr_10_8 - 0.296160739710159858e0 * wr_8_8;
  results[k++] =
      -0.176931578218527948e0 * wr_4_4 + 0.263347936137418678e0 * wr_6_4;
  results[k++] = 0.697863157798853149e0 * wr_2_0 -
                 0.472869533282090349e-1 * wr_4_0 -
                 0.220332691236426744e0 * wr_6_0;
  results[k++] = 0.309880676591327159e0 * wr_4_4 -
                 0.666223436239046502e-1 * wr_6_4 -
                 0.234099599114794420e0 * wr_8_4;
  results[k++] =
      0.186480943297589371e0 * wr_2_0 + 0.320756973632072021e0 * wr_4_0 +
      0.215881066873376139e0 * wr_6_0 - 0.152478186445849639e0 * wr_8_0;
  results[k++] = -0.184662270162464251e0 * wr_4_4 -
                 0.222326692886401970e0 * wr_6_4 -
                 0.223205209913347058e0 * wr_8_4;
  results[k++] =
      -0.392017891756410663e-1 * wr_2_0 - 0.202287381776189692e-1 * wr_4_0 +
      0.136146738443036849e0 * wr_6_0 + 0.384645269156243598e0 * wr_8_0;
  results[k++] =
      0.415255730923191880e-1 * wr_4_4 + 0.889162516749198788e-1 * wr_6_4 +
      0.215465985466557487e0 * wr_8_4 + 0.732465322299149812e0 * wr_10_4;
  results[k++] =
      -0.411998772943919913e-2 * wr_2_0 - 0.307085754316368692e-1 * wr_4_0 -
      0.875349914209742770e-1 * wr_6_0 - 0.106685624717683476e0 * wr_8_0 +
      0.474454614409640149e0 * wr_10_0;
  results[k++] =
      -0.159063833109724796e0 * wr_8_4 - 0.266702822166599250e-1 * wr_4_4 +
      0.570223480044817756e-1 * wr_10_4 + 0.132808131719473102e0 * wr_6_4;
  results[k++] = -0.341611335985452591e0 * wr_4_0 +
                 0.337836943042369638e0 * wr_6_0 -
                 0.468710798307435464e-1 * wr_8_0;
  results[k++] = 0.146079151850935249e0 * wr_4_4 -
                 0.302844284710735662e0 * wr_6_4 -
                 0.278704217460973124e0 * wr_8_4;
  results[k++] =
      0.586175146418703279e0 * wr_2_0 - 0.172843183399531376e0 * wr_4_0 +
      0.370949381167521772e-1 * wr_6_0 - 0.224574800995043969e0 * wr_8_0;
  results[k++] = -0.238546256062221465e0 * wr_4_4 +
                 0.343432393083081229e-2 * wr_6_4 -
                 0.229859637017193939e-1 * wr_8_4;
  results[k++] =
      -0.245668603453094954e0 * wr_2_0 - 0.267799202413547944e0 * wr_4_0 +
      0.337874496761167999e-1 * wr_6_0 + 0.181870760581441136e0 * wr_10_0 +
      0.964007307238503504e-1 * wr_8_0;
  results[k++] =
      -0.391145770783445689e0 * wr_4_4 - 0.254197606493384951e0 * wr_6_4 -
      0.805380635476254270e-1 * wr_8_4 + 0.606538910797488688e0 * wr_10_4;
  results[k++] =
      -0.212252620509261502e-1 * wr_2_0 + 0.483917391544727197e-1 * wr_4_0 +
      0.207243033565436962e0 * wr_6_0 + 0.194582474803365629e0 * wr_8_0 -
      0.359453652015326994e0 * wr_10_0;
  results[k++] =
      -0.154155825212741780e0 * wr_4_4 - 0.197392869995312808e0 * wr_6_4 -
      0.236416747404483456e0 * wr_8_4 - 0.221970512735022400e0 * wr_10_4;
  results[k++] =
      -0.290824073056268884e0 * wr_8_8 + 0.523569879130461177e0 * wr_10_8;
  results[k++] = 0.383071086420172667e0 * wr_6_4 -
                 0.176268024134309053e0 * wr_8_4 -
                 0.577428548143196122e-1 * wr_4_4;
  results[k++] = 0.324080968874121331e0 * wr_4_0 +
                 0.267083554440615676e0 * wr_6_0 -
                 0.148219368656729019e0 * wr_8_0;
  results[k++] = -0.146079151850935249e0 * wr_4_4 -
                 0.364534787151811445e-1 * wr_6_4 -
                 0.319055333120305934e0 * wr_8_4;
  results[k++] =
      0.717915004313520630e0 * wr_2_0 + 0.705629341411906319e-1 * wr_4_0 +
      0.181727340852322399e-1 * wr_6_0 + 0.330056202914960196e0 * wr_8_0;
  results[k++] =
      0.316864289465798579e0 * wr_4_4 + 0.127704556111592714e-1 * wr_6_4 -
      0.419956798095216375e-1 * wr_8_4 + 0.561545914910465664e0 * wr_10_4;
  results[k++] =
      0.159211451671949425e0 * wr_2_0 + 0.289256198347107438e0 * wr_4_0 +
      0.250248800241620138e0 * wr_6_0 + 0.398775407845732336e-1 * wr_8_0 +
      0.392885746650179185e0 * wr_10_0;
  results[k++] =
      -0.154155825212741780e0 * wr_4_4 - 0.197392869995312808e0 * wr_6_4 -
      0.236416747404483456e0 * wr_8_4 - 0.221970512735022400e0 * wr_10_4;
  results[k++] =
      -0.362077999692269621e-1 * wr_2_0 - 0.446692976810517413e-1 * wr_4_0 +
      0.331588853704699139e-1 * wr_6_0 + 0.221524663622293178e0 * wr_8_0 +
      0.431344382418392392e0 * wr_10_0;
  results[k++] =
      -0.565762122346776577e-1 * wr_4_4 + 0.281728591606666944e0 * wr_6_4 -
      0.337425345100235053e0 * wr_8_4 + 0.120962666859444780e0 * wr_10_4;
  results[k++] = -0.413954168611689291e0 * wr_8_8;
  results[k++] = -0.469105170104850986e0 * wr_4_4 +
                 0.259340351481925304e0 * wr_6_4 -
                 0.216970939026731072e-1 * wr_8_4;
  results[k++] = 0.484828896197896147e0 * wr_8_8;
  results[k++] = -0.306418213988904121e0 * wr_4_4 -
                 0.441146896419972369e-1 * wr_6_4 +
                 0.984200165977800207e-1 * wr_8_4;
  results[k++] =
      0.110700593522640788e0 * wr_8_8 + 0.441512888616350921e0 * wr_10_8;
  results[k++] =
      0.251217919893729976e0 * wr_4_4 - 0.379677601900875223e0 * wr_6_4 +
      0.594557561899172753e-1 * wr_8_4 + 0.472189901648725106e-1 * wr_10_4;
  results[k++] =
      -0.290824073056268884e0 * wr_8_8 + 0.523569879130461177e0 * wr_10_8;
  results[k++] =
      -0.565762122346776577e-1 * wr_4_4 + 0.281728591606666944e0 * wr_6_4 -
      0.337425345100235053e0 * wr_8_4 + 0.120962666859444780e0 * wr_10_4;
  results[k++] =
      0.479271536020435993e-2 * wr_10_0 - 0.329293418898003372e-1 * wr_8_0 -
      0.122840568622892288e0 * wr_4_0 + 0.911869347687922633e-1 * wr_6_0 +
      0.686699654588787212e-1 * wr_2_0;
  results[k++] = -0.173118543114335299e0 * wr_4_4 +
                 0.139572631559770630e0 * wr_6_4 -
                 0.311386996625973482e-1 * wr_8_4;
  results[k++] = -0.594088525786004583e0 * wr_8_8;
  results[k++] =
      0.452557758533123380e0 * wr_4_4 - 0.311553469236970423e0 * wr_6_4 +
      0.310955413609655511e-1 * wr_8_4 + 0.132417047945060392e-1 * wr_10_4;
  results[k++] =
      0.153180394759789247e0 * wr_8_8 + 0.327581685185977187e0 * wr_10_8;
  results[k++] =
      -0.316663041881530457e0 * wr_4_4 + 0.519845510567475419e-1 * wr_6_4 +
      0.134900380979089288e0 * wr_8_4 - 0.505018805575820086e-1 * wr_10_4;
  results[k++] =
      0.251170840265051289e0 * wr_8_8 - 0.472208979643183459e0 * wr_10_8;
  results[k++] =
      -0.184869500887925102e0 * wr_4_4 + 0.438372225281694049e0 * wr_6_4 -
      0.306271510546527378e0 * wr_8_4 + 0.718654359076800305e-1 * wr_10_4;
  results[k++] =
      -0.263972844516993150e0 * wr_8_8 + 0.311059424934496231e0 * wr_10_8;
  results[k++] = -0.541675992476561801e-1 * wr_4_0 +
                 0.292956084834313451e0 * wr_6_0 -
                 0.216769946914090208e0 * wr_8_0;
  results[k++] = -0.144768998463430955e-1 * wr_4_4 +
                 0.268447945302299920e0 * wr_6_4 +
                 0.200504063720402947e0 * wr_8_4;
  results[k++] =
      -0.354005510612021077e0 * wr_4_0 - 0.435956932932678578e-1 * wr_6_0 +
      0.115450401772179028e0 * wr_8_0 + 0.162177100355526871e0 * wr_10_0;
  results[k++] =
      0.146572206414456022e0 * wr_4_4 - 0.248897576205631937e0 * wr_6_4 -
      0.103396346835678267e0 * wr_8_4 + 0.613278232028571896e0 * wr_10_4;
  results[k++] =
      0.657356183329208619e0 * wr_2_0 - 0.707726312874111790e-1 * wr_4_0 -
      0.363710047814363909e-1 * wr_6_0 + 0.142287857234179858e0 * wr_8_0 -
      0.373830280930670798e0 * wr_10_0;
  results[k++] =
      -0.271346366270776917e0 * wr_4_4 - 0.212120007492491347e-2 * wr_6_4 -
      0.275226670639008532e-1 * wr_8_4 - 0.680031180664910573e-1 * wr_10_4;
  results[k++] =
      -0.173228564442958837e0 * wr_2_0 - 0.268563253045816871e0 * wr_4_0 -
      0.138018259077856328e0 * wr_6_0 + 0.143985187918359900e0 * wr_8_0 +
      0.239386417081509736e0 * wr_10_0;
  results[k++] =
      -0.342212043778300463e0 * wr_4_4 - 0.272422436914067674e0 * wr_6_4 -
      0.251073152468991585e0 * wr_8_4 - 0.201581402941017125e0 * wr_10_4;
  results[k++] =
      0.322854989515258663e0 * wr_10_8 - 0.179334233690648111e0 * wr_8_8;
  results[k++] = -0.482563328211436516e-2 * wr_4_4 +
                 0.175074746936282557e0 * wr_6_4 -
                 0.429651565115149172e0 * wr_8_4;
  results[k++] = -0.902793320794269668e-1 * wr_4_0 +
                 0.585912169668626903e-1 * wr_6_0 +
                 0.390185904445362374e0 * wr_8_0;
  results[k++] =
      -0.756895619280085460e-1 * wr_4_4 + 0.338694329141228405e0 * wr_6_4 +
      0.286037378109477052e-1 * wr_8_4 + 0.475043275847637400e0 * wr_10_4;
  results[k++] =
      0.274211489413202125e0 * wr_4_0 + 0.281408990151987984e0 * wr_6_0 +
      0.558921854220755787e-1 * wr_8_0 + 0.376865525287898713e0 * wr_10_0;
  results[k++] =
      -0.185364857046579417e0 * wr_4_4 + 0.304301658255075593e-1 * wr_6_4 -
      0.214337794907284291e0 * wr_8_4 - 0.378276212926353124e0 * wr_10_4;
  results[k++] =
      0.748432938474834716e0 * wr_2_0 + 0.145040733675902844e0 * wr_4_0 -
      0.354944662194152227e-2 * wr_6_0 + 0.141635904859617130e0 * wr_8_0 +
      0.459674458022571476e0 * wr_10_0;
  results[k++] =
      0.288578533621515461e0 * wr_4_4 + 0.549877906201267564e-1 * wr_6_4 -
      0.768351310762007867e-1 * wr_8_4 - 0.136935071478130281e0 * wr_10_4;
  results[k++] =
      0.109559363888201437e0 * wr_2_0 + 0.230827658968171846e0 * wr_4_0 +
      0.290968038251491127e0 * wr_6_0 + 0.236416747404483457e0 * wr_8_0 +
      0.672894505675207436e-1 * wr_10_0;
  results[k++] =
      -0.394786051554407931e0 * wr_8_4 - 0.661938996710446550e-1 * wr_4_4 +
      0.141525745852747361e0 * wr_10_4 + 0.329621114434485538e0 * wr_6_4;
  results[k++] = -0.368438063091806014e0 * wr_8_8;
  results[k++] = -0.107363562738285100e0 * wr_4_4 -
                 0.294301523294370009e0 * wr_6_4 +
                 0.181527176360856838e0 * wr_8_4;
  results[k++] =
      -0.147170962872116973e0 * wr_8_8 + 0.681915656099467250e0 * wr_10_8;
  results[k++] =
      -0.434803430184464789e0 * wr_4_4 - 0.249442409202430413e0 * wr_6_4 +
      0.995854325940228050e-1 * wr_8_4 + 0.826944199370726877e-1 * wr_10_4;
  results[k++] =
      0.319232566657130449e0 * wr_8_8 + 0.485849588610944346e0 * wr_10_8;
  results[k++] =
      -0.402471702203248280e0 * wr_4_4 - 0.314624815729707003e-2 * wr_6_4 -
      0.253100816681772532e0 * wr_8_4 + 0.210899387098499467e0 * wr_10_4;
  results[k++] =
      0.414154672384843763e0 * wr_8_8 + 0.915056583246892116e-1 * wr_10_8;
  results[k++] =
      0.290047136152519618e0 * wr_4_4 - 0.214929666435427912e0 * wr_6_4 -
      0.300323924756592598e0 * wr_8_4 + 0.204362587333408662e0 * wr_10_4;
  results[k++] =
      0.153566458158166304e-1 * wr_10_0 - 0.105511010428133462e0 * wr_8_0 -
      0.393601322502665418e0 * wr_4_0 + 0.292177889782840824e0 * wr_6_0 +
      0.220029828287444381e0 * wr_2_0;
  results[k++] = 0.903117027739692310e-1 * wr_6_4 -
                 0.852217043397401109e-1 * wr_8_4 +
                 0.224324717433273044e-1 * wr_10_4;
  results[k++] =
      0.250142537173054561e0 * wr_8_8 + 0.716435694452392221e0 * wr_10_8;
  results[k++] =
      -0.102190461604253666e0 * wr_4_4 - 0.233665101927727817e0 * wr_6_4 +
      0.279859872248689960e0 * wr_8_4 - 0.785043927102858038e-1 * wr_10_4;
  results[k++] =
      -0.459541184279367740e0 * wr_8_8 - 0.538169911376962522e0 * wr_10_8;
  results[k++] =
      0.389739128469575946e0 * wr_4_4 + 0.155953653170242626e0 * wr_6_4 -
      0.373570285788247261e0 * wr_8_4 + 0.116785598789408395e0 * wr_10_4;
  results[k++] =
      0.463700012797017764e0 * wr_8_8 + 0.206591428593892764e0 * wr_10_8;
  results[k++] =
      -0.554608502663775306e0 * wr_4_4 + 0.109593056320423513e0 * wr_6_4 +
      0.218765364676090984e0 * wr_8_4 - 0.838430085589600356e-1 * wr_10_4;
  results[k++] =
      -0.263972844516993150e0 * wr_8_8 - 0.172810791630275684e-1 * wr_10_8;
  results[k++] = 0.716468773183367781e-1 * wr_6_0 -
                 0.224233137630545153e0 * wr_8_0 +
                 0.145379032592865584e0 * wr_10_0;
  results[k++] = -0.542351184422201325e-1 * wr_6_4 +
                 0.118518419987221414e0 * wr_8_4 +
                 0.709731642456282995e0 * wr_10_4;
  results[k++] =
      -0.604264866984415872e-1 * wr_4_0 + 0.160656826600353405e0 * wr_6_0 +
      0.278180457936348147e0 * wr_8_0 - 0.337134502485226993e0 * wr_10_0;
  results[k++] =
      -0.125094712027960263e-1 * wr_4_4 + 0.223108978848421033e0 * wr_6_4 +
      0.192609289732501619e0 * wr_8_4 + 0.115898691888354877e0 * wr_10_4;
  results[k++] =
      -0.288071972332552294e0 * wr_4_0 - 0.206204214825475338e0 * wr_6_0 +
      0.109214271641800330e0 * wr_8_0 + 0.252564035164248584e0 * wr_10_0;
  results[k++] =
      0.126226813945234396e0 * wr_4_4 - 0.266978843399220701e0 * wr_6_4 -
      0.295753645717443319e0 * wr_8_4 - 0.229718441479183369e0 * wr_10_4;
  results[k++] =
      0.720216673768106840e0 * wr_2_0 + 0.234247773247167492e-1 * wr_4_0 -
      0.208663994232051835e0 * wr_6_0 - 0.184195120738360603e0 * wr_8_0 -
      0.368620433613177365e-1 * wr_10_0;
  results[k++] =
      -0.388031984352227793e0 * wr_4_4 - 0.766768105988090711e-2 * wr_6_4 +
      0.336730338502188835e-1 * wr_8_4 + 0.206937455812761601e-1 * wr_10_4;
  results[k++] =
      0.122027715970534322e0 * wr_10_8 - 0.677819691293994159e-1 * wr_8_8;
  results[k++] = 0.247205212359055502e-1 * wr_6_4 -
                 0.256599906313317774e0 * wr_8_4 +
                 0.409763754824530217e0 * wr_10_4;
  results[k++] = -0.744576190314080967e-1 * wr_6_0 -
                 0.155353274846675576e0 * wr_8_0 +
                 0.419673118010091614e0 * wr_10_0;
  results[k++] =
      -0.559440559440559441e-2 * wr_4_4 + 0.174823594589067687e0 * wr_6_4 -
      0.205980961492960215e0 * wr_8_4 - 0.466483236418196950e0 * wr_10_4;
  results[k++] =
      -0.810706391395213349e-1 * wr_4_0 - 0.276338142559835888e-1 * wr_6_0 +
      0.182950121752263331e0 * wr_8_0 + 0.452313399070523610e0 * wr_10_0;
  results[k++] =
      -0.746767902066477899e-1 * wr_4_4 + 0.361427844179423226e0 * wr_6_4 +
      0.174970216420697276e0 * wr_8_4 - 0.317695938882112749e-1 * wr_10_4;
  results[k++] =
      0.204510812591309348e0 * wr_4_0 + 0.299751915544650086e0 * wr_6_0 +
      0.258448137794401856e0 * wr_8_0 + 0.815012172203602668e-1 * wr_10_0;
  results[k++] =
      -0.283378494484275740e0 * wr_4_4 + 0.209988094012594660e0 * wr_6_4 +
      0.184434802193999175e0 * wr_8_4 + 0.872407738954849517e-1 * wr_10_4;
  results[k++] =
      0.788957837028262723e0 * wr_2_0 + 0.265159098202512870e0 * wr_4_0 +
      0.476208235750094424e-1 * wr_6_0 - 0.630548891317423317e-1 * wr_8_0 -
      0.721951628617520945e-1 * wr_10_0;
  results[k++] =
      -0.258448137794401857e0 * wr_8_4 - 0.433340793981249441e-1 * wr_4_4 +
      0.926503490221853325e-1 * wr_10_4 + 0.215787672507390147e0 * wr_6_4;
  results[k++] =
      -0.105704514790196592e0 * wr_8_8 + 0.847698145568146277e0 * wr_10_8;
  results[k++] = 0.152654639702394538e-1 * wr_6_4 -
                 0.230481555257430530e0 * wr_8_4 +
                 0.132712292565652064e0 * wr_10_4;
  results[k++] =
      -0.300840323129979049e0 * wr_8_8 + 0.357420921106174908e-1 * wr_10_8;
  results[k++] =
      -0.668993608005672616e-1 * wr_4_4 - 0.152969716693340642e0 * wr_6_4 -
      0.346065775008333031e0 * wr_8_4 + 0.264396284829721362e0 * wr_10_4;
  results[k++] =
      -0.401575990817386674e0 * wr_8_8 - 0.202038289869574019e0 * wr_10_8;
  results[k++] =
      -0.337523986103459717e0 * wr_4_4 - 0.347296694035931153e0 * wr_6_4 -
      0.143787270040726656e0 * wr_8_4 + 0.244452505358014821e0 * wr_10_4;
  results[k++] =
      -0.282198841027067580e0 * wr_8_8 - 0.106226941610046347e0 * wr_10_8;
  results[k++] =
      -0.592901428788442866e0 * wr_4_4 - 0.205029834360222610e0 * wr_6_4 +
      0.818545042710590904e-1 * wr_8_4 + 0.102436510140076280e0 * wr_10_4;
  results[k++] =
      0.209275806371185660e-1 * wr_10_0 - 0.143787270040726656e0 * wr_8_0 -
      0.536388187521209038e0 * wr_4_0 + 0.398171346930187912e0 * wr_6_0 +
      0.299850112406331956e0 * wr_2_0;
  results[k++] =
      0.713506068012675763e0 * wr_1_0 - 0.231190595538876519e0 * wr_3_0 -
      0.318475548281572600e0 * wr_5_0 + 0.111569795135309880e0 * wr_7_0;
  results[k++] =
      0.131861404417071800e0 * wr_5_4 + 0.593376319876823097e-1 * wr_7_4;
  results[k++] =
      -0.137050611171710738e0 * wr_1_0 - 0.263027309290443779e0 * wr_3_0 -
      0.269160964657168188e-1 * wr_5_0 + 0.333910585934077940e0 * wr_7_0 -
      0.620973504993972675e-1 * wr_9_0;
  results[k++] = -0.147425531942581787e0 * wr_5_4 -
                 0.218536670879591826e0 * wr_7_4 -
                 0.225958774977222042e0 * wr_9_4;
  results[k++] =
      -0.203988434183663384e-1 * wr_1_0 + 0.479380738739566594e-2 * wr_3_0 +
      0.150233889658622283e0 * wr_5_0 + 0.202266681153504472e0 * wr_7_0 -
      0.288833564545717172e0 * wr_9_0;
  results[k++] = -0.177759135469158752e0 * wr_5_4 -
                 0.263501777283694150e0 * wr_7_4 -
                 0.272451019591808715e0 * wr_9_4;
  results[k++] = 0.514197059878005422e0 * wr_9_8;
  results[k++] =
      -0.775723888572065718e-1 * wr_9_4 - 0.625202968061318947e-1 * wr_5_4 +
      0.115168967800769280e0 * wr_7_4 + 0.182546760515172359e-1 * wr_11_4;
  results[k++] =
      0.126327916735928818e-1 * wr_3_0 + 0.326036167791533124e-1 * wr_5_0 -
      0.286147313751004522e-1 * wr_7_0 - 0.271111985176568592e0 * wr_9_0 +
      0.240003621779952863e0 * wr_11_0;
  results[k++] =
      -0.505393620451529785e-1 * wr_5_4 - 0.404498342321460318e-1 * wr_7_4 +
      0.713562194169022823e-1 * wr_9_4 + 0.654882528014675382e0 * wr_11_4;
  results[k++] =
      0.670565068328614687e-1 * wr_9_8 + 0.692633780126208437e0 * wr_11_8;
  results[k++] =
      0.348872483615285911e0 * wr_5_4 + 0.156992617626878660e0 * wr_7_4;
  results[k++] =
      0.809039834955890505e0 * wr_1_0 + 0.174763663215081725e0 * wr_3_0 -
      0.120372442772569289e0 * wr_5_0 - 0.177111559052672338e0 * wr_7_0;
  results[k++] = -0.147425531942581787e0 * wr_5_4 -
                 0.218536670879591826e0 * wr_7_4 -
                 0.225958774977222042e0 * wr_9_4;
  results[k++] =
      0.822303667030264425e-1 * wr_1_0 + 0.232967045371535919e0 * wr_3_0 +
      0.296077061122885007e0 * wr_5_0 + 0.163072611735247366e0 * wr_7_0 -
      0.144893817831926958e0 * wr_9_0;
  results[k++] = -0.822864902677695239e-1 * wr_5_4 -
                 0.121977620867517177e0 * wr_7_4 -
                 0.126120315070810858e0 * wr_9_4;
  results[k++] =
      -0.220332691236426744e-1 * wr_1_0 - 0.466011339537350221e-1 * wr_3_0 +
      0.162294217736040316e0 * wr_7_0 + 0.374371087363528579e0 * wr_9_0;
  results[k++] = 0.211397821114312834e0 * wr_5_4 -
                 0.290153872117684282e0 * wr_7_4 +
                 0.108002985331939354e0 * wr_9_4;
  results[k++] =
      0.293440723652195647e0 * wr_11_8 - 0.369318442036557077e0 * wr_9_8;
  results[k++] =
      0.484709987082468258e-1 * wr_5_4 + 0.111093917814967932e0 * wr_7_4 +
      0.243727889070002670e0 * wr_9_4 + 0.745616558005948456e0 * wr_11_4;
  results[k++] =
      -0.862983962106204115e-2 * wr_3_0 - 0.413632335911102594e-1 * wr_5_0 -
      0.960952605016028187e-1 * wr_7_0 - 0.980495704999717707e-1 * wr_9_0 +
      0.491861059206233147e0 * wr_11_0;
  results[k++] =
      0.416229054754660564e-1 * wr_5_4 + 0.104555145333108515e0 * wr_7_4 -
      0.230049833005232974e0 * wr_9_4 + 0.100538916171585283e0 * wr_11_4;
  results[k++] =
      -0.291057253851324612e0 * wr_3_0 - 0.833964746853068419e-1 * wr_5_0 +
      0.336411693821418528e0 * wr_7_0 - 0.587893788356772185e-1 * wr_9_0;
  results[k++] = -0.345294209705380499e0 * wr_5_4 -
                 0.318762411974342070e0 * wr_7_4 -
                 0.242564503481995403e0 * wr_9_4;
  results[k++] =
      0.753653759681189930e0 * wr_1_0 - 0.224903567051012492e-1 * wr_3_0 -
      0.123345049466880680e0 * wr_5_0 + 0.762543456174403128e-1 * wr_7_0 -
      0.259722762291782210e0 * wr_9_0;
  results[k++] = 0.675588659496011123e-1 * wr_5_4 -
                 0.459854465707368916e-1 * wr_7_4 -
                 0.113408968458429106e0 * wr_9_4;
  results[k++] =
      -0.119845184684891649e0 * wr_1_0 - 0.272420451634165844e0 * wr_3_0 -
      0.182688900360236390e0 * wr_5_0 + 0.812574461142312353e-1 * wr_7_0 +
      0.485020476916973776e-1 * wr_9_0 + 0.210207757913713152e0 * wr_11_0;
  results[k++] =
      -0.111807114829437380e0 * wr_5_4 - 0.133916341295709583e0 * wr_7_4 -
      0.339735352502682993e-1 * wr_9_4 + 0.604606892220589242e0 * wr_11_4;
  results[k++] =
      0.641182843269306223e-1 * wr_9_8 + 0.350246646453115198e0 * wr_11_8;
  results[k++] =
      0.203132196443827466e0 * wr_9_4 + 0.163716567191545859e0 * wr_5_4 -
      0.301583150089689739e0 * wr_7_4 - 0.478019627388430437e-1 * wr_11_4;
  results[k++] =
      -0.178663767955099328e-1 * wr_1_0 - 0.148861861927321498e-1 * wr_3_0 +
      0.823271556966257997e-1 * wr_5_0 + 0.220385163894496863e0 * wr_7_0 +
      0.156603932001853514e0 * wr_9_0 - 0.362582889187973430e0 * wr_11_0;
  results[k++] =
      -0.143752004780705202e0 * wr_5_4 - 0.226976849653745056e0 * wr_7_4 -
      0.280281665814713470e0 * wr_9_4 - 0.263828462059893487e0 * wr_11_4;
  results[k++] =
      0.307291518400911178e0 * wr_9_8 + 0.488314880971038476e0 * wr_11_8;
  results[k++] = 0.352414427048230514e0 * wr_5_4 +
                 0.251872664037411809e-1 * wr_7_4 -
                 0.198053087747480743e0 * wr_9_4;
  results[k++] =
      0.213882527361437789e0 * wr_3_0 + 0.306418213988904121e0 * wr_5_0 +
      0.179962101999881782e0 * wr_7_0 - 0.144003980442585804e0 * wr_9_0;
  results[k++] = 0.145943830699286974e0 * wr_5_4 -
                 0.993399183751449148e-1 * wr_7_4 -
                 0.244991372484331611e0 * wr_9_4;
  results[k++] =
      0.814039098812330751e0 * wr_1_0 + 0.218631255030689658e0 * wr_3_0 +
      0.611847650852786514e-1 * wr_7_0 + 0.336639175177452660e0 * wr_9_0;
  results[k++] =
      -0.111807114829437380e0 * wr_5_4 - 0.133916341295709583e0 * wr_7_4 -
      0.339735352502682993e-1 * wr_9_4 + 0.604606892220589242e0 * wr_11_4;
  results[k++] =
      0.719071108109349891e-1 * wr_1_0 + 0.207039543241966042e0 * wr_3_0 +
      0.277183159167255213e0 * wr_5_0 + 0.199717096473532193e0 * wr_7_0 +
      0.163274219952248597e-1 * wr_9_0 + 0.420415515827426303e0 * wr_11_0;
  results[k++] =
      0.287237678786728420e0 * wr_5_4 - 0.318553064819867985e0 * wr_7_4 +
      0.290931974539449684e-1 * wr_9_4 + 0.470685827226508443e-1 * wr_11_4;
  results[k++] =
      -0.355703872407009032e0 * wr_11_8 + 0.447681556767943544e0 * wr_9_8;
  results[k++] =
      -0.757639588870736878e-1 * wr_5_4 - 0.119627303505905823e0 * wr_7_4 -
      0.147721408393441291e0 * wr_9_4 - 0.139049808614763670e0 * wr_11_4;
  results[k++] =
      -0.188328147361972590e-1 * wr_1_0 - 0.470742540423838580e-1 * wr_3_0 -
      0.347121767046191593e-1 * wr_5_0 + 0.580765900346761944e-1 * wr_7_0 +
      0.237708055518714870e0 * wr_9_0 + 0.412771597357836737e0 * wr_11_0;
  results[k++] =
      0.176591032286332366e0 * wr_5_4 + 0.591453218183888307e-1 * wr_7_4 -
      0.378456262242591226e0 * wr_9_4 + 0.187494723687227602e0 * wr_11_4;
  results[k++] = -0.237863674794110013e0 * wr_9_8;
  results[k++] = -0.443538443173198257e0 * wr_5_4 +
                 0.220138565545521193e0 * wr_7_4 -
                 0.188836209851797484e-1 * wr_9_4;
  results[k++] = 0.462372442634485249e0 * wr_9_8;
  results[k++] = -0.173561869174697295e0 * wr_5_4 -
                 0.109387732673128547e0 * wr_7_4 +
                 0.971176384236679717e-1 * wr_9_4;
  results[k++] =
      0.641182843269306226e-1 * wr_9_8 + 0.350246646453115198e0 * wr_11_8;
  results[k++] =
      0.287237678786728420e0 * wr_5_4 - 0.318553064819867985e0 * wr_7_4 +
      0.290931974539449684e-1 * wr_9_4 + 0.470685827226508443e-1 * wr_11_4;
  results[k++] =
      0.263659406306761627e0 * wr_1_0 - 0.359594996157098914e0 * wr_3_0 +
      0.207887369375441410e0 * wr_5_0 - 0.538452956178640716e-1 * wr_7_0 +
      0.176080041124973978e-2 * wr_9_0 + 0.127398641159826153e-2 * wr_11_0;
  results[k++] =
      -0.380174659003831943e0 * wr_9_8 + 0.443030858251031488e0 * wr_11_8;
  results[k++] =
      -0.879299016694066594e-1 * wr_5_4 + 0.302355451354450969e0 * wr_7_4 -
      0.327298471356880895e0 * wr_9_4 + 0.112964598534362026e0 * wr_11_4;
  results[k++] =
      -0.103151574523309431e-1 * wr_1_0 + 0.945399796613887669e-1 * wr_3_0 -
      0.174282553511231504e0 * wr_5_0 + 0.139963377069876313e0 * wr_7_0 -
      0.542491933784543849e-1 * wr_9_0 + 0.837349314704914830e-2 * wr_11_0;
  results[k++] = -0.221880078490091649e0 * wr_5_4 +
                 0.163147116536832095e0 * wr_7_4 -
                 0.377861208727984085e-1 * wr_9_4;
  results[k++] = -0.475965153826809826e0 * wr_9_8;
  results[k++] =
      0.424684197438401737e0 * wr_5_4 - 0.253997725740670896e0 * wr_7_4 +
      0.159675504126657917e-1 * wr_9_4 + 0.153718128771093934e-1 * wr_11_4;
  results[k++] =
      0.247099202515303594e0 * wr_11_8 + 0.760207456341350671e-1 * wr_9_8;
  results[k++] =
      -0.210702366854012644e0 * wr_5_4 - 0.378054485982080102e-1 * wr_7_4 +
      0.150520346688085364e0 * wr_9_4 - 0.508436994764597445e-1 * wr_11_4;
  results[k++] =
      0.331730687258170736e0 * wr_9_8 - 0.378338037918663705e0 * wr_11_8;
  results[k++] =
      0.104108087613214545e0 * wr_7_0 + 0.328165061656946797e0 * wr_3_0 -
      0.214834462211829863e0 * wr_1_0 - 0.251078114657855378e-1 * wr_9_0 +
      0.264235291078819908e-2 * wr_11_0 - 0.241986279766894799e0 * wr_5_0;
  results[k++] =
      -0.227147518516038611e0 * wr_5_4 + 0.418429639371650072e0 * wr_7_4 -
      0.281834484710051755e0 * wr_9_4 + 0.663225316935733921e-1 * wr_11_4;
  results[k++] =
      -0.327365809794247437e0 * wr_9_8 + 0.260107401069081297e0 * wr_11_8;
  results[k++] =
      -0.461514915459751298e-1 * wr_3_0 + 0.115707912783131530e0 * wr_5_0 +
      0.238443056292709808e0 * wr_7_0 - 0.271889842848536874e0 * wr_9_0;
  results[k++] = 0.167676695665558793e0 * wr_5_4 +
                 0.105678589705184114e0 * wr_7_4 +
                 0.448726120523864802e-1 * wr_9_4;
  results[k++] =
      -0.273035906095036310e0 * wr_3_0 - 0.221467931740303494e0 * wr_5_0 +
      0.631079433179324501e-1 * wr_7_0 + 0.558058653930778210e-1 * wr_9_0 +
      0.202101135808615830e0 * wr_11_0;
  results[k++] =
      -0.329250951083627585e0 * wr_5_4 - 0.245010465991468021e0 * wr_7_4 -
      0.501691054385562619e-1 * wr_9_4 + 0.627865330252694440e0 * wr_11_4;
  results[k++] =
      0.783884100561643211e0 * wr_1_0 + 0.870838358035419570e-1 * wr_3_0 -
      0.105954619371799419e0 * wr_5_0 + 0.276267423526255155e-1 * wr_7_0 +
      0.116043042660422218e0 * wr_9_0 - 0.385654780618449810e0 * wr_11_0;
  results[k++] =
      0.975078193586804983e-1 * wr_5_4 - 0.149960761146296050e-1 * wr_7_4 -
      0.109461119378885537e0 * wr_9_4 - 0.147897832565847455e0 * wr_11_4;
  results[k++] =
      -0.281708279027572501e0 * wr_9_8 + 0.471221818626493161e0 * wr_11_8;
  results[k++] =
      -0.227147518516038611e0 * wr_5_4 + 0.418429639371650072e0 * wr_7_4 -
      0.281834484710051755e0 * wr_9_4 + 0.663225316935733921e-1 * wr_11_4;
  results[k++] =
      -0.826286393122422551e-1 * wr_1_0 - 0.218011754247621997e0 * wr_3_0 -
      0.235217432780408231e0 * wr_5_0 - 0.691627155472404317e-1 * wr_7_0 +
      0.171891940034993297e0 * wr_9_0 + 0.212404522444128311e0 * wr_11_0;
  results[k++] =
      -0.886434721442549985e-1 * wr_5_4 - 0.139963377069876313e0 * wr_7_4 -
      0.172833346387714005e0 * wr_9_4 - 0.162687615822432200e0 * wr_11_4;
  results[k++] =
      0.365442581982697012e0 * wr_9_8 + 0.161311762281461473e0 * wr_11_8;
  results[k++] = 0.117512113784154027e0 * wr_5_4 -
                 0.204645708989432323e0 * wr_7_4 -
                 0.382339934195381920e0 * wr_9_4;
  results[k++] =
      -0.595813193867313566e-1 * wr_3_0 - 0.298756546155659134e-1 * wr_5_0 +
      0.138522897906069406e0 * wr_7_0 + 0.379088940007920621e0 * wr_9_0;
  results[k++] =
      0.343300807987999350e0 * wr_5_4 + 0.892094988584555313e-1 * wr_7_4 -
      0.146880100971749126e-1 * wr_9_4 + 0.551460439435913442e0 * wr_11_4;
  results[k++] =
      0.186519032473000353e0 * wr_3_0 + 0.280969741963459830e0 * wr_5_0 +
      0.211931895266160426e0 * wr_7_0 + 0.201825866518107184e-1 * wr_9_0 +
      0.414184077675080161e0 * wr_11_0;
  results[k++] =
      0.185008079309813500e0 * wr_5_4 - 0.284530538924866968e-1 * wr_7_4 -
      0.207687871481324278e0 * wr_9_4 - 0.280616407146181694e0 * wr_11_4;
  results[k++] =
      0.826286393122422551e0 * wr_1_0 + 0.275383268523311998e0 * wr_3_0 +
      0.446743901108113475e-1 * wr_5_0 + 0.728028584707794021e-2 * wr_7_0 +
      0.176140954283049311e0 * wr_9_0 + 0.439037099023270001e0 * wr_11_0;
  results[k++] =
      0.113165324174603731e0 * wr_5_4 + 0.379022616852739771e-1 * wr_7_4 -
      0.242527182995047543e0 * wr_9_4 + 0.120152767172736374e0 * wr_11_4;
  results[k++] =
      -0.327365809794247437e0 * wr_9_8 + 0.260107401069081297e0 * wr_11_8;
  results[k++] =
      -0.886434721442549985e-1 * wr_5_4 - 0.139963377069876313e0 * wr_7_4 -
      0.172833346387714005e0 * wr_9_4 - 0.162687615822432200e0 * wr_11_4;
  results[k++] =
      0.495771835873453530e-1 * wr_1_0 + 0.153755658258849198e0 * wr_3_0 +
      0.245370703260138083e0 * wr_5_0 + 0.273010719265422757e0 * wr_7_0 +
      0.202793861839037036e0 * wr_9_0 + 0.469525786455441531e-1 * wr_11_0;
  results[k++] =
      0.328698792003565230e0 * wr_5_4 - 0.155699427791162477e0 * wr_7_4 -
      0.291310545909146650e0 * wr_9_4 + 0.183720646755027232e0 * wr_11_4;
  results[k++] = 0.228646264073524081e0 * wr_9_8;
  results[k++] = -0.355292473347462008e-1 * wr_5_4 -
                 0.313493358835995890e0 * wr_7_4 +
                 0.175468031469695228e0 * wr_9_4;
  results[k++] =
      -0.138029544935370601e-1 * wr_9_8 + 0.583249838584787123e0 * wr_11_8;
  results[k++] =
      -0.282733625876981866e0 * wr_5_4 - 0.230589625280270117e0 * wr_7_4 +
      0.473536055812099315e-1 * wr_9_4 + 0.846613438603609321e-1 * wr_11_4;
  results[k++] =
      0.227702091021321264e0 * wr_9_8 + 0.519387356406604320e0 * wr_11_8;
  results[k++] =
      -0.227271736185322244e0 * wr_5_4 + 0.741425846624583226e-2 * wr_7_4 -
      0.280434952195205175e0 * wr_9_4 + 0.199425396749011921e0 * wr_11_4;
  results[k++] =
      0.452575696472732381e0 * wr_1_0 - 0.553056636475641307e0 * wr_3_0 +
      0.224300736059373349e0 * wr_5_0 + 0.175453378475328540e-1 * wr_7_0 -
      0.401984891505467966e-1 * wr_9_0 + 0.890631565617312273e-2 * wr_11_0;
  results[k++] =
      0.365442581982697012e0 * wr_9_8 + 0.161311762281461473e0 * wr_11_8;
  results[k++] =
      0.328698792003565230e0 * wr_5_4 - 0.155699427791162477e0 * wr_7_4 -
      0.291310545909146650e0 * wr_9_4 + 0.183720646755027232e0 * wr_11_4;
  results[k++] =
      0.181783006486932961e0 * wr_1_0 - 0.252434662813035997e-1 * wr_3_0 -
      0.316443596618247044e0 * wr_5_0 + 0.344357520566786571e0 * wr_7_0 -
      0.148715498681960493e0 * wr_9_0 + 0.241876920295227454e-1 * wr_11_0;
  results[k++] =
      -0.130517693229465676e-1 * wr_5_4 + 0.124507009988635020e0 * wr_7_4 -
      0.113358362618395226e0 * wr_9_4 + 0.303136237972857416e-1 * wr_11_4;
  results[k++] =
      -0.679950219752585466e-1 * wr_9_8 + 0.552530614010205853e0 * wr_11_8;
  results[k++] =
      -0.772153086251639522e-1 * wr_5_4 - 0.253997725740670896e0 * wr_7_4 +
      0.287415907427984251e0 * wr_9_4 - 0.819830020112500982e-1 * wr_11_4;
  results[k++] =
      -0.494198405030607187e0 * wr_11_8 - 0.152041491268270134e0 * wr_9_8;
  results[k++] =
      0.325630930592564996e0 * wr_5_4 + 0.170124518691936047e0 * wr_7_4 -
      0.340651310925666877e0 * wr_9_4 + 0.108042861387476957e0 * wr_11_4;
  results[k++] =
      0.296811667546784343e0 * wr_9_8 + 0.236461273699164816e0 * wr_11_8;
  results[k++] =
      -0.208216175226429089e0 * wr_7_0 - 0.656330123313893593e0 * wr_3_0 +
      0.429668924423659726e0 * wr_1_0 + 0.502156229315710754e-1 * wr_9_0 -
      0.528470582157639818e-2 * wr_11_0 + 0.483972559533789598e0 * wr_5_0;
  results[k++] =
      -0.454295037032077222e0 * wr_5_4 + 0.597756627673785818e-1 * wr_7_4 +
      0.187889656473367836e0 * wr_9_4 - 0.723518527566255188e-1 * wr_11_4;
  results[k++] =
      -0.218243873196164958e0 * wr_9_8 - 0.472922547398329632e-1 * wr_11_8;
  results[k++] =
      0.385883649512417076e-1 * wr_5_0 + 0.652205950827775800e-2 * wr_7_0 -
      0.267188223038903004e0 * wr_9_0 + 0.210892209732391565e0 * wr_11_0;
  results[k++] =
      -0.229005114139995354e-1 * wr_5_4 + 0.635930664265745971e-1 * wr_7_4 +
      0.220483291170060805e0 * wr_9_4 + 0.742900277363425860e0 * wr_11_4;
  results[k++] =
      -0.442276595827745362e-1 * wr_3_0 + 0.456583691501821735e-1 * wr_5_0 +
      0.217479228442533576e0 * wr_7_0 + 0.191074453743191389e0 * wr_9_0 -
      0.356472896688858809e0 * wr_11_0;
  results[k++] = 0.141712672760565628e0 * wr_5_4 +
                 0.893147097230455639e-1 * wr_7_4 +
                 0.379242789968565462e-1 * wr_9_4;
  results[k++] =
      -0.205716225669423810e0 * wr_3_0 - 0.254845066469352711e0 * wr_5_0 -
      0.939773440284462121e-1 * wr_7_0 + 0.162513388503872448e0 * wr_9_0 +
      0.217916889850312575e0 * wr_11_0;
  results[k++] =
      -0.308237565759345375e0 * wr_5_4 - 0.297569160308292517e0 * wr_7_4 -
      0.265654449722471103e0 * wr_9_4 - 0.199842951683222912e0 * wr_11_4;
  results[k++] =
      -0.246575354415772752e0 * wr_9_8 + 0.289420797814869731e0 * wr_11_8;
  results[k++] =
      0.213046844978523640e0 * wr_9_4 + 0.171707384262536435e0 * wr_5_4 -
      0.316303076273093433e0 * wr_7_4 - 0.501351214803984755e-1 * wr_11_4;
  results[k++] =
      0.811997942941150153e0 * wr_1_0 + 0.190822668598782241e0 * wr_3_0 -
      0.106172922891290894e0 * wr_5_0 - 0.211880084073145880e0 * wr_7_0 -
      0.147457835944176468e0 * wr_9_0 - 0.199743105086091856e-1 * wr_11_0;
  results[k++] =
      0.201024499408268723e0 * wr_5_4 + 0.145478256150720786e0 * wr_7_4 +
      0.870998195811380669e-1 * wr_9_4 + 0.363350821242223477e-1 * wr_11_4;
  results[k++] = 0.214860042311011054e0 * wr_9_8;
  results[k++] =
      0.126231456408571064e-1 * wr_5_4 - 0.116344161349756721e0 * wr_7_4 -
      0.986031253918270201e-1 * wr_9_4 + 0.553725173562689490e0 * wr_11_4;
  results[k++] =
      -0.310630345817568538e-1 * wr_5_0 - 0.962528715311322664e-1 * wr_7_0 -
      0.119490205900472511e0 * wr_9_0 + 0.471569316886770272e0 * wr_11_0;
  results[k++] =
      0.108496685430655690e0 * wr_5_4 - 0.125145698335086450e0 * wr_7_4 -
      0.314108284366705362e0 * wr_9_4 - 0.374386549109434659e0 * wr_11_4;
  results[k++] =
      -0.523308725422928865e-1 * wr_3_0 - 0.540237109317383906e-1 * wr_5_0 +
      0.355748700451514071e-1 * wr_7_0 + 0.226082342571379465e0 * wr_9_0 +
      0.421784419464783131e0 * wr_11_0;
  results[k++] =
      0.322976581948805243e0 * wr_5_4 + 0.152119652084141225e0 * wr_7_4 -
      0.477065359392194881e-2 * wr_9_4 - 0.995077205411965407e-1 * wr_11_4;
  results[k++] =
      0.135210500692760055e0 * wr_3_0 + 0.241946278728557730e0 * wr_5_0 +
      0.278814852435185136e0 * wr_7_0 + 0.211404090852907738e0 * wr_9_0 +
      0.518947809706020773e-1 * wr_11_0;
  results[k++] =
      -0.942888480135159304e-1 * wr_5_4 + 0.334973538995385543e0 * wr_7_4 -
      0.367680929797032599e0 * wr_9_4 + 0.127819981372448307e0 * wr_11_4;
  results[k++] =
      -0.113520176592124060e0 * wr_11_8 + 0.142874152697395693e0 * wr_9_8;
  results[k++] =
      0.348184646541221138e0 * wr_5_4 + 0.251975731049567929e0 * wr_7_4 +
      0.150861312844613700e0 * wr_9_4 + 0.629342083363407948e-1 * wr_11_4;
  results[k++] =
      0.843853015689291763e0 * wr_1_0 + 0.363566012973865925e0 * wr_3_0 +
      0.144015642100331983e0 * wr_5_0 - 0.716481169158578854e-1 * wr_9_0 -
      0.657333892294292980e-1 * wr_11_0;
  results[k++] =
      0.307405529632016945e0 * wr_5_4 - 0.271811205148309720e0 * wr_7_4 -
      0.762830072781470198e-1 * wr_9_4 + 0.933465161301067717e-1 * wr_11_4;
  results[k++] =
      0.311592335081808046e0 * wr_9_8 + 0.844004454160732020e0 * wr_11_8;
  results[k++] =
      0.370256843515032068e-1 * wr_5_4 + 0.365385042942465856e-1 * wr_7_4 -
      0.255613834888992175e0 * wr_9_4 + 0.138914475639476597e0 * wr_11_4;
  results[k++] =
      0.263343587735183690e0 * wr_9_8 + 0.285325582177504763e0 * wr_11_8;
  results[k++] =
      0.445802792202984396e-1 * wr_5_4 - 0.125696275997082067e0 * wr_7_4 -
      0.350317042103957561e0 * wr_9_4 + 0.248497768470886592e0 * wr_11_4;
  results[k++] =
      0.186650011488591087e-1 * wr_9_8 - 0.631969336730324817e-1 * wr_11_8;
  results[k++] =
      -0.143341103154558050e0 * wr_5_4 - 0.318273831017521987e0 * wr_7_4 -
      0.154561189452267628e0 * wr_9_4 + 0.217416804248011407e0 * wr_11_4;
  results[k++] =
      0.188422287906398315e0 * wr_3_0 - 0.389035027334021303e0 * wr_5_0 +
      0.322788578943844342e0 * wr_7_0 - 0.126861973239953087e0 * wr_9_0 +
      0.197230513178609601e-1 * wr_11_0;
  results[k++] =
      -0.110669842800101802e0 * wr_9_8 - 0.799385006181493668e-1 * wr_11_8;
  results[k++] =
      -0.383949383449709063e0 * wr_5_4 - 0.212182554011681325e0 * wr_7_4 +
      0.529319141959820645e-1 * wr_9_4 + 0.890050042390296697e-1 * wr_11_4;
  results[k++] =
      0.585540043769119909e0 * wr_1_0 - 0.550416732923025157e0 * wr_3_0 -
      0.507341095548767510e-1 * wr_5_0 + 0.305577802950139366e0 * wr_7_0 -
      0.163184855865705343e0 * wr_9_0 + 0.288073602923318454e-1 * wr_11_0;
  results[k++] = -0.229214957117863273e0 * wr_6_0 +
                 0.107930665941152626e0 * wr_8_0 +
                 0.129359304483458908e0 * wr_2_0 + wr_0_0 -
                 0.302606484424666243e0 * wr_4_0;
  results[k++] = 0.487483522255074737e0 * wr_4_4 +
                 0.224583874541076843e0 * wr_6_4 +
                 0.876832875143858367e-1 * wr_8_4;
  results[k++] =
      -0.233061700951345963e0 * wr_4_0 + 0.370727608732470124e-1 * wr_6_0 -
      0.643010240533460348e-1 * wr_10_0 - 0.195428177354601368e0 * wr_2_0 +
      0.314610509566952025e0 * wr_8_0;
  results[k++] =
      0.275762323442613281e0 * wr_4_4 + 0.140121865264539056e-1 * wr_6_4 -
      0.137055830648546439e0 * wr_8_4 - 0.198536462190397141e0 * wr_10_4;
  results[k++] =
      0.361279109359545692e0 * wr_8_8 - 0.156098378760941290e0 * wr_10_8;
  results[k++] =
      0.103345192737964565e0 * wr_4_4 - 0.245057523794429946e0 * wr_6_4 +
      0.171210979288394747e0 * wr_8_4 - 0.401739999805567122e-1 * wr_10_4;
  results[k++] =
      -0.309880676591327159e-1 * wr_2_0 + 0.230971419257278448e-1 * wr_4_0 +
      0.171454560796813438e0 * wr_6_0 + 0.180586913106549620e0 * wr_8_0 -
      0.297380167491318104e0 * wr_10_0;
  results[k++] =
      0.604951141898359817e-1 * wr_4_4 - 0.143449177385650200e0 * wr_6_4 -
      0.272030245565278260e0 * wr_8_4 - 0.300916884737014468e0 * wr_10_4;
  results[k++] =
      0.405159125285103698e0 * wr_8_8 + 0.386490981086429799e0 * wr_10_8;
  results[k++] =
      -0.243165159383446035e-1 * wr_4_4 - 0.257955288204663102e-1 * wr_6_4 +
      0.146752267961481211e0 * wr_8_4 - 0.129255478198312901e0 * wr_10_4 +
      0.347193731488028167e-1 * wr_12_4;
  results[k++] =
      0.179733216270115789e-1 * wr_4_0 + 0.341072277455768956e-1 * wr_6_0 -
      0.429034178223703712e-1 * wr_8_0 - 0.279531770006313107e0 * wr_10_0 +
      0.256195099039783264e0 * wr_12_0;
  results[k++] =
      0.465921747814992475e-2 * wr_4_4 - 0.597820069073462019e-1 * wr_6_4 -
      0.687347925204182516e-1 * wr_8_4 + 0.351618186895777371e-1 * wr_10_4 +
      0.634202992402710080e0 * wr_12_4;
  results[k++] = 0.157753947927044921e0 * wr_8_8 +
                 0.223611096249562128e0 * wr_10_8 +
                 0.764220645762266065e0 * wr_12_8;
  results[k++] = 0.487483522255074737e0 * wr_4_4 +
                 0.224583874541076843e0 * wr_6_4 +
                 0.876832875143858367e-1 * wr_8_4;
  results[k++] = -0.137528974270717964e0 * wr_6_0 -
                 0.151102932317613677e0 * wr_8_0 +
                 0.388077913450376725e0 * wr_2_0 + wr_0_0 +
                 0.534011443102352193e-1 * wr_4_0;
  results[k++] =
      -0.340408402404201114e0 * wr_4_4 - 0.278914424450992861e0 * wr_6_4 -
      0.262841588668426302e0 * wr_8_4 - 0.214443888439203352e0 * wr_10_4;
  results[k++] =
      0.126651934259763445e0 * wr_2_0 + 0.130143136180683924e0 * wr_8_0 -
      0.138906087843940801e0 * wr_10_0 + 0.251735408432591617e0 * wr_4_0 +
      0.274581657364107930e0 * wr_6_0;
  results[k++] =
      0.218631255030689658e0 * wr_4_4 - 0.416595424606689225e0 * wr_6_4 +
      0.194038007919067170e0 * wr_8_4 - 0.166944340731811230e-1 * wr_10_4;
  results[k++] =
      0.318777495054919566e0 * wr_8_8 - 0.375639943098234825e0 * wr_10_8;
  results[k++] =
      0.885557795263361690e-1 * wr_4_4 + 0.999943304821879334e-2 * wr_6_4 -
      0.349308337488634801e-1 * wr_8_4 - 0.540961491674759051e-1 * wr_10_4;
  results[k++] =
      0.179759477307716839e0 * wr_8_0 + 0.365668792206762683e0 * wr_10_0 -
      0.352814670705953158e-1 * wr_2_0 - 0.473350552294628986e-1 * wr_4_0 +
      0.167322518388968951e-1 * wr_6_0;
  results[k++] =
      0.131349447629358276e0 * wr_4_4 + 0.148315560488029177e-1 * wr_6_4 -
      0.321226955537626217e0 * wr_8_4 + 0.167769435111115102e0 * wr_10_4;
  results[k++] = -0.182158568602811180e0 * wr_8_8 -
                 0.228650400146751632e0 * wr_10_8 +
                 0.441222995551113944e0 * wr_12_8;
  results[k++] =
      -0.787551495072775624e-2 * wr_4_4 + 0.441596609592819392e-1 * wr_6_4 +
      0.116183004693026606e0 * wr_8_4 + 0.254246819061186214e0 * wr_10_4 +
      0.750399100346990499e0 * wr_12_4;
  results[k++] =
      -0.127597925655252359e-1 * wr_4_0 - 0.495804940714103769e-1 * wr_6_0 -
      0.101528017121920442e0 * wr_8_0 - 0.902035774510036690e-1 * wr_10_0 +
      0.505223548652821872e0 * wr_12_0;
  results[k++] =
      0.210587205341356233e-1 * wr_4_4 + 0.574446426751991845e-1 * wr_6_4 +
      0.564849742744995133e-1 * wr_8_4 - 0.270554124860910975e0 * wr_10_4 +
      0.140316676034894596e0 * wr_12_4;
  results[k++] =
      -0.233061700951345963e0 * wr_4_0 + 0.370727608732470124e-1 * wr_6_0 -
      0.643010240533460348e-1 * wr_10_0 - 0.195428177354601368e0 * wr_2_0 +
      0.314610509566952025e0 * wr_8_0;
  results[k++] =
      -0.340408402404201114e0 * wr_4_4 - 0.278914424450992861e0 * wr_6_4 -
      0.262841588668426302e0 * wr_8_4 - 0.214443888439203352e0 * wr_10_4;
  results[k++] =
      -0.674161638581950805e-1 * wr_6_0 + 0.817595082223393015e-1 * wr_8_0 +
      0.234755660883639715e0 * wr_2_0 - 0.280632676178699419e0 * wr_10_0 +
      wr_0_0 - 0.110979929161747344e0 * wr_4_0;
  results[k++] =
      0.353535600515806681e0 * wr_4_4 + 0.642119054093153646e-1 * wr_6_4 -
      0.993373993359305668e-1 * wr_8_4 - 0.173296831656425339e0 * wr_10_4;
  results[k++] =
      -0.122198225797706565e0 * wr_8_8 + 0.408761506589657412e0 * wr_10_8;
  results[k++] =
      -0.183067308805462748e0 * wr_4_4 + 0.394033211370672671e0 * wr_6_4 -
      0.213493135346009656e0 * wr_8_4 + 0.457392287900759203e-2 * wr_10_4 +
      0.166680543894654113e-1 * wr_12_4;
  results[k++] =
      -0.179196994797252402e0 * wr_2_0 - 0.265945176153983180e0 * wr_4_0 -
      0.124058447857390369e0 * wr_6_0 + 0.100367968137882633e0 * wr_8_0 +
      0.152359057756130440e-1 * wr_10_0 + 0.232436771907499815e0 * wr_12_0;
  results[k++] =
      0.285765338659862052e0 * wr_4_4 + 0.494260687029240252e-1 * wr_6_4 -
      0.535595785873388973e-1 * wr_8_4 - 0.871532258117738784e-2 * wr_10_4 +
      0.597962821408269505e0 * wr_12_4;
  results[k++] = 0.288695410708817778e0 * wr_8_8 +
                 0.582393773701746222e-2 * wr_10_8 +
                 0.499982099374484870e0 * wr_12_8;
  results[k++] =
      0.107452550820597700e0 * wr_4_4 - 0.562904587672389530e-1 * wr_6_4 -
      0.266866419182512070e0 * wr_8_4 + 0.288157141377478298e0 * wr_10_4 -
      0.825826331114422650e-1 * wr_12_4;
  results[k++] =
      0.126689884140552163e0 * wr_10_0 + 0.224695039706662487e0 * wr_8_0 -
      0.281143801787618156e-1 * wr_2_0 + 0.107176424838311418e0 * wr_6_0 -
      0.453843037720473514e-2 * wr_4_0 - 0.363391301008207038e0 * wr_12_0;
  results[k++] =
      0.549031288445570253e-1 * wr_4_4 - 0.107856524350112933e0 * wr_6_4 -
      0.224987421144215103e0 * wr_8_4 - 0.299834803752343935e0 * wr_10_4 -
      0.290628321865292246e0 * wr_12_4;
  results[k++] = 0.344247336930383463e0 * wr_8_8 +
                 0.365087708059732529e0 * wr_10_8 +
                 0.383563219083967601e0 * wr_12_8;
  results[k++] =
      0.275762323442613281e0 * wr_4_4 + 0.140121865264539056e-1 * wr_6_4 -
      0.137055830648546439e0 * wr_8_4 - 0.198536462190397141e0 * wr_10_4;
  results[k++] =
      0.126651934259763445e0 * wr_2_0 + 0.130143136180683924e0 * wr_8_0 -
      0.138906087843940801e0 * wr_10_0 + 0.251735408432591617e0 * wr_4_0 +
      0.274581657364107930e0 * wr_6_0;
  results[k++] =
      0.353535600515806681e0 * wr_4_4 + 0.642119054093153646e-1 * wr_6_4 -
      0.993373993359305668e-1 * wr_8_4 - 0.173296831656425339e0 * wr_10_4;
  results[k++] =
      -0.107865862173112129e-1 * wr_6_0 + 0.930800555146632051e-1 * wr_8_0 +
      0.400465539154444219e0 * wr_2_0 + 0.336759211414439303e0 * wr_10_0 +
      wr_0_0 + 0.102443011533920625e0 * wr_4_0;
  results[k++] =
      0.129749914670388010e0 * wr_4_4 - 0.916463177002112607e-1 * wr_6_4 -
      0.141779110914418119e0 * wr_8_4 + 0.944379803297450213e-1 * wr_10_4;
  results[k++] = -0.184007941586118160e0 * wr_8_8 +
                 0.197975814446676295e-1 * wr_10_8 +
                 0.196109113935198866e0 * wr_12_8;
  results[k++] =
      -0.338876004935449905e0 * wr_4_4 - 0.244868359526419836e0 * wr_6_4 -
      0.175015934149933631e0 * wr_8_4 - 0.128297808153395396e-1 * wr_10_4 +
      0.630308157250208325e0 * wr_12_4;
  results[k++] =
      0.428268128592457897e-2 * wr_10_0 + 0.261538172143059536e0 * wr_6_0 +
      0.441017766722843879e0 * wr_12_0 + 0.113334130683332114e0 * wr_2_0 +
      0.164799372170207391e0 * wr_8_0 + 0.228577445831836544e0 * wr_4_0;
  results[k++] =
      0.287219624584606400e0 * wr_4_4 - 0.193190676325258686e0 * wr_6_4 -
      0.209347242912963218e0 * wr_8_4 + 0.130067911230407280e-1 * wr_10_4 +
      0.849907345855100033e-1 * wr_12_4;
  results[k++] = 0.322013897775706780e0 * wr_8_8 +
                 0.593927443340028885e-1 * wr_10_8 -
                 0.436788481037488384e0 * wr_12_8;
  results[k++] =
      0.751792053644410744e-1 * wr_4_4 + 0.393836342404413869e-2 * wr_6_4 -
      0.410768952385337945e-1 * wr_8_4 - 0.711216197221743064e-1 * wr_10_4 -
      0.758017560645202186e-1 * wr_12_4;
  results[k++] =
      -0.307977604283679416e-1 * wr_2_0 - 0.244595606319583912e-1 * wr_6_0 +
      0.769190886292862665e-1 * wr_8_0 + 0.248125062650805361e0 * wr_10_0 -
      0.513732143274087408e-1 * wr_4_0 + 0.398075225526689615e0 * wr_12_0;
  results[k++] =
      0.114871608715883349e0 * wr_4_4 + 0.105309805425666800e0 * wr_6_4 -
      0.998522708616157337e-1 * wr_8_4 - 0.352060505007903552e0 * wr_10_4 +
      0.235290470583996596e0 * wr_12_4;
  results[k++] =
      0.361279109359545692e0 * wr_8_8 - 0.156098378760941290e0 * wr_10_8;
  results[k++] =
      0.218631255030689658e0 * wr_4_4 - 0.416595424606689225e0 * wr_6_4 +
      0.194038007919067170e0 * wr_8_4 - 0.166944340731811230e-1 * wr_10_4;
  results[k++] =
      -0.122198225797706565e0 * wr_8_8 + 0.408761506589657412e0 * wr_10_8;
  results[k++] =
      0.129749914670388010e0 * wr_4_4 - 0.916463177002112607e-1 * wr_6_4 -
      0.141779110914418119e0 * wr_8_4 + 0.944379803297450213e-1 * wr_10_4;
  results[k++] =
      -0.296631120976058354e-1 * wr_6_0 - 0.138362244683958818e-1 * wr_8_0 -
      0.759503608741187310e0 * wr_2_0 + 0.374176901571599225e-2 * wr_10_0 +
      wr_0_0 + 0.281718281718281718e0 * wr_4_0;
  results[k++] = 0.111282202669791349e1 * wr_12_12;
  results[k++] = -0.125008779814909134e0 * wr_8_8 +
                 0.205483179012873160e-1 * wr_10_8 +
                 0.288664799663853059e0 * wr_12_8;
  results[k++] =
      -0.655486113929809588e-1 * wr_4_4 + 0.296281695704465617e0 * wr_6_4 -
      0.275194097507864341e0 * wr_8_4 + 0.900749906750815538e-2 * wr_10_4 +
      0.465513425114183133e-1 * wr_12_4;
  results[k++] =
      0.227610753005164412e0 * wr_2_0 - 0.389764317568622525e0 * wr_4_0 +
      0.262625653640942096e0 * wr_6_0 - 0.735487162669206364e-1 * wr_8_0 +
      0.977383811210884988e-3 * wr_10_0 + 0.243995332418841203e-2 * wr_12_0;
  results[k++] = 0.556411013348956746e0 * wr_12_12;
  results[k++] = 0.826855357724701423e-1 * wr_8_8 -
                 0.419392843926451042e0 * wr_10_8 +
                 0.381867636084418312e0 * wr_12_8;
  results[k++] =
      0.839575546791372698e-2 * wr_4_4 - 0.110835371232292754e0 * wr_6_4 +
      0.315274445658711659e0 * wr_8_4 - 0.318426785735916337e0 * wr_10_4 +
      0.106662525380195058e0 * wr_12_4;
  results[k++] =
      -0.117049498628386092e-1 * wr_2_0 + 0.103922458278884880e0 * wr_4_0 -
      0.204513392902729524e0 * wr_6_0 + 0.175402509152269478e0 * wr_8_0 -
      0.719252793522793850e-1 * wr_10_0 + 0.116378356278545783e-1 * wr_12_0;
  results[k++] =
      0.103345192737964565e0 * wr_4_4 - 0.245057523794429946e0 * wr_6_4 +
      0.171210979288394747e0 * wr_8_4 - 0.401739999805567122e-1 * wr_10_4;
  results[k++] =
      0.318777495054919566e0 * wr_8_8 - 0.375639943098234825e0 * wr_10_8;
  results[k++] =
      -0.183067308805462748e0 * wr_4_4 + 0.394033211370672671e0 * wr_6_4 -
      0.213493135346009656e0 * wr_8_4 + 0.457392287900759203e-2 * wr_10_4 +
      0.166680543894654113e-1 * wr_12_4;
  results[k++] = -0.184007941586118160e0 * wr_8_8 +
                 0.197975814446676295e-1 * wr_10_8 +
                 0.196109113935198866e0 * wr_12_8;
  results[k++] = 0.111282202669791349e1 * wr_12_12;
  results[k++] =
      -0.669761846835415968e-1 * wr_6_0 - 0.127650328966491038e-1 * wr_8_0 -
      0.804984471899924292e0 * wr_2_0 + 0.925274403342813302e-2 * wr_10_0 +
      wr_0_0 + 0.352941176470588235e0 * wr_4_0 -
      0.142145645443532104e-2 * wr_12_0;
  results[k++] =
      -0.140579715541350377e0 * wr_6_4 + 0.110432862136719509e0 * wr_4_4 +
      0.158651511217363244e0 * wr_10_4 - 0.504566987558475802e-1 * wr_12_4 -
      0.888629112116377145e-1 * wr_8_4;
  results[k++] = -0.403665783603879179e-1 * wr_8_8 +
                 0.361923066944694852e0 * wr_10_8 -
                 0.312881907422617125e0 * wr_12_8;
  results[k++] = -0.648302587105308201e0 * wr_12_12;
  results[k++] =
      -0.312555528523194118e0 * wr_6_0 + 0.153180394759789247e0 * wr_8_0 -
      0.178885438199983176e0 * wr_2_0 - 0.407120737470837852e-1 * wr_10_0 +
      0.352941176470588235e0 * wr_4_0 + 0.461973347691479338e-2 * wr_12_0;
  results[k++] =
      0.417396985404058319e-1 * wr_4_4 - 0.247959311135076640e0 * wr_6_4 +
      0.403044280874068783e0 * wr_8_4 - 0.263844393249308081e0 * wr_10_4 +
      0.619802285538776007e-1 * wr_12_4;
  results[k++] = 0.105704514790196592e0 * wr_8_8 -
                 0.347503587624209033e0 * wr_10_8 +
                 0.221898396625023930e0 * wr_12_8;
  results[k++] = 0.220871875792777696e0 * wr_12_12;
  results[k++] =
      -0.309880676591327159e-1 * wr_2_0 + 0.230971419257278448e-1 * wr_4_0 +
      0.171454560796813438e0 * wr_6_0 + 0.180586913106549620e0 * wr_8_0 -
      0.297380167491318104e0 * wr_10_0;
  results[k++] =
      0.885557795263361690e-1 * wr_4_4 + 0.999943304821879334e-2 * wr_6_4 -
      0.349308337488634801e-1 * wr_8_4 - 0.540961491674759051e-1 * wr_10_4;
  results[k++] =
      -0.179196994797252402e0 * wr_2_0 - 0.265945176153983180e0 * wr_4_0 -
      0.124058447857390369e0 * wr_6_0 + 0.100367968137882633e0 * wr_8_0 +
      0.152359057756130440e-1 * wr_10_0 + 0.232436771907499815e0 * wr_12_0;
  results[k++] =
      -0.338876004935449905e0 * wr_4_4 - 0.244868359526419836e0 * wr_6_4 -
      0.175015934149933631e0 * wr_8_4 - 0.128297808153395396e-1 * wr_10_4 +
      0.630308157250208325e0 * wr_12_4;
  results[k++] = -0.125008779814909134e0 * wr_8_8 +
                 0.205483179012873160e-1 * wr_10_8 +
                 0.288664799663853059e0 * wr_12_8;
  results[k++] =
      -0.140579715541350377e0 * wr_6_4 + 0.110432862136719509e0 * wr_4_4 +
      0.158651511217363244e0 * wr_10_4 - 0.504566987558475802e-1 * wr_12_4 -
      0.888629112116377145e-1 * wr_8_4;
  results[k++] =
      -0.866475116535328348e-1 * wr_6_0 + 0.638251644832455195e-1 * wr_8_0 +
      0.309609412269201652e0 * wr_2_0 + 0.889686926291166635e-1 * wr_10_0 +
      wr_0_0 - 0.320855614973262032e-1 * wr_4_0 -
      0.390900524969713286e0 * wr_12_0;
  results[k++] =
      0.387864114136994337e0 * wr_4_4 + 0.109721419631155636e0 * wr_6_4 -
      0.544946596235811470e-1 * wr_8_4 - 0.166786473707631294e0 * wr_10_4 -
      0.201124786652848423e0 * wr_12_4;
  results[k++] = -0.751028674980780125e-1 * wr_8_8 +
                 0.104745740283794283e0 * wr_10_8 +
                 0.504506916484084883e0 * wr_12_8;
  results[k++] =
      0.281159431082700752e0 * wr_6_4 - 0.220865724273439017e0 * wr_4_4 -
      0.317303022434726487e0 * wr_10_4 + 0.100913397511695160e0 * wr_12_4 +
      0.177725822423275428e0 * wr_8_4;
  results[k++] =
      -0.130023731496694858e0 * wr_2_0 - 0.233215429664270194e0 * wr_4_0 -
      0.202398929915912173e0 * wr_6_0 - 0.222679796848958209e-1 * wr_8_0 +
      0.185836280563992528e0 * wr_10_0 + 0.192070464194970336e0 * wr_12_0;
  results[k++] =
      0.253916666055681153e0 * wr_4_4 + 0.718295301168263404e-1 * wr_6_4 -
      0.356751289565591899e-1 * wr_8_4 - 0.109187377237140345e0 * wr_10_4 -
      0.131667079852645988e0 * wr_12_4;
  results[k++] = 0.409391825401366984e0 * wr_8_8 +
                 0.203920546608468392e0 * wr_10_8 +
                 0.264433475285798696e-1 * wr_12_8;
  results[k++] =
      0.604951141898359817e-1 * wr_4_4 - 0.143449177385650200e0 * wr_6_4 -
      0.272030245565278260e0 * wr_8_4 - 0.300916884737014468e0 * wr_10_4;
  results[k++] =
      0.179759477307716839e0 * wr_8_0 + 0.365668792206762683e0 * wr_10_0 -
      0.352814670705953158e-1 * wr_2_0 - 0.473350552294628986e-1 * wr_4_0 +
      0.167322518388968951e-1 * wr_6_0;
  results[k++] =
      0.285765338659862052e0 * wr_4_4 + 0.494260687029240252e-1 * wr_6_4 -
      0.535595785873388973e-1 * wr_8_4 - 0.871532258117738784e-2 * wr_10_4 +
      0.597962821408269505e0 * wr_12_4;
  results[k++] =
      0.428268128592457897e-2 * wr_10_0 + 0.261538172143059536e0 * wr_6_0 +
      0.441017766722843879e0 * wr_12_0 + 0.113334130683332114e0 * wr_2_0 +
      0.164799372170207391e0 * wr_8_0 + 0.228577445831836544e0 * wr_4_0;
  results[k++] =
      -0.655486113929809588e-1 * wr_4_4 + 0.296281695704465617e0 * wr_6_4 -
      0.275194097507864341e0 * wr_8_4 + 0.900749906750815538e-2 * wr_10_4 +
      0.465513425114183133e-1 * wr_12_4;
  results[k++] = -0.403665783603879179e-1 * wr_8_8 +
                 0.361923066944694852e0 * wr_10_8 -
                 0.312881907422617125e0 * wr_12_8;
  results[k++] =
      0.387864114136994337e0 * wr_4_4 + 0.109721419631155636e0 * wr_6_4 -
      0.544946596235811470e-1 * wr_8_4 - 0.166786473707631294e0 * wr_10_4 -
      0.201124786652848423e0 * wr_12_4;
  results[k++] =
      0.117091231964233561e-1 * wr_6_0 + 0.245481401858636613e-1 * wr_8_0 +
      0.433453177176882311e0 * wr_2_0 + 0.198578121948188393e0 * wr_10_0 +
      wr_0_0 + 0.155491567256273139e0 * wr_4_0 +
      0.422172566967290349e0 * wr_12_0;
  results[k++] =
      0.205462661175819781e0 * wr_4_4 - 0.133681885744449931e0 * wr_6_4 +
      0.257182044162397208e-1 * wr_8_4 - 0.295174471290337173e0 * wr_10_4 +
      0.189837624899019039e0 * wr_12_4;
  results[k++] = -0.322932626883103343e0 * wr_8_8 +
                 0.144769226777877941e0 * wr_10_8 +
                 0.234661430566962844e0 * wr_12_8;
  results[k++] =
      -0.293197710997959649e0 * wr_4_4 - 0.235001191776046105e0 * wr_6_4 -
      0.226567498370884674e0 * wr_8_4 - 0.214333829575905461e0 * wr_10_4 -
      0.171040553991758502e0 * wr_12_4;
  results[k++] =
      0.179349792139659719e0 * wr_4_0 + 0.332675802619027502e-1 * wr_12_0 +
      0.178365449330585957e0 * wr_10_0 + 0.257128481307674401e0 * wr_8_0 +
      0.250403735722808768e0 * wr_6_0 + 0.810747752911089104e-1 * wr_2_0;
  results[k++] =
      0.279998409890088578e0 * wr_4_4 - 0.369635916901367936e-1 * wr_6_4 -
      0.290397754325901647e0 * wr_8_4 - 0.160901999669356224e0 * wr_10_4 +
      0.198293175393727285e0 * wr_12_4;
  results[k++] =
      0.405159125285103698e0 * wr_8_8 + 0.386490981086429799e0 * wr_10_8;
  results[k++] =
      0.131349447629358276e0 * wr_4_4 + 0.148315560488029177e-1 * wr_6_4 -
      0.321226955537626217e0 * wr_8_4 + 0.167769435111115102e0 * wr_10_4;
  results[k++] = 0.288695410708817778e0 * wr_8_8 +
                 0.582393773701746222e-2 * wr_10_8 +
                 0.499982099374484870e0 * wr_12_8;
  results[k++] =
      0.287219624584606400e0 * wr_4_4 - 0.193190676325258686e0 * wr_6_4 -
      0.209347242912963218e0 * wr_8_4 + 0.130067911230407280e-1 * wr_10_4 +
      0.849907345855100033e-1 * wr_12_4;
  results[k++] =
      0.227610753005164412e0 * wr_2_0 - 0.389764317568622525e0 * wr_4_0 +
      0.262625653640942096e0 * wr_6_0 - 0.735487162669206364e-1 * wr_8_0 +
      0.977383811210884988e-3 * wr_10_0 + 0.243995332418841203e-2 * wr_12_0;
  results[k++] = -0.648302587105308201e0 * wr_12_12;
  results[k++] = -0.751028674980780125e-1 * wr_8_8 +
                 0.104745740283794283e0 * wr_10_8 +
                 0.504506916484084883e0 * wr_12_8;
  results[k++] =
      0.205462661175819781e0 * wr_4_4 - 0.133681885744449931e0 * wr_6_4 +
      0.257182044162397208e-1 * wr_8_4 - 0.295174471290337173e0 * wr_10_4 +
      0.189837624899019039e0 * wr_12_4;
  results[k++] =
      0.149408411986362023e0 * wr_6_0 + 0.579336108386382407e-1 * wr_8_0 -
      0.433453177176882311e0 * wr_2_0 - 0.690397054801945309e-1 * wr_10_0 +
      wr_0_0 - 0.190045248868778281e0 * wr_4_0 +
      0.156360209987885314e-1 * wr_12_0;
  results[k++] = -0.324151293552654100e0 * wr_12_12;
  results[k++] = -0.227089725883143006e0 * wr_8_8 +
                 0.273737736667737624e0 * wr_10_8 +
                 0.190685690818417356e0 * wr_12_8;
  results[k++] =
      -0.896712568881198684e-1 * wr_4_4 + 0.337377966634759913e0 * wr_6_4 -
      0.115450401772179030e0 * wr_8_4 - 0.283414341656608279e0 * wr_10_4 +
      0.168662861542422212e0 * wr_12_4;
  results[k++] =
      0.206275181612937987e0 * wr_2_0 - 0.147993153419564936e0 * wr_4_0 -
      0.229353054829128596e0 * wr_6_0 + 0.353268707241482249e0 * wr_8_0 -
      0.174979183280346930e0 * wr_10_0 + 0.309938979426969861e-1 * wr_12_0;
  results[k++] =
      -0.243165159383446035e-1 * wr_4_4 - 0.257955288204663102e-1 * wr_6_4 +
      0.146752267961481211e0 * wr_8_4 - 0.129255478198312901e0 * wr_10_4 +
      0.347193731488028167e-1 * wr_12_4;
  results[k++] = -0.182158568602811180e0 * wr_8_8 -
                 0.228650400146751632e0 * wr_10_8 +
                 0.441222995551113944e0 * wr_12_8;
  results[k++] =
      0.107452550820597700e0 * wr_4_4 - 0.562904587672389530e-1 * wr_6_4 -
      0.266866419182512070e0 * wr_8_4 + 0.288157141377478298e0 * wr_10_4 -
      0.825826331114422650e-1 * wr_12_4;
  results[k++] = 0.322013897775706780e0 * wr_8_8 +
                 0.593927443340028885e-1 * wr_10_8 -
                 0.436788481037488384e0 * wr_12_8;
  results[k++] = 0.556411013348956746e0 * wr_12_12;
  results[k++] =
      -0.312555528523194118e0 * wr_6_0 + 0.153180394759789247e0 * wr_8_0 -
      0.178885438199983176e0 * wr_2_0 - 0.407120737470837852e-1 * wr_10_0 +
      0.352941176470588235e0 * wr_4_0 + 0.461973347691479338e-2 * wr_12_0;
  results[k++] =
      0.281159431082700752e0 * wr_6_4 - 0.220865724273439017e0 * wr_4_4 -
      0.317303022434726487e0 * wr_10_4 + 0.100913397511695160e0 * wr_12_4 +
      0.177725822423275428e0 * wr_8_4;
  results[k++] = -0.322932626883103343e0 * wr_8_8 +
                 0.144769226777877941e0 * wr_10_8 +
                 0.234661430566962844e0 * wr_12_8;
  results[k++] = -0.324151293552654100e0 * wr_12_12;
  results[k++] =
      0.401857108101249581e0 * wr_6_0 - 0.242535625036332974e0 * wr_8_0 -
      0.536656314599949528e0 * wr_2_0 + 0.703208546540538109e-1 * wr_10_0 +
      wr_0_0 - 0.176470588235294118e0 * wr_4_0 -
      0.835105666980751111e-2 * wr_12_0;
  results[k++] =
      0.229568341972232076e0 * wr_4_4 - 0.389650346069406149e0 * wr_6_4 +
      0.335870234061723986e-1 * wr_8_4 + 0.167900977522286961e0 * wr_10_4 -
      0.643640834982575082e-1 * wr_12_4;
  results[k++] = 0.184982900882844035e0 * wr_8_8 -
                 0.157956176192822288e0 * wr_10_8 -
                 0.597418760144295195e-1 * wr_12_8;
  results[k++] = 0.110435937896388848e0 * wr_12_12;
  results[k++] =
      0.179733216270115789e-1 * wr_4_0 + 0.341072277455768956e-1 * wr_6_0 -
      0.429034178223703712e-1 * wr_8_0 - 0.279531770006313107e0 * wr_10_0 +
      0.256195099039783264e0 * wr_12_0;
  results[k++] =
      -0.787551495072775624e-2 * wr_4_4 + 0.441596609592819392e-1 * wr_6_4 +
      0.116183004693026606e0 * wr_8_4 + 0.254246819061186214e0 * wr_10_4 +
      0.750399100346990499e0 * wr_12_4;
  results[k++] =
      0.126689884140552163e0 * wr_10_0 + 0.224695039706662487e0 * wr_8_0 -
      0.281143801787618156e-1 * wr_2_0 + 0.107176424838311418e0 * wr_6_0 -
      0.453843037720473514e-2 * wr_4_0 - 0.363391301008207038e0 * wr_12_0;
  results[k++] =
      0.751792053644410744e-1 * wr_4_4 + 0.393836342404413869e-2 * wr_6_4 -
      0.410768952385337945e-1 * wr_8_4 - 0.711216197221743064e-1 * wr_10_4 -
      0.758017560645202186e-1 * wr_12_4;
  results[k++] = 0.826855357724701423e-1 * wr_8_8 -
                 0.419392843926451042e0 * wr_10_8 +
                 0.381867636084418312e0 * wr_12_8;
  results[k++] =
      0.417396985404058319e-1 * wr_4_4 - 0.247959311135076640e0 * wr_6_4 +
      0.403044280874068783e0 * wr_8_4 - 0.263844393249308081e0 * wr_10_4 +
      0.619802285538776007e-1 * wr_12_4;
  results[k++] =
      -0.130023731496694858e0 * wr_2_0 - 0.233215429664270194e0 * wr_4_0 -
      0.202398929915912173e0 * wr_6_0 - 0.222679796848958209e-1 * wr_8_0 +
      0.185836280563992528e0 * wr_10_0 + 0.192070464194970336e0 * wr_12_0;
  results[k++] =
      -0.293197710997959649e0 * wr_4_4 - 0.235001191776046105e0 * wr_6_4 -
      0.226567498370884674e0 * wr_8_4 - 0.214333829575905461e0 * wr_10_4 -
      0.171040553991758502e0 * wr_12_4;
  results[k++] = -0.227089725883143006e0 * wr_8_8 +
                 0.273737736667737624e0 * wr_10_8 +
                 0.190685690818417356e0 * wr_12_8;
  results[k++] =
      0.229568341972232076e0 * wr_4_4 - 0.389650346069406149e0 * wr_6_4 +
      0.335870234061723986e-1 * wr_8_4 + 0.167900977522286961e0 * wr_10_4 -
      0.643640834982575082e-1 * wr_12_4;
  results[k++] =
      -0.154560426192788300e0 * wr_6_0 - 0.201294749524082023e0 * wr_8_0 +
      0.383325938999963950e0 * wr_2_0 - 0.121078764780288140e0 * wr_10_0 +
      wr_0_0 + 0.446024563671622495e-1 * wr_4_0 -
      0.977251312424283214e-2 * wr_12_0;
  results[k++] =
      0.527843133806975042e0 * wr_4_4 + 0.298639115468173519e0 * wr_6_4 +
      0.188775038418429633e0 * wr_8_4 + 0.107299268691408152e0 * wr_10_4 +
      0.435447936430230328e-1 * wr_12_4;
  results[k++] = 0.270787239698698165e0 * wr_8_8 +
                 0.308298887738493260e-2 * wr_10_8 -
                 0.524718910445075936e-1 * wr_12_8;
  results[k++] =
      0.465921747814992475e-2 * wr_4_4 - 0.597820069073462019e-1 * wr_6_4 -
      0.687347925204182516e-1 * wr_8_4 + 0.351618186895777371e-1 * wr_10_4 +
      0.634202992402710080e0 * wr_12_4;
  results[k++] =
      -0.127597925655252359e-1 * wr_4_0 - 0.495804940714103769e-1 * wr_6_0 -
      0.101528017121920442e0 * wr_8_0 - 0.902035774510036690e-1 * wr_10_0 +
      0.505223548652821872e0 * wr_12_0;
  results[k++] =
      0.549031288445570253e-1 * wr_4_4 - 0.107856524350112933e0 * wr_6_4 -
      0.224987421144215103e0 * wr_8_4 - 0.299834803752343935e0 * wr_10_4 -
      0.290628321865292246e0 * wr_12_4;
  results[k++] =
      -0.307977604283679416e-1 * wr_2_0 - 0.244595606319583912e-1 * wr_6_0 +
      0.769190886292862665e-1 * wr_8_0 + 0.248125062650805361e0 * wr_10_0 -
      0.513732143274087408e-1 * wr_4_0 + 0.398075225526689615e0 * wr_12_0;
  results[k++] =
      0.839575546791372698e-2 * wr_4_4 - 0.110835371232292754e0 * wr_6_4 +
      0.315274445658711659e0 * wr_8_4 - 0.318426785735916337e0 * wr_10_4 +
      0.106662525380195058e0 * wr_12_4;
  results[k++] = 0.105704514790196592e0 * wr_8_8 -
                 0.347503587624209033e0 * wr_10_8 +
                 0.221898396625023930e0 * wr_12_8;
  results[k++] =
      0.253916666055681153e0 * wr_4_4 + 0.718295301168263404e-1 * wr_6_4 -
      0.356751289565591899e-1 * wr_8_4 - 0.109187377237140345e0 * wr_10_4 -
      0.131667079852645988e0 * wr_12_4;
  results[k++] =
      0.179349792139659719e0 * wr_4_0 + 0.332675802619027502e-1 * wr_12_0 +
      0.178365449330585957e0 * wr_10_0 + 0.257128481307674401e0 * wr_8_0 +
      0.250403735722808768e0 * wr_6_0 + 0.810747752911089104e-1 * wr_2_0;
  results[k++] =
      -0.896712568881198684e-1 * wr_4_4 + 0.337377966634759913e0 * wr_6_4 -
      0.115450401772179030e0 * wr_8_4 - 0.283414341656608279e0 * wr_10_4 +
      0.168662861542422212e0 * wr_12_4;
  results[k++] = 0.184982900882844035e0 * wr_8_8 -
                 0.157956176192822288e0 * wr_10_8 -
                 0.597418760144295195e-1 * wr_12_8;
  results[k++] =
      0.527843133806975042e0 * wr_4_4 + 0.298639115468173519e0 * wr_6_4 +
      0.188775038418429633e0 * wr_8_4 + 0.107299268691408152e0 * wr_10_4 +
      0.435447936430230328e-1 * wr_12_4;
  results[k++] =
      0.858669034404379444e-1 * wr_6_0 - 0.245481401858636613e-1 * wr_8_0 +
      0.485546189399954335e0 * wr_2_0 - 0.745506804979066716e-1 * wr_10_0 +
      wr_0_0 + 0.250161603102779573e0 * wr_4_0 -
      0.605895813703055593e-1 * wr_12_0;
  results[k++] =
      0.336053642516062638e0 * wr_4_4 - 0.266181860807488261e0 * wr_6_4 -
      0.206498745130908731e0 * wr_8_4 + 0.351116949025992590e-1 * wr_10_4 +
      0.797956645442842188e-1 * wr_12_4;
  results[k++] = 0.157753947927044921e0 * wr_8_8 +
                 0.223611096249562128e0 * wr_10_8 +
                 0.764220645762266065e0 * wr_12_8;
  results[k++] =
      0.210587205341356233e-1 * wr_4_4 + 0.574446426751991845e-1 * wr_6_4 +
      0.564849742744995133e-1 * wr_8_4 - 0.270554124860910975e0 * wr_10_4 +
      0.140316676034894596e0 * wr_12_4;
  results[k++] = 0.344247336930383463e0 * wr_8_8 +
                 0.365087708059732529e0 * wr_10_8 +
                 0.383563219083967601e0 * wr_12_8;
  results[k++] =
      0.114871608715883349e0 * wr_4_4 + 0.105309805425666800e0 * wr_6_4 -
      0.998522708616157337e-1 * wr_8_4 - 0.352060505007903552e0 * wr_10_4 +
      0.235290470583996596e0 * wr_12_4;
  results[k++] =
      -0.117049498628386092e-1 * wr_2_0 + 0.103922458278884880e0 * wr_4_0 -
      0.204513392902729524e0 * wr_6_0 + 0.175402509152269478e0 * wr_8_0 -
      0.719252793522793850e-1 * wr_10_0 + 0.116378356278545783e-1 * wr_12_0;
  results[k++] = 0.220871875792777696e0 * wr_12_12;
  results[k++] = 0.409391825401366984e0 * wr_8_8 +
                 0.203920546608468392e0 * wr_10_8 +
                 0.264433475285798696e-1 * wr_12_8;
  results[k++] =
      0.279998409890088578e0 * wr_4_4 - 0.369635916901367936e-1 * wr_6_4 -
      0.290397754325901647e0 * wr_8_4 - 0.160901999669356224e0 * wr_10_4 +
      0.198293175393727285e0 * wr_12_4;
  results[k++] =
      0.206275181612937987e0 * wr_2_0 - 0.147993153419564936e0 * wr_4_0 -
      0.229353054829128596e0 * wr_6_0 + 0.353268707241482249e0 * wr_8_0 -
      0.174979183280346930e0 * wr_10_0 + 0.309938979426969861e-1 * wr_12_0;
  results[k++] = 0.110435937896388848e0 * wr_12_12;
  results[k++] = 0.270787239698698165e0 * wr_8_8 +
                 0.308298887738493260e-2 * wr_10_8 -
                 0.524718910445075936e-1 * wr_12_8;
  results[k++] =
      0.336053642516062638e0 * wr_4_4 - 0.266181860807488261e0 * wr_6_4 -
      0.206498745130908731e0 * wr_8_4 + 0.351116949025992590e-1 * wr_10_4 +
      0.797956645442842188e-1 * wr_12_4;
  results[k++] =
      0.133952369367083194e0 * wr_6_0 + 0.217005559243034766e0 * wr_8_0 -
      0.229995563399978369e0 * wr_2_0 - 0.162319566757853533e0 * wr_10_0 +
      wr_0_0 - 0.428571428571428571e0 * wr_4_0 +
      0.332265446224256293e-1 * wr_12_0;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 4)
void BoxMatrix::setup___oa_4_A1(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 0)
  if (lmax >= 0) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 0, 1));
  }
#endif
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 2, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 2, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 2, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 0, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 0, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 0, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 0, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 0, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 0, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 0, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 2, 2));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 3, 2));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 4, 2));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 5, 2));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(0, 2, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 16, 6, 3));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 4)
void BoxMatrix::evaluate___oa_4_A1(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 0)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 1)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = -0.632455532033675866e0 * wr_1_0;
  results[k++] = 0.774596669241483378e0 * wr_1_0;
  results[k++] = wr_0_0 + 0.894427190999915880e-1 * wr_2_0;
  results[k++] = -0.657267069006199338e0 * wr_2_0;
  results[k++] = -0.657267069006199338e0 * wr_2_0;
  results[k++] = wr_0_0 + 0.357770876399966352e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] = 0.447213595499957940e0 * wr_2_0;
  results[k++] = -0.534522483824848769e0 * wr_2_0;
  results[k++] = 0.717137165600636184e0 * wr_2_0;
  results[k++] = -0.632455532033675868e0 * wr_1_0;
  results[k++] = 0.507092552837109947e0 * wr_3_0;
  results[k++] =
      0.529150262212918118e0 * wr_1_0 + 0.148461497791618053e0 * wr_3_0;
  results[k++] =
      -0.185164019954510292e0 * wr_1_0 - 0.484873221385061160e0 * wr_3_0;
  results[k++] = -0.663940002206985753e0 * wr_3_0;
  results[k++] =
      0.828078671210825063e0 * wr_1_0 + 0.271052370871575372e0 * wr_3_0;
  results[k++] = wr_0_0;
  results[k++] = -0.534522483824848769e0 * wr_2_0;
  results[k++] = 0.755928946018454454e0 * wr_4_4;
  results[k++] = 0.534522483824848769e0 * wr_4_0;
  results[k++] = -0.534522483824848769e0 * wr_2_0;
  results[k++] = wr_0_0 - 0.136902121071415696e0 * wr_2_0 +
                 0.244897959183673469e0 * wr_4_0;
  results[k++] = 0.903507902905251239e0 * wr_4_4;
  results[k++] =
      -0.244897959183673469e0 * wr_2_0 - 0.456340403571385652e0 * wr_4_0;
  results[k++] = 0.755928946018454454e0 * wr_4_4;
  results[k++] = 0.903507902905251239e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.638876564999939914e0 * wr_2_0 +
                 0.142857142857142857e0 * wr_4_0;
  results[k++] = 0.202030508910442150e0 * wr_4_4;
  results[k++] = 0.534522483824848769e0 * wr_4_0;
  results[k++] =
      -0.244897959183673469e0 * wr_2_0 - 0.456340403571385652e0 * wr_4_0;
  results[k++] = 0.202030508910442150e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.456340403571385652e0 * wr_2_0 +
                 0.183673469387755102e0 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = 0.507092552837109946e0 * wr_3_0;
  results[k++] = -0.516397779494322251e0 * wr_3_0;
  results[k++] = 0.690065559342354218e0 * wr_3_0;
  results[k++] = -0.657267069006199338e0 * wr_2_0;
  results[k++] =
      0.383325938999963950e-1 * wr_2_0 + 0.571428571428571429e0 * wr_4_0;
  results[k++] =
      0.430282299360381712e0 * wr_2_0 + 0.178174161274949590e0 * wr_4_0;
  results[k++] =
      -0.234216017507647963e0 * wr_2_0 - 0.436435780471984762e0 * wr_4_0;
  results[k++] = -0.692820323027550916e0 * wr_4_4;
  results[k++] = -0.565685424949238020e0 * wr_4_4;
  results[k++] = -0.565685424949238020e0 * wr_4_4;
  results[k++] = -0.461880215351700611e0 * wr_4_4;
  results[k++] = -0.666666666666666667e0 * wr_4_0;
  results[k++] =
      0.782460796435951592e0 * wr_2_0 + 0.233284737407921724e0 * wr_4_0;
  results[k++] = 0.774596669241483376e0 * wr_1_0;
  results[k++] =
      -0.185164019954510292e0 * wr_1_0 - 0.484873221385061160e0 * wr_3_0;
  results[k++] = 0.509647191437625545e0 * wr_5_4;
  results[k++] =
      0.602338601936834159e-1 * wr_3_0 + 0.600624975130372640e0 * wr_5_0;
  results[k++] = -0.516397779494322249e0 * wr_3_0;
  results[k++] = 0.727309832077591740e0 * wr_1_0 -
                 0.226311579944401468e0 * wr_3_0 +
                 0.293074978522220792e0 * wr_5_0;
  results[k++] = 0.778498944161522970e0 * wr_5_4;
  results[k++] = -0.903507902905251239e-1 * wr_1_0 -
                 0.276026223736941687e0 * wr_3_0 -
                 0.393201344687985930e0 * wr_5_0;
  results[k++] = -0.683763458757827693e0 * wr_5_4;
  results[k++] = -0.414039335605412531e0 * wr_1_0 -
                 0.120124995026074528e0 * wr_5_0 +
                 0.421637021355783911e0 * wr_3_0;
  results[k++] = -0.509647191437625545e0 * wr_5_4;
  results[k++] = 0.778498944161522970e0 * wr_5_4;
  results[k++] = 0.372193684159388346e0 * wr_5_4;
  results[k++] = 0.507092552837109947e0 * wr_1_0 +
                 0.147122471584124921e0 * wr_5_0 -
                 0.516397779494322249e0 * wr_3_0;
  results[k++] = -0.208062594644119753e0 * wr_5_4;
  results[k++] = 0.550481882563180302e0 * wr_5_0;
  results[k++] =
      -0.274928699614107506e0 * wr_3_0 - 0.438634463306512658e0 * wr_5_0;
  results[k++] = 0.208062594644119754e0 * wr_5_4;
  results[k++] = 0.845154254728516578e0 * wr_1_0 +
                 0.368855556781658750e0 * wr_3_0 +
                 0.147122471584124921e0 * wr_5_0;
  results[k++] = wr_0_0 + 0.357770876399966352e0 * wr_2_0;
  results[k++] =
      -0.234216017507647963e0 * wr_2_0 - 0.436435780471984762e0 * wr_4_0;
  results[k++] = -0.565685424949238020e0 * wr_4_4;
  results[k++] =
      0.629836657297773559e-1 * wr_4_4 + 0.651013521854029892e0 * wr_6_4;
  results[k++] =
      0.742269619025205484e-1 * wr_4_0 + 0.617605654987961318e0 * wr_6_0;
  results[k++] =
      -0.234216017507647963e0 * wr_2_0 - 0.436435780471984762e0 * wr_4_0;
  results[k++] = wr_0_0 - 0.272727272727272727e0 * wr_4_0 +
                 0.350189517818957779e0 * wr_6_0 +
                 0.188823518099982241e0 * wr_2_0;
  results[k++] =
      -0.274940514477909222e0 * wr_4_4 - 0.608967388233712415e0 * wr_6_4;
  results[k++] =
      0.577254831505001584e0 * wr_4_4 + 0.497219790389313328e0 * wr_6_4;
  results[k++] = -0.291557718449917511e0 * wr_4_0 -
                 0.366880974913070281e0 * wr_6_0 -
                 0.132803178814932627e0 * wr_2_0;
  results[k++] = -0.565685424949238020e0 * wr_4_4;
  results[k++] =
      -0.274940514477909222e0 * wr_4_4 - 0.608967388233712415e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0 -
                 0.909090909090909091e-1 * wr_4_0 +
                 0.756409358488948801e-1 * wr_6_0;
  results[k++] = -0.365148371670110744e0 * wr_2_0 +
                 0.445361771415123290e0 * wr_4_0 -
                 0.144107986163857641e0 * wr_6_0;
  results[k++] =
      0.209945552432591186e0 * wr_4_4 - 0.455709465297820924e0 * wr_6_4;
  results[k++] =
      0.629836657297773559e-1 * wr_4_4 + 0.651013521854029892e0 * wr_6_4;
  results[k++] =
      0.577254831505001584e0 * wr_4_4 + 0.497219790389313328e0 * wr_6_4;
  results[k++] = -0.365148371670110744e0 * wr_2_0 +
                 0.445361771415123290e0 * wr_4_0 -
                 0.144107986163857641e0 * wr_6_0;
  results[k++] = wr_0_0 - 0.298142396999971959e0 * wr_2_0 -
                 0.272727272727272727e0 * wr_4_0 +
                 0.134472774842479787e0 * wr_6_0;
  results[k++] =
      0.385694607919935013e0 * wr_4_4 - 0.106310062946306572e0 * wr_6_4;
  results[k++] =
      0.742269619025205484e-1 * wr_4_0 + 0.617605654987961318e0 * wr_6_0;
  results[k++] = -0.291557718449917511e0 * wr_4_0 -
                 0.366880974913070281e0 * wr_6_0 -
                 0.132803178814932627e0 * wr_2_0;
  results[k++] =
      0.209945552432591186e0 * wr_4_4 - 0.455709465297820924e0 * wr_6_4;
  results[k++] =
      0.385694607919935013e0 * wr_4_4 - 0.106310062946306572e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.496903994999953266e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 +
                 0.112060645702066489e0 * wr_6_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] = 0.534522483824848769e0 * wr_4_0;
  results[k++] = 0.100904995821902604e1 * wr_4_4;
  results[k++] = -0.509647191437625545e0 * wr_4_0;
  results[k++] = 0.894427190999915880e0 * wr_4_4;
  results[k++] = 0.426401432711220869e0 * wr_4_4;
  results[k++] = 0.674199862463242086e0 * wr_4_0;
  results[k++] = -0.663940002206985753e0 * wr_3_0;
  results[k++] =
      0.602338601936834159e-1 * wr_3_0 + 0.600624975130372640e0 * wr_5_0;
  results[k++] = 0.166639116180212363e0 * wr_5_4;
  results[k++] = 0.816361611659769031e0 * wr_5_4;
  results[k++] =
      0.386858971649331445e0 * wr_3_0 + 0.196386081769935158e0 * wr_5_0;
  results[k++] =
      -0.258438295352368820e0 * wr_3_0 - 0.412324879646429702e0 * wr_5_0;
  results[k++] = -0.590839156700797118e0 * wr_5_4;
  results[k++] = 0.120604537831105449e0 * wr_5_4;
  results[k++] = -0.704178790219530341e0 * wr_5_4;
  results[k++] = -0.287479787288034485e0 * wr_5_4;
  results[k++] = -0.668042657122684936e0 * wr_5_0;
  results[k++] =
      0.759737176397586326e0 * wr_3_0 + 0.212121212121212121e0 * wr_5_0;
  results[k++] = 0.717137165600636186e0 * wr_2_0;
  results[k++] =
      -0.244897959183673469e0 * wr_2_0 - 0.456340403571385652e0 * wr_4_0;
  results[k++] =
      -0.183664099009492863e0 * wr_4_4 + 0.398662736048649643e0 * wr_6_4;
  results[k++] = 0.912680807142771306e-2 * wr_2_0 +
                 0.927643784786641929e-1 * wr_4_0 +
                 0.630341132074124001e0 * wr_6_0;
  results[k++] = -0.720749970156447168e0 * wr_4_4;
  results[k++] =
      0.509045127209211310e0 * wr_4_4 + 0.203988434183663384e0 * wr_6_4;
  results[k++] = 0.182743471161951801e0 * wr_2_0 +
                 0.721208025474470581e-1 * wr_6_0 -
                 0.222887358524943659e0 * wr_4_0;
  results[k++] =
      -0.315210325307489807e0 * wr_4_4 + 0.684198008187619720e0 * wr_6_4;
  results[k++] = -0.509647191437625545e0 * wr_4_0;
  results[k++] = 0.642127866226623397e0 * wr_2_0 -
                 0.257106615271144309e0 * wr_4_0 +
                 0.322534034175863247e0 * wr_6_0;
  results[k++] =
      -0.315210325307489807e0 * wr_4_4 + 0.684198008187619720e0 * wr_6_4;
  results[k++] = -0.130531050829965572e0 * wr_2_0 -
                 0.286569460960641847e0 * wr_4_0 -
                 0.360604012737235290e0 * wr_6_0;
  results[k++] =
      0.485929530749862518e0 * wr_4_4 - 0.723265684507413681e0 * wr_6_4;
  results[k++] = -0.377964473009227227e0 * wr_2_0 -
                 0.149165937116793999e0 * wr_6_0 +
                 0.460993229851918134e0 * wr_4_0;
  results[k++] =
      -0.651942877818760169e0 * wr_4_4 - 0.673863015146455619e-1 * wr_6_4;
  results[k++] = 0.793328828021917638e0 * wr_6_4;
  results[k++] =
      -0.185326251431863835e0 * wr_4_4 + 0.862008465328655411e-1 * wr_6_4;
  results[k++] = 0.360374985078223583e0 * wr_2_0 +
                 0.142224140630623609e0 * wr_6_0 -
                 0.439539798559298345e0 * wr_4_0;
  results[k++] =
      -0.621603144325297903e0 * wr_4_4 - 0.205601016069882037e0 * wr_6_4;
  results[k++] = 0.560968194005074306e0 * wr_6_0;
  results[k++] =
      -0.293026532372865563e0 * wr_4_0 - 0.426672421891870826e0 * wr_6_0;
  results[k++] =
      -0.926631257159319173e-1 * wr_4_4 + 0.201135308576686262e0 * wr_6_4;
  results[k++] = 0.805822964025380299e0 * wr_2_0 +
                 0.327613622798385077e0 * wr_4_0 +
                 0.127209138596625679e0 * wr_6_0;
  results[k++] =
      0.828078671210825063e0 * wr_1_0 + 0.271052370871575372e0 * wr_3_0;
  results[k++] = -0.903507902905251239e-1 * wr_1_0 -
                 0.276026223736941687e0 * wr_3_0 -
                 0.393201344687985930e0 * wr_5_0;
  results[k++] = -0.509647191437625545e0 * wr_5_4;
  results[k++] =
      -0.960288898357475785e-1 * wr_5_4 + 0.560168524041860875e0 * wr_7_4;
  results[k++] = 0.167661616718935796e-1 * wr_3_0 +
                 0.113171131987788401e0 * wr_5_0 +
                 0.647561509701123570e0 * wr_7_0;
  results[k++] = -0.349869262139901013e0 * wr_5_4;
  results[k++] =
      0.544711705038496949e0 * wr_5_4 + 0.199841820506786092e0 * wr_7_4;
  results[k++] =
      -0.434248118673447531e0 * wr_1_0 + 0.378259686833921635e0 * wr_3_0 -
      0.396466230429259329e-1 * wr_5_0 - 0.302475570949179908e-1 * wr_7_0;
  results[k++] =
      -0.322329185610152119e-1 * wr_1_0 + 0.241706927741235184e0 * wr_3_0 -
      0.291341989438914795e0 * wr_5_0 + 0.987881077976668846e-1 * wr_7_0;
  results[k++] =
      -0.412019792753272328e0 * wr_5_4 + 0.598191699108454638e0 * wr_7_4;
  results[k++] =
      -0.258438295352368820e0 * wr_3_0 - 0.412324879646429702e0 * wr_5_0;
  results[k++] =
      0.789672569132238059e0 * wr_1_0 + 0.538324114057992807e-1 * wr_3_0 -
      0.275120957446005483e0 * wr_5_0 + 0.385032555486000726e0 * wr_7_0;
  results[k++] =
      -0.168206376028798564e0 * wr_5_4 - 0.549474161694075308e0 * wr_7_4;
  results[k++] =
      0.412019792753272328e0 * wr_5_4 + 0.512735742092961118e0 * wr_7_4;
  results[k++] =
      -0.537215309350253532e-1 * wr_1_0 - 0.172647805529453703e0 * wr_3_0 -
      0.291341989438914795e0 * wr_5_0 - 0.329293692658889615e0 * wr_7_0;
  results[k++] = -0.482418151324421798e0 * wr_5_4;
  results[k++] =
      0.425138018281696883e-1 * wr_5_4 - 0.708563363802828139e0 * wr_7_4;
  results[k++] =
      0.489897948556635620e0 * wr_1_0 - 0.272120537219923010e0 * wr_3_0 -
      0.164000551042777257e0 * wr_5_0 + 0.107246374896116442e0 * wr_7_0;
  results[k++] =
      -0.266666666666666667e0 * wr_1_0 - 0.833195580901061817e-1 * wr_3_0 +
      0.401717667590071934e0 * wr_5_0 - 0.167835405304180019e0 * wr_7_0;
  results[k++] =
      -0.568114573750766458e0 * wr_5_4 - 0.132560067208512173e0 * wr_7_4;
  results[k++] =
      0.884553191655490724e-1 * wr_5_4 + 0.729756383115779847e0 * wr_7_4;
  results[k++] =
      0.405353195697606674e0 * wr_5_4 + 0.270235463798404449e0 * wr_7_4;
  results[k++] = -0.324320940005761710e0 * wr_3_0 +
                 0.437831492097860920e0 * wr_5_0 -
                 0.153383109443482011e0 * wr_7_0;
  results[k++] =
      0.635641726163728213e0 * wr_1_0 - 0.397210407956955894e0 * wr_3_0 -
      0.153209106994452060e0 * wr_5_0 + 0.118279185297518143e0 * wr_7_0;
  results[k++] =
      -0.216670396990624721e0 * wr_5_4 - 0.144446931327083147e0 * wr_7_4;
  results[k++] =
      0.839160839160839161e-1 * wr_5_0 + 0.628787608745845475e0 * wr_7_0;
  results[k++] = -0.158252414505179853e0 * wr_3_0 -
                 0.299095849554227320e0 * wr_5_0 -
                 0.349268704621589534e0 * wr_7_0;
  results[k++] =
      0.276908949275850779e0 * wr_5_4 - 0.415363423913776168e0 * wr_7_4;
  results[k++] =
      0.387591789106322190e0 * wr_5_4 - 0.565238025780053194e-1 * wr_7_4;
  results[k++] =
      0.852802865422441737e0 * wr_1_0 + 0.414488420995682477e0 * wr_3_0 +
      0.228390652007755534e0 * wr_5_0 + 0.933459877583097374e-1 * wr_7_0;
  results[k++] = wr_0_0 + 0.456340403571385652e0 * wr_2_0 +
                 0.183673469387755102e0 * wr_4_0;
  results[k++] =
      0.567378585553481653e0 * wr_4_4 - 0.228066002729206574e0 * wr_6_4;
  results[k++] = -0.130531050829965572e0 * wr_2_0 -
                 0.286569460960641847e0 * wr_4_0 -
                 0.360604012737235290e0 * wr_6_0;
  results[k++] =
      -0.195582863345628050e0 * wr_4_4 - 0.539090412117164495e0 * wr_6_4;
  results[k++] = 0.143446879459684131e-1 * wr_4_4 -
                 0.257001270087352547e-1 * wr_6_4 +
                 0.662243126750251654e0 * wr_8_4;
  results[k++] = 0.226809431168112746e-1 * wr_4_0 +
                 0.127209138596625679e0 * wr_6_0 +
                 0.658889975448753873e0 * wr_8_0;
  results[k++] =
      0.567378585553481653e0 * wr_4_4 - 0.228066002729206574e0 * wr_6_4;
  results[k++] =
      wr_0_0 - 0.466221493301609045e0 * wr_2_0 -
      0.563981473072382163e-1 * wr_4_0 + 0.518025803086370997e-1 * wr_6_0 +
      0.604411729270454708e-2 * wr_8_0 + 0.685681065819507482e0 * wr_8_8;
  results[k++] = -0.797590248146119358e-1 * wr_4_4 +
                 0.491442427347244470e0 * wr_6_4 +
                 0.190173710879002523e0 * wr_8_4;
  results[k++] =
      -0.373479529990158988e0 * wr_2_0 + 0.365156140341570933e0 * wr_4_0 -
      0.170668968756748330e-1 * wr_6_0 - 0.482178362660699286e-1 * wr_8_0 +
      0.607791303718233137e0 * wr_8_8;
  results[k++] =
      -0.374840799678572456e-1 * wr_2_0 + 0.261122039286750831e0 * wr_4_0 -
      0.325452953709368725e0 * wr_6_0 + 0.114934757535167643e0 * wr_8_0 +
      0.289753135082070384e0 * wr_8_8;
  results[k++] = 0.550493594276068029e-1 * wr_4_4 -
                 0.460259981050172343e0 * wr_6_4 +
                 0.539091798094434982e0 * wr_8_4;
  results[k++] = -0.130531050829965572e0 * wr_2_0 -
                 0.286569460960641847e0 * wr_4_0 -
                 0.360604012737235290e0 * wr_6_0;
  results[k++] = -0.797590248146119358e-1 * wr_4_4 +
                 0.491442427347244470e0 * wr_6_4 +
                 0.190173710879002523e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.333015352358292176e0 * wr_2_0 -
                 0.725119036807348496e-1 * wr_4_0 -
                 0.259012901543185499e0 * wr_6_0 +
                 0.423088210489318294e0 * wr_8_0;
  results[k++] = -0.516408766054862873e0 * wr_4_4 -
                 0.771003810262057643e-2 * wr_6_4 -
                 0.674283910872983501e0 * wr_8_4;
  results[k++] = 0.369282329393843173e0 * wr_4_4 +
                 0.470478905120434469e0 * wr_6_4 +
                 0.332932678980006650e0 * wr_8_4;
  results[k++] =
      -0.838169508821669333e-1 * wr_2_0 - 0.194628876756181853e0 * wr_4_0 -
      0.291093971188896320e0 * wr_6_0 - 0.308402316991309229e0 * wr_8_0;
  results[k++] =
      -0.195582863345628050e0 * wr_4_4 - 0.539090412117164495e0 * wr_6_4;
  results[k++] =
      -0.373479529990158988e0 * wr_2_0 + 0.365156140341570933e0 * wr_4_0 -
      0.170668968756748330e-1 * wr_6_0 - 0.482178362660699286e-1 * wr_8_0 +
      0.607791303718233137e0 * wr_8_8;
  results[k++] = -0.516408766054862873e0 * wr_4_4 -
                 0.771003810262057643e-2 * wr_6_4 -
                 0.674283910872983501e0 * wr_8_4;
  results[k++] =
      wr_0_0 - 0.243934688454522513e0 * wr_2_0 -
      0.629370629370629371e-1 * wr_4_0 - 0.242050994716463617e0 * wr_6_0 +
      0.147217428343732182e0 * wr_8_0 + 0.538749408858184450e0 * wr_8_8;
  results[k++] =
      -0.310110132880887905e0 * wr_2_0 + 0.600081349874848312e-1 * wr_4_0 +
      0.336563745221419604e0 * wr_6_0 - 0.169797956141966539e0 * wr_8_0 +
      0.256838703162228397e0 * wr_8_8;
  results[k++] = 0.265667338579008507e0 * wr_4_4 -
                 0.475973013095214563e0 * wr_6_4 -
                 0.159284601894817470e0 * wr_8_4;
  results[k++] = 0.143446879459684131e-1 * wr_4_4 -
                 0.257001270087352547e-1 * wr_6_4 +
                 0.662243126750251654e0 * wr_8_4;
  results[k++] =
      -0.374840799678572456e-1 * wr_2_0 + 0.261122039286750831e0 * wr_4_0 -
      0.325452953709368725e0 * wr_6_0 + 0.114934757535167643e0 * wr_8_0 +
      0.289753135082070384e0 * wr_8_8;
  results[k++] = 0.369282329393843173e0 * wr_4_4 +
                 0.470478905120434469e0 * wr_6_4 +
                 0.332932678980006650e0 * wr_8_4;
  results[k++] =
      -0.310110132880887905e0 * wr_2_0 + 0.600081349874848312e-1 * wr_4_0 +
      0.336563745221419604e0 * wr_6_0 - 0.169797956141966539e0 * wr_8_0 +
      0.256838703162228397e0 * wr_8_8;
  results[k++] =
      wr_0_0 - 0.739196025619765190e-1 * wr_2_0 -
      0.366179275270184361e0 * wr_4_0 - 0.366743931388581237e-1 * wr_6_0 +
      0.960582926876258376e-1 * wr_8_0 + 0.122443047467769193e0 * wr_8_8;
  results[k++] = 0.506607737039053779e0 * wr_4_4 -
                 0.518654241687759422e-1 * wr_6_4 -
                 0.106310336264710231e0 * wr_8_4;
  results[k++] = 0.226809431168112746e-1 * wr_4_0 +
                 0.127209138596625679e0 * wr_6_0 +
                 0.658889975448753873e0 * wr_8_0;
  results[k++] = 0.550493594276068029e-1 * wr_4_4 -
                 0.460259981050172343e0 * wr_6_4 +
                 0.539091798094434982e0 * wr_8_4;
  results[k++] =
      -0.838169508821669333e-1 * wr_2_0 - 0.194628876756181853e0 * wr_4_0 -
      0.291093971188896320e0 * wr_6_0 - 0.308402316991309229e0 * wr_8_0;
  results[k++] = 0.265667338579008507e0 * wr_4_4 -
                 0.475973013095214563e0 * wr_6_4 -
                 0.159284601894817470e0 * wr_8_4;
  results[k++] = 0.506607737039053779e0 * wr_4_4 -
                 0.518654241687759422e-1 * wr_6_4 -
                 0.106310336264710231e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.517437217933835632e0 * wr_2_0 +
                 0.320406865861411316e0 * wr_4_0 +
                 0.183371965694290619e0 * wr_6_0 +
                 0.755514661588068387e-1 * wr_8_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] = 0.550481882563180302e0 * wr_5_0;
  results[k++] = -0.809039834955890504e0 * wr_5_4;
  results[k++] = 0.429668924423659729e0 * wr_5_4;
  results[k++] = -0.506369683541833307e0 * wr_5_0;
  results[k++] = 0.911684611677103590e0 * wr_5_4;
  results[k++] = 0.574169251763214563e0 * wr_5_4;
  results[k++] = 0.663746518303064666e0 * wr_5_0;
  results[k++] = -0.666666666666666667e0 * wr_4_0;
  results[k++] =
      0.742269619025205484e-1 * wr_4_0 + 0.617605654987961318e0 * wr_6_0;
  results[k++] = 0.979795897113271240e0 * wr_4_4;
  results[k++] =
      0.254545454545454545e0 * wr_4_4 - 0.676553097759318853e0 * wr_6_4;
  results[k++] =
      0.307482445914322962e0 * wr_4_4 + 0.220029828287444381e0 * wr_6_4;
  results[k++] =
      0.540741095535499687e0 * wr_4_4 + 0.538960807496438978e0 * wr_6_4;
  results[k++] =
      0.362371537669739333e0 * wr_4_0 + 0.208738623169220970e0 * wr_6_0;
  results[k++] =
      -0.273115496799567549e0 * wr_4_0 - 0.397680201625536520e0 * wr_6_0;
  results[k++] = -0.513552591013095498e0 * wr_6_4;
  results[k++] =
      0.614657639802557511e0 * wr_4_4 + 0.343075037472627805e0 * wr_6_4;
  results[k++] = -0.776231876189614292e0 * wr_6_4;
  results[k++] =
      0.387104830569381878e0 * wr_4_4 - 0.153646223737196126e0 * wr_6_4;
  results[k++] = -0.668832772901051012e0 * wr_6_0;
  results[k++] =
      0.745829685583969992e0 * wr_4_0 + 0.198581699013133965e0 * wr_6_0;
  results[k++] = 0.690065559342354218e0 * wr_3_0;
  results[k++] =
      -0.274928699614107506e0 * wr_3_0 - 0.438634463306512658e0 * wr_5_0;
  results[k++] =
      -0.224067409616744350e0 * wr_5_4 + 0.336101114425116526e0 * wr_7_4;
  results[k++] = 0.167661616718935796e-1 * wr_3_0 +
                 0.113171131987788401e0 * wr_5_0 +
                 0.647561509701123570e0 * wr_7_0;
  results[k++] = -0.320459838808100699e-1 * wr_7_0 +
                 0.914751369247020209e-1 * wr_5_0 -
                 0.677596356818118090e-1 * wr_3_0;
  results[k++] =
      0.388096137776548475e0 * wr_5_4 - 0.582144206664822711e0 * wr_7_4;
  results[k++] = -0.716114874039432883e0 * wr_5_4;
  results[k++] =
      0.230440265198183878e0 * wr_5_4 + 0.296280340969093558e0 * wr_7_4;
  results[k++] = 0.102114848969702256e0 * wr_7_0 -
                 0.291486441055797490e0 * wr_5_0 +
                 0.215916758543765240e0 * wr_3_0;
  results[k++] =
      0.412224078188974558e0 * wr_5_4 + 0.530002386242967290e0 * wr_7_4;
  results[k++] = -0.506369683541833307e0 * wr_5_0;
  results[k++] = 0.597758013772236048e0 * wr_3_0 -
                 0.271576456966770315e0 * wr_5_0 +
                 0.342503615712567913e0 * wr_7_0;
  results[k++] =
      -0.412224078188974561e0 * wr_5_4 + 0.618336117283461840e0 * wr_7_4;
  results[k++] = -0.154226256102689457e0 * wr_3_0 -
                 0.291486441055797490e0 * wr_5_0 -
                 0.340382829899007521e0 * wr_7_0;
  results[k++] =
      0.461014878316550131e0 * wr_5_4 - 0.691522317474825198e0 * wr_7_4;
  results[k++] = -0.162502797742968540e0 * wr_7_0 +
                 0.463863607042713265e0 * wr_5_0 -
                 0.343604066372024752e0 * wr_3_0;
  results[k++] =
      -0.937146005958727184e-1 * wr_5_4 + 0.140571900893809078e0 * wr_7_4;
  results[k++] = 0.803836952468500387e0 * wr_7_4;
  results[k++] =
      -0.263947506272121648e0 * wr_5_4 - 0.844632020070789274e-1 * wr_7_4;
  results[k++] = 0.136456706766711374e0 * wr_7_0 -
                 0.389515141186025622e0 * wr_5_0 +
                 0.288530905190558834e0 * wr_3_0;
  results[k++] =
      -0.472163653212812890e0 * wr_5_4 - 0.151092369028100124e0 * wr_7_4;
  results[k++] = 0.568398560058805106e0 * wr_7_0;
  results[k++] =
      -0.305126472316122169e0 * wr_5_0 - 0.418071520299543045e0 * wr_7_0;
  results[k++] =
      -0.128652616924167811e0 * wr_5_4 + 0.192978925386251716e0 * wr_7_4;
  results[k++] = 0.786173517670864890e0 * wr_3_0 +
                 0.303237126148247496e0 * wr_5_0 +
                 0.114729914312974819e0 * wr_7_0;
  results[k++] =
      0.782460796435951592e0 * wr_2_0 + 0.233284737407921724e0 * wr_4_0;
  results[k++] = -0.291557718449917511e0 * wr_4_0 -
                 0.366880974913070281e0 * wr_6_0 -
                 0.132803178814932627e0 * wr_2_0;
  results[k++] =
      0.209945552432591186e0 * wr_4_4 - 0.455709465297820924e0 * wr_6_4;
  results[k++] = -0.593376319876823097e-1 * wr_4_4 -
                 0.186042610156036500e0 * wr_6_4 +
                 0.498074004683101846e0 * wr_8_4;
  results[k++] =
      0.322664931818151472e-2 * wr_2_0 + 0.299700299700299700e-1 * wr_4_0 +
      0.137274290985031449e0 * wr_6_0 + 0.664852902197500178e0 * wr_8_0;
  results[k++] = 0.800000000000000000e0 * wr_4_4;
  results[k++] =
      -0.444370976480566303e0 * wr_4_4 - 0.172241987896607608e0 * wr_6_4;
  results[k++] =
      0.172487872372820691e0 * wr_2_0 - 0.197792106625607699e0 * wr_4_0 +
      0.499204707624468445e-1 * wr_6_0 + 0.671602850907726916e-2 * wr_8_0 -
      0.761906720727732119e0 * wr_8_8;
  results[k++] =
      0.234726263406510114e-1 * wr_2_0 - 0.121122434095725685e0 * wr_4_0 +
      0.142659627935441264e0 * wr_6_0 - 0.493525288356725132e-1 * wr_8_0 -
      0.622094232460049089e0 * wr_8_8;
  results[k++] = -0.570976630019388834e-1 * wr_4_4 +
                 0.451129354428178765e0 * wr_6_4 -
                 0.517613689224258791e0 * wr_8_4;
  results[k++] =
      -0.231746183800928437e0 * wr_4_4 - 0.419191739163896983e0 * wr_6_4;
  results[k++] = 0.204229697939404513e-1 * wr_4_4 +
                 0.365900547698808084e0 * wr_6_4 +
                 0.306121993630978229e0 * wr_8_4;
  results[k++] =
      -0.396958130759098541e0 * wr_2_0 + 0.393916581922453194e0 * wr_4_0 -
      0.265120134417024347e-1 * wr_6_0 - 0.481515574220039761e-1 * wr_8_0 -
      0.606955851359452583e0 * wr_8_8;
  results[k++] =
      0.498638394671177161e-1 * wr_2_0 + 0.192978925386251716e0 * wr_4_0 -
      0.346351493258559239e0 * wr_6_0 + 0.135420338004861202e0 * wr_8_0 -
      0.495577377409070131e0 * wr_8_8;
  results[k++] = -0.272913413533422747e0 * wr_4_4 +
                 0.273814897424375230e0 * wr_6_4 +
                 0.503977592238258658e0 * wr_8_4;
  results[k++] =
      -0.273115496799567549e0 * wr_4_0 - 0.397680201625536520e0 * wr_6_0;
  results[k++] =
      0.721861381718947309e0 * wr_2_0 - 0.103151574523309431e-1 * wr_4_0 -
      0.269985129827306903e0 * wr_6_0 + 0.408626216141381309e0 * wr_8_0;
  results[k++] = 0.185694057532795222e0 * wr_4_4 -
                 0.838383478327793968e-1 * wr_6_4 -
                 0.505017794773709021e0 * wr_8_4;
  results[k++] = -0.272913413533422747e0 * wr_4_4 +
                 0.273814897424375230e0 * wr_6_4 +
                 0.503977592238258658e0 * wr_8_4;
  results[k++] =
      -0.831063991118628602e-1 * wr_2_0 - 0.192978925386251716e0 * wr_4_0 -
      0.288626244382132699e0 * wr_6_0 - 0.305787860010976907e0 * wr_8_0;
  results[k++] = -0.419313934688767317e0 * wr_6_4;
  results[k++] = 0.487508393228905621e0 * wr_4_4 +
                 0.873426293482293452e-1 * wr_6_4 -
                 0.714492867712036877e0 * wr_8_4;
  results[k++] =
      0.340150671524903763e0 * wr_2_0 - 0.175523082489666199e0 * wr_4_0 -
      0.210952491314662323e0 * wr_6_0 + 0.127711801559805070e0 * wr_8_0 -
      0.321964353364647226e0 * wr_8_8;
  results[k++] =
      -0.317407840343261645e0 * wr_2_0 + 0.614202843114461443e-1 * wr_4_0 +
      0.344483975793215217e0 * wr_6_0 - 0.173793748862835113e0 * wr_8_0 -
      0.262882793702840665e0 * wr_8_8;
  results[k++] = -0.608029793546410011e0 * wr_4_4 -
                 0.280119595098052090e0 * wr_6_4 +
                 0.486070457504007145e-1 * wr_8_4;
  results[k++] =
      0.105631778819322337e0 * wr_6_4 + 0.779836390776995287e0 * wr_8_4;
  results[k++] = -0.909711378444742491e-1 * wr_4_4 +
                 0.234698483506607340e0 * wr_6_4 +
                 0.111267780104550613e0 * wr_8_4;
  results[k++] =
      -0.294780177704577884e0 * wr_4_0 + 0.425138018281696883e0 * wr_6_0 -
      0.157288328225382426e0 * wr_8_0 - 0.108143849746893436e0 * wr_8_8;
  results[k++] =
      0.499750187343886598e0 * wr_2_0 - 0.412606298093237722e0 * wr_4_0 -
      0.867809345873486476e-1 * wr_6_0 + 0.105075312722069480e0 * wr_8_0 -
      0.882990835667002208e-1 * wr_8_8;
  results[k++] = -0.680765659798015043e0 * wr_4_4 -
                 0.313629040884692643e0 * wr_6_4 -
                 0.122448797452391292e0 * wr_8_4;
  results[k++] =
      0.910166120476864007e-1 * wr_6_0 + 0.636733746752434716e0 * wr_8_0;
  results[k++] = -0.175272871268392663e0 * wr_4_0 -
                 0.303338555786874609e0 * wr_6_0 -
                 0.336678529849139348e0 * wr_8_0;
  results[k++] = -0.324542294330249728e-1 * wr_4_4 +
                 0.313985235253757320e0 * wr_6_4 -
                 0.385276146647588092e0 * wr_8_4;
  results[k++] = -0.158992604212253177e0 * wr_4_4 +
                 0.363187817315847459e0 * wr_6_4 -
                 0.285978778591604413e-1 * wr_8_4;
  results[k++] =
      0.817015485702651929e0 * wr_2_0 + 0.374749161989976871e0 * wr_4_0 +
      0.818010200115729318e-1 * wr_8_0 + 0.202676597848803337e0 * wr_6_0;
  results[k++] = 0.845154254728516578e0 * wr_1_0 +
                 0.368855556781658750e0 * wr_3_0 +
                 0.147122471584124921e0 * wr_5_0;
  results[k++] =
      0.576827709854581258e0 * wr_5_4 - 0.170911914030987039e0 * wr_7_4;
  results[k++] =
      -0.537215309350253532e-1 * wr_1_0 - 0.172647805529453703e0 * wr_3_0 -
      0.291341989438914795e0 * wr_5_0 - 0.329293692658889615e0 * wr_7_0;
  results[k++] =
      -0.568114573750766458e-1 * wr_5_4 - 0.530240268834048694e0 * wr_7_4;
  results[k++] = -0.541675992476561801e-1 * wr_5_4 -
                 0.118956296387009650e0 * wr_7_4 +
                 0.608832071758413405e0 * wr_9_4;
  results[k++] =
      0.650688259019909696e-2 * wr_3_0 + 0.399683641013572184e-1 * wr_5_0 +
      0.153746332778392509e0 * wr_7_0 + 0.676205647530361430e0 * wr_9_0;
  results[k++] = 0.504524979109513018e0 * wr_5_4;
  results[k++] =
      -0.390803368367357763e0 * wr_1_0 + 0.372132159457065486e0 * wr_3_0 -
      0.784963088134393298e-1 * wr_5_0 - 0.122218587063678736e-1 * wr_7_0;
  results[k++] =
      -0.333031633560577836e0 * wr_5_4 - 0.222021089040385224e0 * wr_7_4;
  results[k++] =
      -0.314918328648886780e-1 * wr_1_0 + 0.229421792008398065e0 * wr_3_0 -
      0.255124983873492296e0 * wr_5_0 + 0.624520556031800664e-1 * wr_7_0 +
      0.118907373375939047e-1 * wr_9_0 - 0.617987955027658576e0 * wr_9_8;
  results[k++] =
      0.352814670705953158e-1 * wr_3_0 - 0.154796808539710877e0 * wr_5_0 +
      0.178637095917353303e0 * wr_7_0 - 0.623555526546783888e-1 * wr_9_0 -
      0.648151235295586005e0 * wr_9_8;
  results[k++] = -0.979020979020979021e-1 * wr_5_4 +
                 0.483751542575071987e0 * wr_7_4 -
                 0.471599294911458821e0 * wr_9_4;
  results[k++] =
      0.247334446913384734e0 * wr_5_4 - 0.294445770134981828e0 * wr_7_4;
  results[k++] =
      0.490572275026619690e0 * wr_1_0 - 0.287899251479003506e0 * wr_3_0 -
      0.125064637568569529e0 * wr_5_0 + 0.723538409124497925e-1 * wr_7_0 +
      0.106864081953606367e-1 * wr_9_0 + 0.555396302158842198e0 * wr_9_8;
  results[k++] = 0.176868106622746730e0 * wr_5_4 +
                 0.375535083529529472e0 * wr_7_4 +
                 0.301205935245265838e0 * wr_9_4;
  results[k++] =
      -0.289897230135791466e0 * wr_1_0 - 0.825384497572818077e-1 * wr_3_0 +
      0.295621207024776245e0 * wr_5_0 + 0.181630727470722903e-1 * wr_7_0 -
      0.757799075155814864e-1 * wr_9_0;
  results[k++] =
      -0.265775157365766429e-1 * wr_1_0 + 0.112424748596993062e0 * wr_3_0 +
      0.140931880742875222e0 * wr_5_0 - 0.358403379832951704e0 * wr_7_0 +
      0.153538277019270421e0 * wr_9_0 - 0.281637328698018168e0 * wr_9_8;
  results[k++] = -0.356532590462966826e0 * wr_5_4 +
                 0.171275460124366417e0 * wr_7_4 +
                 0.478149598845358960e0 * wr_9_4;
  results[k++] = -0.154226256102689457e0 * wr_3_0 -
                 0.291486441055797490e0 * wr_5_0 -
                 0.340382829899007521e0 * wr_7_0;
  results[k++] = -0.176868106622746730e0 * wr_5_4 +
                 0.438124264117784384e0 * wr_7_4 +
                 0.180723561147159502e0 * wr_9_4;
  results[k++] =
      0.817620458377699485e0 * wr_1_0 + 0.205642322485002505e0 * wr_3_0 -
      0.125064637568569529e0 * wr_5_0 - 0.241179469708165975e0 * wr_7_0 +
      0.448829144205146740e0 * wr_9_0;
  results[k++] = -0.418071520299543045e0 * wr_5_4 +
                 0.143455913828274574e-1 * wr_7_4 -
                 0.640777261136434966e0 * wr_9_4;
  results[k++] = 0.199307777117321761e0 * wr_5_4 +
                 0.437695510532157593e0 * wr_7_4 +
                 0.356391668810825863e0 * wr_9_4;
  results[k++] =
      -0.356574791160334604e-1 * wr_1_0 - 0.117315044100893610e0 * wr_3_0 -
      0.210088843691975037e0 * wr_5_0 - 0.282852113178408434e0 * wr_7_0 -
      0.282735784934467898e0 * wr_9_0;
  results[k++] =
      -0.224915041430094524e0 * wr_5_4 - 0.515430303277299951e0 * wr_7_4;
  results[k++] =
      -0.325093518007628267e0 * wr_3_0 + 0.331707446870809021e0 * wr_5_0 +
      0.820272379212336597e-2 * wr_7_0 - 0.623555526546783888e-1 * wr_9_0 +
      0.648151235295586005e0 * wr_9_8;
  results[k++] = -0.670150243006929979e-1 * wr_5_4 -
                 0.709570845536749391e-2 * wr_7_4 -
                 0.703018721041995059e0 * wr_9_4;
  results[k++] =
      0.621027319149066570e0 * wr_1_0 - 0.281463102062910591e0 * wr_3_0 -
      0.277731860300353940e0 * wr_7_0 + 0.170841623296354274e0 * wr_9_0 +
      0.313377089737560481e0 * wr_9_8;
  results[k++] =
      -0.186096842079694173e0 * wr_1_0 - 0.214691630455999319e0 * wr_3_0 +
      0.201847651234558277e0 * wr_5_0 + 0.246833617010959017e0 * wr_7_0 -
      0.168640194022558358e0 * wr_9_0;
  results[k++] =
      -0.496454247532834913e0 * wr_5_4 - 0.330969498355223276e0 * wr_7_4;
  results[k++] = 0.236081826606406445e-1 * wr_5_4 +
                 0.277743325419301700e-1 * wr_7_4 +
                 0.731725084290643501e0 * wr_9_4;
  results[k++] =
      -0.380912433148197326e-1 * wr_3_0 + 0.267399442847225121e0 * wr_5_0 -
      0.344399201348069552e0 * wr_7_0 + 0.125666759938508519e0 * wr_9_0 +
      0.356246173124496659e0 * wr_9_8;
  results[k++] = 0.324137073124761485e0 * wr_5_4 +
                 0.381337733087954691e0 * wr_7_4 +
                 0.193201613580103266e0 * wr_9_4;
  results[k++] =
      -0.315133265537962556e0 * wr_3_0 + 0.138264159118910327e0 * wr_5_0 +
      0.284925446177962495e0 * wr_7_0 - 0.167087515605639505e0 * wr_9_0 +
      0.228062236902405202e0 * wr_9_8;
  results[k++] =
      0.703210846407743136e0 * wr_1_0 - 0.240374223453795652e0 * wr_3_0 -
      0.301325035779156147e0 * wr_5_0 + 0.181110502436530516e-1 * wr_7_0 +
      0.796558476299831785e-1 * wr_9_0 + 0.585439106285677904e-1 * wr_9_8;
  results[k++] = -0.166752850091426039e0 * wr_5_4 -
                 0.196179823636971810e0 * wr_7_4 -
                 0.993928876945963433e-1 * wr_9_4;
  results[k++] = 0.272913413533422747e-1 * wr_5_0 +
                 0.137475932183303160e0 * wr_7_0 +
                 0.666942118869374014e0 * wr_9_0;
  results[k++] = 0.883191292169316132e-1 * wr_5_4 -
                 0.487054021416902280e0 * wr_7_4 +
                 0.496343932201962738e0 * wr_9_4;
  results[k++] =
      -0.103788974458353913e0 * wr_3_0 - 0.208170183925944262e0 * wr_5_0 -
      0.289563567789107417e0 * wr_7_0 - 0.293494319784985367e0 * wr_9_0;
  results[k++] = 0.350114807172847200e0 * wr_5_4 -
                 0.402945430250079898e0 * wr_7_4 -
                 0.171096283744282485e0 * wr_9_4;
  results[k++] = 0.493475069553404422e0 * wr_5_4 +
                 0.256128928833946933e-1 * wr_7_4 -
                 0.815669528545610622e-1 * wr_9_4;
  results[k++] =
      0.856893070496975287e0 * wr_1_0 + 0.439359704395582673e0 * wr_3_0 +
      0.275383268523311998e0 * wr_5_0 + 0.157636458665549670e0 * wr_7_0 +
      0.647094151134279369e-1 * wr_9_0;
  results[k++] = wr_0_0 + 0.496903994999953266e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 +
                 0.112060645702066489e0 * wr_6_0;
  results[k++] =
      -0.519588733317643839e0 * wr_4_4 + 0.368268860757696951e0 * wr_6_4;
  results[k++] = 0.382078778946791846e0 * wr_4_4 +
                 0.391164139177678899e0 * wr_6_4 -
                 0.229080723744663026e0 * wr_8_4;
  results[k++] =
      -0.831063991118628602e-1 * wr_2_0 - 0.192978925386251716e0 * wr_4_0 -
      0.288626244382132699e0 * wr_6_0 - 0.305787860010976907e0 * wr_8_0;
  results[k++] = -0.868613990780585731e-1 * wr_4_4 -
                 0.186746396732034727e0 * wr_6_4 -
                 0.534677503254407859e0 * wr_8_4;
  results[k++] =
      0.486261185570010744e-2 * wr_4_4 - 0.368975342217285464e-1 * wr_6_4 -
      0.547797251760697882e-1 * wr_8_4 + 0.688059164487385789e0 * wr_10_4;
  results[k++] =
      0.936872904974942177e-2 * wr_4_0 + 0.476886112585419616e-1 * wr_6_0 +
      0.165754698444503046e0 * wr_8_0 + 0.684268176053781307e0 * wr_10_0;
  results[k++] =
      -0.519588733317643839e0 * wr_4_4 + 0.368268860757696951e0 * wr_6_4;
  results[k++] =
      wr_0_0 - 0.569180939727219195e0 * wr_2_0 +
      0.489510489510489510e-1 * wr_4_0 + 0.403418324527439361e-1 * wr_6_0 -
      0.474894930141071556e-2 * wr_8_0 + 0.538749408858184450e0 * wr_8_8;
  results[k++] =
      -0.345466813670024386e0 * wr_2_0 + 0.378815877366902254e0 * wr_4_0 -
      0.749872979501467609e-1 * wr_6_0 - 0.226988618518616294e-1 * wr_8_0 -
      0.286121732251415401e0 * wr_8_8;
  results[k++] = 0.178575517138178782e0 * wr_4_4 -
                 0.237130657104139207e0 * wr_6_4 -
                 0.238067671536243886e0 * wr_8_4;
  results[k++] =
      -0.370035148400642040e-1 * wr_2_0 + 0.248227123766417456e0 * wr_4_0 -
      0.280782940455141645e0 * wr_6_0 + 0.665411754150970562e-1 * wr_8_0 +
      0.166024530201794484e-1 * wr_10_0 - 0.167751815047514433e0 * wr_8_8 -
      0.517719752732824705e0 * wr_10_8;
  results[k++] =
      0.416882125228565098e-1 * wr_4_0 - 0.176834103333646047e0 * wr_6_0 +
      0.204878290638853555e0 * wr_8_0 - 0.724952658859680238e-1 * wr_10_0 +
      0.140864406973034775e0 * wr_8_8 - 0.616539195905654385e0 * wr_10_8;
  results[k++] =
      0.458972114205519996e-2 * wr_4_4 - 0.130600640611991309e0 * wr_6_4 +
      0.501847271438822599e0 * wr_8_4 - 0.437381428688884834e0 * wr_10_4;
  results[k++] = 0.382078778946791846e0 * wr_4_4 +
                 0.391164139177678899e0 * wr_6_4 -
                 0.229080723744663026e0 * wr_8_4;
  results[k++] =
      -0.345466813670024386e0 * wr_2_0 + 0.378815877366902254e0 * wr_4_0 -
      0.749872979501467609e-1 * wr_6_0 - 0.226988618518616294e-1 * wr_8_0 -
      0.286121732251415401e0 * wr_8_8;
  results[k++] =
      wr_0_0 - 0.244335633044355719e0 * wr_2_0 -
      0.710059171597633136e-1 * wr_4_0 - 0.199457808114773186e0 * wr_6_0 +
      0.950655053474707817e-1 * wr_8_0 + 0.188887378197201532e-1 * wr_10_0 -
      0.347896885477248663e0 * wr_8_8 + 0.589013723548845472e0 * wr_10_8;
  results[k++] =
      0.100417531056077755e0 * wr_4_4 + 0.157685242686874634e0 * wr_6_4 +
      0.353793862840689145e0 * wr_8_4 + 0.292769343001024711e0 * wr_10_4;
  results[k++] =
      -0.331276771134668480e0 * wr_2_0 + 0.564984442085917771e-1 * wr_4_0 +
      0.214359438235693324e0 * wr_6_0 + 0.588983674127937270e-1 * wr_8_0 -
      0.969904522142614781e-1 * wr_10_0 + 0.890904734567389497e-1 * wr_8_8 +
      0.274953197232524291e0 * wr_10_8;
  results[k++] =
      -0.353617931755737764e-1 * wr_2_0 + 0.151817036825992550e0 * wr_4_0 +
      0.939139405724472084e-1 * wr_6_0 - 0.356098214994088441e0 * wr_8_0 +
      0.164370288307010486e0 * wr_10_0 + 0.299243896869332274e0 * wr_8_8 -
      0.113342788266570611e0 * wr_10_8;
  results[k++] =
      0.585007697659952350e-1 * wr_4_4 - 0.393040236939437179e0 * wr_6_4 +
      0.969176583390465057e-1 * wr_8_4 + 0.455639331545115026e0 * wr_10_4;
  results[k++] =
      -0.831063991118628602e-1 * wr_2_0 - 0.192978925386251716e0 * wr_4_0 -
      0.288626244382132699e0 * wr_6_0 - 0.305787860010976907e0 * wr_8_0;
  results[k++] = 0.178575517138178782e0 * wr_4_4 -
                 0.237130657104139207e0 * wr_6_4 -
                 0.238067671536243886e0 * wr_8_4;
  results[k++] =
      0.100417531056077755e0 * wr_4_4 + 0.157685242686874634e0 * wr_6_4 +
      0.353793862840689145e0 * wr_8_4 + 0.292769343001024711e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.407226055073926198e0 * wr_2_0 +
      0.710059171597633136e-1 * wr_4_0 - 0.166214840095644322e0 * wr_6_0 -
      0.214664044332998540e0 * wr_8_0 + 0.475996193056947861e0 * wr_10_0;
  results[k++] =
      -0.559306062369390965e0 * wr_4_4 - 0.174307901857451103e0 * wr_6_4 -
      0.164728343694172206e-1 * wr_8_4 - 0.683327600796739425e0 * wr_10_4;
  results[k++] =
      0.250485331225049997e0 * wr_4_4 + 0.339407950000720669e0 * wr_6_4 +
      0.414976620781552098e0 * wr_8_4 + 0.232998896875141062e0 * wr_10_4;
  results[k++] =
      -0.578111491667689000e-1 * wr_2_0 - 0.137887636687227292e0 * wr_4_0 -
      0.219335710733094498e0 * wr_6_0 - 0.277222084390700860e0 * wr_8_0 -
      0.266299496869919587e0 * wr_10_0;
  results[k++] = -0.868613990780585731e-1 * wr_4_4 -
                 0.186746396732034727e0 * wr_6_4 -
                 0.534677503254407859e0 * wr_8_4;
  results[k++] =
      -0.370035148400642040e-1 * wr_2_0 + 0.248227123766417456e0 * wr_4_0 -
      0.280782940455141645e0 * wr_6_0 + 0.665411754150970562e-1 * wr_8_0 +
      0.166024530201794484e-1 * wr_10_0 - 0.167751815047514433e0 * wr_8_8 -
      0.517719752732824705e0 * wr_10_8;
  results[k++] =
      -0.331276771134668480e0 * wr_2_0 + 0.564984442085917771e-1 * wr_4_0 +
      0.214359438235693324e0 * wr_6_0 + 0.588983674127937270e-1 * wr_8_0 -
      0.969904522142614781e-1 * wr_10_0 + 0.890904734567389497e-1 * wr_8_8 +
      0.274953197232524291e0 * wr_10_8;
  results[k++] =
      -0.559306062369390965e0 * wr_4_4 - 0.174307901857451103e0 * wr_6_4 -
      0.164728343694172206e-1 * wr_8_4 - 0.683327600796739425e0 * wr_10_4;
  results[k++] =
      wr_0_0 - 0.647811901573365647e-1 * wr_2_0 -
      0.191808191808191808e0 * wr_4_0 + 0.118652448390423341e-1 * wr_6_0 -
      0.293952820480178315e0 * wr_8_0 + 0.194104267690267098e0 * wr_10_0 +
      0.374694137739714749e0 * wr_8_8 + 0.364627543149285290e0 * wr_10_8;
  results[k++] =
      -0.247604708636970580e0 * wr_2_0 - 0.120798754922464476e0 * wr_4_0 +
      0.254068561183006293e0 * wr_6_0 + 0.178101009293073624e0 * wr_8_0 -
      0.160243784767756351e0 * wr_10_0 + 0.340149008265913312e0 * wr_8_8 +
      0.106886302487499940e0 * wr_10_8;
  results[k++] =
      0.279289609288227250e0 * wr_4_4 - 0.378963392319997268e0 * wr_6_4 -
      0.339310685344334143e0 * wr_8_4 - 0.284349827227421754e-1 * wr_10_4;
  results[k++] =
      0.486261185570010744e-2 * wr_4_4 - 0.368975342217285464e-1 * wr_6_4 -
      0.547797251760697882e-1 * wr_8_4 + 0.688059164487385789e0 * wr_10_4;
  results[k++] =
      0.416882125228565098e-1 * wr_4_0 - 0.176834103333646047e0 * wr_6_0 +
      0.204878290638853555e0 * wr_8_0 - 0.724952658859680238e-1 * wr_10_0 +
      0.140864406973034775e0 * wr_8_8 - 0.616539195905654385e0 * wr_10_8;
  results[k++] =
      -0.353617931755737764e-1 * wr_2_0 + 0.151817036825992550e0 * wr_4_0 +
      0.939139405724472084e-1 * wr_6_0 - 0.356098214994088441e0 * wr_8_0 +
      0.164370288307010486e0 * wr_10_0 + 0.299243896869332274e0 * wr_8_8 -
      0.113342788266570611e0 * wr_10_8;
  results[k++] =
      0.250485331225049997e0 * wr_4_4 + 0.339407950000720669e0 * wr_6_4 +
      0.414976620781552098e0 * wr_8_4 + 0.232998896875141062e0 * wr_10_4;
  results[k++] =
      -0.247604708636970580e0 * wr_2_0 - 0.120798754922464476e0 * wr_4_0 +
      0.254068561183006293e0 * wr_6_0 + 0.178101009293073624e0 * wr_8_0 -
      0.160243784767756351e0 * wr_10_0 + 0.340149008265913312e0 * wr_8_8 +
      0.106886302487499940e0 * wr_10_8;
  results[k++] =
      wr_0_0 + 0.756066940828331260e-1 * wr_2_0 -
      0.324598478444632291e0 * wr_4_0 - 0.200796451122254886e0 * wr_6_0 +
      0.592932001412399202e-1 * wr_8_0 + 0.620270171451381792e-1 * wr_10_0 +
      0.214222220121458536e0 * wr_8_8 + 0.673158541198680539e-1 * wr_10_8;
  results[k++] =
      0.586312064268476063e0 * wr_4_4 + 0.370745018279955949e-1 * wr_6_4 -
      0.123036085221953613e0 * wr_8_4 - 0.824855593099818968e-1 * wr_10_4;
  results[k++] =
      0.936872904974942177e-2 * wr_4_0 + 0.476886112585419616e-1 * wr_6_0 +
      0.165754698444503046e0 * wr_8_0 + 0.684268176053781307e0 * wr_10_0;
  results[k++] =
      0.458972114205519996e-2 * wr_4_4 - 0.130600640611991309e0 * wr_6_4 +
      0.501847271438822599e0 * wr_8_4 - 0.437381428688884834e0 * wr_10_4;
  results[k++] =
      0.585007697659952350e-1 * wr_4_4 - 0.393040236939437179e0 * wr_6_4 +
      0.969176583390465057e-1 * wr_8_4 + 0.455639331545115026e0 * wr_10_4;
  results[k++] =
      -0.578111491667689000e-1 * wr_2_0 - 0.137887636687227292e0 * wr_4_0 -
      0.219335710733094498e0 * wr_6_0 - 0.277222084390700860e0 * wr_8_0 -
      0.266299496869919587e0 * wr_10_0;
  results[k++] =
      0.279289609288227250e0 * wr_4_4 - 0.378963392319997268e0 * wr_6_4 -
      0.339310685344334143e0 * wr_8_4 - 0.284349827227421754e-1 * wr_10_4;
  results[k++] =
      0.586312064268476063e0 * wr_4_4 + 0.370745018279955949e-1 * wr_6_4 -
      0.123036085221953613e0 * wr_8_4 - 0.824855593099818968e-1 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.529246858579831882e0 * wr_2_0 +
      0.348574502420656267e0 * wr_4_0 + 0.228177785366198734e0 * wr_6_0 +
      0.132182293308496638e0 * wr_8_0 + 0.543995649207940410e-1 * wr_10_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] = 0.354787437593449571e0 * wr_6_4;
  results[k++] = 0.560968194005074306e0 * wr_6_0;
  results[k++] = -0.838627869377534637e0 * wr_6_4;
  results[k++] = 0.101929438287525109e0 * wr_6_4;
  results[k++] = -0.504524979109513016e0 * wr_6_0;
  results[k++] = 0.851630627252640128e0 * wr_6_4;
  results[k++] = 0.656330123313893593e0 * wr_6_0;
  results[k++] = 0.659670247293930310e0 * wr_6_4;
  results[k++] = -0.566852991567996204e0 * wr_5_4;
  results[k++] =
      -0.166145369565510468e0 * wr_5_4 + 0.326356975932252704e0 * wr_7_4;
  results[k++] = -0.668042657122684936e0 * wr_5_0;
  results[k++] =
      0.839160839160839161e-1 * wr_5_0 + 0.628787608745845475e0 * wr_7_0;
  results[k++] = 0.781606736734715526e0 * wr_5_4;
  results[k++] =
      -0.631166269622610178e-1 * wr_5_4 - 0.771425440649856885e0 * wr_7_4;
  results[k++] =
      0.365380432940227449e0 * wr_5_4 + 0.252634470775814408e0 * wr_7_4;
  results[k++] =
      0.383569552586041710e0 * wr_5_4 + 0.300036627800637071e0 * wr_7_4;
  results[k++] =
      0.346630314164859566e0 * wr_5_0 + 0.217680075763987607e0 * wr_7_0;
  results[k++] =
      -0.283022466361511360e0 * wr_5_0 - 0.387785536576111071e0 * wr_7_0;
  results[k++] = -0.453557367611072674e0 * wr_7_4;
  results[k++] =
      0.712169307517347277e0 * wr_5_4 + 0.413058198360061421e0 * wr_7_4;
  results[k++] = -0.669328021227260440e0 * wr_7_0;
  results[k++] =
      0.736360647893045208e0 * wr_5_0 + 0.189174475679254124e0 * wr_7_0;
  results[k++] = -0.819756061276767872e0 * wr_7_4;
  results[k++] =
      0.551643973538950912e0 * wr_5_4 - 0.625196503344144367e-1 * wr_7_4;
  results[k++] = 0.953462589245592318e0 * wr_4_4;
  results[k++] =
      0.580162934703611376e0 * wr_4_4 - 0.269851333591720174e0 * wr_6_4;
  results[k++] =
      0.941271393498219819e-2 * wr_8_0 + 0.176407335352976580e-1 * wr_4_0 -
      0.254418277193251359e-1 * wr_6_0 + 0.106783495597993498e1 * wr_8_8;
  results[k++] = 0.296164129809114418e0 * wr_8_4 +
                 0.249477646158278238e-1 * wr_4_4 -
                 0.241362370292023515e0 * wr_6_4;
  results[k++] = 0.674199862463242087e0 * wr_4_0;
  results[k++] =
      -0.293026532372865563e0 * wr_4_0 - 0.426672421891870826e0 * wr_6_0;
  results[k++] = 0.296164129809114418e0 * wr_8_4 +
                 0.249477646158278238e-1 * wr_4_4 -
                 0.241362370292023515e0 * wr_6_4;
  results[k++] = 0.226809431168112746e-1 * wr_4_0 +
                 0.127209138596625679e0 * wr_6_0 +
                 0.658889975448753873e0 * wr_8_0;
  results[k++] =
      0.771389215839870028e0 * wr_4_4 - 0.455614555484171021e-1 * wr_6_4;
  results[k++] =
      -0.500608748812283475e-1 * wr_8_0 - 0.938210340209701971e-1 * wr_4_0 +
      0.135310619551863770e0 * wr_6_0 + 0.631023014832952649e0 * wr_8_8;
  results[k++] = 0.132682978748323609e0 * wr_4_4 +
                 0.611271070560573605e-1 * wr_6_4 -
                 0.700057180300949003e0 * wr_8_4;
  results[k++] = -0.713506068012675763e0 * wr_6_4;
  results[k++] = 0.360604012737235290e0 * wr_4_4 +
                 0.564843456318760113e-1 * wr_6_4 +
                 0.358777127019389819e0 * wr_8_4;
  results[k++] =
      0.121691087147225504e0 * wr_8_0 + 0.228066002729206574e0 * wr_4_0 -
      0.328921466812105770e0 * wr_6_0 + 0.306785995538948175e0 * wr_8_8;
  results[k++] = 0.322534034175863247e0 * wr_4_4 +
                 0.475493031519879806e0 * wr_6_4 +
                 0.352503807558114126e0 * wr_8_4;
  results[k++] = -0.504524979109513018e0 * wr_6_0;
  results[k++] = 0.570165006823016434e0 * wr_4_0 -
                 0.279583246790289905e0 * wr_6_0 +
                 0.356960522298528145e0 * wr_8_0;
  results[k++] = 0.570781792985392895e0 * wr_8_4 +
                 0.480805350316313718e-1 * wr_4_4 -
                 0.465165199321331857e0 * wr_6_4;
  results[k++] = -0.169990361819719487e0 * wr_4_0 -
                 0.294196303620323820e0 * wr_6_0 -
                 0.326531451740456623e0 * wr_8_0;
  results[k++] =
      0.407157316111100168e0 * wr_6_4 - 0.644116413687582333e0 * wr_8_4;
  results[k++] =
      -0.169456862543656153e0 * wr_8_0 - 0.317585701478757867e0 * wr_4_0 +
      0.458028612414344471e0 * wr_6_0 + 0.116510345607092604e0 * wr_8_8;
  results[k++] = 0.449134006247032482e0 * wr_4_4 +
                 0.206916235536543248e0 * wr_6_4 +
                 0.230815398466155462e0 * wr_8_4;
  results[k++] = 0.811679449913427780e0 * wr_8_8;
  results[k++] = 0.970142500145331896e0 * wr_8_8;
  results[k++] = 0.125436301501063615e1 * wr_4_4 -
                 0.269679944985296835e0 * wr_6_4 +
                 0.300828418798093419e-1 * wr_8_4;
  results[k++] = 0.216930457818656173e0 * wr_8_8;
  results[k++] = 0.573944043183551436e0 * wr_8_0;
  results[k++] =
      -0.313785816221094451e0 * wr_6_0 - 0.411596604342021211e0 * wr_8_0;
  results[k++] = 0.185630692278425473e0 * wr_8_4 +
                 0.156368390034950329e-1 * wr_4_4 -
                 0.151281871697789760e0 * wr_6_4;
  results[k++] = 0.773984042698554383e0 * wr_4_0 +
                 0.287037169955027743e0 * wr_6_0 +
                 0.106195152301943600e0 * wr_8_0;
  results[k++] = 0.811679449913427778e0 * wr_8_4;
  results[k++] =
      -0.315382700916959947e0 * wr_6_4 - 0.194028500029066379e0 * wr_8_4;
  results[k++] =
      0.131260721306427938e0 * wr_8_0 + 0.246000826564165886e0 * wr_4_0 -
      0.354787437593449571e0 * wr_6_0 + 0.300828418798093419e-1 * wr_8_8;
  results[k++] = 0.347897705282034949e0 * wr_4_4 -
                 0.309868145259945807e0 * wr_6_4 -
                 0.100121749762456695e0 * wr_8_4;
  results[k++] = 0.179990817029303007e0 * wr_5_4;
  results[k++] =
      0.592179569644727555e0 * wr_5_4 - 0.181279460095324761e0 * wr_7_4;
  results[k++] = -0.483469112253009479e-1 * wr_3_0 +
                 0.652680652680652681e-1 * wr_5_0 -
                 0.228650039543943809e-1 * wr_7_0;
  results[k++] =
      -0.910963562627873575e-2 * wr_3_0 + 0.399683641013572184e-1 * wr_5_0 -
      0.461238998335177526e-1 * wr_7_0 + 0.161001344650086055e-1 * wr_9_0 +
      0.836759646707856501e0 * wr_9_8;
  results[k++] = 0.565238025780053194e-1 * wr_5_4 -
                 0.279294083326614519e0 * wr_7_4 +
                 0.272277979866768457e0 * wr_9_4;
  results[k++] =
      0.759737176397586326e0 * wr_3_0 + 0.212121212121212121e0 * wr_5_0;
  results[k++] = -0.158252414505179853e0 * wr_3_0 -
                 0.299095849554227320e0 * wr_5_0 -
                 0.349268704621589534e0 * wr_7_0;
  results[k++] =
      0.276908949275850779e0 * wr_5_4 - 0.415363423913776168e0 * wr_7_4;
  results[k++] = -0.565238025780053194e-1 * wr_5_4 -
                 0.239394928565669589e0 * wr_7_4 +
                 0.453796633111280761e0 * wr_9_4;
  results[k++] =
      0.650688259019909696e-2 * wr_3_0 + 0.399683641013572184e-1 * wr_5_0 +
      0.153746332778392509e0 * wr_7_0 + 0.676205647530361430e0 * wr_9_0;
  results[k++] = 0.638179228173972514e0 * wr_5_4;
  results[k++] =
      0.910560046537496382e-1 * wr_5_4 - 0.241030600554043160e0 * wr_7_4;
  results[k++] =
      0.207681711956888084e0 * wr_3_0 - 0.260342803762045942e0 * wr_5_0 +
      0.679562710434222954e-1 * wr_7_0 + 0.116524218363658660e-1 * wr_9_0 -
      0.605602170607908836e0 * wr_9_8;
  results[k++] =
      0.807482893971504563e-2 * wr_3_0 - 0.141712672760565628e0 * wr_5_0 +
      0.201502018116268288e0 * wr_7_0 - 0.761133007113624345e-1 * wr_9_0;
  results[k++] = 0.200411983778132186e0 * wr_5_4 +
                 0.159150693000281442e0 * wr_7_4 -
                 0.643596356406907725e0 * wr_9_4;
  results[k++] =
      -0.298331874233587997e0 * wr_5_4 - 0.450054941700955607e0 * wr_7_4;
  results[k++] = 0.651013521854029892e-1 * wr_5_4 +
                 0.204035296731663016e0 * wr_7_4 +
                 0.383284567961765644e0 * wr_9_4;
  results[k++] =
      -0.360604012737235290e0 * wr_3_0 + 0.379714484366392181e0 * wr_5_0 -
      0.869433309300215978e-2 * wr_7_0 - 0.623159492510931696e-1 * wr_9_0 -
      0.647739579976005681e0 * wr_9_8;
  results[k++] =
      0.981439811562569273e-1 * wr_3_0 + 0.137793590317286086e0 * wr_5_0 -
      0.362043555438035273e0 * wr_7_0 + 0.157267802093330083e0 * wr_9_0 -
      0.288478446753801813e0 * wr_9_8;
  results[k++] = 0.194869564234787973e0 * wr_5_4 +
                 0.442141028095737418e0 * wr_7_4 +
                 0.365048608896516154e0 * wr_9_4;
  results[k++] =
      -0.283022466361511360e0 * wr_5_0 - 0.387785536576111071e0 * wr_7_0;
  results[k++] =
      0.684276215652947763e0 * wr_3_0 - 0.480359953879525470e-1 * wr_5_0 -
      0.263707593314665243e0 * wr_7_0 + 0.425698975939992408e0 * wr_9_0;
  results[k++] = 0.240152526230839464e0 * wr_5_4 -
                 0.235443653167489671e-1 * wr_7_4 -
                 0.471299771670756984e0 * wr_9_4;
  results[k++] = -0.348593273899798156e0 * wr_5_4 +
                 0.173015044031149820e0 * wr_7_4 +
                 0.489764102750606765e0 * wr_9_4;
  results[k++] =
      -0.102413086275662820e0 * wr_3_0 - 0.205410556542139002e0 * wr_5_0 -
      0.285724941450056655e0 * wr_7_0 - 0.289603585066904537e0 * wr_9_0;
  results[k++] = -0.370328039909020585e0 * wr_7_4;
  results[k++] = 0.543928293220421173e0 * wr_5_4 +
                 0.742302141336104190e-1 * wr_7_4 -
                 0.688114884547766838e0 * wr_9_4;
  results[k++] =
      -0.242140068330093584e0 * wr_7_0 + 0.267811778393381289e0 * wr_3_0 -
      0.117501940896303590e0 * wr_5_0 + 0.141997083758482467e0 * wr_9_0 -
      0.402540160250417757e0 * wr_9_8;
  results[k++] =
      0.296559806845691052e0 * wr_7_0 - 0.328001102085554515e0 * wr_3_0 +
      0.143909899491305438e0 * wr_5_0 - 0.173910200085763307e0 * wr_9_0 -
      0.237374702160963632e0 * wr_9_8;
  results[k++] = -0.203519331620353122e0 * wr_5_4 -
                 0.171024648420464809e-1 * wr_7_4 +
                 0.138637161423236520e0 * wr_9_4;
  results[k++] = 0.416382772221781500e0 * wr_9_8;
  results[k++] = 0.636035190593956527e0 * wr_9_8;
  results[k++] = -0.464095480892257110e0 * wr_5_4 +
                 0.163798405020796627e0 * wr_7_4 -
                 0.225815263514680732e-1 * wr_9_4;
  results[k++] = 0.568398560058805107e0 * wr_5_4 -
                 0.200611256491342979e0 * wr_7_4 +
                 0.276566085871545443e-1 * wr_9_4;
  results[k++] = 0.169987554938146366e0 * wr_9_8;
  results[k++] =
      0.964418895619726908e-1 * wr_7_0 + 0.642681506823759524e0 * wr_9_0;
  results[k++] = -0.187468244875366902e0 * wr_5_0 -
                 0.305966948595446337e0 * wr_7_0 -
                 0.327237405863128469e0 * wr_9_0;
  results[k++] = -0.520685607524091885e-1 * wr_5_4 +
                 0.336914216633235926e0 * wr_7_4 -
                 0.362291016380465738e0 * wr_9_4;
  results[k++] = -0.219654642778876723e0 * wr_5_4 +
                 0.337609602753112232e0 * wr_7_4 -
                 0.113772836990569639e-1 * wr_9_4;
  results[k++] =
      0.799367282027144367e0 * wr_3_0 + 0.350720971611731326e0 * wr_5_0 +
      0.185847969694940682e0 * wr_7_0 + 0.740028177233059673e-1 * wr_9_0;
  results[k++] =
      0.118116709628340078e0 * wr_7_4 + 0.814188511384593957e0 * wr_9_4;
  results[k++] =
      -0.140441681411581055e0 * wr_5_4 + 0.101118010616338359e0 * wr_7_4;
  results[k++] =
      -0.273049836143059202e0 * wr_5_0 + 0.412633958920470505e0 * wr_7_0 -
      0.158875120619690879e0 * wr_9_0 - 0.150128943546547601e0 * wr_9_8;
  results[k++] =
      0.423447601971677156e0 * wr_3_0 - 0.408731138995086729e0 * wr_5_0 -
      0.459428477227139898e-1 * wr_7_0 + 0.947961101087959887e-1 * wr_9_0 -
      0.990067365840385401e-1 * wr_9_8;
  results[k++] = -0.578033120131054269e0 * wr_5_4 -
                 0.278197758351844301e0 * wr_7_4 -
                 0.920467572613138946e-1 * wr_9_4;
  results[k++] =
      -0.648641880011523422e0 * wr_4_4 + 0.804541234306745050e-1 * wr_6_4;
  results[k++] =
      0.117343731235033707e0 * wr_2_0 - 0.151378015254808107e0 * wr_4_0 +
      0.582187942377792639e-1 * wr_6_0 - 0.440574738559013184e-2 * wr_8_0 -
      0.499814516625831118e0 * wr_8_8;
  results[k++] = -0.214080842218470900e0 * wr_4_4 +
                 0.552311977260206813e0 * wr_6_4 -
                 0.138623605224283281e0 * wr_8_4;
  results[k++] =
      0.173356834408289512e-1 * wr_2_0 - 0.894548460233330496e-1 * wr_4_0 +
      0.105361117830781994e0 * wr_6_0 - 0.364492581479006505e-1 * wr_8_0 +
      0.459447039618906314e0 * wr_8_8;
  results[k++] =
      0.635727908455181182e-3 * wr_2_0 - 0.170583698219945813e-1 * wr_4_0 +
      0.590928730663219675e-1 * wr_6_0 - 0.640186916706443417e-1 * wr_8_0 +
      0.219629809225140238e-1 * wr_10_0 - 0.161392576216518555e0 * wr_8_8 +
      0.684878857278453314e0 * wr_10_8;
  results[k++] =
      -0.359622012046559453e-2 * wr_4_4 + 0.835699425299843102e-1 * wr_6_4 -
      0.300274280335267141e0 * wr_8_4 + 0.253733430600888084e0 * wr_10_4;
  results[k++] = 0.805822964025380299e0 * wr_2_0 +
                 0.327613622798385077e0 * wr_4_0 +
                 0.127209138596625679e0 * wr_6_0;
  results[k++] = -0.214080842218470900e0 * wr_4_4 +
                 0.552311977260206813e0 * wr_6_4 -
                 0.138623605224283281e0 * wr_8_4;
  results[k++] =
      -0.838169508821669333e-1 * wr_2_0 - 0.194628876756181853e0 * wr_4_0 -
      0.291093971188896320e0 * wr_6_0 - 0.308402316991309229e0 * wr_8_0;
  results[k++] = 0.126508256466194527e0 * wr_4_4 +
                 0.475973013095214563e-1 * wr_6_4 -
                 0.509710726063415902e0 * wr_8_4;
  results[k++] =
      -0.241241779542406561e-1 * wr_4_4 - 0.854254045132780226e-1 * wr_6_4 -
      0.185443594085810327e0 * wr_8_4 + 0.567365198987811067e0 * wr_10_4;
  results[k++] =
      0.142153081849954844e-2 * wr_2_0 + 0.528542724648249430e-1 * wr_6_0 +
      0.171780175687392391e0 * wr_8_0 + 0.687550056637813576e0 * wr_10_0 +
      0.127145581691036236e-1 * wr_4_0;
  results[k++] =
      0.574959574576068970e0 * wr_4_4 + 0.489016856448458885e0 * wr_6_4;
  results[k++] =
      -0.364049352257407976e0 * wr_2_0 + 0.402546807104998722e0 * wr_4_0 -
      0.838588488857244441e-1 * wr_6_0 - 0.221299067326539664e-1 * wr_8_0 +
      0.278949988340050261e0 * wr_8_8;
  results[k++] = -0.569287154097875371e0 * wr_4_4 -
                 0.378835663483946285e-1 * wr_6_4 -
                 0.309467226538502511e0 * wr_8_4;
  results[k++] =
      0.496454247532834913e-1 * wr_2_0 + 0.185017574200321020e0 * wr_4_0 -
      0.301367876054386778e0 * wr_6_0 + 0.790715714992755241e-1 * wr_8_0 +
      0.206245630813155191e-1 * wr_10_0 + 0.289366299099165384e0 * wr_8_8 -
      0.643142533558321421e0 * wr_10_8;
  results[k++] =
      0.135243014941322568e-1 * wr_2_0 - 0.100804191630272331e-1 * wr_4_0 -
      0.157140700619361134e0 * wr_6_0 + 0.243199307411023302e0 * wr_8_0 -
      0.951773866970395094e-1 * wr_10_0 - 0.367866587706006309e0 * wr_8_8 -
      0.269813431932214452e0 * wr_10_8;
  results[k++] =
      -0.446279180541239520e-1 * wr_4_4 + 0.222230510016710731e0 * wr_6_4 +
      0.228141172851761335e0 * wr_8_4 - 0.599761727016131582e0 * wr_10_4;
  results[k++] = -0.107511344725287749e0 * wr_4_4 +
                 0.594366289399849757e-1 * wr_6_4 -
                 0.328193200140313152e0 * wr_8_4;
  results[k++] =
      0.340366846107592122e0 * wr_2_0 - 0.187009065273730196e0 * wr_4_0 -
      0.170643082293966994e0 * wr_6_0 + 0.841063478683490640e-1 * wr_8_0 +
      0.149319557734086760e-1 * wr_10_0 + 0.212034013885665635e0 * wr_8_8 +
      0.465628087694661507e0 * wr_10_8;
  results[k++] =
      -0.264470756396824642e0 * wr_4_4 + 0.246683797485936523e0 * wr_6_4 +
      0.243631711725374916e0 * wr_8_4 + 0.385734162796306928e0 * wr_10_4;
  results[k++] =
      -0.344803386131462166e0 * wr_2_0 + 0.591102921200910857e-1 * wr_4_0 +
      0.228932428239361207e0 * wr_6_0 + 0.516699172575440909e-1 * wr_8_0 -
      0.970622704041941579e-1 * wr_10_0 - 0.781566212129882423e-1 * wr_8_8 -
      0.275156790890360018e0 * wr_10_8;
  results[k++] =
      0.821892823303879184e-2 * wr_2_0 + 0.156826301706811490e0 * wr_4_0 +
      0.436557011582764186e-1 * wr_6_0 - 0.350769171632722545e0 * wr_8_0 +
      0.174573982354182255e0 * wr_10_0 - 0.447116486570536534e0 * wr_8_8 -
      0.327939632863538339e0 * wr_10_8;
  results[k++] =
      -0.216968635806245816e0 * wr_4_4 + 0.617384846529413458e-1 * wr_6_4 +
      0.388205823195651201e0 * wr_8_4 + 0.364484523907404028e0 * wr_10_4;
  results[k++] = -0.169990361819719487e0 * wr_4_0 -
                 0.294196303620323820e0 * wr_6_0 -
                 0.326531451740456623e0 * wr_8_0;
  results[k++] =
      -0.394249726242724829e-1 * wr_4_4 - 0.241325761305276283e0 * wr_6_4 +
      0.394493739542896159e0 * wr_8_4 + 0.172505561851302531e0 * wr_10_4;
  results[k++] =
      0.761083405183785683e0 * wr_2_0 - 0.152627812759760380e0 * wr_6_0 -
      0.225681013407447646e0 * wr_8_0 + 0.467444154049071445e0 * wr_10_0 +
      0.139388327453585345e0 * wr_4_0;
  results[k++] =
      0.261692418760347441e0 * wr_4_4 - 0.323759344883109957e0 * wr_6_4 +
      0.484706788427114806e-1 * wr_8_4 - 0.611639349912272774e0 * wr_10_4;
  results[k++] =
      -0.216968635806245816e0 * wr_4_4 + 0.617384846529413458e-1 * wr_6_4 +
      0.388205823195651201e0 * wr_8_4 + 0.364484523907404028e0 * wr_10_4;
  results[k++] =
      -0.575324976312715429e-1 * wr_2_0 - 0.218278505791382094e0 * wr_6_0 -
      0.275885865329107619e0 * wr_8_0 - 0.265015925019601977e0 * wr_10_0 -
      0.137223013993460053e0 * wr_4_0;
  results[k++] =
      -0.227607859090197572e0 * wr_6_4 - 0.480096028809603360e0 * wr_8_4;
  results[k++] =
      -0.290693841829741643e0 * wr_4_0 + 0.300561400992436276e0 * wr_6_0 +
      0.306134107439321980e-1 * wr_8_0 - 0.737206247665056201e-1 * wr_10_0 +
      0.626960314714858329e0 * wr_10_8 - 0.210483010982723376e-1 * wr_8_8;
  results[k++] =
      0.411103173613959960e0 * wr_4_4 + 0.135779800552470199e0 * wr_6_4 -
      0.416982026764977545e-1 * wr_8_4 - 0.692512668355559823e0 * wr_10_4;
  results[k++] =
      0.480144449178737894e0 * wr_2_0 - 0.257672550571884240e0 * wr_4_0 +
      0.159396106705039596e-1 * wr_6_0 - 0.293560973676762211e0 * wr_8_0 +
      0.185985764232103125e0 * wr_10_0 - 0.246691294796993371e0 * wr_8_8 +
      0.128247904856029300e0 * wr_10_8;
  results[k++] =
      -0.251789873349221978e0 * wr_2_0 - 0.122840568622892288e0 * wr_4_0 +
      0.258362981844911413e0 * wr_6_0 + 0.181111380393901855e0 * wr_8_0 -
      0.162952322246948237e0 * wr_10_0 - 0.345898412766895611e0 * wr_8_8 -
      0.108692959492757394e0 * wr_10_8;
  results[k++] =
      -0.543838380285974285e0 * wr_4_4 - 0.365380432940227450e0 * wr_6_4 -
      0.120129569902637039e0 * wr_8_4 + 0.855705414942844149e-1 * wr_10_4;
  results[k++] =
      -0.342521775503141325e0 * wr_8_8 + 0.261605327235636012e0 * wr_10_8;
  results[k++] =
      -0.815197196195680457e-1 * wr_8_4 - 0.191358113303351829e0 * wr_4_4 +
      0.204191263016436183e0 * wr_6_4 + 0.123979655567538320e-1 * wr_10_4;
  results[k++] =
      -0.587847058099600717e0 * wr_8_8 + 0.448975606799753968e0 * wr_10_8;
  results[k++] =
      0.168605519365252892e0 * wr_8_4 + 0.395781955934522922e0 * wr_4_4 -
      0.422324489232775928e0 * wr_6_4 - 0.256424510722583977e-1 * wr_10_4;
  results[k++] =
      -0.160759055055091878e0 * wr_8_4 - 0.377363288482015146e0 * wr_4_4 +
      0.402670601005704810e0 * wr_6_4 + 0.244491177939589068e-1 * wr_10_4;
  results[k++] =
      -0.172810791630275684e0 * wr_8_8 + 0.131986422258496575e0 * wr_10_8;
  results[k++] = 0.309549889167186782e-1 * wr_6_0 +
                 0.145319682097396505e0 * wr_8_0 +
                 0.672974152299819130e0 * wr_10_0;
  results[k++] =
      -0.238546256062221465e-2 * wr_4_4 + 0.114544804045945328e0 * wr_6_4 -
      0.503029668798680209e0 * wr_8_4 + 0.464121280803801468e0 * wr_10_4;
  results[k++] =
      -0.217333484953714499e0 * wr_6_0 - 0.287771982288085423e0 * wr_8_0 -
      0.282328498208742977e0 * wr_10_0 - 0.118074372701781558e0 * wr_4_0;
  results[k++] =
      -0.444042178080770448e-1 * wr_4_4 + 0.394851010015042937e0 * wr_6_4 -
      0.346801890224582825e0 * wr_8_4 - 0.176314090620442565e0 * wr_10_4;
  results[k++] =
      -0.211688802423571896e0 * wr_4_4 + 0.446751124098547102e0 * wr_6_4 +
      0.661325256417592820e-1 * wr_8_4 - 0.646572651397881427e-1 * wr_10_4;
  results[k++] =
      0.823276232322318188e0 * wr_2_0 + 0.401651262487115568e0 * wr_4_0 +
      0.248461263535906560e0 * wr_6_0 + 0.140995018412288545e0 * wr_8_0 +
      0.574593072528214345e-1 * wr_10_0;
  results[k++] = 0.311125216843150456e-1 * wr_6_4 +
                 0.685043551006282650e-1 * wr_8_4 +
                 0.781388821307985295e0 * wr_10_4;
  results[k++] =
      -0.375284136083880788e-1 * wr_4_0 + 0.268631377051494251e0 * wr_6_0 -
      0.355695689945569838e0 * wr_8_0 + 0.133242084263251743e0 * wr_10_0 -
      0.815197196195680457e-1 * wr_8_8 + 0.377721066741450008e0 * wr_10_8;
  results[k++] =
      -0.530731914993294434e-1 * wr_4_4 + 0.234620219729867222e0 * wr_6_4 +
      0.271314026815200331e0 * wr_8_4 + 0.894030010526247743e-1 * wr_10_4;
  results[k++] =
      -0.310476910221238780e0 * wr_4_0 + 0.185201540015675622e0 * wr_6_0 +
      0.245225968306115164e0 * wr_8_0 - 0.163099430839926796e0 * wr_10_0 -
      0.168605519365252892e0 * wr_8_8 + 0.175378730755939393e0 * wr_10_8;
  results[k++] =
      0.585106791735126862e0 * wr_2_0 - 0.306600551531960548e0 * wr_4_0 -
      0.247215835825864154e0 * wr_6_0 + 0.467627573382812239e-1 * wr_8_0 +
      0.676485669067149026e-1 * wr_10_0 - 0.160759055055091880e0 * wr_8_8 +
      0.116935006101512986e-1 * wr_10_8;
  results[k++] =
      -0.702092329958664797e0 * wr_4_4 - 0.349615987858337562e0 * wr_6_4 -
      0.212690205083416226e0 * wr_8_4 - 0.801456956792982223e-1 * wr_10_4;
  results[k++] =
      -0.452190420624042555e0 * wr_5_4 + 0.484489736382902738e-1 * wr_7_4;
  results[k++] =
      -0.295419578350398558e0 * wr_1_0 + 0.335027002012976294e0 * wr_3_0 -
      0.131861404417071800e0 * wr_5_0 + 0.161679993480094914e-1 * wr_7_0;
  results[k++] =
      -0.213944874696200762e-1 * wr_1_0 + 0.164241061741251055e0 * wr_3_0 -
      0.210088843691975037e0 * wr_5_0 + 0.848556339535225304e-1 * wr_7_0 -
      0.673180440320161661e-2 * wr_9_0 - 0.349866784427900537e0 * wr_9_8;
  results[k++] = -0.297110492052472357e0 * wr_5_4 +
                 0.513826380373099250e0 * wr_7_4 -
                 0.113845142582228324e0 * wr_9_4;
  results[k++] =
      0.266702822166599250e-1 * wr_3_0 - 0.117015388326444133e0 * wr_5_0 +
      0.135036951636602436e0 * wr_7_0 - 0.471363671966492741e-1 * wr_9_0 +
      0.489956280157551604e0 * wr_9_8;
  results[k++] =
      0.111977729933627366e-2 * wr_3_0 - 0.231200139376139517e-1 * wr_5_0 +
      0.746007306371201232e-1 * wr_7_0 - 0.791626178248924005e-1 * wr_9_0 +
      0.270760601831367110e-1 * wr_11_0 - 0.224413995144257179e0 * wr_9_8 +
      0.579498996858790599e0 * wr_11_8;
  results[k++] =
      -0.763628927835881711e-2 * wr_5_4 + 0.105501365029957342e0 * wr_7_4 -
      0.312667287943404090e0 * wr_9_4 + 0.239129288739764398e0 * wr_11_4;
  results[k++] =
      0.852802865422441737e0 * wr_1_0 + 0.414488420995682477e0 * wr_3_0 +
      0.228390652007755534e0 * wr_5_0 + 0.933459877583097374e-1 * wr_7_0;
  results[k++] =
      -0.559440559440559441e0 * wr_5_4 + 0.293706293706293706e0 * wr_7_4;
  results[k++] = 0.297110492052472357e0 * wr_5_4 +
                 0.440422611748370786e0 * wr_7_4 -
                 0.189741904303713873e0 * wr_9_4;
  results[k++] =
      -0.356574791160334604e-1 * wr_1_0 - 0.117315044100893610e0 * wr_3_0 -
      0.210088843691975037e0 * wr_5_0 - 0.282852113178408434e0 * wr_7_0 -
      0.282735784934467898e0 * wr_9_0;
  results[k++] = 0.236406784539445197e-1 * wr_5_4 -
                 0.116812764125372921e0 * wr_7_4 -
                 0.531432200828517173e0 * wr_9_4;
  results[k++] =
      -0.280256890909959730e-1 * wr_5_4 - 0.826020310050407628e-1 * wr_7_4 -
      0.121705576768893482e0 * wr_9_4 + 0.651566645807008917e0 * wr_11_4;
  results[k++] =
      0.305110905830265746e-2 * wr_3_0 + 0.179989064394321567e-1 * wr_5_0 +
      0.627227172374502897e-1 * wr_7_0 + 0.184884043181222677e0 * wr_9_0 +
      0.695596580732650796e0 * wr_11_0;
  results[k++] =
      0.114521133587504107e0 * wr_5_4 + 0.386508825857826359e0 * wr_7_4;
  results[k++] =
      0.499917348540637091e0 * wr_1_0 - 0.411188811188811189e0 * wr_3_0 +
      0.657558337922541074e-1 * wr_7_0 - 0.749046045249136974e-2 * wr_9_0 +
      0.389295819580131650e0 * wr_9_8;
  results[k++] =
      -0.265498607321225867e0 * wr_1_0 - 0.787342803939051742e-1 * wr_3_0 +
      0.325891748360124379e0 * wr_5_0 - 0.617849659716789176e-1 * wr_7_0 -
      0.397807122344649087e-1 * wr_9_0;
  results[k++] = -0.460880530396367756e0 * wr_5_4 -
                 0.487991149831448211e-1 * wr_7_4 -
                 0.336376444196845307e0 * wr_9_4;
  results[k++] =
      -0.270837996238280901e-1 * wr_1_0 + 0.112293222656236468e0 * wr_3_0 +
      0.134229836870509737e0 * wr_5_0 - 0.303443571734554873e0 * wr_7_0 +
      0.784089349995147737e-1 * wr_9_0 + 0.287908043914566305e-1 * wr_11_0 +
      0.143826565127784291e0 * wr_9_8 - 0.616199038957592619e0 * wr_11_8;
  results[k++] =
      0.238218357273465770e-1 * wr_3_0 - 0.307405529632016945e-1 * wr_5_0 -
      0.158703552164422676e0 * wr_7_0 + 0.270656334781313855e0 * wr_9_0 -
      0.109715941385121309e0 * wr_11_0 - 0.369426099360527641e0 * wr_9_8 -
      0.391368349888254250e0 * wr_11_8;
  results[k++] =
      -0.778417403445955298e-1 * wr_5_4 + 0.224440715867712512e0 * wr_7_4 +
      0.277149928796764031e0 * wr_9_4 - 0.565241225230169973e0 * wr_11_4;
  results[k++] = 0.278385091763982818e0 * wr_5_4 +
                 0.221070514047868709e0 * wr_7_4 -
                 0.260749006354654396e0 * wr_9_4;
  results[k++] =
      -0.305982651275495077e0 * wr_3_0 + 0.357998249080305596e0 * wr_5_0 -
      0.614782188795643714e-1 * wr_7_0 - 0.320465674847452638e-1 * wr_9_0 -
      0.333106217777425200e0 * wr_9_8;
  results[k++] =
      0.620567809416043641e0 * wr_1_0 - 0.279865929446223597e0 * wr_3_0 -
      0.372799023018597086e-2 * wr_5_0 - 0.233706409516194973e0 * wr_7_0 +
      0.104741461692210667e0 * wr_9_0 + 0.263872080885034039e-1 * wr_11_0 -
      0.192128673367994181e0 * wr_9_8 + 0.564755747836442147e0 * wr_11_8;
  results[k++] =
      -0.527217434392339648e-2 * wr_5_4 + 0.285410941926680110e0 * wr_7_4 +
      0.243124939597225181e0 * wr_9_4 + 0.380993938190736248e0 * wr_11_4;
  results[k++] =
      -0.206916235536543248e0 * wr_1_0 - 0.224122200985450407e0 * wr_3_0 +
      0.179249948818389548e0 * wr_5_0 + 0.131446087455717483e0 * wr_7_0 +
      0.100598802048371698e0 * wr_9_0 - 0.123176200144550226e0 * wr_11_0;
  results[k++] =
      -0.208501823747365671e-1 * wr_1_0 + 0.463260795082979056e-1 * wr_3_0 +
      0.170802394072609273e0 * wr_5_0 - 0.257190974559613726e-1 * wr_7_0 -
      0.328964123189663892e0 * wr_9_0 + 0.183615674585594640e0 * wr_11_0 -
      0.241775673739383381e0 * wr_9_8 - 0.256136062498820015e0 * wr_11_8;
  results[k++] =
      -0.279720279720279720e0 * wr_5_4 - 0.363722964342159389e-1 * wr_7_4 +
      0.336856639222470587e0 * wr_9_4 + 0.359359995867195076e0 * wr_11_4;
  results[k++] =
      -0.102413086275662820e0 * wr_3_0 - 0.205410556542139002e0 * wr_5_0 -
      0.285724941450056655e0 * wr_7_0 - 0.289603585066904537e0 * wr_9_0;
  results[k++] = 0.226417973089209088e0 * wr_5_4 -
                 0.166483803742065505e0 * wr_7_4 -
                 0.242370374196410014e0 * wr_9_4;
  results[k++] =
      0.943115217779445583e-2 * wr_5_4 + 0.111684696842302766e0 * wr_7_4 +
      0.326186335178955506e0 * wr_9_4 + 0.283976114936613163e0 * wr_11_4;
  results[k++] =
      0.832579083901444590e0 * wr_1_0 + 0.292039646653027484e0 * wr_3_0 +
      0.555735971610061287e-2 * wr_5_0 - 0.184441206513746717e0 * wr_7_0 -
      0.192878023393566169e0 * wr_9_0 + 0.495630164587537540e0 * wr_11_0;
  results[k++] = -0.440874084571447841e0 * wr_5_4 -
                 0.176250893832034579e0 * wr_7_4 -
                 0.662804087730373491e0 * wr_11_4;
  results[k++] =
      0.945218041388404548e-1 * wr_5_4 + 0.278590580619740288e0 * wr_7_4 +
      0.410474499042733052e0 * wr_9_4 + 0.253905979706584126e0 * wr_11_4;
  results[k++] =
      -0.254068561183006293e-1 * wr_1_0 - 0.846755209694287584e-1 * wr_3_0 -
      0.156097622056851304e0 * wr_5_0 - 0.223856009921495368e0 * wr_7_0 -
      0.267238082805764523e0 * wr_9_0 - 0.247493035267140434e0 * wr_11_0;
  results[k++] = -0.116296760925916070e0 * wr_5_4 -
                 0.247985740209673972e0 * wr_7_4 -
                 0.514938028143449932e0 * wr_9_4;
  results[k++] =
      -0.378743049167177638e-1 * wr_3_0 + 0.254146694055210205e0 * wr_5_0 -
      0.292874407377813285e0 * wr_7_0 + 0.669380672228914151e-1 * wr_9_0 +
      0.208135330270857179e-1 * wr_11_0 - 0.189759251341993283e0 * wr_9_8 -
      0.445464422397593734e0 * wr_11_8;
  results[k++] =
      -0.331888844080003746e0 * wr_3_0 + 0.124590921385016881e0 * wr_5_0 +
      0.157934147603360995e0 * wr_7_0 + 0.914137810334282524e-1 * wr_9_0 -
      0.113695768617554387e0 * wr_11_0 + 0.124773124494806065e0 * wr_9_8 +
      0.405564813931071061e0 * wr_11_8;
  results[k++] =
      -0.176198170771250952e0 * wr_5_4 - 0.910798815076955108e-2 * wr_7_4 -
      0.728729373618681679e-1 * wr_9_4 - 0.684002492418817881e0 * wr_11_4;
  results[k++] =
      0.691522317474825198e0 * wr_1_0 - 0.192057779671495157e0 * wr_3_0 -
      0.113297490886653624e0 * wr_5_0 - 0.106625745260009982e-1 * wr_7_0 -
      0.290946817628897850e0 * wr_9_0 + 0.207608283486959025e0 * wr_11_0 +
      0.213834451527711455e0 * wr_9_8 + 0.289604732245774950e0 * wr_11_8;
  results[k++] =
      -0.137252703261503257e0 * wr_1_0 - 0.233848155884120235e0 * wr_3_0 +
      0.118922587072760161e-1 * wr_5_0 + 0.277560599547315317e0 * wr_7_0 +
      0.106116010890595130e0 * wr_9_0 - 0.150244224253414200e0 * wr_11_0;
  results[k++] =
      -0.412427796549909479e0 * wr_5_4 - 0.392529964260220865e0 * wr_7_4 -
      0.170573989802047944e0 * wr_9_4 + 0.521822888824248365e-1 * wr_11_4;
  results[k++] =
      0.184176871336735284e0 * wr_11_8 - 0.339975109876292733e0 * wr_9_8;
  results[k++] =
      -0.512393762570313114e-2 * wr_11_4 + 0.772153086251639522e-1 * wr_5_4 -
      0.761993177222012686e-1 * wr_7_4 + 0.319351008253315835e-1 * wr_9_4;
  results[k++] =
      0.163274786233719969e-1 * wr_11_4 - 0.246047355192274078e0 * wr_5_4 +
      0.242809889992375735e0 * wr_7_4 - 0.101761519001566525e0 * wr_9_4;
  results[k++] =
      0.338836161583587483e0 * wr_11_8 - 0.625463232317731655e0 * wr_9_8;
  results[k++] =
      -0.259831061119592071e-1 * wr_11_4 + 0.391553079688397026e0 * wr_5_4 -
      0.386401065481970749e0 * wr_7_4 + 0.161940518026278894e0 * wr_9_4;
  results[k++] =
      0.218185110709048057e-1 * wr_11_4 - 0.135984549736267209e0 * wr_9_4 -
      0.328794608589772851e0 * wr_5_4 + 0.324468363739907418e0 * wr_7_4;
  results[k++] =
      0.105748696407503137e0 * wr_11_8 - 0.195203254455787657e0 * wr_9_8;
  results[k++] =
      0.117889402222430698e-1 * wr_5_0 + 0.537980964906407236e-1 * wr_7_0 +
      0.174915750982359559e0 * wr_9_0 + 0.690306796125133602e0 * wr_11_0;
  results[k++] =
      0.866306644580053185e-2 * wr_5_4 - 0.156733110039154359e0 * wr_7_4 +
      0.512356868891187786e0 * wr_9_4 - 0.411034343160202744e0 * wr_11_4;
  results[k++] =
      0.950837101097774658e-1 * wr_5_4 - 0.408625876426781342e0 * wr_7_4 +
      0.418623153912493390e-1 * wr_9_4 + 0.436588352009783589e0 * wr_11_4;
  results[k++] =
      -0.735310952921912632e-1 * wr_3_0 - 0.151819468836450555e0 * wr_5_0 -
      0.224941141719444075e0 * wr_7_0 - 0.272290766172153268e0 * wr_9_0 -
      0.253995958793824166e0 * wr_11_0;
  results[k++] =
      0.366081373283208373e0 * wr_5_4 - 0.286121494381876018e0 * wr_7_4 -
      0.333092759755975456e0 * wr_9_4 - 0.463183231948515314e-1 * wr_11_4;
  results[k++] =
      0.553329953337630502e0 * wr_5_4 + 0.127007021453228054e0 * wr_7_4 -
      0.762830072781470198e-1 * wr_9_4 - 0.700098870975800788e-1 * wr_11_4;
  results[k++] =
      0.859337848847319453e0 * wr_1_0 + 0.454382393063464796e0 * wr_3_0 +
      0.304598114391895553e0 * wr_5_0 + 0.200207860794643355e0 * wr_7_0 +
      0.115882206765164021e0 * wr_9_0 + 0.475623523941875834e-1 * wr_11_0;
  results[k++] = 0.883167486831251747e-2 * wr_5_4 -
                 0.177795559848923049e-1 * wr_7_4 +
                 0.746642871716800209e0 * wr_11_4;
  results[k++] =
      0.454295037032077222e-1 * wr_5_0 - 0.191958072697707880e0 * wr_7_0 +
      0.224683350304028207e0 * wr_9_0 - 0.806104667896410311e-1 * wr_11_0 +
      0.212314388068272362e0 * wr_9_8 - 0.575092096424595584e0 * wr_11_8;
  results[k++] =
      -0.389515141186025620e-1 * wr_3_0 + 0.176930806658029562e0 * wr_5_0 +
      0.556069384968437418e-1 * wr_7_0 - 0.348798954496225438e0 * wr_9_0 +
      0.171244040485015558e0 * wr_11_0 + 0.364291806583227409e0 * wr_9_8;
  results[k++] =
      0.250217946377397308e0 * wr_5_4 + 0.336716734060492789e0 * wr_7_4 +
      0.338682807350078000e0 * wr_9_4 + 0.137362309876423155e0 * wr_11_4;
  results[k++] =
      -0.272740080131667178e0 * wr_3_0 - 0.511932511266278751e-1 * wr_5_0 +
      0.272553425541522232e0 * wr_7_0 + 0.129377027994710384e0 * wr_9_0 -
      0.151828736019071952e0 * wr_11_0 + 0.295777596290079859e0 * wr_9_8 +
      0.138869009186854077e0 * wr_11_8;
  results[k++] =
      0.744208407535250738e0 * wr_1_0 - 0.106184346384611943e0 * wr_3_0 -
      0.322409639454491083e0 * wr_5_0 - 0.131772671048979769e0 * wr_7_0 +
      0.764624265944632221e-1 * wr_9_0 + 0.496897716384233154e-1 * wr_11_0 +
      0.993480414754633213e-1 * wr_9_8 + 0.466443850291537277e-1 * wr_11_8;
  results[k++] =
      -0.106488399170054678e0 * wr_5_4 - 0.186354698547595687e0 * wr_7_4 -
      0.161487387550985332e0 * wr_9_4 - 0.698167560066127417e-1 * wr_11_4;
  results[k++] =
      -0.366743931388581237e-1 * wr_6_0 - 0.724412105107369887e0 * wr_2_0 +
      0.107930665941152626e-2 * wr_8_0 + wr_0_0 +
      0.249205340114431024e0 * wr_4_0 + 0.122443047467769193e0 * wr_8_8;
  results[k++] = -0.347923842369730598e0 * wr_6_4 +
                 0.352429571805628265e0 * wr_4_4 +
                 0.339595912283933077e-1 * wr_8_4;
  results[k++] =
      -0.275195443150643465e0 * wr_2_0 - 0.170668968756748330e0 * wr_6_0 +
      0.229608744124142517e-1 * wr_8_0 + 0.378680441835703190e0 * wr_4_0 -
      0.289424430342015779e0 * wr_8_8;
  results[k++] =
      -0.257293151237737600e-1 * wr_2_0 + 0.184103992420068937e0 * wr_4_0 -
      0.244042788488305946e0 * wr_6_0 + 0.102816591484539504e0 * wr_8_0 -
      0.846562319234024725e-2 * wr_10_0 + 0.259202963141782983e0 * wr_8_8 -
      0.263986312175710468e0 * wr_10_8;
  results[k++] =
      0.482252561070411517e0 * wr_8_4 + 0.388125294918528427e-1 * wr_4_4 -
      0.345128621279510902e0 * wr_6_4 - 0.978014606644323202e-1 * wr_10_4;
  results[k++] =
      0.320459838808100699e-1 * wr_4_0 - 0.135933456535239046e0 * wr_6_0 +
      0.157491194800950571e0 * wr_8_0 - 0.557275541795665635e-1 * wr_10_0 -
      0.108283330995848359e0 * wr_8_8 + 0.473937449897801358e0 * wr_10_8;
  results[k++] =
      -0.210619610851333599e-1 * wr_6_4 + 0.199704541723231467e-1 * wr_8_4 +
      0.744538204639984670e-2 * wr_4_4 + 0.141741247339756986e-2 * wr_12_4 -
      0.855702616338654467e-2 * wr_10_4 + 0.121556735082245287e1 * wr_12_12;
  results[k++] =
      0.227405268193560656e0 * wr_12_4 + 0.123230685715601383e0 * wr_8_4 -
      0.320334648829469932e0 * wr_10_4 - 0.118150902721324160e-1 * wr_6_4 +
      0.928138337832605857e-4 * wr_4_4;
  results[k++] =
      0.146015955156716151e-2 * wr_4_0 + 0.315354367224047376e-1 * wr_12_0 -
      0.277088428080731886e-1 * wr_6_0 + 0.871372535197699548e-1 * wr_8_0 -
      0.919631528161244229e-1 * wr_10_0 + 0.199704541723231467e-1 * wr_8_8 -
      0.260701567186410543e0 * wr_10_8 + 0.503071616516006407e0 * wr_12_8;
  results[k++] = -0.347923842369730598e0 * wr_6_4 +
                 0.352429571805628265e0 * wr_4_4 +
                 0.339595912283933077e-1 * wr_8_4;
  results[k++] = wr_0_0 + 0.517437217933835632e0 * wr_2_0 +
                 0.320406865861411316e0 * wr_4_0 +
                 0.183371965694290619e0 * wr_6_0 +
                 0.755514661588068387e-1 * wr_8_0;
  results[k++] = -0.771003810262057643e-1 * wr_6_4 +
                 0.321087576606182620e0 * wr_8_4 -
                 0.535535016649487424e0 * wr_4_4;
  results[k++] =
      0.260362362967494979e0 * wr_4_4 + 0.297829864356451979e0 * wr_8_4 -
      0.218690714344442417e0 * wr_10_4 + 0.352791340873950547e0 * wr_6_4;
  results[k++] =
      -0.575324976312715429e-1 * wr_2_0 - 0.218278505791382094e0 * wr_6_0 -
      0.275885865329107619e0 * wr_8_0 - 0.265015925019601977e0 * wr_10_0 -
      0.137223013993460053e0 * wr_4_0;
  results[k++] =
      -0.453198650238311904e-1 * wr_4_4 - 0.614084761244079749e-1 * wr_6_4 -
      0.214517089111851855e0 * wr_8_4 - 0.523490371494445833e0 * wr_10_4;
  results[k++] = 0.139526962198385986e0 * wr_12_8 -
                 0.309881165302557176e0 * wr_10_8 +
                 0.144008993025229737e0 * wr_8_8;
  results[k++] =
      0.459405038792452447e-2 * wr_4_0 + 0.224175576122622460e-1 * wr_6_0 +
      0.704975092061442728e-1 * wr_8_0 + 0.194861998509568343e0 * wr_10_0 +
      0.701619174331797080e0 * wr_12_0;
  results[k++] =
      0.206497744105489646e-2 * wr_4_4 - 0.242006531755383442e-1 * wr_6_4 -
      0.664656890885675707e-1 * wr_8_4 - 0.617055931951541659e-1 * wr_10_4 +
      0.715477469184404611e0 * wr_12_4;
  results[k++] =
      -0.275195443150643465e0 * wr_2_0 - 0.170668968756748330e0 * wr_6_0 +
      0.229608744124142517e-1 * wr_8_0 + 0.378680441835703190e0 * wr_4_0 -
      0.289424430342015779e0 * wr_8_8;
  results[k++] = -0.771003810262057643e-1 * wr_6_4 +
                 0.321087576606182620e0 * wr_8_4 -
                 0.535535016649487424e0 * wr_4_4;
  results[k++] =
      -0.711914690342540050e-1 * wr_6_0 - 0.272080998660813571e0 * wr_2_0 -
      0.116930281741124758e-1 * wr_10_0 + 0.102388061066129525e0 * wr_8_0 +
      wr_0_0 - 0.167832167832167832e0 * wr_4_0 +
      0.374694137739714749e0 * wr_8_8 + 0.364627543149285290e0 * wr_10_8;
  results[k++] =
      -0.325489884111300461e-1 * wr_8_0 - 0.308432117976641271e0 * wr_2_0 +
      0.553682892784229187e-1 * wr_4_0 + 0.252374280066454258e0 * wr_6_0 -
      0.550291348236005358e-1 * wr_10_0 + 0.492340435815814845e-1 * wr_8_8 -
      0.155999237195677589e0 * wr_10_8;
  results[k++] =
      0.245125865973656068e0 * wr_4_4 - 0.346766916841947764e0 * wr_10_4 -
      0.305336576419749078e-1 * wr_8_4 - 0.356911129664125467e0 * wr_6_4;
  results[k++] =
      0.151815491136759440e0 * wr_4_0 + 0.360873963323444194e-1 * wr_12_0 -
      0.362955087404294705e-1 * wr_2_0 + 0.887836754301999772e-1 * wr_6_0 -
      0.293706049531269850e0 * wr_8_0 + 0.733523596854315550e-1 * wr_10_0 -
      0.246813207972113432e0 * wr_8_8 + 0.505806801114225681e-1 * wr_10_8 -
      0.575687122032725455e0 * wr_12_8;
  results[k++] =
      0.112016598604741903e0 * wr_6_4 - 0.106211493788891442e0 * wr_8_4 -
      0.395977548709464218e-1 * wr_4_4 - 0.753841123569451663e-2 * wr_12_4 +
      0.455099580290709655e-1 * wr_10_4 + 0.718323529448967401e0 * wr_12_12;
  results[k++] =
      0.312920431883014103e0 * wr_10_4 - 0.537528602602116655e0 * wr_12_4 -
      0.104729581696488986e0 * wr_6_4 + 0.218464656128897198e0 * wr_8_4 +
      0.444261620732208968e-2 * wr_4_4;
  results[k++] =
      -0.121130433669402346e0 * wr_12_0 + 0.289467189824170700e0 * wr_10_0 -
      0.154477839798330460e0 * wr_8_0 - 0.491225280508927330e-1 * wr_6_0 +
      0.310630345817568538e-1 * wr_4_0 + 0.106211493788891442e0 * wr_8_8 -
      0.311260364830310637e0 * wr_10_8 - 0.445925327251764519e0 * wr_12_8;
  results[k++] =
      -0.257293151237737600e-1 * wr_2_0 + 0.184103992420068937e0 * wr_4_0 -
      0.244042788488305946e0 * wr_6_0 + 0.102816591484539504e0 * wr_8_0 -
      0.846562319234024725e-2 * wr_10_0 + 0.259202963141782983e0 * wr_8_8 -
      0.263986312175710468e0 * wr_10_8;
  results[k++] =
      0.260362362967494979e0 * wr_4_4 + 0.297829864356451979e0 * wr_8_4 -
      0.218690714344442417e0 * wr_10_4 + 0.352791340873950547e0 * wr_6_4;
  results[k++] =
      -0.325489884111300461e-1 * wr_8_0 - 0.308432117976641271e0 * wr_2_0 +
      0.553682892784229187e-1 * wr_4_0 + 0.252374280066454258e0 * wr_6_0 -
      0.550291348236005358e-1 * wr_10_0 + 0.492340435815814845e-1 * wr_8_8 -
      0.155999237195677589e0 * wr_10_8;
  results[k++] =
      0.110704437493457185e-1 * wr_6_0 - 0.643100542289195716e-1 * wr_2_0 +
      0.109711107824933577e0 * wr_10_0 - 0.248141991314436240e0 * wr_8_0 +
      wr_0_0 - 0.186679630529897910e0 * wr_4_0 +
      0.368563352114301098e-1 * wr_12_0 - 0.316300246143915048e0 * wr_8_8 -
      0.206093828736552555e0 * wr_10_8 + 0.587953681976346444e0 * wr_12_8;
  results[k++] =
      0.274625519566732658e0 * wr_8_4 + 0.258270611039517612e0 * wr_4_4 +
      0.156559716918131715e-1 * wr_6_4 + 0.229060484063401984e0 * wr_10_4 +
      0.373959232176244015e0 * wr_12_4;
  results[k++] =
      0.747956970186373110e-1 * wr_8_0 + 0.136543292841788624e0 * wr_10_0 -
      0.271746488194702979e0 * wr_2_0 - 0.121853667162473256e0 * wr_4_0 +
      0.209654567466092292e0 * wr_6_0 - 0.143365241126431234e0 * wr_12_0 -
      0.142849736025817352e0 * wr_8_8 + 0.910775274216025392e-1 * wr_10_8 +
      0.175926589019774422e0 * wr_12_8;
  results[k++] =
      -0.272296912410871365e0 * wr_6_4 + 0.258185502697787597e0 * wr_8_4 +
      0.962566844919786096e-1 * wr_4_4 + 0.183248387250721587e-1 * wr_12_4 -
      0.110628435514196905e0 * wr_10_4 + 0.349229099289492979e0 * wr_12_12;
  results[k++] =
      0.539969384603814841e-1 * wr_4_4 - 0.106211493788891442e0 * wr_8_4 +
      0.352797645830503377e0 * wr_12_4 + 0.292564015901170493e0 * wr_10_4 -
      0.302105371994606951e0 * wr_6_4;
  results[k++] =
      -0.306099188720687424e0 * wr_10_0 - 0.300705606619552874e-1 * wr_2_0 -
      0.751028674980780125e-1 * wr_8_0 + 0.782067399099557405e-1 * wr_4_0 +
      0.167174133463748922e0 * wr_6_0 + 0.188448889171090995e0 * wr_12_0 +
      0.258185502697787597e0 * wr_8_8 - 0.529112620376423955e-1 * wr_10_8 -
      0.173437281672750568e0 * wr_12_8;
  results[k++] =
      0.482252561070411517e0 * wr_8_4 + 0.388125294918528427e-1 * wr_4_4 -
      0.345128621279510902e0 * wr_6_4 - 0.978014606644323202e-1 * wr_10_4;
  results[k++] =
      -0.575324976312715429e-1 * wr_2_0 - 0.218278505791382094e0 * wr_6_0 -
      0.275885865329107619e0 * wr_8_0 - 0.265015925019601977e0 * wr_10_0 -
      0.137223013993460053e0 * wr_4_0;
  results[k++] =
      0.245125865973656068e0 * wr_4_4 - 0.346766916841947764e0 * wr_10_4 -
      0.305336576419749078e-1 * wr_8_4 - 0.356911129664125467e0 * wr_6_4;
  results[k++] =
      0.274625519566732658e0 * wr_8_4 + 0.258270611039517612e0 * wr_4_4 +
      0.156559716918131715e-1 * wr_6_4 + 0.229060484063401984e0 * wr_10_4 +
      0.373959232176244015e0 * wr_12_4;
  results[k++] =
      -0.553522187467285924e-1 * wr_6_0 + 0.450170379602437001e0 * wr_2_0 -
      0.166549392601706394e0 * wr_10_0 - 0.195167858337197043e0 * wr_8_0 +
      wr_0_0 + 0.163344676713660671e0 * wr_4_0 +
      0.515988692960021537e0 * wr_12_0;
  results[k++] =
      -0.539469181268475368e0 * wr_4_4 - 0.296496332724012776e0 * wr_6_4 -
      0.496113214634820856e-1 * wr_8_4 - 0.717024669840402991e-1 * wr_10_4 -
      0.671373009466421304e0 * wr_12_4;
  results[k++] = 0.268903090001917558e0 * wr_12_8 -
                 0.597217925269332232e0 * wr_10_8 +
                 0.277541075949812552e0 * wr_8_8;
  results[k++] =
      -0.423108708278356073e-1 * wr_2_0 - 0.102451987326450678e0 * wr_4_0 -
      0.168016325864258153e0 * wr_6_0 - 0.226443665609911238e0 * wr_8_0 -
      0.259994381829181291e0 * wr_10_0 - 0.234380346577416619e0 * wr_12_0;
  results[k++] =
      0.179087584700996167e0 * wr_4_4 + 0.236419926822403603e0 * wr_6_4 +
      0.362646742549887654e0 * wr_10_4 + 0.165468321757238447e0 * wr_12_4 +
      0.341589016553615450e0 * wr_8_4;
  results[k++] =
      0.320459838808100699e-1 * wr_4_0 - 0.135933456535239046e0 * wr_6_0 +
      0.157491194800950571e0 * wr_8_0 - 0.557275541795665635e-1 * wr_10_0 -
      0.108283330995848359e0 * wr_8_8 + 0.473937449897801358e0 * wr_10_8;
  results[k++] =
      -0.453198650238311904e-1 * wr_4_4 - 0.614084761244079749e-1 * wr_6_4 -
      0.214517089111851855e0 * wr_8_4 - 0.523490371494445833e0 * wr_10_4;
  results[k++] =
      0.151815491136759440e0 * wr_4_0 + 0.360873963323444194e-1 * wr_12_0 -
      0.362955087404294705e-1 * wr_2_0 + 0.887836754301999772e-1 * wr_6_0 -
      0.293706049531269850e0 * wr_8_0 + 0.733523596854315550e-1 * wr_10_0 -
      0.246813207972113432e0 * wr_8_8 + 0.505806801114225681e-1 * wr_10_8 -
      0.575687122032725455e0 * wr_12_8;
  results[k++] =
      0.747956970186373110e-1 * wr_8_0 + 0.136543292841788624e0 * wr_10_0 -
      0.271746488194702979e0 * wr_2_0 - 0.121853667162473256e0 * wr_4_0 +
      0.209654567466092292e0 * wr_6_0 - 0.143365241126431234e0 * wr_12_0 -
      0.142849736025817352e0 * wr_8_8 + 0.910775274216025392e-1 * wr_10_8 +
      0.175926589019774422e0 * wr_12_8;
  results[k++] =
      -0.539469181268475368e0 * wr_4_4 - 0.296496332724012776e0 * wr_6_4 -
      0.496113214634820856e-1 * wr_8_4 - 0.717024669840402991e-1 * wr_10_4 -
      0.671373009466421304e0 * wr_12_4;
  results[k++] =
      -0.343467613761751778e-1 * wr_6_0 + 0.688020916153781445e-1 * wr_2_0 -
      0.271705303364029197e0 * wr_10_0 - 0.550579715597227833e-1 * wr_8_0 +
      wr_0_0 - 0.217194570135746606e0 * wr_4_0 +
      0.218739303501721055e0 * wr_12_0 + 0.198920632969925783e0 * wr_8_8 +
      0.294872708807682887e0 * wr_10_8 + 0.300658132828813522e0 * wr_12_8;
  results[k++] =
      0.379177978759005898e0 * wr_6_4 - 0.359527606064461601e0 * wr_8_4 -
      0.134039033878720582e0 * wr_4_4 - 0.255176426619672830e-1 * wr_12_4 +
      0.154051936175643000e0 * wr_10_4 + 0.132629271368115032e0 * wr_12_12;
  results[k++] =
      0.275702660790813134e0 * wr_4_4 - 0.280772957455232834e0 * wr_6_4 -
      0.379165077513623792e0 * wr_8_4 - 0.196155679491734382e0 * wr_10_4 +
      0.297743387122492970e-1 * wr_12_4;
  results[k++] =
      0.931171043642606224e-1 * wr_6_0 + 0.268110197499006310e0 * wr_8_0 +
      0.563132798614370314e-1 * wr_10_0 - 0.197948663722157405e0 * wr_2_0 -
      0.187765837728219952e0 * wr_4_0 - 0.138664168855061077e0 * wr_12_0 +
      0.359527606064461601e0 * wr_8_8 + 0.159639593290558322e0 * wr_10_8 +
      0.603785747365532263e-1 * wr_12_8;
  results[k++] =
      -0.210619610851333599e-1 * wr_6_4 + 0.199704541723231467e-1 * wr_8_4 +
      0.744538204639984670e-2 * wr_4_4 + 0.141741247339756986e-2 * wr_12_4 -
      0.855702616338654467e-2 * wr_10_4 + 0.121556735082245287e1 * wr_12_12;
  results[k++] = 0.139526962198385986e0 * wr_12_8 -
                 0.309881165302557176e0 * wr_10_8 +
                 0.144008993025229737e0 * wr_8_8;
  results[k++] =
      0.112016598604741903e0 * wr_6_4 - 0.106211493788891442e0 * wr_8_4 -
      0.395977548709464218e-1 * wr_4_4 - 0.753841123569451663e-2 * wr_12_4 +
      0.455099580290709655e-1 * wr_10_4 + 0.718323529448967401e0 * wr_12_12;
  results[k++] =
      -0.272296912410871365e0 * wr_6_4 + 0.258185502697787597e0 * wr_8_4 +
      0.962566844919786096e-1 * wr_4_4 + 0.183248387250721587e-1 * wr_12_4 -
      0.110628435514196905e0 * wr_10_4 + 0.349229099289492979e0 * wr_12_12;
  results[k++] = 0.268903090001917558e0 * wr_12_8 -
                 0.597217925269332232e0 * wr_10_8 +
                 0.277541075949812552e0 * wr_8_8;
  results[k++] =
      0.379177978759005898e0 * wr_6_4 - 0.359527606064461601e0 * wr_8_4 -
      0.134039033878720582e0 * wr_4_4 - 0.255176426619672830e-1 * wr_12_4 +
      0.154051936175643000e0 * wr_10_4 + 0.132629271368115032e0 * wr_12_12;
  results[k++] =
      wr_0_0 - 0.894427190999915880e0 * wr_2_0 +
      0.529411764705882353e0 * wr_4_0 - 0.223253948945138656e0 * wr_6_0 +
      0.638251644832455195e-1 * wr_8_0 - 0.111032928401137596e-1 * wr_10_0 +
      0.888410284022075649e-3 * wr_12_0;
  results[k++] = 0.874531517408459892e-1 * wr_12_8 -
                 0.194228299275250753e0 * wr_10_8 +
                 0.902624132328993884e-1 * wr_8_8;
  results[k++] =
      -0.293709999396443901e0 * wr_6_4 + 0.278488886157896097e0 * wr_8_4 +
      0.103826189190803311e0 * wr_4_4 + 0.197658810128542370e-1 * wr_12_4 -
      0.119328116651854649e0 * wr_10_4 + 0.342447306152222471e-1 * wr_12_12;
  results[k++] =
      0.227405268193560656e0 * wr_12_4 + 0.123230685715601383e0 * wr_8_4 -
      0.320334648829469932e0 * wr_10_4 - 0.118150902721324160e-1 * wr_6_4 +
      0.928138337832605857e-4 * wr_4_4;
  results[k++] =
      0.459405038792452447e-2 * wr_4_0 + 0.224175576122622460e-1 * wr_6_0 +
      0.704975092061442728e-1 * wr_8_0 + 0.194861998509568343e0 * wr_10_0 +
      0.701619174331797080e0 * wr_12_0;
  results[k++] =
      0.312920431883014103e0 * wr_10_4 - 0.537528602602116655e0 * wr_12_4 -
      0.104729581696488986e0 * wr_6_4 + 0.218464656128897198e0 * wr_8_4 +
      0.444261620732208968e-2 * wr_4_4;
  results[k++] =
      0.539969384603814841e-1 * wr_4_4 - 0.106211493788891442e0 * wr_8_4 +
      0.352797645830503377e0 * wr_12_4 + 0.292564015901170493e0 * wr_10_4 -
      0.302105371994606951e0 * wr_6_4;
  results[k++] =
      -0.423108708278356073e-1 * wr_2_0 - 0.102451987326450678e0 * wr_4_0 -
      0.168016325864258153e0 * wr_6_0 - 0.226443665609911238e0 * wr_8_0 -
      0.259994381829181291e0 * wr_10_0 - 0.234380346577416619e0 * wr_12_0;
  results[k++] =
      0.275702660790813134e0 * wr_4_4 - 0.280772957455232834e0 * wr_6_4 -
      0.379165077513623792e0 * wr_8_4 - 0.196155679491734382e0 * wr_10_4 +
      0.297743387122492970e-1 * wr_12_4;
  results[k++] = 0.874531517408459892e-1 * wr_12_8 -
                 0.194228299275250753e0 * wr_10_8 +
                 0.902624132328993884e-1 * wr_8_8;
  results[k++] =
      0.257600710321313834e0 * wr_6_0 + 0.171836981301045629e0 * wr_8_0 +
      0.536656314599949528e0 * wr_2_0 + 0.999296355610238366e-1 * wr_10_0 +
      wr_0_0 + 0.366515837104072398e0 * wr_4_0 +
      0.410445551218198950e-1 * wr_12_0;
  results[k++] =
      0.640675088248735109e0 * wr_4_4 - 0.867907819547109505e-1 * wr_8_4 -
      0.124315802171261510e0 * wr_10_4 - 0.615016095876695011e-1 * wr_12_4 +
      0.120825443143280040e0 * wr_6_4;
  results[k++] =
      0.146015955156716151e-2 * wr_4_0 + 0.315354367224047376e-1 * wr_12_0 -
      0.277088428080731886e-1 * wr_6_0 + 0.871372535197699548e-1 * wr_8_0 -
      0.919631528161244229e-1 * wr_10_0 + 0.199704541723231467e-1 * wr_8_8 -
      0.260701567186410543e0 * wr_10_8 + 0.503071616516006407e0 * wr_12_8;
  results[k++] =
      0.206497744105489646e-2 * wr_4_4 - 0.242006531755383442e-1 * wr_6_4 -
      0.664656890885675707e-1 * wr_8_4 - 0.617055931951541659e-1 * wr_10_4 +
      0.715477469184404611e0 * wr_12_4;
  results[k++] =
      -0.121130433669402346e0 * wr_12_0 + 0.289467189824170700e0 * wr_10_0 -
      0.154477839798330460e0 * wr_8_0 - 0.491225280508927330e-1 * wr_6_0 +
      0.310630345817568538e-1 * wr_4_0 + 0.106211493788891442e0 * wr_8_8 -
      0.311260364830310637e0 * wr_10_8 - 0.445925327251764519e0 * wr_12_8;
  results[k++] =
      -0.306099188720687424e0 * wr_10_0 - 0.300705606619552874e-1 * wr_2_0 -
      0.751028674980780125e-1 * wr_8_0 + 0.782067399099557405e-1 * wr_4_0 +
      0.167174133463748922e0 * wr_6_0 + 0.188448889171090995e0 * wr_12_0 +
      0.258185502697787597e0 * wr_8_8 - 0.529112620376423955e-1 * wr_10_8 -
      0.173437281672750568e0 * wr_12_8;
  results[k++] =
      0.179087584700996167e0 * wr_4_4 + 0.236419926822403603e0 * wr_6_4 +
      0.362646742549887654e0 * wr_10_4 + 0.165468321757238447e0 * wr_12_4 +
      0.341589016553615450e0 * wr_8_4;
  results[k++] =
      0.931171043642606224e-1 * wr_6_0 + 0.268110197499006310e0 * wr_8_0 +
      0.563132798614370314e-1 * wr_10_0 - 0.197948663722157405e0 * wr_2_0 -
      0.187765837728219952e0 * wr_4_0 - 0.138664168855061077e0 * wr_12_0 +
      0.359527606064461601e0 * wr_8_8 + 0.159639593290558322e0 * wr_10_8 +
      0.603785747365532263e-1 * wr_12_8;
  results[k++] =
      -0.293709999396443901e0 * wr_6_4 + 0.278488886157896097e0 * wr_8_4 +
      0.103826189190803311e0 * wr_4_4 + 0.197658810128542370e-1 * wr_12_4 -
      0.119328116651854649e0 * wr_10_4 + 0.342447306152222471e-1 * wr_12_12;
  results[k++] =
      0.640675088248735109e0 * wr_4_4 - 0.867907819547109505e-1 * wr_8_4 -
      0.124315802171261510e0 * wr_10_4 - 0.615016095876695011e-1 * wr_12_4 +
      0.120825443143280040e0 * wr_6_4;
  results[k++] =
      -0.274774091009401422e0 * wr_6_0 + 0.178885438199983176e0 * wr_2_0 +
      0.848608809922980196e-1 * wr_10_0 - 0.613703504646591534e-1 * wr_8_0 +
      wr_0_0 - 0.244343891402714932e0 * wr_4_0 +
      0.375797550141338000e-1 * wr_12_0 + 0.278488886157896097e0 * wr_8_8 +
      0.123656297241931533e0 * wr_10_8 + 0.467690428844821034e-1 * wr_12_8;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 4)
void BoxMatrix::setup___oa_4_A2(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 3, 1));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 4, 1));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 5, 1));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 2));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 4)
void BoxMatrix::evaluate___oa_4_A2(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 1)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] =
      0.226778683805536336e0 * wr_3_0 - 0.346410161513775458e0 * wr_1_0;
  results[k++] =
      -0.453557367611072674e0 * wr_3_0 + 0.692820323027550916e0 * wr_1_0;
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0;
  results[k++] =
      -0.383325938999963950e0 * wr_2_0 + 0.285714285714285714e0 * wr_4_0;
  results[k++] = -0.106904496764969754e1 * wr_4_4;
  results[k++] =
      -0.383325938999963950e0 * wr_2_0 + 0.285714285714285714e0 * wr_4_0;
  results[k++] = wr_0_0 + 0.127775312999987983e0 * wr_2_0 -
                 0.428571428571428571e0 * wr_4_0;
  results[k++] = -0.534522483824848769e0 * wr_4_4;
  results[k++] = -0.106904496764969754e1 * wr_4_4;
  results[k++] = -0.534522483824848769e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.638876564999939914e0 * wr_2_0 +
                 0.142857142857142857e0 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] =
      -0.383325938999963950e0 * wr_2_0 + 0.285714285714285714e0 * wr_4_0;
  results[k++] = 0.894427190999915880e0 * wr_4_4;
  results[k++] =
      0.606091526731326449e0 * wr_2_0 - 0.451753951452625620e0 * wr_4_0;
  results[k++] = 0.730296743340221485e0 * wr_4_4;
  results[k++] =
      -0.453557367611072674e0 * wr_3_0 + 0.692820323027550916e0 * wr_1_0;
  results[k++] = -0.148461497791618053e0 * wr_1_0 -
                 0.352766841475278744e0 * wr_3_0 +
                 0.358942076878290027e0 * wr_5_0;
  results[k++] = -0.805822964025380299e0 * wr_5_4;
  results[k++] = 0.269679944985296835e0 * wr_5_4;
  results[k++] = 0.809039834955890505e0 * wr_5_4;
  results[k++] = -0.414039335605412531e0 * wr_1_0 -
                 0.120124995026074528e0 * wr_5_0 +
                 0.421637021355783911e0 * wr_3_0;
  results[k++] =
      -0.398409536444797881e0 * wr_3_0 + 0.317820863081864106e0 * wr_5_0;
  results[k++] =
      0.782460796435951591e0 * wr_1_0 - 0.408626823962396707e0 * wr_5_0;
  results[k++] = -0.509647191437625545e0 * wr_5_4;
  results[k++] = -0.880771012101088484e0 * wr_5_4;
  results[k++] = 0.110096376512636061e0 * wr_5_4;
  results[k++] = 0.507092552837109947e0 * wr_1_0 +
                 0.147122471584124921e0 * wr_5_0 -
                 0.516397779494322249e0 * wr_3_0;
  results[k++] = wr_0_0 + 0.127775312999987983e0 * wr_2_0 -
                 0.428571428571428571e0 * wr_4_0;
  results[k++] =
      0.650492502545393367e0 * wr_4_4 + 0.252136452829649601e0 * wr_6_4;
  results[k++] = -0.202030508910442150e0 * wr_2_0 -
                 0.328548328329182269e0 * wr_4_0 +
                 0.398662736048649643e0 * wr_6_0;
  results[k++] =
      -0.298757758639181518e0 * wr_4_4 - 0.823474206650615090e0 * wr_6_4;
  results[k++] =
      0.650492502545393367e0 * wr_4_4 + 0.252136452829649601e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0 -
                 0.909090909090909091e-1 * wr_4_0 +
                 0.756409358488948801e-1 * wr_6_0;
  results[k++] =
      -0.128564869306645005e0 * wr_4_4 + 0.717592924887569358e0 * wr_6_4;
  results[k++] = -0.365148371670110744e0 * wr_2_0 +
                 0.445361771415123290e0 * wr_4_0 -
                 0.144107986163857641e0 * wr_6_0;
  results[k++] = -0.202030508910442150e0 * wr_2_0 -
                 0.328548328329182269e0 * wr_4_0 +
                 0.398662736048649643e0 * wr_6_0;
  results[k++] =
      -0.128564869306645005e0 * wr_4_4 + 0.717592924887569358e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.319438282499969957e0 * wr_2_0 -
                 0.116883116883116883e0 * wr_4_0 -
                 0.378204679244474401e0 * wr_6_0;
  results[k++] =
      -0.629836657297773559e0 * wr_4_4 - 0.651013521854029892e-1 * wr_6_4;
  results[k++] =
      -0.298757758639181518e0 * wr_4_4 - 0.823474206650615090e0 * wr_6_4;
  results[k++] = -0.365148371670110744e0 * wr_2_0 +
                 0.445361771415123290e0 * wr_4_0 -
                 0.144107986163857641e0 * wr_6_0;
  results[k++] =
      -0.629836657297773559e0 * wr_4_4 - 0.651013521854029892e-1 * wr_6_4;
  results[k++] = wr_0_0 - 0.298142396999971959e0 * wr_2_0 -
                 0.272727272727272727e0 * wr_4_0 +
                 0.134472774842479787e0 * wr_6_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] =
      -0.398409536444797881e0 * wr_3_0 + 0.317820863081864106e0 * wr_5_0;
  results[k++] = -0.645390521792685387e0 * wr_5_4;
  results[k++] = 0.381385035698236927e0 * wr_5_4;
  results[k++] =
      0.563436169819011052e0 * wr_3_0 - 0.449466574975494725e0 * wr_5_0;
  results[k++] = 0.727272727272727273e0 * wr_5_4;
  results[k++] =
      0.606091526731326449e0 * wr_2_0 - 0.451753951452625620e0 * wr_4_0;
  results[k++] = -0.202030508910442150e0 * wr_2_0 -
                 0.328548328329182269e0 * wr_4_0 +
                 0.398662736048649643e0 * wr_6_0;
  results[k++] =
      0.307328819901278756e0 * wr_4_4 - 0.667090350641220733e0 * wr_6_4;
  results[k++] = 0.305788314862575327e0 * wr_4_4;
  results[k++] =
      -0.333587252577354902e0 * wr_4_4 - 0.603405925730058789e0 * wr_6_4;
  results[k++] = 0.182743471161951801e0 * wr_2_0 +
                 0.721208025474470581e-1 * wr_6_0 -
                 0.222887358524943659e0 * wr_4_0;
  results[k++] =
      -0.344975744745641383e0 * wr_4_4 + 0.356574791160334604e0 * wr_6_4;
  results[k++] =
      0.114991914915213794e0 * wr_4_4 + 0.534862186740501905e0 * wr_6_4;
  results[k++] = -0.377964473009227227e0 * wr_2_0 -
                 0.149165937116793999e0 * wr_6_0 +
                 0.460993229851918134e0 * wr_4_0;
  results[k++] =
      -0.406557814090870854e0 * wr_4_0 + 0.338276548879659426e0 * wr_6_0;
  results[k++] = 0.714285714285714286e0 * wr_2_0 -
                 0.580796877272672649e-1 * wr_4_0 -
                 0.394655973692935997e0 * wr_6_0;
  results[k++] =
      0.217314292606253389e0 * wr_4_4 - 0.471704110602518933e0 * wr_6_4;
  results[k++] = -0.747957592006765742e0 * wr_6_4;
  results[k++] =
      0.548202444686842949e0 * wr_4_4 + 0.305982651275495077e0 * wr_6_4;
  results[k++] = 0.360374985078223583e0 * wr_2_0 +
                 0.142224140630623609e0 * wr_6_0 -
                 0.439539798559298345e0 * wr_4_0;
  results[k++] =
      0.782460796435951591e0 * wr_1_0 - 0.408626823962396707e0 * wr_5_0;
  results[k++] =
      0.557601873545442674e0 * wr_5_4 + 0.229600771459888160e0 * wr_7_4;
  results[k++] =
      -0.824786098842322518e-1 * wr_1_0 - 0.240522846460417326e0 * wr_3_0 -
      0.281631475704504483e0 * wr_5_0 + 0.442368727189192137e0 * wr_7_0;
  results[k++] =
      -0.803435335180143866e-1 * wr_5_4 - 0.749872979501467609e0 * wr_7_4;
  results[k++] = -0.921986459703836267e-1 * wr_5_4;
  results[k++] =
      -0.434248118673447531e0 * wr_1_0 + 0.378259686833921635e0 * wr_3_0 -
      0.396466230429259329e-1 * wr_5_0 - 0.302475570949179908e-1 * wr_7_0;
  results[k++] =
      -0.168206376028798564e0 * wr_5_4 - 0.549474161694075308e0 * wr_7_4;
  results[k++] =
      -0.322329185610152119e-1 * wr_1_0 + 0.241706927741235184e0 * wr_3_0 -
      0.291341989438914795e0 * wr_5_0 + 0.987881077976668846e-1 * wr_7_0;
  results[k++] =
      0.264035793944933257e0 * wr_5_4 + 0.366716380479073968e0 * wr_7_4;
  results[k++] =
      0.489897948556635620e0 * wr_1_0 - 0.272120537219923010e0 * wr_3_0 -
      0.164000551042777257e0 * wr_5_0 + 0.107246374896116442e0 * wr_7_0;
  results[k++] =
      0.231931803521356633e0 * wr_5_4 + 0.556636328451255918e0 * wr_7_4;
  results[k++] =
      -0.266666666666666667e0 * wr_1_0 - 0.833195580901061817e-1 * wr_3_0 +
      0.401717667590071934e0 * wr_5_0 - 0.167835405304180019e0 * wr_7_0;
  results[k++] = -0.230496614925959067e0 * wr_3_0 -
                 0.311169167290727117e0 * wr_5_0 +
                 0.423928519335039896e0 * wr_7_0;
  results[k++] =
      -0.231931803521356633e0 * wr_5_4 + 0.649409049859798571e0 * wr_7_4;
  results[k++] =
      0.816496580927726033e0 * wr_1_0 + 0.194371812299945007e0 * wr_3_0 -
      0.164000551042777257e0 * wr_5_0 - 0.357487916320388141e0 * wr_7_0;
  results[k++] =
      -0.568114573750766458e0 * wr_5_4 - 0.132560067208512173e0 * wr_7_4;
  results[k++] =
      -0.335664335664335664e0 * wr_5_4 - 0.769230769230769231e0 * wr_7_4;
  results[k++] = -0.324320940005761710e0 * wr_3_0 +
                 0.437831492097860920e0 * wr_5_0 -
                 0.153383109443482011e0 * wr_7_0;
  results[k++] =
      -0.884553191655490724e-1 * wr_5_4 + 0.132682978748323609e0 * wr_7_4;
  results[k++] =
      0.635641726163728213e0 * wr_1_0 - 0.397210407956955894e0 * wr_3_0 -
      0.153209106994452060e0 * wr_5_0 + 0.118279185297518143e0 * wr_7_0;
  results[k++] = wr_0_0 + 0.319438282499969957e0 * wr_2_0 -
                 0.116883116883116883e0 * wr_4_0 -
                 0.378204679244474401e0 * wr_6_0;
  results[k++] =
      -0.395585818703368511e0 * wr_4_4 - 0.190813707894938520e0 * wr_6_4;
  results[k++] = 0.503496503496503497e0 * wr_4_4 +
                 0.338276548879659426e0 * wr_6_4 +
                 0.352191506244161543e0 * wr_8_4;
  results[k++] =
      -0.123205623123443351e0 * wr_2_0 - 0.254304137090067042e0 * wr_4_0 -
      0.249602353812234222e0 * wr_6_0 + 0.470121995635408841e0 * wr_8_0;
  results[k++] = -0.120016269974969663e0 * wr_4_4 -
                 0.258027227340690598e0 * wr_6_4 -
                 0.738763135998499606e0 * wr_8_4;
  results[k++] =
      -0.395585818703368511e0 * wr_4_4 - 0.190813707894938520e0 * wr_6_4;
  results[k++] =
      wr_0_0 - 0.466221493301609045e0 * wr_2_0 -
      0.563981473072382163e-1 * wr_4_0 + 0.518025803086370997e-1 * wr_6_0 +
      0.604411729270454708e-2 * wr_8_0 - 0.685681065819507482e0 * wr_8_8;
  results[k++] =
      -0.373479529990158988e0 * wr_2_0 + 0.365156140341570933e0 * wr_4_0 -
      0.170668968756748330e-1 * wr_6_0 - 0.482178362660699286e-1 * wr_8_0 -
      0.607791303718233137e0 * wr_8_8;
  results[k++] = 0.172136255351620958e0 * wr_4_4 -
                 0.539702667183440348e-1 * wr_6_4 -
                 0.505712933154737627e0 * wr_8_4;
  results[k++] =
      -0.374840799678572456e-1 * wr_2_0 + 0.261122039286750831e0 * wr_4_0 -
      0.325452953709368725e0 * wr_6_0 + 0.114934757535167643e0 * wr_8_0 -
      0.289753135082070384e0 * wr_8_8;
  results[k++] = 0.503496503496503497e0 * wr_4_4 +
                 0.338276548879659426e0 * wr_6_4 +
                 0.352191506244161543e0 * wr_8_4;
  results[k++] =
      -0.373479529990158988e0 * wr_2_0 + 0.365156140341570933e0 * wr_4_0 -
      0.170668968756748330e-1 * wr_6_0 - 0.482178362660699286e-1 * wr_8_0 -
      0.607791303718233137e0 * wr_8_8;
  results[k++] =
      wr_0_0 - 0.243934688454522513e0 * wr_2_0 -
      0.629370629370629371e-1 * wr_4_0 - 0.242050994716463617e0 * wr_6_0 +
      0.147217428343732182e0 * wr_8_0 - 0.538749408858184450e0 * wr_8_8;
  results[k++] = 0.890064479815234647e-1 * wr_4_4 +
                 0.191358113303351829e0 * wr_6_4 +
                 0.547881405151412029e0 * wr_8_4;
  results[k++] =
      -0.310110132880887905e0 * wr_2_0 + 0.600081349874848312e-1 * wr_4_0 +
      0.336563745221419604e0 * wr_6_0 - 0.169797956141966539e0 * wr_8_0 -
      0.256838703162228397e0 * wr_8_8;
  results[k++] =
      -0.123205623123443351e0 * wr_2_0 - 0.254304137090067042e0 * wr_4_0 -
      0.249602353812234222e0 * wr_6_0 + 0.470121995635408841e0 * wr_8_0;
  results[k++] = 0.172136255351620958e0 * wr_4_4 -
                 0.539702667183440348e-1 * wr_6_4 -
                 0.505712933154737627e0 * wr_8_4;
  results[k++] = 0.890064479815234647e-1 * wr_4_4 +
                 0.191358113303351829e0 * wr_6_4 +
                 0.547881405151412029e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.406557814090870854e0 * wr_2_0 +
                 0.629370629370629371e-1 * wr_4_0 -
                 0.201709162263719681e0 * wr_6_0 -
                 0.332426451098750089e0 * wr_8_0;
  results[k++] = -0.594050228464115406e0 * wr_4_4 -
                 0.273679203275047888e0 * wr_6_4 +
                 0.474894930141071556e-1 * wr_8_4;
  results[k++] = -0.120016269974969663e0 * wr_4_4 -
                 0.258027227340690598e0 * wr_6_4 -
                 0.738763135998499606e0 * wr_8_4;
  results[k++] =
      -0.374840799678572456e-1 * wr_2_0 + 0.261122039286750831e0 * wr_4_0 -
      0.325452953709368725e0 * wr_6_0 + 0.114934757535167643e0 * wr_8_0 -
      0.289753135082070384e0 * wr_8_8;
  results[k++] =
      -0.310110132880887905e0 * wr_2_0 + 0.600081349874848312e-1 * wr_4_0 +
      0.336563745221419604e0 * wr_6_0 - 0.169797956141966539e0 * wr_8_0 -
      0.256838703162228397e0 * wr_8_8;
  results[k++] = -0.594050228464115406e0 * wr_4_4 -
                 0.273679203275047888e0 * wr_6_4 +
                 0.474894930141071556e-1 * wr_8_4;
  results[k++] =
      wr_0_0 - 0.739196025619765190e-1 * wr_2_0 -
      0.366179275270184361e0 * wr_4_0 - 0.366743931388581237e-1 * wr_6_0 +
      0.960582926876258376e-1 * wr_8_0 - 0.122443047467769193e0 * wr_8_8;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] =
      0.804943404406496558e0 * wr_4_4 + 0.213944874696200762e0 * wr_6_4;
  results[k++] =
      -0.406557814090870854e0 * wr_4_0 + 0.338276548879659426e0 * wr_6_0;
  results[k++] =
      0.793916261518197083e0 * wr_4_4 - 0.681737488500919751e0 * wr_6_4;
  results[k++] =
      0.340150671524903763e0 * wr_4_4 + 0.904082105634267101e-1 * wr_6_4;
  results[k++] =
      0.537825434827237823e0 * wr_4_0 - 0.447497811350381995e0 * wr_6_0;
  results[k++] = 0.668074028728380817e0 * wr_6_4;
  results[k++] = -0.381385035698236927e0 * wr_5_4;
  results[k++] =
      0.616083519204844268e0 * wr_5_4 + 0.220029828287444381e0 * wr_7_4;
  results[k++] = -0.320459838808100699e-1 * wr_7_0 +
                 0.914751369247020209e-1 * wr_5_0 -
                 0.677596356818118090e-1 * wr_3_0;
  results[k++] =
      0.563436169819011052e0 * wr_3_0 - 0.449466574975494725e0 * wr_5_0;
  results[k++] = -0.230496614925959067e0 * wr_3_0 -
                 0.311169167290727117e0 * wr_5_0 +
                 0.423928519335039896e0 * wr_7_0;
  results[k++] =
      0.388096137776548475e0 * wr_5_4 - 0.582144206664822711e0 * wr_7_4;
  results[k++] = 0.202547873416733322e0 * wr_5_4;
  results[k++] =
      0.623224225897640991e-1 * wr_5_4 - 0.701127254134846115e0 * wr_7_4;
  results[k++] = 0.102114848969702256e0 * wr_7_0 -
                 0.291486441055797490e0 * wr_5_0 +
                 0.215916758543765240e0 * wr_3_0;
  results[k++] =
      -0.433904672936743237e0 * wr_5_4 + 0.409110120197500767e0 * wr_7_4;
  results[k++] =
      0.123972763696212354e0 * wr_5_4 + 0.297534632870909648e0 * wr_7_4;
  results[k++] = -0.162502797742968540e0 * wr_7_0 +
                 0.463863607042713265e0 * wr_5_0 -
                 0.343604066372024752e0 * wr_3_0;
  results[k++] =
      0.352505822688910769e0 * wr_7_0 - 0.411638116161159094e0 * wr_5_0;
  results[k++] = 0.677596356818118090e0 * wr_3_0 -
                 0.914751369247020209e-1 * wr_5_0 -
                 0.384551806569720839e0 * wr_7_0;
  results[k++] =
      0.293373104383259175e0 * wr_5_4 - 0.440059656574888762e0 * wr_7_4;
  results[k++] = -0.649598354352920121e0 * wr_7_4;
  results[k++] =
      0.624613802262423196e0 * wr_5_4 + 0.362276005312205452e0 * wr_7_4;
  results[k++] = 0.136456706766711374e0 * wr_7_0 -
                 0.389515141186025622e0 * wr_5_0 +
                 0.288530905190558834e0 * wr_3_0;
  results[k++] =
      0.114991914915213794e0 * wr_4_4 - 0.249602353812234222e0 * wr_6_4;
  results[k++] =
      0.172487872372820691e0 * wr_2_0 - 0.197792106625607699e0 * wr_4_0 +
      0.499204707624468445e-1 * wr_6_0 + 0.671602850907726916e-2 * wr_8_0 +
      0.761906720727732119e0 * wr_8_8;
  results[k++] = -0.279720279720279720e0 * wr_4_4 +
                 0.473587168431523197e0 * wr_6_4 +
                 0.211314903746496926e0 * wr_8_4;
  results[k++] =
      0.234726263406510114e-1 * wr_2_0 - 0.121122434095725685e0 * wr_4_0 +
      0.142659627935441264e0 * wr_6_0 - 0.493525288356725132e-1 * wr_8_0 +
      0.622094232460049089e0 * wr_8_8;
  results[k++] = 0.714285714285714286e0 * wr_2_0 -
                 0.580796877272672649e-1 * wr_4_0 -
                 0.394655973692935997e0 * wr_6_0;
  results[k++] = -0.279720279720279720e0 * wr_4_4 +
                 0.473587168431523197e0 * wr_6_4 +
                 0.211314903746496926e0 * wr_8_4;
  results[k++] =
      -0.123205623123443351e0 * wr_2_0 - 0.254304137090067042e0 * wr_4_0 -
      0.249602353812234222e0 * wr_6_0 + 0.470121995635408841e0 * wr_8_0;
  results[k++] = 0.171292989005816650e0 * wr_4_4 +
                 0.644470506325969664e-1 * wr_6_4 -
                 0.690151585632345055e0 * wr_8_4;
  results[k++] =
      0.549634334897213365e0 * wr_4_4 - 0.151497219666871055e0 * wr_6_4;
  results[k++] =
      -0.396958130759098541e0 * wr_2_0 + 0.393916581922453194e0 * wr_4_0 -
      0.265120134417024347e-1 * wr_6_0 - 0.481515574220039761e-1 * wr_8_0 +
      0.606955851359452583e0 * wr_8_8;
  results[k++] = -0.557082172598385667e0 * wr_4_4 -
                 0.119769068332541995e-1 * wr_6_4 -
                 0.673357059698278694e0 * wr_8_4;
  results[k++] =
      0.498638394671177161e-1 * wr_2_0 + 0.192978925386251716e0 * wr_4_0 -
      0.346351493258559239e0 * wr_6_0 + 0.135420338004861202e0 * wr_8_0 +
      0.495577377409070131e0 * wr_8_8;
  results[k++] = -0.156992617626878660e0 * wr_4_4 +
                 0.602721403756178067e-1 * wr_6_4 +
                 0.443742228363446483e0 * wr_8_4;
  results[k++] =
      0.340150671524903763e0 * wr_2_0 - 0.175523082489666199e0 * wr_4_0 -
      0.210952491314662323e0 * wr_6_0 + 0.127711801559805070e0 * wr_8_0 +
      0.321964353364647226e0 * wr_8_8;
  results[k++] = -0.248227123766417456e0 * wr_4_4 +
                 0.304955588864558049e0 * wr_6_4 +
                 0.369944072119861853e0 * wr_8_4;
  results[k++] =
      -0.317407840343261645e0 * wr_2_0 + 0.614202843114461443e-1 * wr_4_0 +
      0.344483975793215217e0 * wr_6_0 - 0.173793748862835113e0 * wr_8_0 +
      0.262882793702840665e0 * wr_8_8;
  results[k++] = -0.248227123766417456e0 * wr_4_0 -
                 0.298331874233587997e0 * wr_6_0 +
                 0.441495417833501104e0 * wr_8_0;
  results[k++] = -0.370035148400642040e-1 * wr_4_4 -
                 0.298331874233587997e0 * wr_6_4 +
                 0.599021446751552151e0 * wr_8_4;
  results[k++] =
      0.760600024121886864e0 * wr_2_0 + 0.130827181355732216e0 * wr_4_0 -
      0.342686723780025371e0 * wr_8_0 - 0.188681644241007573e0 * wr_6_0;
  results[k++] = 0.271919190142987142e0 * wr_4_4 -
                 0.487173910586969933e0 * wr_6_4 -
                 0.163032987725007410e0 * wr_8_4;
  results[k++] =
      -0.334037014364190408e0 * wr_6_4 - 0.704588342040123013e0 * wr_8_4;
  results[k++] =
      -0.294780177704577884e0 * wr_4_0 + 0.425138018281696883e0 * wr_6_0 -
      0.157288328225382426e0 * wr_8_0 + 0.108143849746893436e0 * wr_8_8;
  results[k++] = 0.416882125228565099e0 * wr_4_4 +
                 0.192057779671495157e0 * wr_6_4 +
                 0.214240766696976727e0 * wr_8_4;
  results[k++] =
      0.499750187343886598e0 * wr_2_0 - 0.412606298093237722e0 * wr_4_0 -
      0.867809345873486476e-1 * wr_6_0 + 0.105075312722069480e0 * wr_8_0 +
      0.882990835667002208e-1 * wr_8_8;
  results[k++] =
      0.324704524929899286e0 * wr_5_4 - 0.185545442817085306e0 * wr_7_4;
  results[k++] =
      -0.390803368367357763e0 * wr_1_0 + 0.372132159457065486e0 * wr_3_0 -
      0.784963088134393298e-1 * wr_5_0 - 0.122218587063678736e-1 * wr_7_0;
  results[k++] =
      -0.314918328648886780e-1 * wr_1_0 + 0.229421792008398065e0 * wr_3_0 -
      0.255124983873492296e0 * wr_5_0 + 0.624520556031800664e-1 * wr_7_0 +
      0.118907373375939047e-1 * wr_9_0 + 0.617987955027658576e0 * wr_9_8;
  results[k++] = -0.360801212294109966e0 * wr_5_4 +
                 0.378165976522168734e0 * wr_7_4 +
                 0.201090615015847613e0 * wr_9_4;
  results[k++] =
      0.352814670705953158e-1 * wr_3_0 - 0.154796808539710877e0 * wr_5_0 +
      0.178637095917353303e0 * wr_7_0 - 0.623555526546783888e-1 * wr_9_0 +
      0.648151235295586005e0 * wr_9_8;
  results[k++] =
      0.816496580927726033e0 * wr_1_0 + 0.194371812299945007e0 * wr_3_0 -
      0.164000551042777257e0 * wr_5_0 - 0.357487916320388141e0 * wr_7_0;
  results[k++] =
      -0.333031633560577836e0 * wr_5_4 - 0.222021089040385224e0 * wr_7_4;
  results[k++] = 0.360801212294109966e0 * wr_5_4 +
                 0.324142265590430344e0 * wr_7_4 +
                 0.335151025026412690e0 * wr_9_4;
  results[k++] =
      -0.524863881081477966e-1 * wr_1_0 - 0.163872708577427189e0 * wr_3_0 -
      0.255124983873492296e0 * wr_5_0 - 0.208173518677266889e0 * wr_7_0 +
      0.499410968178943998e0 * wr_9_0;
  results[k++] = 0.312736780069900657e-1 * wr_5_4 -
                 0.154528761916892089e0 * wr_7_4 -
                 0.703018721041995059e0 * wr_9_4;
  results[k++] =
      0.739053017561940612e-1 * wr_5_4 - 0.270986106439378225e0 * wr_7_4;
  results[k++] =
      0.490572275026619690e0 * wr_1_0 - 0.287899251479003506e0 * wr_3_0 -
      0.125064637568569529e0 * wr_5_0 + 0.723538409124497925e-1 * wr_7_0 +
      0.106864081953606367e-1 * wr_9_0 - 0.555396302158842198e0 * wr_9_8;
  results[k++] =
      -0.289897230135791466e0 * wr_1_0 - 0.825384497572818077e-1 * wr_3_0 +
      0.295621207024776245e0 * wr_5_0 + 0.181630727470722903e-1 * wr_7_0 -
      0.757799075155814864e-1 * wr_9_0;
  results[k++] = -0.418071520299543045e0 * wr_5_4 +
                 0.143455913828274574e-1 * wr_7_4 -
                 0.640777261136434966e0 * wr_9_4;
  results[k++] =
      -0.265775157365766429e-1 * wr_1_0 + 0.112424748596993062e0 * wr_3_0 +
      0.140931880742875222e0 * wr_5_0 - 0.358403379832951704e0 * wr_7_0 +
      0.153538277019270421e0 * wr_9_0 + 0.281637328698018168e0 * wr_9_8;
  results[k++] = 0.352832670995279223e0 * wr_5_4 +
                 0.175263287553210595e0 * wr_7_4 +
                 0.440640302915247378e0 * wr_9_4;
  results[k++] =
      -0.325093518007628267e0 * wr_3_0 + 0.331707446870809021e0 * wr_5_0 +
      0.820272379212336597e-2 * wr_7_0 - 0.623555526546783888e-1 * wr_9_0 -
      0.648151235295586005e0 * wr_9_8;
  results[k++] =
      0.621027319149066570e0 * wr_1_0 - 0.281463102062910591e0 * wr_3_0 -
      0.277731860300353940e0 * wr_7_0 + 0.170841623296354274e0 * wr_9_0 -
      0.313377089737560481e0 * wr_9_8;
  results[k++] =
      0.339176456544210433e0 * wr_7_4 + 0.396556040688774717e0 * wr_9_4;
  results[k++] =
      -0.186096842079694173e0 * wr_1_0 - 0.214691630455999319e0 * wr_3_0 +
      0.201847651234558277e0 * wr_5_0 + 0.246833617010959017e0 * wr_7_0 -
      0.168640194022558358e0 * wr_9_0;
  results[k++] =
      -0.148344079969205774e0 * wr_3_0 - 0.260342803762045942e0 * wr_5_0 -
      0.226520903478074318e0 * wr_7_0 + 0.489401717127366374e0 * wr_9_0;
  results[k++] = 0.209790209790209790e0 * wr_5_4 +
                 0.222130810366104484e-1 * wr_7_4 -
                 0.471599294911458821e0 * wr_9_4;
  results[k++] =
      0.132723782310062638e0 * wr_7_4 + 0.532035758320963670e0 * wr_9_4;
  results[k++] =
      0.833195580901061817e0 * wr_1_0 + 0.293706293706293706e0 * wr_3_0 -
      0.219186112640847024e0 * wr_7_0 - 0.314599339004637529e0 * wr_9_0;
  results[k++] =
      -0.496454247532834913e0 * wr_5_4 - 0.330969498355223276e0 * wr_7_4;
  results[k++] = -0.158016181850183230e0 * wr_5_4 -
                 0.336946270121714241e0 * wr_7_4 -
                 0.699663003929438236e0 * wr_9_4;
  results[k++] =
      -0.380912433148197326e-1 * wr_3_0 + 0.267399442847225121e0 * wr_5_0 -
      0.344399201348069552e0 * wr_7_0 + 0.125666759938508519e0 * wr_9_0 -
      0.356246173124496659e0 * wr_9_8;
  results[k++] =
      -0.315133265537962556e0 * wr_3_0 + 0.138264159118910327e0 * wr_5_0 +
      0.284925446177962495e0 * wr_7_0 - 0.167087515605639505e0 * wr_9_0 -
      0.228062236902405202e0 * wr_9_8;
  results[k++] = -0.195535049016074627e0 * wr_5_4 -
                 0.164315167240398846e-1 * wr_7_4 +
                 0.133198276244884260e0 * wr_9_4;
  results[k++] =
      0.703210846407743136e0 * wr_1_0 - 0.240374223453795652e0 * wr_3_0 -
      0.301325035779156147e0 * wr_5_0 + 0.181110502436530516e-1 * wr_7_0 +
      0.796558476299831785e-1 * wr_9_0 - 0.585439106285677904e-1 * wr_9_8;
  results[k++] =
      wr_0_0 - 0.569180939727219195e0 * wr_2_0 +
      0.489510489510489510e-1 * wr_4_0 + 0.403418324527439361e-1 * wr_6_0 -
      0.474894930141071556e-2 * wr_8_0 - 0.538749408858184450e0 * wr_8_8;
  results[k++] = 0.692272373189626947e-1 * wr_4_4 +
                 0.382716226606703657e0 * wr_6_4 -
                 0.149422201404930554e0 * wr_8_4;
  results[k++] =
      -0.345466813670024386e0 * wr_2_0 + 0.378815877366902254e0 * wr_4_0 -
      0.749872979501467609e-1 * wr_6_0 - 0.226988618518616294e-1 * wr_8_0 +
      0.286121732251415401e0 * wr_8_8;
  results[k++] =
      -0.370035148400642040e-1 * wr_2_0 + 0.248227123766417456e0 * wr_4_0 -
      0.280782940455141645e0 * wr_6_0 + 0.665411754150970562e-1 * wr_8_0 +
      0.166024530201794484e-1 * wr_10_0 + 0.167751815047514433e0 * wr_8_8 +
      0.517719752732824705e0 * wr_10_8;
  results[k++] =
      0.523308725422928865e-1 * wr_4_4 - 0.397087042474658492e0 * wr_6_4 +
      0.312105777844146568e0 * wr_8_4 + 0.191804444763775987e0 * wr_10_4;
  results[k++] =
      0.416882125228565098e-1 * wr_4_0 - 0.176834103333646047e0 * wr_6_0 +
      0.204878290638853555e0 * wr_8_0 - 0.724952658859680238e-1 * wr_10_0 -
      0.140864406973034775e0 * wr_8_8 + 0.616539195905654385e0 * wr_10_8;
  results[k++] = 0.692272373189626947e-1 * wr_4_4 +
                 0.382716226606703657e0 * wr_6_4 -
                 0.149422201404930554e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.406557814090870854e0 * wr_2_0 +
                 0.629370629370629371e-1 * wr_4_0 -
                 0.201709162263719681e0 * wr_6_0 -
                 0.332426451098750089e0 * wr_8_0;
  results[k++] = -0.535726551414536346e0 * wr_4_4 -
                 0.338758081577341725e-1 * wr_6_4 -
                 0.317423562048325182e0 * wr_8_4;
  results[k++] =
      0.405903369123512091e0 * wr_6_4 + 0.192750498356845955e0 * wr_8_4 +
      0.428887776878406703e0 * wr_10_4 + 0.351046164979332398e0 * wr_4_4;
  results[k++] =
      -0.827423745888058188e-1 * wr_2_0 - 0.251139896711988982e0 * wr_6_0 -
      0.178548709837073764e0 * wr_8_0 + 0.519738989649151081e0 * wr_10_0 -
      0.185017574200321020e0 * wr_4_0;
  results[k++] =
      -0.589560355409155768e-1 * wr_4_4 - 0.798855049325565187e-1 * wr_6_4 -
      0.279062550675331869e0 * wr_8_4 - 0.681001960860310589e0 * wr_10_4;
  results[k++] =
      -0.345466813670024386e0 * wr_2_0 + 0.378815877366902254e0 * wr_4_0 -
      0.749872979501467609e-1 * wr_6_0 - 0.226988618518616294e-1 * wr_8_0 +
      0.286121732251415401e0 * wr_8_8;
  results[k++] = -0.535726551414536346e0 * wr_4_4 -
                 0.338758081577341725e-1 * wr_6_4 -
                 0.317423562048325182e0 * wr_8_4;
  results[k++] =
      wr_0_0 - 0.244335633044355719e0 * wr_2_0 -
      0.710059171597633136e-1 * wr_4_0 - 0.199457808114773186e0 * wr_6_0 +
      0.950655053474707817e-1 * wr_8_0 + 0.188887378197201532e-1 * wr_10_0 +
      0.347896885477248663e0 * wr_8_8 - 0.589013723548845472e0 * wr_10_8;
  results[k++] =
      -0.331276771134668480e0 * wr_2_0 + 0.564984442085917771e-1 * wr_4_0 +
      0.214359438235693324e0 * wr_6_0 + 0.588983674127937270e-1 * wr_8_0 -
      0.969904522142614781e-1 * wr_10_0 - 0.890904734567389497e-1 * wr_8_8 -
      0.274953197232524291e0 * wr_10_8;
  results[k++] =
      0.250129275137139059e0 * wr_4_4 - 0.303150024775595298e0 * wr_6_4 +
      0.552515661481676823e-1 * wr_8_4 - 0.611186786513339521e0 * wr_10_4;
  results[k++] =
      -0.353617931755737764e-1 * wr_2_0 + 0.151817036825992550e0 * wr_4_0 +
      0.939139405724472084e-1 * wr_6_0 - 0.356098214994088441e0 * wr_8_0 +
      0.164370288307010486e0 * wr_10_0 - 0.299243896869332274e0 * wr_8_8 +
      0.113342788266570611e0 * wr_10_8;
  results[k++] =
      -0.370035148400642040e-1 * wr_2_0 + 0.248227123766417456e0 * wr_4_0 -
      0.280782940455141645e0 * wr_6_0 + 0.665411754150970562e-1 * wr_8_0 +
      0.166024530201794484e-1 * wr_10_0 + 0.167751815047514433e0 * wr_8_8 +
      0.517719752732824705e0 * wr_10_8;
  results[k++] =
      0.405903369123512091e0 * wr_6_4 + 0.192750498356845955e0 * wr_8_4 +
      0.428887776878406703e0 * wr_10_4 + 0.351046164979332398e0 * wr_4_4;
  results[k++] =
      -0.331276771134668480e0 * wr_2_0 + 0.564984442085917771e-1 * wr_4_0 +
      0.214359438235693324e0 * wr_6_0 + 0.588983674127937270e-1 * wr_8_0 -
      0.969904522142614781e-1 * wr_10_0 - 0.890904734567389497e-1 * wr_8_8 -
      0.274953197232524291e0 * wr_10_8;
  results[k++] =
      wr_0_0 - 0.647811901573365647e-1 * wr_2_0 -
      0.191808191808191808e0 * wr_4_0 + 0.118652448390423341e-1 * wr_6_0 -
      0.293952820480178315e0 * wr_8_0 + 0.194104267690267098e0 * wr_10_0 -
      0.374694137739714749e0 * wr_8_8 - 0.364627543149285290e0 * wr_10_8;
  results[k++] =
      0.167799901722510401e-1 * wr_6_4 + 0.325325615486744841e0 * wr_8_4 +
      0.405260856419865046e0 * wr_10_4 + 0.265365957496647217e0 * wr_4_4;
  results[k++] =
      -0.247604708636970580e0 * wr_2_0 - 0.120798754922464476e0 * wr_4_0 +
      0.254068561183006293e0 * wr_6_0 + 0.178101009293073624e0 * wr_8_0 -
      0.160243784767756351e0 * wr_10_0 - 0.340149008265913312e0 * wr_8_8 -
      0.106886302487499940e0 * wr_10_8;
  results[k++] =
      0.523308725422928865e-1 * wr_4_4 - 0.397087042474658492e0 * wr_6_4 +
      0.312105777844146568e0 * wr_8_4 + 0.191804444763775987e0 * wr_10_4;
  results[k++] =
      -0.827423745888058188e-1 * wr_2_0 - 0.251139896711988982e0 * wr_6_0 -
      0.178548709837073764e0 * wr_8_0 + 0.519738989649151081e0 * wr_10_0 -
      0.185017574200321020e0 * wr_4_0;
  results[k++] =
      0.250129275137139059e0 * wr_4_4 - 0.303150024775595298e0 * wr_6_4 +
      0.552515661481676823e-1 * wr_8_4 - 0.611186786513339521e0 * wr_10_4;
  results[k++] =
      0.167799901722510401e-1 * wr_6_4 + 0.325325615486744841e0 * wr_8_4 +
      0.405260856419865046e0 * wr_10_4 + 0.265365957496647217e0 * wr_4_4;
  results[k++] =
      wr_0_0 + 0.453468331101355953e0 * wr_2_0 +
      0.167832167832167832e0 * wr_4_0 - 0.593262241952116707e-1 * wr_6_0 -
      0.231198847568679574e0 * wr_8_0 - 0.294664309987634390e0 * wr_10_0;
  results[k++] =
      -0.534798885694450239e0 * wr_4_4 - 0.359307204997625986e0 * wr_6_4 -
      0.118132817490926087e0 * wr_8_4 + 0.841482173717673176e-1 * wr_10_4;
  results[k++] =
      0.416882125228565098e-1 * wr_4_0 - 0.176834103333646047e0 * wr_6_0 +
      0.204878290638853555e0 * wr_8_0 - 0.724952658859680238e-1 * wr_10_0 -
      0.140864406973034775e0 * wr_8_8 + 0.616539195905654385e0 * wr_10_8;
  results[k++] =
      -0.589560355409155768e-1 * wr_4_4 - 0.798855049325565187e-1 * wr_6_4 -
      0.279062550675331869e0 * wr_8_4 - 0.681001960860310589e0 * wr_10_4;
  results[k++] =
      -0.353617931755737764e-1 * wr_2_0 + 0.151817036825992550e0 * wr_4_0 +
      0.939139405724472084e-1 * wr_6_0 - 0.356098214994088441e0 * wr_8_0 +
      0.164370288307010486e0 * wr_10_0 - 0.299243896869332274e0 * wr_8_8 +
      0.113342788266570611e0 * wr_10_8;
  results[k++] =
      -0.247604708636970580e0 * wr_2_0 - 0.120798754922464476e0 * wr_4_0 +
      0.254068561183006293e0 * wr_6_0 + 0.178101009293073624e0 * wr_8_0 -
      0.160243784767756351e0 * wr_10_0 - 0.340149008265913312e0 * wr_8_8 -
      0.106886302487499940e0 * wr_10_8;
  results[k++] =
      -0.534798885694450239e0 * wr_4_4 - 0.359307204997625986e0 * wr_6_4 -
      0.118132817490926087e0 * wr_8_4 + 0.841482173717673176e-1 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.756066940828331260e-1 * wr_2_0 -
      0.324598478444632291e0 * wr_4_0 - 0.200796451122254886e0 * wr_6_0 +
      0.592932001412399202e-1 * wr_8_0 + 0.620270171451381792e-1 * wr_10_0 -
      0.214222220121458536e0 * wr_8_8 - 0.673158541198680539e-1 * wr_10_8;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] = -0.487869376909045026e0 * wr_5_4;
  results[k++] =
      0.349286523998893628e0 * wr_5_4 + 0.304932679681573801e0 * wr_7_4;
  results[k++] =
      0.352505822688910769e0 * wr_7_0 - 0.411638116161159094e0 * wr_5_0;
  results[k++] =
      0.808635618175746744e0 * wr_5_4 - 0.652299398661769039e0 * wr_7_4;
  results[k++] =
      0.450415418283938391e0 * wr_5_4 - 0.900830836567876783e-1 * wr_7_4;
  results[k++] =
      -0.445888515267367341e0 * wr_7_0 + 0.520685607524091885e0 * wr_5_0;
  results[k++] = -0.604743156814763562e0 * wr_7_4;
  results[k++] = 0.107871977994118734e1 * wr_4_4;
  results[k++] =
      0.171614510445188895e0 * wr_4_4 - 0.456132005458413146e0 * wr_6_4;
  results[k++] =
      0.941271393498219819e-2 * wr_8_0 + 0.176407335352976580e-1 * wr_4_0 -
      0.254418277193251359e-1 * wr_6_0 - 0.106783495597993498e1 * wr_8_8;
  results[k++] =
      0.456360014473132119e0 * wr_4_4 - 0.471704110602518933e0 * wr_6_4;
  results[k++] = 0.491464630971065358e0 * wr_4_4 +
                 0.404317809087873371e0 * wr_6_4 +
                 0.330745929035967197e0 * wr_8_4;
  results[k++] =
      -0.500608748812283475e-1 * wr_8_0 - 0.938210340209701971e-1 * wr_4_0 +
      0.135310619551863770e0 * wr_6_0 - 0.631023014832952649e0 * wr_8_8;
  results[k++] =
      0.537825434827237823e0 * wr_4_0 - 0.447497811350381995e0 * wr_6_0;
  results[k++] = -0.248227123766417456e0 * wr_4_0 -
                 0.298331874233587997e0 * wr_6_0 +
                 0.441495417833501104e0 * wr_8_0;
  results[k++] = -0.525042885225711752e0 * wr_8_4 -
                 0.442276595827745362e-1 * wr_4_4 +
                 0.427889749392401524e0 * wr_6_4;
  results[k++] = 0.144149994031289434e0 * wr_6_4;
  results[k++] = 0.609532031274101183e0 * wr_4_4 +
                 0.157254538943224837e0 * wr_6_4 -
                 0.707518035932658375e0 * wr_8_4;
  results[k++] =
      0.121691087147225504e0 * wr_8_0 + 0.228066002729206574e0 * wr_4_0 -
      0.328921466812105770e0 * wr_6_0 - 0.306785995538948175e0 * wr_8_8;
  results[k++] =
      -0.481755033277195857e0 * wr_6_4 + 0.444575144180969043e0 * wr_8_4;
  results[k++] = 0.339513395963365204e0 * wr_4_4 +
                 0.875918242322174284e-1 * wr_6_4 +
                 0.124578749193568248e0 * wr_8_4;
  results[k++] =
      -0.169456862543656153e0 * wr_8_0 - 0.317585701478757867e0 * wr_4_0 +
      0.458028612414344471e0 * wr_6_0 - 0.116510345607092604e0 * wr_8_8;
  results[k++] =
      -0.415099617330216661e0 * wr_6_0 + 0.362994085189212060e0 * wr_8_0;
  results[k++] = 0.654135906778661082e0 * wr_4_0 -
                 0.113208986544604544e0 * wr_6_0 -
                 0.376955396158027907e0 * wr_8_0;
  results[k++] = -0.415082846644904676e0 * wr_8_4 -
                 0.349650349650349650e-1 * wr_4_4 +
                 0.338276548879659426e0 * wr_6_4;
  results[k++] = -0.114788808636710287e1 * wr_8_8;
  results[k++] = -0.573944043183551436e0 * wr_8_8;
  results[k++] = 0.125436301501063615e1 * wr_4_4 -
                 0.269679944985296835e0 * wr_6_4 +
                 0.300828418798093419e-1 * wr_8_4;
  results[k++] = 0.573944043183551434e0 * wr_8_4;
  results[k++] =
      -0.621943073611393163e0 * wr_6_4 - 0.368964027760854492e0 * wr_8_4;
  results[k++] =
      -0.131260721306427938e0 * wr_8_0 - 0.246000826564165886e0 * wr_4_0 +
      0.354787437593449571e0 * wr_6_0 + 0.300828418798093419e-1 * wr_8_8;
  results[k++] = 0.569180939727219195e0 * wr_5_4;
  results[k++] = -0.483469112253009479e-1 * wr_3_0 +
                 0.652680652680652681e-1 * wr_5_0 -
                 0.228650039543943809e-1 * wr_7_0;
  results[k++] =
      0.276908949275850779e0 * wr_5_4 - 0.415363423913776168e0 * wr_7_4;
  results[k++] =
      -0.910963562627873575e-2 * wr_3_0 + 0.399683641013572184e-1 * wr_5_0 -
      0.461238998335177526e-1 * wr_7_0 + 0.161001344650086055e-1 * wr_9_0 -
      0.836759646707856501e0 * wr_9_8;
  results[k++] =
      0.776192275553096950e-1 * wr_5_4 - 0.332653832379898692e0 * wr_7_4;
  results[k++] =
      0.207681711956888084e0 * wr_3_0 - 0.260342803762045942e0 * wr_5_0 +
      0.679562710434222954e-1 * wr_7_0 + 0.116524218363658660e-1 * wr_9_0 +
      0.605602170607908836e0 * wr_9_8;
  results[k++] = 0.368180323946522604e0 * wr_5_4 +
                 0.352710562436164511e0 * wr_7_4 +
                 0.328433890314863965e0 * wr_9_4;
  results[k++] =
      0.807482893971504563e-2 * wr_3_0 - 0.141712672760565628e0 * wr_5_0 +
      0.201502018116268288e0 * wr_7_0 - 0.761133007113624345e-1 * wr_9_0;
  results[k++] = 0.677596356818118090e0 * wr_3_0 -
                 0.914751369247020209e-1 * wr_5_0 -
                 0.384551806569720839e0 * wr_7_0;
  results[k++] = -0.368180323946522604e0 * wr_5_4 +
                 0.411495656175525264e0 * wr_7_4 +
                 0.197060334188918379e0 * wr_9_4;
  results[k++] =
      -0.148344079969205774e0 * wr_3_0 - 0.260342803762045942e0 * wr_5_0 -
      0.226520903478074318e0 * wr_7_0 + 0.489401717127366374e0 * wr_9_0;
  results[k++] = 0.200411983778132186e0 * wr_5_4 +
                 0.159150693000281442e0 * wr_7_4 -
                 0.643596356406907725e0 * wr_9_4;
  results[k++] =
      0.539090412117164495e0 * wr_5_4 - 0.177899835998664283e0 * wr_7_4;
  results[k++] =
      -0.360604012737235290e0 * wr_3_0 + 0.379714484366392181e0 * wr_5_0 -
      0.869433309300215978e-2 * wr_7_0 - 0.623159492510931696e-1 * wr_9_0 +
      0.647739579976005681e0 * wr_9_8;
  results[k++] = -0.767139105172083421e-1 * wr_5_4 +
                 0.752097161933415120e-2 * wr_7_4 -
                 0.702572218157294836e0 * wr_9_4;
  results[k++] =
      0.981439811562569273e-1 * wr_3_0 + 0.137793590317286086e0 * wr_5_0 -
      0.362043555438035273e0 * wr_7_0 + 0.157267802093330083e0 * wr_9_0 +
      0.288478446753801813e0 * wr_9_8;
  results[k++] = -0.225207709141969195e0 * wr_5_4 -
                 0.582890541308626154e-1 * wr_7_4 +
                 0.498586601832116928e0 * wr_9_4;
  results[k++] =
      -0.242140068330093584e0 * wr_7_0 + 0.267811778393381289e0 * wr_3_0 -
      0.117501940896303590e0 * wr_5_0 + 0.141997083758482467e0 * wr_9_0 +
      0.402540160250417757e0 * wr_9_8;
  results[k++] = -0.142433861503469455e0 * wr_5_4 +
                 0.268110798124177799e0 * wr_7_4 +
                 0.218308053133795864e0 * wr_9_4;
  results[k++] =
      0.296559806845691052e0 * wr_7_0 - 0.328001102085554515e0 * wr_3_0 +
      0.143909899491305438e0 * wr_5_0 - 0.173910200085763307e0 * wr_9_0 +
      0.237374702160963632e0 * wr_9_8;
  results[k++] = -0.260342803762045942e0 * wr_5_0 -
                 0.288516098114178868e0 * wr_7_0 +
                 0.454444451618268775e0 * wr_9_0;
  results[k++] = -0.388096137776548475e-1 * wr_5_4 -
                 0.342437768626366300e0 * wr_7_4 +
                 0.560843543259838530e0 * wr_9_4;
  results[k++] =
      0.729719153496434866e0 * wr_3_0 + 0.914751369247020209e-1 * wr_5_0 -
      0.203586250536911033e0 * wr_7_0 - 0.331633739339981828e0 * wr_9_0;
  results[k++] = 0.364411045000678653e0 * wr_5_4 -
                 0.419398900895921722e0 * wr_7_4 -
                 0.178082658252741419e0 * wr_9_4;
  results[k++] = -0.658358969337959226e0 * wr_9_8;
  results[k++] = -0.464095480892257110e0 * wr_5_4 +
                 0.163798405020796627e0 * wr_7_4 -
                 0.225815263514680732e-1 * wr_9_4;
  results[k++] = -0.416382772221781500e0 * wr_9_8;
  results[k++] = 0.568398560058805107e0 * wr_5_4 -
                 0.200611256491342979e0 * wr_7_4 +
                 0.276566085871545443e-1 * wr_9_4;
  results[k++] =
      0.320158141843110122e0 * wr_7_4 + 0.643672535179312414e0 * wr_9_4;
  results[k++] =
      0.273049836143059202e0 * wr_5_0 - 0.412633958920470505e0 * wr_7_0 +
      0.158875120619690879e0 * wr_9_0 - 0.150128943546547601e0 * wr_9_8;
  results[k++] = -0.514867708636354185e0 * wr_5_4 -
                 0.324496455022912301e0 * wr_7_4 -
                 0.244256553415378187e0 * wr_9_4;
  results[k++] =
      -0.423447601971677156e0 * wr_3_0 + 0.408731138995086729e0 * wr_5_0 +
      0.459428477227139898e-1 * wr_7_0 - 0.947961101087959887e-1 * wr_9_0 -
      0.990067365840385401e-1 * wr_9_8;
  results[k++] =
      -0.542692732541553832e0 * wr_4_4 + 0.384644280253050975e0 * wr_6_4;
  results[k++] =
      0.117343731235033707e0 * wr_2_0 - 0.151378015254808107e0 * wr_4_0 +
      0.582187942377792639e-1 * wr_6_0 - 0.440574738559013184e-2 * wr_8_0 +
      0.499814516625831118e0 * wr_8_8;
  results[k++] =
      0.173356834408289512e-1 * wr_2_0 - 0.894548460233330496e-1 * wr_4_0 +
      0.105361117830781994e0 * wr_6_0 - 0.364492581479006505e-1 * wr_8_0 -
      0.459447039618906314e0 * wr_8_8;
  results[k++] = -0.421694188220648422e-1 * wr_4_4 +
                 0.333181109166650195e0 * wr_6_4 -
                 0.382283044547561926e0 * wr_8_4;
  results[k++] =
      0.635727908455181182e-3 * wr_2_0 - 0.170583698219945813e-1 * wr_4_0 +
      0.590928730663219675e-1 * wr_6_0 - 0.640186916706443417e-1 * wr_8_0 +
      0.219629809225140238e-1 * wr_10_0 + 0.161392576216518555e0 * wr_8_8 -
      0.684878857278453314e0 * wr_10_8;
  results[k++] = -0.259024603880449428e0 * wr_4_4 +
                 0.255713035057361140e0 * wr_6_4 -
                 0.256723477179236637e0 * wr_8_4;
  results[k++] =
      -0.364049352257407976e0 * wr_2_0 + 0.402546807104998722e0 * wr_4_0 -
      0.838588488857244441e-1 * wr_6_0 - 0.221299067326539664e-1 * wr_8_0 -
      0.278949988340050261e0 * wr_8_8;
  results[k++] =
      0.496454247532834913e-1 * wr_2_0 + 0.185017574200321020e0 * wr_4_0 -
      0.301367876054386778e0 * wr_6_0 + 0.790715714992755241e-1 * wr_8_0 +
      0.206245630813155191e-1 * wr_10_0 - 0.289366299099165384e0 * wr_8_8 +
      0.643142533558321421e0 * wr_10_8;
  results[k++] =
      -0.261654362711464433e0 * wr_4_4 + 0.238252225484795095e0 * wr_6_4 +
      0.294271161967338193e0 * wr_8_4 + 0.319674074606293313e0 * wr_10_4;
  results[k++] =
      0.135243014941322568e-1 * wr_2_0 - 0.100804191630272331e-1 * wr_4_0 -
      0.157140700619361134e0 * wr_6_0 + 0.243199307411023302e0 * wr_8_0 -
      0.951773866970395094e-1 * wr_10_0 + 0.367866587706006309e0 * wr_8_8 +
      0.269813431932214452e0 * wr_10_8;
  results[k++] =
      0.760600024121886864e0 * wr_2_0 + 0.130827181355732216e0 * wr_4_0 -
      0.342686723780025371e0 * wr_8_0 - 0.188681644241007573e0 * wr_6_0;
  results[k++] = 0.189762384699291790e0 * wr_4_4 -
                 0.265184964438762400e0 * wr_6_4 -
                 0.232100419903876884e0 * wr_8_4;
  results[k++] =
      -0.261654362711464433e0 * wr_4_4 + 0.238252225484795095e0 * wr_6_4 +
      0.294271161967338193e0 * wr_8_4 + 0.319674074606293313e0 * wr_10_4;
  results[k++] =
      -0.827423745888058188e-1 * wr_2_0 - 0.251139896711988982e0 * wr_6_0 -
      0.178548709837073764e0 * wr_8_0 + 0.519738989649151081e0 * wr_10_0 -
      0.185017574200321020e0 * wr_4_0;
  results[k++] =
      0.997910584633112956e-1 * wr_4_4 + 0.127780078389894802e0 * wr_6_4 -
      0.680185561284090530e-1 * wr_8_4 - 0.670553995955371163e0 * wr_10_4;
  results[k++] = 0.475452349661602211e0 * wr_4_4 +
                 0.186480943297589371e0 * wr_6_4 -
                 0.305095701708552852e0 * wr_8_4;
  results[k++] =
      0.340366846107592122e0 * wr_2_0 - 0.187009065273730196e0 * wr_4_0 -
      0.170643082293966994e0 * wr_6_0 + 0.841063478683490640e-1 * wr_8_0 +
      0.149319557734086760e-1 * wr_10_0 - 0.212034013885665635e0 * wr_8_8 -
      0.465628087694661507e0 * wr_10_8;
  results[k++] =
      -0.344803386131462166e0 * wr_2_0 + 0.591102921200910857e-1 * wr_4_0 +
      0.228932428239361207e0 * wr_6_0 + 0.516699172575440909e-1 * wr_8_0 -
      0.970622704041941579e-1 * wr_10_0 + 0.781566212129882423e-1 * wr_8_8 +
      0.275156790890360018e0 * wr_10_8;
  results[k++] =
      -0.585162037544478126e0 * wr_4_4 - 0.186158032330996945e0 * wr_6_4 -
      0.144511643743818277e-1 * wr_8_4 - 0.683833582058810976e0 * wr_10_4;
  results[k++] =
      0.821892823303879184e-2 * wr_2_0 + 0.156826301706811490e0 * wr_4_0 +
      0.436557011582764186e-1 * wr_6_0 - 0.350769171632722545e0 * wr_8_0 +
      0.174573982354182255e0 * wr_10_0 + 0.447116486570536534e0 * wr_8_8 +
      0.327939632863538339e0 * wr_10_8;
  results[k++] =
      -0.858908501906280798e-1 * wr_4_4 + 0.203668874252159177e0 * wr_6_4 +
      0.691144904397439251e-1 * wr_8_4 + 0.506397833553160732e0 * wr_10_4;
  results[k++] =
      -0.290693841829741643e0 * wr_4_0 + 0.300561400992436276e0 * wr_6_0 +
      0.306134107439321980e-1 * wr_8_0 - 0.737206247665056201e-1 * wr_10_0 -
      0.626960314714858329e0 * wr_10_8 + 0.210483010982723376e-1 * wr_8_8;
  results[k++] =
      0.480144449178737894e0 * wr_2_0 - 0.257672550571884240e0 * wr_4_0 +
      0.159396106705039596e-1 * wr_6_0 - 0.293560973676762211e0 * wr_8_0 +
      0.185985764232103125e0 * wr_10_0 + 0.246691294796993371e0 * wr_8_8 -
      0.128247904856029300e0 * wr_10_8;
  results[k++] =
      -0.425138018281696883e0 * wr_4_4 + 0.576062568401327923e-1 * wr_6_4 +
      0.342099274077370170e0 * wr_8_4 + 0.263639361753871518e0 * wr_10_4;
  results[k++] =
      -0.251789873349221978e0 * wr_2_0 - 0.122840568622892288e0 * wr_4_0 +
      0.258362981844911413e0 * wr_6_0 + 0.181111380393901855e0 * wr_8_0 -
      0.162952322246948237e0 * wr_10_0 + 0.345898412766895611e0 * wr_8_8 +
      0.108692959492757394e0 * wr_10_8;
  results[k++] =
      -0.263234006676695291e0 * wr_6_0 - 0.209129408447447891e0 * wr_8_0 +
      0.503607741612109933e0 * wr_10_0 - 0.165484749177611638e0 * wr_4_0;
  results[k++] =
      -0.320043386599919100e-1 * wr_4_4 + 0.221979305873976470e0 * wr_6_4 +
      0.749872356088702613e-1 * wr_8_4 - 0.444774314434957849e0 * wr_10_4;
  results[k++] =
      -0.992908495065669826e-1 * wr_4_4 - 0.667090350641220733e-1 * wr_6_4 +
      0.798971771002968428e-1 * wr_8_4 + 0.515558074177865385e0 * wr_10_4;
  results[k++] =
      0.784963088134393298e0 * wr_2_0 + 0.234030776652888266e0 * wr_4_0 -
      0.372269102319992334e-1 * wr_6_0 - 0.228536908054388020e0 * wr_8_0 -
      0.301319149282432418e0 * wr_10_0;
  results[k++] =
      0.284010331376777392e0 * wr_4_4 - 0.385368861042718971e0 * wr_6_4 -
      0.345045920003683873e0 * wr_8_4 - 0.289156080183587458e-1 * wr_10_4;
  results[k++] =
      0.573148555561913777e0 * wr_8_8 - 0.437749440052845482e0 * wr_10_8;
  results[k++] =
      -0.815197196195680457e-1 * wr_8_4 - 0.191358113303351829e0 * wr_4_4 +
      0.204191263016436183e0 * wr_6_4 + 0.123979655567538320e-1 * wr_10_4;
  results[k++] =
      0.168605519365252892e0 * wr_8_4 + 0.395781955934522922e0 * wr_4_4 -
      0.422324489232775928e0 * wr_6_4 - 0.256424510722583977e-1 * wr_10_4;
  results[k++] =
      0.405277230265103941e0 * wr_8_8 - 0.309535597521981114e0 * wr_10_8;
  results[k++] =
      -0.160759055055091878e0 * wr_8_4 - 0.377363288482015146e0 * wr_4_4 +
      0.402670601005704810e0 * wr_6_4 + 0.244491177939589068e-1 * wr_10_4;
  results[k++] = 0.173537354786273513e0 * wr_6_4 +
                 0.368452642861230285e0 * wr_8_4 +
                 0.653756791968968997e0 * wr_10_4;
  results[k++] =
      0.375284136083880788e-1 * wr_4_0 - 0.268631377051494251e0 * wr_6_0 +
      0.355695689945569838e0 * wr_8_0 - 0.133242084263251743e0 * wr_10_0 -
      0.815197196195680457e-1 * wr_8_8 + 0.377721066741450008e0 * wr_10_8;
  results[k++] =
      0.310476910221238780e0 * wr_4_0 - 0.185201540015675622e0 * wr_6_0 -
      0.245225968306115164e0 * wr_8_0 + 0.163099430839926796e0 * wr_10_0 -
      0.168605519365252892e0 * wr_8_8 + 0.175378730755939393e0 * wr_10_8;
  results[k++] =
      -0.329310492928927275e0 * wr_4_4 - 0.780878256827134902e-1 * wr_6_4 -
      0.140288272014843672e0 * wr_8_4 - 0.171702462600693525e0 * wr_10_4;
  results[k++] =
      -0.585106791735126862e0 * wr_2_0 + 0.306600551531960548e0 * wr_4_0 +
      0.247215835825864154e0 * wr_6_0 - 0.467627573382812239e-1 * wr_8_0 -
      0.676485669067149026e-1 * wr_10_0 - 0.160759055055091880e0 * wr_8_8 +
      0.116935006101512986e-1 * wr_10_8;
  results[k++] =
      -0.295419578350398558e0 * wr_1_0 + 0.335027002012976294e0 * wr_3_0 -
      0.131861404417071800e0 * wr_5_0 + 0.161679993480094914e-1 * wr_7_0;
  results[k++] =
      -0.559440559440559441e0 * wr_5_4 + 0.293706293706293706e0 * wr_7_4;
  results[k++] =
      -0.213944874696200762e-1 * wr_1_0 + 0.164241061741251055e0 * wr_3_0 -
      0.210088843691975037e0 * wr_5_0 + 0.848556339535225304e-1 * wr_7_0 -
      0.673180440320161661e-2 * wr_9_0 + 0.349866784427900537e0 * wr_9_8;
  results[k++] =
      0.266702822166599250e-1 * wr_3_0 - 0.117015388326444133e0 * wr_5_0 +
      0.135036951636602436e0 * wr_7_0 - 0.471363671966492741e-1 * wr_9_0 -
      0.489956280157551604e0 * wr_9_8;
  results[k++] = -0.740070296801284080e-1 * wr_5_4 +
                 0.365681793713575664e0 * wr_7_4 -
                 0.356495557945465336e0 * wr_9_4;
  results[k++] =
      0.111977729933627366e-2 * wr_3_0 - 0.231200139376139517e-1 * wr_5_0 +
      0.746007306371201232e-1 * wr_7_0 - 0.791626178248924005e-1 * wr_9_0 +
      0.270760601831367110e-1 * wr_11_0 + 0.224413995144257179e0 * wr_9_8 -
      0.579498996858790599e0 * wr_11_8;
  results[k++] =
      0.499917348540637091e0 * wr_1_0 - 0.411188811188811189e0 * wr_3_0 +
      0.657558337922541074e-1 * wr_7_0 - 0.749046045249136974e-2 * wr_9_0 -
      0.389295819580131650e0 * wr_9_8;
  results[k++] =
      0.341289725940161067e0 * wr_7_4 - 0.211125300921017329e0 * wr_9_4;
  results[k++] =
      -0.265498607321225867e0 * wr_1_0 - 0.787342803939051742e-1 * wr_3_0 +
      0.325891748360124379e0 * wr_5_0 - 0.617849659716789176e-1 * wr_7_0 -
      0.397807122344649087e-1 * wr_9_0;
  results[k++] =
      -0.270837996238280901e-1 * wr_1_0 + 0.112293222656236468e0 * wr_3_0 +
      0.134229836870509737e0 * wr_5_0 - 0.303443571734554873e0 * wr_7_0 +
      0.784089349995147737e-1 * wr_9_0 + 0.287908043914566305e-1 * wr_11_0 -
      0.143826565127784291e0 * wr_9_8 + 0.616199038957592619e0 * wr_11_8;
  results[k++] =
      -0.339577611570927027e0 * wr_5_4 + 0.145011013553613575e0 * wr_7_4 +
      0.244181461090672102e0 * wr_9_4 + 0.309843343394407041e0 * wr_11_4;
  results[k++] =
      0.238218357273465770e-1 * wr_3_0 - 0.307405529632016945e-1 * wr_5_0 -
      0.158703552164422676e0 * wr_7_0 + 0.270656334781313855e0 * wr_9_0 -
      0.109715941385121309e0 * wr_11_0 + 0.369426099360527641e0 * wr_9_8 +
      0.391368349888254250e0 * wr_11_8;
  results[k++] =
      0.398171346930187912e0 * wr_7_4 - 0.126675180552610398e0 * wr_9_4;
  results[k++] =
      0.833195580901061817e0 * wr_1_0 + 0.293706293706293706e0 * wr_3_0 -
      0.219186112640847024e0 * wr_7_0 - 0.314599339004637529e0 * wr_9_0;
  results[k++] = -0.460880530396367756e0 * wr_5_4 -
                 0.487991149831448211e-1 * wr_7_4 -
                 0.336376444196845307e0 * wr_9_4;
  results[k++] =
      0.189829655777402996e0 * wr_5_4 + 0.370576552905169484e0 * wr_7_4 +
      0.182002115281320921e0 * wr_9_4 + 0.415698466923422744e0 * wr_11_4;
  results[k++] =
      -0.363367302287177053e-1 * wr_1_0 - 0.117177796993536646e0 * wr_3_0 -
      0.200098026567444938e0 * wr_5_0 - 0.239477807200164165e0 * wr_7_0 -
      0.144387524813640272e0 * wr_9_0 + 0.540776844268050529e0 * wr_11_0;
  results[k++] =
      0.434737069154082714e-1 * wr_5_4 + 0.915235935061226768e-2 * wr_7_4 -
      0.215760926942722068e0 * wr_9_4 - 0.660059545557379384e0 * wr_11_4;
  results[k++] =
      -0.305982651275495077e0 * wr_3_0 + 0.357998249080305596e0 * wr_5_0 -
      0.614782188795643714e-1 * wr_7_0 - 0.320465674847452638e-1 * wr_9_0 +
      0.333106217777425200e0 * wr_9_8;
  results[k++] = -0.723265684507413678e-1 * wr_5_4 +
                 0.531813003314274764e-1 * wr_7_4 -
                 0.361304421623489171e0 * wr_9_4;
  results[k++] =
      0.620567809416043641e0 * wr_1_0 - 0.279865929446223597e0 * wr_3_0 -
      0.372799023018597086e-2 * wr_5_0 - 0.233706409516194973e0 * wr_7_0 +
      0.104741461692210667e0 * wr_9_0 + 0.263872080885034039e-1 * wr_11_0 +
      0.192128673367994181e0 * wr_9_8 - 0.564755747836442147e0 * wr_11_8;
  results[k++] =
      -0.206916235536543248e0 * wr_1_0 - 0.224122200985450407e0 * wr_3_0 +
      0.179249948818389548e0 * wr_5_0 + 0.131446087455717483e0 * wr_7_0 +
      0.100598802048371698e0 * wr_9_0 - 0.123176200144550226e0 * wr_11_0;
  results[k++] = -0.440874084571447841e0 * wr_5_4 -
                 0.176250893832034579e0 * wr_7_4 -
                 0.662804087730373491e0 * wr_11_4;
  results[k++] =
      -0.208501823747365671e-1 * wr_1_0 + 0.463260795082979056e-1 * wr_3_0 +
      0.170802394072609273e0 * wr_5_0 - 0.257190974559613726e-1 * wr_7_0 -
      0.328964123189663892e0 * wr_9_0 + 0.183615674585594640e0 * wr_11_0 +
      0.241775673739383381e0 * wr_9_8 + 0.256136062498820015e0 * wr_11_8;
  results[k++] =
      -0.378743049167177638e-1 * wr_3_0 + 0.254146694055210205e0 * wr_5_0 -
      0.292874407377813285e0 * wr_7_0 + 0.669380672228914151e-1 * wr_9_0 +
      0.208135330270857179e-1 * wr_11_0 + 0.189759251341993283e0 * wr_9_8 +
      0.445464422397593734e0 * wr_11_8;
  results[k++] =
      0.308072315627283361e0 * wr_5_4 + 0.324286648028719328e0 * wr_7_4 +
      0.102911403172360120e0 * wr_9_4 + 0.500863264822326113e0 * wr_11_4;
  results[k++] =
      -0.331888844080003746e0 * wr_3_0 + 0.124590921385016881e0 * wr_5_0 +
      0.157934147603360995e0 * wr_7_0 + 0.914137810334282524e-1 * wr_9_0 -
      0.113695768617554387e0 * wr_11_0 - 0.124773124494806065e0 * wr_9_8 -
      0.405564813931071061e0 * wr_11_8;
  results[k++] =
      0.691522317474825198e0 * wr_1_0 - 0.192057779671495157e0 * wr_3_0 -
      0.113297490886653624e0 * wr_5_0 - 0.106625745260009982e-1 * wr_7_0 -
      0.290946817628897850e0 * wr_9_0 + 0.207608283486959025e0 * wr_11_0 -
      0.213834451527711455e0 * wr_9_8 - 0.289604732245774950e0 * wr_11_8;
  results[k++] =
      -0.626986717671991779e-1 * wr_5_4 + 0.115497553255366907e0 * wr_7_4 +
      0.363037306489024608e0 * wr_9_4 + 0.287083250016249537e0 * wr_11_4;
  results[k++] =
      -0.137252703261503257e0 * wr_1_0 - 0.233848155884120235e0 * wr_3_0 +
      0.118922587072760161e-1 * wr_5_0 + 0.277560599547315317e0 * wr_7_0 +
      0.106116010890595130e0 * wr_9_0 - 0.150244224253414200e0 * wr_11_0;
  results[k++] =
      0.839418903544324428e-1 * wr_5_4 - 0.414186958985686396e0 * wr_7_4 +
      0.264384181749148427e0 * wr_9_4 + 0.183820146478637814e0 * wr_11_4;
  results[k++] =
      -0.103197872359807251e0 * wr_3_0 - 0.197852932984122752e0 * wr_5_0 -
      0.246242610268804146e0 * wr_7_0 - 0.156333643971702045e0 * wr_9_0 +
      0.534709345033288212e0 * wr_11_0;
  results[k++] =
      0.315491206789804343e0 * wr_5_4 - 0.223352613502507365e0 * wr_7_4 +
      0.936069829103692271e-1 * wr_9_4 - 0.585744739967089824e0 * wr_11_4;
  results[k++] =
      0.185545442817085306e0 * wr_5_4 - 0.150791575044844870e-1 * wr_7_4 +
      0.297927221450946951e0 * wr_9_4 + 0.406316683280165871e0 * wr_11_4;
  results[k++] =
      0.842650088469486328e0 * wr_1_0 + 0.351046164979332398e0 * wr_3_0 +
      0.103543448605856179e0 * wr_5_0 - 0.928057989969594855e-1 * wr_7_0 -
      0.236354253429506066e0 * wr_9_0 - 0.279832341888852689e0 * wr_11_0;
  results[k++] =
      -0.412427796549909479e0 * wr_5_4 - 0.392529964260220865e0 * wr_7_4 -
      0.170573989802047944e0 * wr_9_4 + 0.521822888824248365e-1 * wr_11_4;
  results[k++] =
      -0.512393762570313114e-2 * wr_11_4 + 0.772153086251639522e-1 * wr_5_4 -
      0.761993177222012686e-1 * wr_7_4 + 0.319351008253315835e-1 * wr_9_4;
  results[k++] =
      -0.319003698734301558e0 * wr_11_8 + 0.588854163614550622e0 * wr_9_8;
  results[k++] =
      0.163274786233719969e-1 * wr_11_4 - 0.246047355192274078e0 * wr_5_4 +
      0.242809889992375735e0 * wr_7_4 - 0.101761519001566525e0 * wr_9_4;
  results[k++] =
      -0.259831061119592071e-1 * wr_11_4 + 0.391553079688397026e0 * wr_5_4 -
      0.386401065481970749e0 * wr_7_4 + 0.161940518026278894e0 * wr_9_4;
  results[k++] =
      -0.241144129760209149e0 * wr_11_8 + 0.445131907259725780e0 * wr_9_8;
  results[k++] =
      0.218185110709048057e-1 * wr_11_4 - 0.135984549736267209e0 * wr_9_4 -
      0.328794608589772851e0 * wr_5_4 + 0.324468363739907418e0 * wr_7_4;
  results[k++] =
      -0.454295037032077222e-1 * wr_5_0 + 0.191958072697707880e0 * wr_7_0 -
      0.224683350304028207e0 * wr_9_0 + 0.806104667896410311e-1 * wr_11_0 +
      0.212314388068272362e0 * wr_9_8 - 0.575092096424595584e0 * wr_11_8;
  results[k++] =
      0.856626936919401422e-1 * wr_5_4 + 0.150956344616905795e0 * wr_7_4 +
      0.345430930538536163e0 * wr_9_4 + 0.646611694461314727e0 * wr_11_4;
  results[k++] =
      0.389515141186025620e-1 * wr_3_0 - 0.176930806658029562e0 * wr_5_0 -
      0.556069384968437418e-1 * wr_7_0 + 0.348798954496225438e0 * wr_9_0 -
      0.171244040485015558e0 * wr_11_0 + 0.364291806583227409e0 * wr_9_8;
  results[k++] =
      0.272740080131667178e0 * wr_3_0 + 0.511932511266278751e-1 * wr_5_0 -
      0.272553425541522232e0 * wr_7_0 - 0.129377027994710384e0 * wr_9_0 +
      0.151828736019071952e0 * wr_11_0 + 0.295777596290079859e0 * wr_9_8 +
      0.138869009186854077e0 * wr_11_8;
  results[k++] =
      0.242830911583687569e0 * wr_5_4 + 0.134196030085722078e0 * wr_7_4 -
      0.334770819543807170e-1 * wr_9_4 - 0.125689499145603912e0 * wr_11_4;
  results[k++] =
      -0.744208407535250738e0 * wr_1_0 + 0.106184346384611943e0 * wr_3_0 +
      0.322409639454491083e0 * wr_5_0 + 0.131772671048979769e0 * wr_7_0 -
      0.764624265944632221e-1 * wr_9_0 - 0.496897716384233154e-1 * wr_11_0 +
      0.993480414754633213e-1 * wr_9_8 + 0.466443850291537277e-1 * wr_11_8;
  results[k++] =
      -0.366743931388581237e-1 * wr_6_0 - 0.724412105107369887e0 * wr_2_0 +
      0.107930665941152626e-2 * wr_8_0 + wr_0_0 +
      0.249205340114431024e0 * wr_4_0 - 0.122443047467769193e0 * wr_8_8;
  results[k++] =
      -0.275195443150643465e0 * wr_2_0 - 0.170668968756748330e0 * wr_6_0 +
      0.229608744124142517e-1 * wr_8_0 + 0.378680441835703190e0 * wr_4_0 +
      0.289424430342015779e0 * wr_8_8;
  results[k++] = 0.178511672216495808e0 * wr_4_4 -
                 0.539702667183440348e0 * wr_6_4 +
                 0.240815682454636965e0 * wr_8_4;
  results[k++] =
      -0.257293151237737600e-1 * wr_2_0 + 0.184103992420068937e0 * wr_4_0 -
      0.244042788488305946e0 * wr_6_0 + 0.102816591484539504e0 * wr_8_0 -
      0.846562319234024725e-2 * wr_10_0 - 0.259202963141782983e0 * wr_8_8 +
      0.263986312175710468e0 * wr_10_8;
  results[k++] =
      0.320459838808100699e-1 * wr_4_0 - 0.135933456535239046e0 * wr_6_0 +
      0.157491194800950571e0 * wr_8_0 - 0.557275541795665635e-1 * wr_10_0 +
      0.108283330995848359e0 * wr_8_8 - 0.473937449897801358e0 * wr_10_8;
  results[k++] =
      0.352814670705953158e-2 * wr_4_4 - 0.100393511033381371e0 * wr_6_4 +
      0.385773066243595812e0 * wr_8_4 - 0.336217778726898342e0 * wr_10_4;
  results[k++] =
      -0.210619610851333599e-1 * wr_6_4 + 0.199704541723231467e-1 * wr_8_4 +
      0.744538204639984670e-2 * wr_4_4 + 0.141741247339756986e-2 * wr_12_4 -
      0.855702616338654467e-2 * wr_10_4 - 0.121556735082245287e1 * wr_12_12;
  results[k++] =
      -0.146015955156716151e-2 * wr_4_0 - 0.315354367224047376e-1 * wr_12_0 +
      0.277088428080731886e-1 * wr_6_0 - 0.871372535197699548e-1 * wr_8_0 +
      0.919631528161244229e-1 * wr_10_0 + 0.199704541723231467e-1 * wr_8_8 -
      0.260701567186410543e0 * wr_10_8 + 0.503071616516006407e0 * wr_12_8;
  results[k++] =
      -0.275195443150643465e0 * wr_2_0 - 0.170668968756748330e0 * wr_6_0 +
      0.229608744124142517e-1 * wr_8_0 + 0.378680441835703190e0 * wr_4_0 +
      0.289424430342015779e0 * wr_8_8;
  results[k++] =
      -0.711914690342540050e-1 * wr_6_0 - 0.272080998660813571e0 * wr_2_0 -
      0.116930281741124758e-1 * wr_10_0 + 0.102388061066129525e0 * wr_8_0 +
      wr_0_0 - 0.167832167832167832e0 * wr_4_0 -
      0.374694137739714749e0 * wr_8_8 - 0.364627543149285290e0 * wr_10_8;
  results[k++] =
      0.237350527950729239e0 * wr_4_4 + 0.562817980303975967e-1 * wr_6_4 +
      0.381045338169215134e0 * wr_8_4 - 0.181238164714920059e0 * wr_10_4;
  results[k++] =
      -0.325489884111300461e-1 * wr_8_0 - 0.308432117976641271e0 * wr_2_0 +
      0.553682892784229187e-1 * wr_4_0 + 0.252374280066454258e0 * wr_6_0 -
      0.550291348236005358e-1 * wr_10_0 - 0.492340435815814845e-1 * wr_8_8 +
      0.155999237195677589e0 * wr_10_8;
  results[k++] =
      0.151815491136759440e0 * wr_4_0 + 0.360873963323444194e-1 * wr_12_0 -
      0.362955087404294705e-1 * wr_2_0 + 0.887836754301999772e-1 * wr_6_0 -
      0.293706049531269850e0 * wr_8_0 + 0.733523596854315550e-1 * wr_10_0 +
      0.246813207972113432e0 * wr_8_8 - 0.505806801114225681e-1 * wr_10_8 +
      0.575687122032725455e0 * wr_12_8;
  results[k++] =
      0.585001741542520053e-1 * wr_4_4 - 0.371569509433167832e0 * wr_6_4 +
      0.799366617466903952e-1 * wr_8_4 + 0.203334924325866751e0 * wr_10_4 +
      0.300487623817200795e0 * wr_12_4;
  results[k++] =
      0.112016598604741903e0 * wr_6_4 - 0.106211493788891442e0 * wr_8_4 -
      0.395977548709464218e-1 * wr_4_4 - 0.753841123569451663e-2 * wr_12_4 +
      0.455099580290709655e-1 * wr_10_4 - 0.718323529448967401e0 * wr_12_12;
  results[k++] =
      0.121130433669402346e0 * wr_12_0 - 0.289467189824170700e0 * wr_10_0 +
      0.154477839798330460e0 * wr_8_0 + 0.491225280508927330e-1 * wr_6_0 -
      0.310630345817568538e-1 * wr_4_0 + 0.106211493788891442e0 * wr_8_8 -
      0.311260364830310637e0 * wr_10_8 - 0.445925327251764519e0 * wr_12_8;
  results[k++] = 0.178511672216495808e0 * wr_4_4 -
                 0.539702667183440348e0 * wr_6_4 +
                 0.240815682454636965e0 * wr_8_4;
  results[k++] =
      0.237350527950729239e0 * wr_4_4 + 0.562817980303975967e-1 * wr_6_4 +
      0.381045338169215134e0 * wr_8_4 - 0.181238164714920059e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.453468331101355953e0 * wr_2_0 +
      0.167832167832167832e0 * wr_4_0 - 0.593262241952116707e-1 * wr_6_0 -
      0.231198847568679574e0 * wr_8_0 - 0.294664309987634390e0 * wr_10_0;
  results[k++] =
      -0.548118099360597643e0 * wr_4_4 - 0.205219940877058172e0 * wr_6_4 +
      0.910337787855491061e-2 * wr_8_4 - 0.387697199203305951e0 * wr_10_4;
  results[k++] =
      0.250482780967927206e0 * wr_4_4 + 0.320867009600641844e0 * wr_6_4 +
      0.342268337232774014e0 * wr_8_4 + 0.103978760796303719e0 * wr_10_4 +
      0.491251525538121015e0 * wr_12_4;
  results[k++] =
      -0.593376319876823097e-1 * wr_2_0 - 0.137886232816885319e0 * wr_4_0 -
      0.207353992743570093e0 * wr_6_0 - 0.228649849453945550e0 * wr_8_0 -
      0.118839582747259030e0 * wr_10_0 + 0.556261198856917234e0 * wr_12_0;
  results[k++] = -0.247354866528353290e0 * wr_12_8 +
                 0.549360590063440004e0 * wr_10_8 -
                 0.255300657932982077e0 * wr_8_8;
  results[k++] =
      0.329473235954887536e-1 * wr_4_4 + 0.207118764088443534e-1 * wr_6_4 +
      0.883733046691091808e-1 * wr_8_4 + 0.304735761976340388e0 * wr_10_4 +
      0.634202992402710080e0 * wr_12_4;
  results[k++] =
      -0.257293151237737600e-1 * wr_2_0 + 0.184103992420068937e0 * wr_4_0 -
      0.244042788488305946e0 * wr_6_0 + 0.102816591484539504e0 * wr_8_0 -
      0.846562319234024725e-2 * wr_10_0 - 0.259202963141782983e0 * wr_8_8 +
      0.263986312175710468e0 * wr_10_8;
  results[k++] =
      -0.325489884111300461e-1 * wr_8_0 - 0.308432117976641271e0 * wr_2_0 +
      0.553682892784229187e-1 * wr_4_0 + 0.252374280066454258e0 * wr_6_0 -
      0.550291348236005358e-1 * wr_10_0 - 0.492340435815814845e-1 * wr_8_8 +
      0.155999237195677589e0 * wr_10_8;
  results[k++] =
      -0.548118099360597643e0 * wr_4_4 - 0.205219940877058172e0 * wr_6_4 +
      0.910337787855491061e-2 * wr_8_4 - 0.387697199203305951e0 * wr_10_4;
  results[k++] =
      0.110704437493457185e-1 * wr_6_0 - 0.643100542289195716e-1 * wr_2_0 +
      0.109711107824933577e0 * wr_10_0 - 0.248141991314436240e0 * wr_8_0 +
      wr_0_0 - 0.186679630529897910e0 * wr_4_0 +
      0.368563352114301098e-1 * wr_12_0 + 0.316300246143915048e0 * wr_8_8 +
      0.206093828736552555e0 * wr_10_8 - 0.587953681976346444e0 * wr_12_8;
  results[k++] =
      0.747956970186373110e-1 * wr_8_0 + 0.136543292841788624e0 * wr_10_0 -
      0.271746488194702979e0 * wr_2_0 - 0.121853667162473256e0 * wr_4_0 +
      0.209654567466092292e0 * wr_6_0 - 0.143365241126431234e0 * wr_12_0 +
      0.142849736025817352e0 * wr_8_8 - 0.910775274216025392e-1 * wr_10_8 -
      0.175926589019774422e0 * wr_12_8;
  results[k++] =
      0.281728591606666944e0 * wr_4_4 - 0.312716401165050088e0 * wr_6_4 -
      0.142497672062254777e0 * wr_8_4 + 0.242293713824202450e-1 * wr_10_4 -
      0.642790718679104359e0 * wr_12_4;
  results[k++] =
      -0.272296912410871365e0 * wr_6_4 + 0.258185502697787597e0 * wr_8_4 +
      0.962566844919786096e-1 * wr_4_4 + 0.183248387250721587e-1 * wr_12_4 -
      0.110628435514196905e0 * wr_10_4 - 0.349229099289492979e0 * wr_12_12;
  results[k++] =
      0.306099188720687424e0 * wr_10_0 + 0.300705606619552874e-1 * wr_2_0 +
      0.751028674980780125e-1 * wr_8_0 - 0.782067399099557405e-1 * wr_4_0 -
      0.167174133463748922e0 * wr_6_0 - 0.188448889171090995e0 * wr_12_0 +
      0.258185502697787597e0 * wr_8_8 - 0.529112620376423955e-1 * wr_10_8 -
      0.173437281672750568e0 * wr_12_8;
  results[k++] =
      0.320459838808100699e-1 * wr_4_0 - 0.135933456535239046e0 * wr_6_0 +
      0.157491194800950571e0 * wr_8_0 - 0.557275541795665635e-1 * wr_10_0 +
      0.108283330995848359e0 * wr_8_8 - 0.473937449897801358e0 * wr_10_8;
  results[k++] =
      0.151815491136759440e0 * wr_4_0 + 0.360873963323444194e-1 * wr_12_0 -
      0.362955087404294705e-1 * wr_2_0 + 0.887836754301999772e-1 * wr_6_0 -
      0.293706049531269850e0 * wr_8_0 + 0.733523596854315550e-1 * wr_10_0 +
      0.246813207972113432e0 * wr_8_8 - 0.505806801114225681e-1 * wr_10_8 +
      0.575687122032725455e0 * wr_12_8;
  results[k++] =
      0.250482780967927206e0 * wr_4_4 + 0.320867009600641844e0 * wr_6_4 +
      0.342268337232774014e0 * wr_8_4 + 0.103978760796303719e0 * wr_10_4 +
      0.491251525538121015e0 * wr_12_4;
  results[k++] =
      0.747956970186373110e-1 * wr_8_0 + 0.136543292841788624e0 * wr_10_0 -
      0.271746488194702979e0 * wr_2_0 - 0.121853667162473256e0 * wr_4_0 +
      0.209654567466092292e0 * wr_6_0 - 0.143365241126431234e0 * wr_12_0 +
      0.142849736025817352e0 * wr_8_8 - 0.910775274216025392e-1 * wr_10_8 -
      0.175926589019774422e0 * wr_12_8;
  results[k++] =
      -0.343467613761751778e-1 * wr_6_0 + 0.688020916153781445e-1 * wr_2_0 -
      0.271705303364029197e0 * wr_10_0 - 0.550579715597227833e-1 * wr_8_0 +
      wr_0_0 - 0.217194570135746606e0 * wr_4_0 +
      0.218739303501721055e0 * wr_12_0 - 0.198920632969925783e0 * wr_8_8 -
      0.294872708807682887e0 * wr_10_8 - 0.300658132828813522e0 * wr_12_8;
  results[k++] =
      0.392311748885524424e0 * wr_4_4 + 0.634169110215714121e-2 * wr_6_4 +
      0.114247793420385497e0 * wr_8_4 + 0.361322613064377221e0 * wr_10_4 +
      0.299598504055618403e0 * wr_12_4;
  results[k++] =
      0.379177978759005898e0 * wr_6_4 - 0.359527606064461601e0 * wr_8_4 -
      0.134039033878720582e0 * wr_4_4 - 0.255176426619672830e-1 * wr_12_4 +
      0.154051936175643000e0 * wr_10_4 - 0.132629271368115032e0 * wr_12_12;
  results[k++] =
      -0.931171043642606224e-1 * wr_6_0 - 0.268110197499006310e0 * wr_8_0 -
      0.563132798614370314e-1 * wr_10_0 + 0.197948663722157405e0 * wr_2_0 +
      0.187765837728219952e0 * wr_4_0 + 0.138664168855061077e0 * wr_12_0 +
      0.359527606064461601e0 * wr_8_8 + 0.159639593290558322e0 * wr_10_8 +
      0.603785747365532263e-1 * wr_12_8;
  results[k++] =
      0.352814670705953158e-2 * wr_4_4 - 0.100393511033381371e0 * wr_6_4 +
      0.385773066243595812e0 * wr_8_4 - 0.336217778726898342e0 * wr_10_4;
  results[k++] =
      0.585001741542520053e-1 * wr_4_4 - 0.371569509433167832e0 * wr_6_4 +
      0.799366617466903952e-1 * wr_8_4 + 0.203334924325866751e0 * wr_10_4 +
      0.300487623817200795e0 * wr_12_4;
  results[k++] =
      -0.593376319876823097e-1 * wr_2_0 - 0.137886232816885319e0 * wr_4_0 -
      0.207353992743570093e0 * wr_6_0 - 0.228649849453945550e0 * wr_8_0 -
      0.118839582747259030e0 * wr_10_0 + 0.556261198856917234e0 * wr_12_0;
  results[k++] =
      0.281728591606666944e0 * wr_4_4 - 0.312716401165050088e0 * wr_6_4 -
      0.142497672062254777e0 * wr_8_4 + 0.242293713824202450e-1 * wr_10_4 -
      0.642790718679104359e0 * wr_12_4;
  results[k++] =
      0.392311748885524424e0 * wr_4_4 + 0.634169110215714121e-2 * wr_6_4 +
      0.114247793420385497e0 * wr_8_4 + 0.361322613064377221e0 * wr_10_4 +
      0.299598504055618403e0 * wr_12_4;
  results[k++] =
      0.390304106547445202e-1 * wr_6_0 - 0.122740700929318306e0 * wr_8_0 +
      0.481614641307647013e0 * wr_2_0 - 0.238293746337826072e0 * wr_10_0 +
      wr_0_0 + 0.233237350884409708e0 * wr_4_0 -
      0.263857854354556468e0 * wr_12_0;
  results[k++] = -0.195551192139135703e0 * wr_12_8 +
                 0.434307680333633823e0 * wr_10_8 -
                 0.201832891801939590e0 * wr_8_8;
  results[k++] =
      0.477531016271616133e0 * wr_4_4 + 0.378243465991874045e0 * wr_6_4 +
      0.231331545219146145e0 * wr_8_4 + 0.308865093702618546e-1 * wr_10_4 -
      0.945462235875312489e-1 * wr_12_4;
  results[k++] =
      -0.210619610851333599e-1 * wr_6_4 + 0.199704541723231467e-1 * wr_8_4 +
      0.744538204639984670e-2 * wr_4_4 + 0.141741247339756986e-2 * wr_12_4 -
      0.855702616338654467e-2 * wr_10_4 - 0.121556735082245287e1 * wr_12_12;
  results[k++] =
      0.112016598604741903e0 * wr_6_4 - 0.106211493788891442e0 * wr_8_4 -
      0.395977548709464218e-1 * wr_4_4 - 0.753841123569451663e-2 * wr_12_4 +
      0.455099580290709655e-1 * wr_10_4 - 0.718323529448967401e0 * wr_12_12;
  results[k++] = -0.247354866528353290e0 * wr_12_8 +
                 0.549360590063440004e0 * wr_10_8 -
                 0.255300657932982077e0 * wr_8_8;
  results[k++] =
      -0.272296912410871365e0 * wr_6_4 + 0.258185502697787597e0 * wr_8_4 +
      0.962566844919786096e-1 * wr_4_4 + 0.183248387250721587e-1 * wr_12_4 -
      0.110628435514196905e0 * wr_10_4 - 0.349229099289492979e0 * wr_12_12;
  results[k++] =
      0.379177978759005898e0 * wr_6_4 - 0.359527606064461601e0 * wr_8_4 -
      0.134039033878720582e0 * wr_4_4 - 0.255176426619672830e-1 * wr_12_4 +
      0.154051936175643000e0 * wr_10_4 - 0.132629271368115032e0 * wr_12_12;
  results[k++] = -0.195551192139135703e0 * wr_12_8 +
                 0.434307680333633823e0 * wr_10_8 -
                 0.201832891801939590e0 * wr_8_8;
  results[k++] =
      wr_0_0 - 0.894427190999915880e0 * wr_2_0 +
      0.529411764705882353e0 * wr_4_0 - 0.223253948945138656e0 * wr_6_0 +
      0.638251644832455195e-1 * wr_8_0 - 0.111032928401137596e-1 * wr_10_0 +
      0.888410284022075649e-3 * wr_12_0;
  results[k++] =
      0.293709999396443901e0 * wr_6_4 - 0.278488886157896097e0 * wr_8_4 -
      0.103826189190803311e0 * wr_4_4 - 0.197658810128542370e-1 * wr_12_4 +
      0.119328116651854649e0 * wr_10_4 + 0.342447306152222471e-1 * wr_12_12;
  results[k++] =
      -0.146015955156716151e-2 * wr_4_0 - 0.315354367224047376e-1 * wr_12_0 +
      0.277088428080731886e-1 * wr_6_0 - 0.871372535197699548e-1 * wr_8_0 +
      0.919631528161244229e-1 * wr_10_0 + 0.199704541723231467e-1 * wr_8_8 -
      0.260701567186410543e0 * wr_10_8 + 0.503071616516006407e0 * wr_12_8;
  results[k++] =
      0.121130433669402346e0 * wr_12_0 - 0.289467189824170700e0 * wr_10_0 +
      0.154477839798330460e0 * wr_8_0 + 0.491225280508927330e-1 * wr_6_0 -
      0.310630345817568538e-1 * wr_4_0 + 0.106211493788891442e0 * wr_8_8 -
      0.311260364830310637e0 * wr_10_8 - 0.445925327251764519e0 * wr_12_8;
  results[k++] =
      0.329473235954887536e-1 * wr_4_4 + 0.207118764088443534e-1 * wr_6_4 +
      0.883733046691091808e-1 * wr_8_4 + 0.304735761976340388e0 * wr_10_4 +
      0.634202992402710080e0 * wr_12_4;
  results[k++] =
      0.306099188720687424e0 * wr_10_0 + 0.300705606619552874e-1 * wr_2_0 +
      0.751028674980780125e-1 * wr_8_0 - 0.782067399099557405e-1 * wr_4_0 -
      0.167174133463748922e0 * wr_6_0 - 0.188448889171090995e0 * wr_12_0 +
      0.258185502697787597e0 * wr_8_8 - 0.529112620376423955e-1 * wr_10_8 -
      0.173437281672750568e0 * wr_12_8;
  results[k++] =
      -0.931171043642606224e-1 * wr_6_0 - 0.268110197499006310e0 * wr_8_0 -
      0.563132798614370314e-1 * wr_10_0 + 0.197948663722157405e0 * wr_2_0 +
      0.187765837728219952e0 * wr_4_0 + 0.138664168855061077e0 * wr_12_0 +
      0.359527606064461601e0 * wr_8_8 + 0.159639593290558322e0 * wr_10_8 +
      0.603785747365532263e-1 * wr_12_8;
  results[k++] =
      0.477531016271616133e0 * wr_4_4 + 0.378243465991874045e0 * wr_6_4 +
      0.231331545219146145e0 * wr_8_4 + 0.308865093702618546e-1 * wr_10_4 -
      0.945462235875312489e-1 * wr_12_4;
  results[k++] =
      0.293709999396443901e0 * wr_6_4 - 0.278488886157896097e0 * wr_8_4 -
      0.103826189190803311e0 * wr_4_4 - 0.197658810128542370e-1 * wr_12_4 +
      0.119328116651854649e0 * wr_10_4 + 0.342447306152222471e-1 * wr_12_12;
  results[k++] =
      -0.274774091009401422e0 * wr_6_0 + 0.178885438199983176e0 * wr_2_0 +
      0.848608809922980196e-1 * wr_10_0 - 0.613703504646591534e-1 * wr_8_0 +
      wr_0_0 - 0.244343891402714932e0 * wr_4_0 +
      0.375797550141338000e-1 * wr_12_0 - 0.278488886157896097e0 * wr_8_8 -
      0.123656297241931533e0 * wr_10_8 - 0.467690428844821034e-1 * wr_12_8;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 4)
void BoxMatrix::setup___oa_4_B1(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 0)
  if (lmax >= 0) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 0, 1));
  }
#endif
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 3, 1));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 4, 2));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 5, 2));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 2));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 4)
void BoxMatrix::evaluate___oa_4_B1(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 0)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 1)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = -0.816496580927726033e0 * wr_1_0;
  results[k++] = 0.577350269189625763e0 * wr_1_0;
  results[k++] = wr_0_0 + 0.447213595499957940e0 * wr_2_0;
  results[k++] = -0.632455532033675868e0 * wr_2_0;
  results[k++] = -0.632455532033675868e0 * wr_2_0;
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] = 0.534522483824848769e0 * wr_2_0;
  results[k++] = -0.707106781186547525e0 * wr_2_0;
  results[k++] = 0.462910049886275731e0 * wr_2_0;
  results[k++] =
      -0.683130051063973227e0 * wr_1_0 - 0.191662969499981974e0 * wr_3_0;
  results[k++] =
      -0.138013111868470844e0 * wr_1_0 + 0.542104741743150745e0 * wr_3_0;
  results[k++] =
      0.507092552837109947e0 * wr_3_0 + 0.516397779494322249e0 * wr_1_0;
  results[k++] =
      -0.358568582800318092e0 * wr_3_0 - 0.365148371670110743e0 * wr_1_0;
  results[k++] = -0.553283335172488125e0 * wr_3_0;
  results[k++] =
      0.717137165600636186e0 * wr_1_0 - 0.782460796435951591e-1 * wr_3_0;
  results[k++] = wr_0_0 + 0.136902121071415696e0 * wr_2_0 +
                 0.408163265306122449e-1 * wr_4_0 +
                 0.341493888381255327e0 * wr_4_4;
  results[k++] = -0.482945288416295188e0 * wr_2_0 -
                 0.269974623578019447e0 * wr_4_0 +
                 0.451753951452625620e0 * wr_4_4;
  results[k++] = -0.158080952906425179e0 * wr_2_0 +
                 0.530219634970064477e0 * wr_4_0 +
                 0.295742382575294665e0 * wr_4_4;
  results[k++] = -0.482945288416295188e0 * wr_2_0 -
                 0.269974623578019447e0 * wr_4_0 +
                 0.451753951452625620e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.500000000000000000e0 * wr_4_0 +
                 0.597614304667196822e0 * wr_4_4;
  results[k++] = -0.418242888406514220e0 * wr_2_0 -
                 0.233804882395706122e0 * wr_4_0 +
                 0.391230398217975797e0 * wr_4_4;
  results[k++] = -0.158080952906425179e0 * wr_2_0 +
                 0.530219634970064477e0 * wr_4_0 +
                 0.295742382575294665e0 * wr_4_4;
  results[k++] = -0.418242888406514220e0 * wr_2_0 -
                 0.233804882395706122e0 * wr_4_0 +
                 0.391230398217975797e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.182536161428554261e0 * wr_2_0 -
                 0.112244897959183673e0 * wr_4_0 +
                 0.256120416285941495e0 * wr_4_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = -0.267261241912424385e0 * wr_3_0;
  results[k++] = 0.577350269189625763e0 * wr_3_0;
  results[k++] = -0.654653670707977142e0 * wr_3_0;
  results[k++] = 0.408248290463863017e0 * wr_3_0;
  results[k++] = 0.383325938999963950e0 * wr_2_0 +
                 0.476190476190476190e-1 * wr_4_0 -
                 0.398409536444797881e0 * wr_4_4;
  results[k++] = 0.135526185435787686e0 * wr_2_0 -
                 0.336717514850736916e0 * wr_4_0 -
                 0.563436169819011052e0 * wr_4_4;
  results[k++] = -0.621059003408118797e0 * wr_2_0 -
                 0.257172249936819850e0 * wr_4_0 -
                 0.430331482911935208e0 * wr_4_4;
  results[k++] =
      0.509175077217315555e0 * wr_4_0 - 0.608580619450184572e0 * wr_4_4;
  results[k++] = 0.391230398217975797e0 * wr_2_0 +
                 0.524890659167823879e0 * wr_4_0 -
                 0.292770021884559954e0 * wr_4_4;
  results[k++] = -0.442626668137990502e0 * wr_2_0 -
                 0.247435829652696755e0 * wr_4_0 -
                 0.414039335605412531e0 * wr_4_4;
  results[k++] =
      -0.509175077217315555e0 * wr_4_0 - 0.121716123890036914e0 * wr_4_4;
  results[k++] = 0.621059003408118797e0 * wr_2_0 -
                 0.102868899974727940e0 * wr_4_0 -
                 0.172132593164774083e0 * wr_4_4;
  results[k++] =
      -0.585540043769119909e0 * wr_1_0 + 0.638876564999939914e-1 * wr_3_0;
  results[k++] =
      -0.110656667034497625e0 * wr_1_0 + 0.394405318873307737e0 * wr_3_0 +
      0.802618883884812008e-1 * wr_5_0 - 0.402911482012690149e0 * wr_5_4;
  results[k++] = 0.184427778390829375e0 * wr_3_0 -
                 0.367806178960312303e0 * wr_5_0 -
                 0.615457454896663663e0 * wr_5_4;
  results[k++] =
      0.542104741743150745e0 * wr_1_0 + 0.253024038425529880e0 * wr_3_0 +
      0.655335574479976551e-1 * wr_5_0 + 0.328975847479884493e0 * wr_5_4;
  results[k++] = -0.346770991073532924e0 * wr_5_0 -
                 0.358568582800318092e0 * wr_1_0 -
                 0.243432247780073828e0 * wr_3_0;
  results[k++] =
      -0.782460796435951591e-1 * wr_1_0 + 0.796819072889595762e-1 * wr_3_0 +
      0.454029804402663008e0 * wr_5_0 - 0.379868588198793162e0 * wr_5_4;
  results[k++] = -0.391230398217975796e0 * wr_3_0 -
                 0.312093891966179631e0 * wr_5_0 +
                 0.522232967867093514e0 * wr_5_4;
  results[k++] = 0.677630927178938431e0 * wr_1_0 +
                 0.471841613625583116e0 * wr_5_0 +
                 0.394771016975861392e0 * wr_5_4;
  results[k++] = -0.207019667802706266e0 * wr_1_0 -
                 0.391520091258942206e0 * wr_3_0 -
                 0.120124995026074528e0 * wr_5_0;
  results[k++] = -0.162650012158088863e0 * wr_3_0 +
                 0.518999296107681979e0 * wr_5_0 +
                 0.372193684159388346e0 * wr_5_4;
  results[k++] = -0.430331482911935208e0 * wr_3_0 -
                 0.171642883514812408e0 * wr_5_0 +
                 0.369274472937998197e0 * wr_5_4;
  results[k++] =
      0.774596669241483376e0 * wr_1_0 + 0.563436169819011052e-1 * wr_3_0 -
      0.112366643743873681e0 * wr_5_0 + 0.134303827337563383e0 * wr_5_4;
  results[k++] = wr_0_0 - 0.127775312999987983e0 * wr_2_0 -
                 0.714285714285714286e-1 * wr_4_0 +
                 0.597614304667196822e0 * wr_4_4;
  results[k++] = -0.483045891539647953e0 * wr_2_0;
  results[k++] =
      -0.130410132739325265e0 * wr_2_0 + 0.381738661212962820e0 * wr_4_0 +
      0.102934275831326886e0 * wr_6_0 - 0.212923652279679967e0 * wr_4_4 -
      0.385144793516510629e0 * wr_6_4;
  results[k++] =
      0.208298895225265454e0 * wr_4_0 - 0.385144793516510629e0 * wr_6_0 +
      0.497929597731969196e-1 * wr_4_4 - 0.617605654987961318e0 * wr_6_4;
  results[k++] = -0.483045891539647953e0 * wr_2_0;
  results[k++] = wr_0_0 + 0.318181818181818182e0 * wr_4_0 +
                 0.105056855345687334e0 * wr_6_0 +
                 0.393086758835432444e0 * wr_6_4 -
                 0.380300012060943431e0 * wr_4_4;
  results[k++] =
      -0.394405318873307737e0 * wr_2_0 - 0.120261423230208663e0 * wr_4_0 -
      0.389136037874045427e0 * wr_6_0 + 0.208001961510195185e0 * wr_6_4 -
      0.201235851101624140e0 * wr_4_4;
  results[k++] =
      -0.105409255338945978e0 * wr_2_0 + 0.128564869306645005e0 * wr_4_0 +
      0.416003923020390371e0 * wr_6_0 - 0.222363450213740244e0 * wr_6_4 +
      0.215130173930895129e0 * wr_4_4;
  results[k++] =
      -0.130410132739325265e0 * wr_2_0 + 0.381738661212962820e0 * wr_4_0 +
      0.102934275831326886e0 * wr_6_0 - 0.212923652279679967e0 * wr_4_4 -
      0.385144793516510629e0 * wr_6_4;
  results[k++] =
      -0.394405318873307737e0 * wr_2_0 - 0.120261423230208663e0 * wr_4_0 -
      0.389136037874045427e0 * wr_6_0 + 0.208001961510195185e0 * wr_6_4 -
      0.201235851101624140e0 * wr_4_4;
  results[k++] =
      wr_0_0 + 0.127775312999987983e0 * wr_2_0 +
      0.714285714285714286e-1 * wr_4_0 + 0.416025147168921843e0 * wr_6_0 +
      0.162985719454690042e0 * wr_4_4 + 0.424533699542267040e0 * wr_6_4;
  results[k++] =
      -0.278886675511358516e0 * wr_2_0 - 0.340150671524903763e0 * wr_4_0 -
      0.628938814136691911e-1 * wr_6_0 + 0.406557814090870854e0 * wr_4_4 +
      0.134472774842479787e0 * wr_6_4;
  results[k++] =
      0.208298895225265454e0 * wr_4_0 - 0.385144793516510629e0 * wr_6_0 +
      0.497929597731969196e-1 * wr_4_4 - 0.617605654987961318e0 * wr_6_4;
  results[k++] =
      -0.105409255338945978e0 * wr_2_0 + 0.128564869306645005e0 * wr_4_0 +
      0.416003923020390371e0 * wr_6_0 - 0.222363450213740244e0 * wr_6_4 +
      0.215130173930895129e0 * wr_4_4;
  results[k++] =
      -0.278886675511358516e0 * wr_2_0 - 0.340150671524903763e0 * wr_4_0 -
      0.628938814136691911e-1 * wr_6_0 + 0.406557814090870854e0 * wr_4_4 +
      0.134472774842479787e0 * wr_6_4;
  results[k++] =
      wr_0_0 + 0.298142396999971959e0 * wr_2_0 -
      0.454545454545454545e-1 * wr_4_0 - 0.100854581131859840e0 * wr_6_0 +
      0.380300012060943431e0 * wr_4_4 + 0.125787762827338382e0 * wr_6_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] =
      0.890870806374747949e-1 * wr_4_0 + 0.745355992499929899e0 * wr_4_4;
  results[k++] =
      -0.333333333333333333e0 * wr_4_0 + 0.557773351022717034e0 * wr_4_4;
  results[k++] =
      0.592156525463792088e0 * wr_4_0 + 0.330289129537908181e0 * wr_4_4;
  results[k++] =
      -0.623609564462323566e0 * wr_4_0 + 0.149071198499985980e0 * wr_4_4;
  results[k++] = wr_4_4;
  results[k++] =
      0.376050716545177472e0 * wr_4_0 + 0.449466574975494725e-1 * wr_4_4;
  results[k++] = -0.142857142857142857e0 * wr_3_0;
  results[k++] = -0.673435029701473833e-1 * wr_3_0 +
                 0.134303827337563383e0 * wr_5_0 +
                 0.674199862463242087e0 * wr_5_4;
  results[k++] = 0.445435403187373976e0 * wr_3_0 +
                 0.710669054518701448e-1 * wr_5_0 -
                 0.356753034006337881e0 * wr_5_4;
  results[k++] =
      0.125988157669742409e0 * wr_3_0 - 0.402015126103684830e0 * wr_5_0;
  results[k++] = -0.580288457473997168e0 * wr_3_0 -
                 0.294579122654902737e0 * wr_5_0 -
                 0.492925153153671240e0 * wr_5_4;
  results[k++] = 0.746047096952990733e-1 * wr_3_0 +
                 0.476111760514892467e0 * wr_5_0 -
                 0.398343678185575356e0 * wr_5_4;
  results[k++] = 0.333333333333333333e0 * wr_3_0 +
                 0.531816023478310428e0 * wr_5_0 -
                 0.381385035698236927e0 * wr_5_4;
  results[k++] = -0.471404520791031683e0 * wr_3_0 -
                 0.188025358272588736e0 * wr_5_0 -
                 0.404519917477945253e0 * wr_5_4;
  results[k++] = -0.426401432711220869e0 * wr_5_4;
  results[k++] = 0.301511344577763623e0 * wr_5_4;
  results[k++] =
      -0.481045692920834652e0 * wr_5_0 - 0.172487872372820691e0 * wr_5_4;
  results[k++] = 0.568535243614961158e0 * wr_3_0 -
                 0.113383557174967921e0 * wr_5_0 -
                 0.203278907045435427e0 * wr_5_4;
  results[k++] = 0.244897959183673469e0 * wr_2_0 -
                 0.760567339285642754e-1 * wr_4_0 -
                 0.636336290267677108e0 * wr_4_4;
  results[k++] = 0.809923870734058345e-1 * wr_2_0 -
                 0.201227203506789661e0 * wr_4_0 +
                 0.336717514850736916e0 * wr_4_4;
  results[k++] =
      0.589132927744516084e-2 * wr_2_0 - 0.107782467890744440e0 * wr_4_0 +
      0.162753380463507473e0 * wr_6_0 - 0.601181882969189260e-1 * wr_4_4 +
      0.608967388233712415e0 * wr_6_4;
  results[k++] = -0.572702661240909395e0 * wr_2_0 +
                 0.284578240317712772e-1 * wr_4_0 -
                 0.476190476190476190e-1 * wr_4_4;
  results[k++] =
      0.383306383050712647e0 * wr_4_0 + 0.119598820814594893e0 * wr_6_0 +
      0.458138755162699669e0 * wr_4_4 - 0.447497811350381995e0 * wr_6_4;
  results[k++] =
      0.440866714177405458e-1 * wr_2_0 + 0.134428355716043030e0 * wr_4_0 -
      0.426277171763598693e0 * wr_6_0 - 0.224941663320633414e0 * wr_4_4 -
      0.227854732648910462e0 * wr_6_4;
  results[k++] =
      0.414491755338569406e0 * wr_2_0 + 0.298730891743469831e0 * wr_4_0 +
      0.832779295298808125e-1 * wr_6_0 + 0.166624130541759679e0 * wr_4_4 +
      0.311597480180718286e0 * wr_6_4;
  results[k++] =
      -0.438656842044993407e0 * wr_2_0 - 0.145914027412759308e0 * wr_4_0 -
      0.385582209663746804e0 * wr_6_0 + 0.244160868093706058e0 * wr_4_4 -
      0.206102360428139548e0 * wr_6_4;
  results[k++] =
      -0.522124203319862291e-1 * wr_2_0 + 0.175125781698170017e0 * wr_4_0 +
      0.396664414010958819e0 * wr_6_0 - 0.399602021351977223e0 * wr_4_4 -
      0.404777000387580261e0 * wr_6_4;
  results[k++] =
      -0.338798178409059045e0 * wr_4_0 - 0.338276548879659426e0 * wr_6_0 +
      0.809882551249770863e-1 * wr_4_4 + 0.542449263380560261e0 * wr_6_4;
  results[k++] =
      0.566946709513840841e0 * wr_2_0 + 0.256107349917732296e-1 * wr_4_0 +
      0.447497811350381995e0 * wr_6_0 - 0.428549564355483348e-1 * wr_4_4 +
      0.239197641629189786e0 * wr_6_4;
  results[k++] =
      -0.288675134594812882e0 * wr_2_0 - 0.352089395109765171e0 * wr_4_0 -
      0.651013521854029892e-1 * wr_6_0 - 0.420827318078432483e0 * wr_4_4 -
      0.139192545881991409e0 * wr_6_4;
  results[k++] =
      0.202158904543936686e0 * wr_6_4 - 0.434628585212506780e0 * wr_4_4;
  results[k++] =
      -0.267431093370250953e0 * wr_6_4 + 0.574959574576068970e0 * wr_4_4;
  results[k++] =
      -0.376399396004920483e0 * wr_4_4 + 0.175074746936282557e0 * wr_6_4;
  results[k++] =
      -0.163442390900179900e0 * wr_4_0 + 0.509971085459158462e0 * wr_6_0 +
      0.408886516917725399e0 * wr_6_4 - 0.195351021581910376e-1 * wr_4_4;
  results[k++] =
      -0.432427920007682282e0 * wr_4_0 - 0.134925666795860087e0 * wr_6_0 -
      0.129212555367036627e0 * wr_4_4 + 0.324543611463511761e0 * wr_6_4;
  results[k++] =
      0.696310623822791351e0 * wr_2_0 - 0.107958379271882620e0 * wr_6_0 -
      0.253768421017764782e0 * wr_4_4 + 0.603291892671168468e-1 * wr_6_4;
  results[k++] =
      -0.436435780471984762e0 * wr_1_0 + 0.214285714285714286e0 * wr_3_0;
  results[k++] =
      -0.673435029701473833e-1 * wr_1_0 + 0.308606699924183820e0 * wr_3_0 -
      0.879224935566662375e-1 * wr_5_0 - 0.441367414752374766e0 * wr_5_4;
  results[k++] = 0.116642368703960862e0 * wr_3_0 -
                 0.232621052599617716e0 * wr_5_0 +
                 0.389249472080761484e0 * wr_5_4;
  results[k++] =
      0.991899501072692640e-2 * wr_3_0 - 0.133905889196690644e0 * wr_5_0 +
      0.182429788374108717e0 * wr_7_0 - 0.960288898357475785e-1 * wr_5_4 +
      0.560168524041860875e0 * wr_7_4;
  results[k++] = 0.583211843519804309e0 * wr_1_0 -
                 0.913717355809759004e-1 * wr_5_0 +
                 0.458682472293862990e0 * wr_5_4;
  results[k++] = -0.314970394174356024e0 * wr_1_0 -
                 0.288675134594812882e0 * wr_3_0 -
                 0.657951694959768986e-1 * wr_5_0;
  results[k++] =
      -0.714285714285714286e-1 * wr_1_0 + 0.694329650750884848e-1 * wr_3_0 +
      0.325200016620534423e0 * wr_5_0 + 0.153241022234251322e0 * wr_7_0 +
      0.272081854534618140e0 * wr_5_4 - 0.470541560195163135e0 * wr_7_4;
  results[k++] =
      0.742269619025205484e-1 * wr_3_0 + 0.125257489861332617e0 * wr_5_0 -
      0.436857449752058096e0 * wr_7_0 - 0.269480403748219489e0 * wr_5_4 -
      0.335353391331117587e0 * wr_7_4;
  results[k++] = -0.422027969071997941e0 * wr_3_0 -
                 0.420827318078432483e-1 * wr_5_0 -
                 0.704178790219530341e-1 * wr_5_4;
  results[k++] =
      0.683876505540241508e0 * wr_1_0 - 0.155400786081324476e-1 * wr_3_0 +
      0.317682317682317682e0 * wr_5_0 + 0.133379189733967221e0 * wr_7_0 -
      0.265792096341494530e0 * wr_5_4 + 0.409553859142554465e0 * wr_7_4;
  results[k++] =
      -0.217124059336723765e0 * wr_1_0 - 0.351241137774355806e0 * wr_3_0 -
      0.396466230429259329e-1 * wr_5_0 - 0.423465799328851872e0 * wr_7_0;
  results[k++] =
      -0.492365963917330931e-1 * wr_1_0 - 0.263723879135579007e-1 * wr_3_0 +
      0.222516119953808662e0 * wr_5_0 + 0.344917319424202484e0 * wr_7_0 -
      0.265957632606875846e0 * wr_5_4 - 0.330969498355223276e0 * wr_7_4;
  results[k++] =
      -0.136363636363636364e0 * wr_3_0 + 0.368180323946522604e0 * wr_5_0 +
      0.119428330605589725e0 * wr_7_0 - 0.264035793944933257e0 * wr_5_4 -
      0.366716380479073968e0 * wr_7_4;
  results[k++] =
      -0.392772163539870317e0 * wr_3_0 - 0.662800336042560868e-1 * wr_5_0 -
      0.412791489439229004e0 * wr_7_0 - 0.142595626304613386e0 * wr_5_4 +
      0.316879169565807524e0 * wr_7_4;
  results[k++] =
      0.748331477354788278e0 * wr_1_0 + 0.296907847610082194e-1 * wr_3_0 +
      0.125257489861332617e0 * wr_5_0 + 0.374449242644621225e0 * wr_7_0 +
      0.149711335415677494e0 * wr_5_4 + 0.359307204997625986e0 * wr_7_4;
  results[k++] =
      -0.133333333333333333e0 * wr_1_0 - 0.319391639345407030e0 * wr_3_0 -
      0.267811778393381289e0 * wr_5_0 - 0.145943830699286974e-1 * wr_7_0;
  results[k++] =
      0.196800661251332709e0 * wr_5_4 - 0.820002755213886286e-1 * wr_7_4;
  results[k++] =
      -0.425138018281696883e0 * wr_5_4 + 0.177140840950707035e0 * wr_7_4;
  results[k++] =
      0.482061201108086320e0 * wr_5_4 - 0.200858833795035967e0 * wr_7_4;
  results[k++] =
      -0.300617975667198281e0 * wr_5_4 + 0.125257489861332617e0 * wr_7_4;
  results[k++] =
      -0.396098961957259403e0 * wr_7_0 + 0.222021089040385224e0 * wr_5_0 +
      0.796097872489941651e-1 * wr_5_4 - 0.608130319263149874e0 * wr_7_4;
  results[k++] =
      0.159873456405428874e0 * wr_5_0 + 0.388941615659623906e0 * wr_7_0 -
      0.118425263141623565e0 * wr_3_0 + 0.286627993453415340e0 * wr_5_4 -
      0.119428330605589725e0 * wr_7_4;
  results[k++] =
      -0.313323795220119683e0 * wr_3_0 - 0.302132433492207936e0 * wr_5_0 -
      0.317533203635357844e-1 * wr_7_0 + 0.397229061149478654e0 * wr_5_4 +
      0.178753077517265394e0 * wr_7_4;
  results[k++] =
      0.804030252207369660e0 * wr_1_0 - 0.807482893971504563e-1 * wr_5_0 -
      0.902076272852915989e-1 * wr_7_0 + 0.167478613262486651e0 * wr_3_0 +
      0.202676597848803337e0 * wr_5_4 + 0.912044690319615017e-1 * wr_7_4;
  results[k++] = wr_0_0 - 0.456340403571385652e0 * wr_2_0 +
                 0.306122448979591837e-1 * wr_4_0 +
                 0.256120416285941495e0 * wr_4_4;
  results[k++] = 0.229081064496363758e0 * wr_4_0 -
                 0.426867360476569158e0 * wr_2_0 -
                 0.383325938999963950e0 * wr_4_4;
  results[k++] =
      -0.842574310045684138e-1 * wr_2_0 - 0.931075557271253006e-1 * wr_6_0 +
      0.332963624949660713e0 * wr_4_0 + 0.185718236856843407e0 * wr_4_4 -
      0.348376573650864772e0 * wr_6_4;
  results[k++] =
      0.136363636363636364e0 * wr_4_0 - 0.252136452829649601e0 * wr_6_0 -
      0.325971438909380084e-1 * wr_4_4 + 0.404317809087873371e0 * wr_6_4;
  results[k++] =
      0.235317848374554953e-1 * wr_8_4 - 0.602721403756178067e-1 * wr_6_4 +
      0.336412752057597128e-1 * wr_4_4 + 0.100390025087060648e1 * wr_8_8;
  results[k++] =
      0.126508256466194527e-1 * wr_4_0 - 0.152044001819471048e0 * wr_6_0 +
      0.196881037264996714e0 * wr_8_0 + 0.151206287445408497e-2 * wr_4_4 -
      0.121906406254820237e0 * wr_6_4 + 0.523549161330594315e0 * wr_8_4;
  results[k++] = 0.229081064496363758e0 * wr_4_0 -
                 0.426867360476569158e0 * wr_2_0 -
                 0.383325938999963950e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.136363636363636364e0 * wr_4_0 -
                 0.113461403773342320e0 * wr_6_0 +
                 0.162985719454690042e0 * wr_4_4 +
                 0.424533699542267040e0 * wr_6_4;
  results[k++] =
      -0.365704429366253377e0 * wr_2_0 - 0.121931800777802670e0 * wr_6_0 -
      0.173032750947211973e0 * wr_4_0 + 0.289539171997516913e0 * wr_4_4 -
      0.651752890089877105e-1 * wr_6_4;
  results[k++] =
      0.112137584019199043e0 * wr_4_0 - 0.977914316728140252e-1 * wr_2_0 +
      0.283022466361511360e0 * wr_6_0 + 0.177689412330383525e0 * wr_8_0 -
      0.187642068041940394e0 * wr_4_4 + 0.151281871697789760e0 * wr_6_4 -
      0.472514489435992114e0 * wr_8_4;
  results[k++] =
      -0.125874125874125874e0 * wr_4_4 + 0.225517699253106284e0 * wr_6_4 -
      0.880478765610403858e-1 * wr_8_4 + 0.751250157850843527e0 * wr_8_8;
  results[k++] =
      0.946701104589257973e-1 * wr_4_0 + 0.113779312504498887e0 * wr_6_0 -
      0.441996832438974345e0 * wr_8_0 + 0.282881061173388288e-1 * wr_4_4 -
      0.273679203275047888e0 * wr_6_4 - 0.391788317366384034e0 * wr_8_4;
  results[k++] =
      -0.842574310045684138e-1 * wr_2_0 - 0.931075557271253006e-1 * wr_6_0 +
      0.332963624949660713e0 * wr_4_0 + 0.185718236856843407e0 * wr_4_4 -
      0.348376573650864772e0 * wr_6_4;
  results[k++] =
      -0.365704429366253377e0 * wr_2_0 - 0.121931800777802670e0 * wr_6_0 -
      0.173032750947211973e0 * wr_4_0 + 0.289539171997516913e0 * wr_4_4 -
      0.651752890089877105e-1 * wr_6_4;
  results[k++] =
      wr_0_0 + 0.133206140943316870e0 * wr_2_0 +
      0.443128300271157414e-1 * wr_4_0 + 0.284914191697504049e0 * wr_6_0 +
      0.169235284195727318e0 * wr_8_0 - 0.101113018762599916e0 * wr_4_4 -
      0.290741260898643488e0 * wr_6_4 + 0.450033138483319333e0 * wr_8_4;
  results[k++] =
      -0.285249702782738884e0 * wr_2_0 - 0.744860445817002406e-2 * wr_6_0 -
      0.441923769072504615e0 * wr_8_0 - 0.278892608932194443e0 * wr_4_0 -
      0.333340425127667655e0 * wr_4_4 - 0.159257862240395325e-1 * wr_6_4 +
      0.130574517871333565e0 * wr_8_4;
  results[k++] =
      0.156414373976551602e0 * wr_8_4 - 0.400625331660923511e0 * wr_6_4 +
      0.223611555070243167e0 * wr_4_4 + 0.444857683227080851e0 * wr_8_8;
  results[k++] =
      -0.724261233064682466e-1 * wr_2_0 + 0.247042261995184527e0 * wr_6_0 +
      0.309318819210894948e0 * wr_8_0 + 0.150758879673549627e0 * wr_4_4 -
      0.138051900013710304e0 * wr_6_4 - 0.260121221908254164e0 * wr_8_4;
  results[k++] =
      0.136363636363636364e0 * wr_4_0 - 0.252136452829649601e0 * wr_6_0 -
      0.325971438909380084e-1 * wr_4_4 + 0.404317809087873371e0 * wr_6_4;
  results[k++] =
      0.112137584019199043e0 * wr_4_0 - 0.977914316728140252e-1 * wr_2_0 +
      0.283022466361511360e0 * wr_6_0 + 0.177689412330383525e0 * wr_8_0 -
      0.187642068041940394e0 * wr_4_4 + 0.151281871697789760e0 * wr_6_4 -
      0.472514489435992114e0 * wr_8_4;
  results[k++] =
      -0.285249702782738884e0 * wr_2_0 - 0.744860445817002406e-2 * wr_6_0 -
      0.441923769072504615e0 * wr_8_0 - 0.278892608932194443e0 * wr_4_0 -
      0.333340425127667655e0 * wr_4_4 - 0.159257862240395325e-1 * wr_6_4 +
      0.130574517871333565e0 * wr_8_4;
  results[k++] =
      wr_0_0 + 0.243934688454522513e0 * wr_2_0 -
      0.104895104895104895e-1 * wr_4_0 + 0.181538246037347712e0 * wr_6_0 +
      0.322928552495928659e0 * wr_8_0 - 0.877615412448330996e-1 * wr_4_4 +
      0.226417973089209088e0 * wr_6_4 + 0.353597465951179476e0 * wr_8_4;
  results[k++] =
      -0.164722493862188467e0 * wr_8_4 + 0.421904982629324647e0 * wr_6_4 -
      0.235488926440317990e0 * wr_4_4 + 0.200780050174121298e0 * wr_8_8;
  results[k++] =
      -0.196130869080215880e0 * wr_2_0 - 0.212861602547259468e0 * wr_6_0 +
      0.107389656689998208e-1 * wr_8_0 - 0.316270641165486318e0 * wr_4_0 +
      0.370455404241250817e0 * wr_4_4 + 0.170668968756748331e0 * wr_6_4 +
      0.666335296238938220e-1 * wr_8_4;
  results[k++] =
      0.235317848374554953e-1 * wr_8_4 - 0.602721403756178067e-1 * wr_6_4 +
      0.336412752057597128e-1 * wr_4_4 + 0.100390025087060648e1 * wr_8_8;
  results[k++] =
      -0.125874125874125874e0 * wr_4_4 + 0.225517699253106284e0 * wr_6_4 -
      0.880478765610403858e-1 * wr_8_4 + 0.751250157850843527e0 * wr_8_8;
  results[k++] =
      0.156414373976551602e0 * wr_8_4 - 0.400625331660923511e0 * wr_6_4 +
      0.223611555070243167e0 * wr_4_4 + 0.444857683227080851e0 * wr_8_8;
  results[k++] =
      -0.164722493862188467e0 * wr_8_4 + 0.421904982629324647e0 * wr_6_4 -
      0.235488926440317990e0 * wr_4_4 + 0.200780050174121298e0 * wr_8_8;
  results[k++] = wr_0_0 - 0.813115628181741708e0 * wr_2_0 +
                 0.377622377622377622e0 * wr_4_0 -
                 0.100854581131859840e0 * wr_6_0 +
                 0.118723732535267889e-1 * wr_8_0;
  results[k++] =
      0.993314012131817210e-1 * wr_8_4 - 0.254418277193251359e0 * wr_6_4 +
      0.142005165688388696e0 * wr_4_4 + 0.605374628923901556e-1 * wr_8_8;
  results[k++] =
      0.126508256466194527e-1 * wr_4_0 - 0.152044001819471048e0 * wr_6_0 +
      0.196881037264996714e0 * wr_8_0 + 0.151206287445408497e-2 * wr_4_4 -
      0.121906406254820237e0 * wr_6_4 + 0.523549161330594315e0 * wr_8_4;
  results[k++] =
      0.946701104589257973e-1 * wr_4_0 + 0.113779312504498887e0 * wr_6_0 -
      0.441996832438974345e0 * wr_8_0 + 0.282881061173388288e-1 * wr_4_4 -
      0.273679203275047888e0 * wr_6_4 - 0.391788317366384034e0 * wr_8_4;
  results[k++] =
      -0.724261233064682466e-1 * wr_2_0 + 0.247042261995184527e0 * wr_6_0 +
      0.309318819210894948e0 * wr_8_0 + 0.150758879673549627e0 * wr_4_4 -
      0.138051900013710304e0 * wr_6_4 - 0.260121221908254164e0 * wr_8_4;
  results[k++] =
      -0.196130869080215880e0 * wr_2_0 - 0.212861602547259468e0 * wr_6_0 +
      0.107389656689998208e-1 * wr_8_0 - 0.316270641165486318e0 * wr_4_0 +
      0.370455404241250817e0 * wr_4_4 + 0.170668968756748331e0 * wr_6_4 +
      0.666335296238938220e-1 * wr_8_4;
  results[k++] =
      0.993314012131817210e-1 * wr_8_4 - 0.254418277193251359e0 * wr_6_4 +
      0.142005165688388696e0 * wr_4_4 + 0.605374628923901556e-1 * wr_8_8;
  results[k++] =
      wr_0_0 + 0.369598012809882594e0 * wr_2_0 +
      0.419580419580419580e-1 * wr_4_0 - 0.100854581131859840e0 * wr_6_0 -
      0.766307728182183647e-1 * wr_8_0 + 0.446786028155513962e0 * wr_4_4 +
      0.205834520990190080e0 * wr_6_4 + 0.803630604434498809e-1 * wr_8_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] =
      0.123091490979332733e0 * wr_5_0 + 0.617914380653324670e0 * wr_5_4;
  results[k++] =
      -0.369274472937998197e0 * wr_5_0 + 0.617914380653324672e0 * wr_5_4;
  results[k++] =
      0.599144689515278084e0 * wr_5_0 + 0.429668924423659729e0 * wr_5_4;
  results[k++] = -0.534522483824848769e0 * wr_5_4;
  results[k++] =
      0.603022689155527245e0 * wr_5_0 - 0.216224991046934150e0 * wr_5_4;
  results[k++] = 0.845154254728516578e0 * wr_5_4;
  results[k++] =
      0.354787437593449571e0 * wr_5_0 + 0.706753492740219502e-1 * wr_5_4;
  results[k++] =
      -0.192450089729875254e0 * wr_4_0 - 0.322030594359765302e0 * wr_4_4;
  results[k++] =
      -0.865981222196073065e-1 * wr_4_0 + 0.185281696496388395e0 * wr_6_0 +
      0.103504553191511095e0 * wr_4_4 + 0.693260628329719132e0 * wr_6_4;
  results[k++] =
      0.472377492973330170e0 * wr_4_0 + 0.873426293482293452e-1 * wr_6_0 -
      0.326806194281060772e0 * wr_6_4 - 0.263479577203444338e0 * wr_4_4;
  results[k++] =
      0.111340442853780823e0 * wr_4_0 - 0.432323958491572922e0 * wr_6_0 +
      0.231086876109906377e0 * wr_6_4 + 0.186308195744719971e0 * wr_4_4;
  results[k++] =
      -0.553531667023040693e0 * wr_4_0 - 0.318853513711272663e0 * wr_6_0 -
      0.132319376919699514e0 * wr_4_4 - 0.511303116375689813e0 * wr_6_4;
  results[k++] =
      0.120432613954918806e0 * wr_4_0 + 0.450926963500797419e0 * wr_6_0 +
      0.201522307974180891e0 * wr_4_4 - 0.241030600554043160e0 * wr_6_4;
  results[k++] =
      0.797724035217465642e0 * wr_4_4 + 0.212026047822065851e0 * wr_6_4;
  results[k++] =
      0.644658371220304240e0 * wr_4_4 - 0.299850112406331959e0 * wr_6_4;
  results[k++] =
      -0.299984695048838344e0 * wr_4_0 - 0.534862186740501905e0 * wr_6_0 +
      0.358550289884825215e-1 * wr_4_4 + 0.428843796840784756e0 * wr_6_4;
  results[k++] =
      0.484848484848484848e0 * wr_4_0 + 0.151281871697789760e0 * wr_6_0 -
      0.144876195070835593e0 * wr_4_4 + 0.363886028179086034e0 * wr_6_4;
  results[k++] = -0.491689171894441620e0 * wr_6_4;
  results[k++] =
      0.764470787156438317e0 * wr_4_4 + 0.252855816496405587e0 * wr_6_4;
  results[k++] =
      -0.461538461538461538e0 * wr_6_0 - 0.205585570701864912e0 * wr_6_4;
  results[k++] =
      0.534862186740501905e0 * wr_4_0 - 0.118675263975364620e0 * wr_6_0 +
      0.639282587643402851e-1 * wr_4_4 - 0.211448656228938309e0 * wr_6_4;
  results[k++] = 0.307379630651382292e0 * wr_3_0 -
                 0.980816477227499474e-1 * wr_5_0 -
                 0.492365963917330931e0 * wr_5_4;
  results[k++] =
      0.813250060790444318e-1 * wr_3_0 - 0.259499648053840990e0 * wr_5_0;
  results[k++] =
      -0.483997397727227207e-2 * wr_3_0 - 0.130678767035288601e0 * wr_5_0 +
      0.224321887165670489e0 * wr_7_0 + 0.109333700695184838e0 * wr_5_4 +
      0.688802314379664480e0 * wr_7_4;
  results[k++] = -0.553283335172488125e0 * wr_3_0;
  results[k++] =
      0.665386413373999896e-1 * wr_3_0 + 0.359307204997625986e0 * wr_5_0 +
      0.146853146853146853e0 * wr_7_0 + 0.300617975667198279e0 * wr_5_4 -
      0.450926963500797419e0 * wr_7_4;
  results[k++] = 0.629196617045395370e-1 * wr_3_0 +
                 0.914751369247020209e-1 * wr_5_0 -
                 0.448643774331340979e0 * wr_7_0;
  results[k++] =
      0.353638410046370753e0 * wr_3_0 + 0.321333597325386550e0 * wr_5_0 +
      0.964894626931258580e-1 * wr_7_0 + 0.230440265198183878e0 * wr_5_4 +
      0.296280340969093558e0 * wr_7_4;
  results[k++] =
      -0.467819643511491354e0 * wr_3_0 - 0.971621470185991634e-1 * wr_5_0 -
      0.408459395878809026e0 * wr_7_0 + 0.209035760149771523e0 * wr_5_4 -
      0.313553640224657284e0 * wr_7_4;
  results[k++] =
      -0.235584497580073167e-1 * wr_3_0 + 0.222626446698579281e0 * wr_5_0 +
      0.356532590462966826e0 * wr_7_0 - 0.266089498288600425e0 * wr_5_4 -
      0.342115069228200545e0 * wr_7_4;
  results[k++] =
      -0.270293931346128425e0 * wr_5_4 - 0.737165267307622977e-1 * wr_7_4;
  results[k++] =
      -0.130023731496694858e0 * wr_5_4 + 0.195035597245042287e0 * wr_7_4;
  results[k++] =
      0.510723078620758269e0 * wr_5_4 - 0.212801282758649279e0 * wr_7_4;
  results[k++] =
      0.304932679681573802e0 * wr_5_0 + 0.356084653758673639e0 * wr_7_0 -
      0.109339278802925270e0 * wr_5_4 - 0.546696394014626348e0 * wr_7_4;
  results[k++] =
      -0.507066682747924576e0 * wr_3_0 - 0.488955173972098624e-1 * wr_5_0 -
      0.428232472514541625e0 * wr_7_0 + 0.876619818920291914e-1 * wr_5_4 -
      0.131492972838043787e0 * wr_7_4;
  results[k++] =
      0.331953065154646130e0 * wr_3_0 + 0.320096299452491930e0 * wr_5_0 +
      0.336412752057597128e-1 * wr_7_0 + 0.420847080332456312e0 * wr_5_4 +
      0.189381186149605340e0 * wr_7_4;
  results[k++] =
      -0.388520209443157980e0 * wr_5_4 + 0.279734550799073746e0 * wr_7_4;
  results[k++] =
      0.205585570701864912e0 * wr_5_4 - 0.308378356052797367e0 * wr_7_4;
  results[k++] =
      0.134587348504570225e0 * wr_5_4 + 0.148046083355027248e0 * wr_7_4;
  results[k++] =
      -0.163096959863127578e0 * wr_5_0 + 0.502804411755620471e0 * wr_7_0 -
      0.324896920873122317e-1 * wr_5_4 + 0.428863935552521460e0 * wr_7_4;
  results[k++] =
      -0.431513995388518698e0 * wr_5_0 - 0.110857952634291092e0 * wr_7_0 -
      0.189111219959400623e0 * wr_5_4 + 0.283666829939100934e0 * wr_7_4;
  results[k++] =
      0.651013521854029892e0 * wr_3_0 - 0.313880245603287654e-1 * wr_5_0 -
      0.103362351033419915e0 * wr_7_0 - 0.303878506054463893e0 * wr_5_4 +
      0.168821392252479941e-1 * wr_7_4;
  results[k++] = -0.461069445977073440e0 * wr_2_0 +
                 0.247435829652696755e0 * wr_4_0 +
                 0.414039335605412531e0 * wr_4_4;
  results[k++] =
      0.340150671524903763e0 * wr_4_0 - 0.110064292473921085e0 * wr_6_0 -
      0.406557814090870854e0 * wr_4_4 - 0.411822872955094347e0 * wr_6_4;
  results[k++] =
      0.301169300968417080e-1 * wr_2_0 + 0.918320495047464319e-1 * wr_4_0 -
      0.291202746114273260e0 * wr_6_0 + 0.153664409950639378e0 * wr_4_4 +
      0.155654415149618171e0 * wr_6_4;
  results[k++] =
      0.256107349917732296e-2 * wr_2_0 - 0.132155410143086443e-1 * wr_4_0 -
      0.155654415149618171e0 * wr_6_0 + 0.251290776807733446e0 * wr_8_0 -
      0.221138297913872681e-1 * wr_4_4 + 0.832007846040780741e-1 * wr_6_4 +
      0.668236399378178593e0 * wr_8_4;
  results[k++] =
      0.461069445977073440e0 * wr_2_0 + 0.674824989961900242e-1 * wr_4_0 -
      0.101899734239600903e0 * wr_6_0 - 0.376399396004920483e-1 * wr_4_4 +
      0.381273893327904234e0 * wr_6_4;
  results[k++] =
      -0.398409536444797881e0 * wr_2_0 - 0.194371812299945007e0 * wr_4_0 -
      0.110064292473921085e0 * wr_6_0 - 0.325246251272696685e0 * wr_4_4 +
      0.588318389935849068e-1 * wr_6_4;
  results[k++] =
      -0.492822492493773403e-1 * wr_2_0 + 0.155408083777263192e0 * wr_4_0 +
      0.274562589193457645e0 * wr_6_0 + 0.188048798254163537e0 * wr_8_0 +
      0.354610176809167795e0 * wr_4_4 + 0.280177947269312708e0 * wr_6_4 -
      0.500062331968916712e0 * wr_8_4;
  results[k++] =
      0.179275144942412607e-1 * wr_2_0 + 0.925087871001605100e-1 * wr_4_0 +
      0.622617660598472684e-1 * wr_6_0 - 0.452323398253920202e0 * wr_8_0 -
      0.110569148956936340e0 * wr_4_4 - 0.133121255366524919e0 * wr_6_4 -
      0.133647279875635719e0 * wr_8_4;
  results[k++] =
      -0.383214231015951250e0 * wr_4_0 - 0.708563363802828139e-1 * wr_6_0 -
      0.916057224828688940e-1 * wr_4_4 - 0.113622914750153291e0 * wr_6_4;
  results[k++] =
      0.572959709126940516e0 * wr_2_0 + 0.454855689222371245e-2 * wr_4_0 +
      0.306134361946517547e0 * wr_6_0 + 0.154446192441631767e0 * wr_8_0 +
      0.761119146027928695e-2 * wr_4_4 - 0.163635699531787824e0 * wr_6_4 +
      0.410705752299974994e0 * wr_8_4;
  results[k++] =
      -0.303181780321957869e0 * wr_2_0 - 0.300858759026319172e0 * wr_4_0 -
      0.115707912783131530e-1 * wr_6_0 - 0.441316313432691816e0 * wr_8_0 +
      0.359594996157098914e0 * wr_4_4 + 0.247393923756113742e-1 * wr_6_4 -
      0.130395033913131340e0 * wr_8_4;
  results[k++] =
      -0.498638394671177161e-1 * wr_2_0 + 0.321631542310419527e-1 * wr_4_0 +
      0.259763619943919429e0 * wr_6_0 + 0.297051064010663281e0 * wr_8_0 -
      0.269096254723631245e0 * wr_4_4 - 0.323982155792768284e0 * wr_6_4 -
      0.325262361226470983e0 * wr_8_4;
  results[k++] =
      -0.368180323946522604e0 * wr_4_4 + 0.141350698548043901e0 * wr_6_4 +
      0.157676934940536108e-1 * wr_8_4 - 0.672672793996312466e0 * wr_8_8;
  results[k++] =
      0.511303116375689813e0 * wr_4_4 - 0.763381020690574118e-1 * wr_6_4 -
      0.851552774557783934e-1 * wr_8_4 - 0.726569658793938124e0 * wr_8_8;
  results[k++] =
      -0.150308987833599140e0 * wr_4_4 - 0.259677814671502949e0 * wr_6_4 +
      0.173802615664650165e0 * wr_8_4 - 0.494311532742980752e0 * wr_8_8;
  results[k++] =
      -0.241030600554043160e0 * wr_4_4 + 0.431833517087530481e0 * wr_6_4 -
      0.168598847599847940e0 * wr_8_4 - 0.205504933095035880e0 * wr_8_8;
  results[k++] =
      0.138454474637925390e0 * wr_4_0 - 0.356574791160334604e0 * wr_6_0 -
      0.131921988571160644e0 * wr_8_0 - 0.165484749177611638e-1 * wr_4_4 +
      0.285895864560523171e0 * wr_6_4 + 0.350809033906765550e0 * wr_8_4;
  results[k++] =
      0.384551806569720839e0 * wr_4_0 + 0.385144793516510629e-1 * wr_6_0 +
      0.427476100174008692e0 * wr_8_0 - 0.114906830245839045e0 * wr_4_4 +
      0.926408482481941975e-1 * wr_6_4 - 0.378917063901453079e0 * wr_8_4;
  results[k++] =
      -0.657233537538228319e0 * wr_2_0 - 0.160128153805087133e0 * wr_6_0 -
      0.343705111534147860e0 * wr_8_0 - 0.101338298924401669e0 * wr_4_4 -
      0.894826484340999732e-1 * wr_6_4 - 0.289038325622918534e0 * wr_8_4;
  results[k++] =
      0.200746344535957591e0 * wr_2_0 + 0.323713321598794217e0 * wr_4_0 +
      0.217870796187373848e0 * wr_6_0 - 0.109916817901171431e-1 * wr_8_0 +
      0.379173194733593261e0 * wr_4_4 + 0.174685258696458690e0 * wr_6_4 +
      0.682015919179671566e-1 * wr_8_4;
  results[k++] = 0.245844585947220811e0 * wr_6_4 -
                 0.129640744710432878e0 * wr_8_4 -
                 0.425435629811517047e0 * wr_8_8;
  results[k++] =
      -0.179653602498812993e0 * wr_4_4 - 0.386243639668214062e0 * wr_6_4 +
      0.247741861020340195e0 * wr_8_4 - 0.459523000112046476e0 * wr_8_8;
  results[k++] =
      0.475318754348711285e0 * wr_4_4 + 0.218979560580543571e0 * wr_6_4 -
      0.232058454380176149e0 * wr_8_4 - 0.312630063431343680e0 * wr_8_8;
  results[k++] =
      -0.508137122366012587e0 * wr_4_4 + 0.341394370999459436e-1 * wr_6_4 +
      0.106631273859026465e0 * wr_8_4 - 0.129972731796165881e0 * wr_8_8;
  results[k++] =
      0.230769230769230769e0 * wr_6_0 - 0.403603676397787480e0 * wr_8_0 +
      0.102792785350932456e0 * wr_6_4 - 0.596260703145076811e0 * wr_8_4;
  results[k++] =
      -0.125694690108100297e0 * wr_4_0 + 0.181279460095324761e0 * wr_6_0 +
      0.368873826772307047e0 * wr_8_0 - 0.150233889658622283e-1 * wr_4_4 +
      0.322993157588601825e0 * wr_6_4 - 0.495411667401741909e-1 * wr_8_4;
  results[k++] =
      -0.332556891147363787e0 * wr_4_0 - 0.274068782409306640e0 * wr_6_0 -
      0.126746546857174552e-1 * wr_8_0 - 0.119244453159189883e0 * wr_4_4 +
      0.347927824991652188e0 * wr_6_4 + 0.190992969987964375e0 * wr_8_4;
  results[k++] =
      0.738179948128318321e0 * wr_2_0 + 0.101576648839519287e0 * wr_4_0 -
      0.961379516424302097e-1 * wr_6_0 - 0.819145537511681477e-1 * wr_8_0 -
      0.297447925996601386e0 * wr_4_4 + 0.827916113528113809e-1 * wr_6_4 +
      0.624186855470421912e-1 * wr_8_4;
  results[k++] =
      0.629940788348712045e0 * wr_1_0 - 0.412393049421161259e0 * wr_3_0 +
      0.328975847479884493e-1 * wr_5_0 + 0.165144564768954091e0 * wr_5_4;
  results[k++] = -0.308606699924183820e0 * wr_3_0 +
                 0.246182981958665465e0 * wr_5_0 -
                 0.235702260395515842e0 * wr_1_0;
  results[k++] =
      -0.465242105199235432e-1 * wr_1_0 + 0.498391284987141276e-1 * wr_3_0 +
      0.336412752057597128e0 * wr_5_0 - 0.114070681259433487e0 * wr_7_0 -
      0.281463102062910591e0 * wr_5_4 - 0.350265193678288735e0 * wr_7_4;
  results[k++] =
      0.524863881081477966e-1 * wr_3_0 + 0.885704204753535175e-1 * wr_5_0 -
      0.308904865131541724e0 * wr_7_0 + 0.190551420887254720e0 * wr_5_4 +
      0.237130657104139207e0 * wr_7_4;
  results[k++] =
      0.290249301777267551e-1 * wr_9_4 + 0.568114573750766460e-1 * wr_5_4 -
      0.779765101226542199e-1 * wr_7_4 + 0.633249214912447188e0 * wr_9_8;
  results[k++] =
      -0.171210149324308595e0 * wr_7_0 + 0.486930506169784162e-2 * wr_3_0 -
      0.213639892538733799e-1 * wr_5_0 + 0.271085341720739254e0 * wr_9_0 -
      0.383022767486130150e-1 * wr_5_4 + 0.525717524000570794e-1 * wr_7_4 +
      0.645763929816343240e0 * wr_9_4;
  results[k++] = -0.412393049421161259e0 * wr_3_0 +
                 0.230283093235919145e0 * wr_5_0 -
                 0.385337317794226212e0 * wr_5_4;
  results[k++] =
      0.707106781186547525e0 * wr_1_0 - 0.561103090771243310e-1 * wr_3_0 +
      0.189371524583588819e0 * wr_5_0 - 0.123837446831768701e0 * wr_7_0 +
      0.158439584782903762e0 * wr_5_4 + 0.380255003478969029e0 * wr_7_4;
  results[k++] =
      -0.195401684183678882e0 * wr_1_0 - 0.345551290924417951e0 * wr_3_0 -
      0.784963088134393298e-1 * wr_5_0 - 0.171106021889150231e0 * wr_7_0;
  results[k++] =
      -0.481045692920834652e-1 * wr_1_0 - 0.250319697131166415e-1 * wr_3_0 +
      0.194854925045777738e0 * wr_5_0 + 0.218050493034029452e0 * wr_7_0 +
      0.217960815673446972e0 * wr_9_0 + 0.232896181084422436e0 * wr_5_4 +
      0.209232932738946359e0 * wr_7_4 - 0.519213735356656615e0 * wr_9_4;
  results[k++] =
      -0.870747905331802654e-1 * wr_9_4 - 0.170434372125229937e0 * wr_5_4 +
      0.233929530367962659e0 * wr_7_4 + 0.633249214912447188e0 * wr_9_8;
  results[k++] =
      0.340851354318848913e-1 * wr_3_0 + 0.106819946269366900e0 * wr_5_0 +
      0.369813922540506566e-1 * wr_7_0 - 0.451808902867898757e0 * wr_9_0 -
      0.140441681411581055e0 * wr_5_4 - 0.208184139504226034e0 * wr_7_4 -
      0.215254643272114414e0 * wr_9_4;
  results[k++] =
      -0.958919989752263774e-1 * wr_7_0 + 0.344891408195572287e0 * wr_5_0 -
      0.912414835752264878e-1 * wr_3_0 + 0.247334446913384734e0 * wr_5_4 -
      0.294445770134981828e0 * wr_7_4;
  results[k++] =
      -0.375533808099405379e0 * wr_3_0 - 0.157869802771196997e0 * wr_7_0 -
      0.115220132599091939e0 * wr_5_0 + 0.247885917936726767e0 * wr_5_4 -
      0.121188670991288642e0 * wr_7_4;
  results[k++] =
      0.252622440230166778e0 * wr_7_0 + 0.749361528052059732e0 * wr_1_0 +
      0.314123836291347774e-1 * wr_3_0 + 0.955196947366979615e-1 * wr_5_0 +
      0.195885097849746214e0 * wr_9_0 - 0.114167871904189304e0 * wr_5_4 -
      0.242406854071079812e0 * wr_7_4 + 0.466626228393497686e0 * wr_9_4;
  results[k++] =
      0.157939763018019915e-2 * wr_7_0 - 0.197080804683184164e0 * wr_5_0 -
      0.144948615067895733e0 * wr_1_0 - 0.316397390736246929e0 * wr_3_0 -
      0.454679445093488919e0 * wr_9_0;
  results[k++] =
      0.141278106562675028e0 * wr_9_4 + 0.276528318237820652e0 * wr_5_4 -
      0.379548672091126386e0 * wr_7_4 + 0.440332055026585289e0 * wr_9_8;
  results[k++] =
      -0.474024361251090005e-1 * wr_3_0 + 0.273342417978576486e0 * wr_7_0 +
      0.257045645328767424e0 * wr_9_0 + 0.742776230131180890e-1 * wr_5_0 -
      0.336181937106199468e-1 * wr_1_0 - 0.186435354123130323e0 * wr_5_4 -
      0.276362995523699066e0 * wr_7_4 - 0.285749040040868292e0 * wr_9_4;
  results[k++] =
      0.131868131868131868e0 * wr_5_4 - 0.549450549450549451e-1 * wr_7_4;
  results[k++] =
      -0.370054027263356841e0 * wr_5_4 + 0.114886054215748039e0 * wr_7_4 +
      0.210067022071766943e-1 * wr_9_4 - 0.458312133711946412e0 * wr_9_8;
  results[k++] =
      0.365216511696921294e0 * wr_5_4 + 0.107416621087329793e-1 * wr_7_4 -
      0.870747905331802654e-1 * wr_9_4 - 0.633249214912447188e0 * wr_9_8;
  results[k++] = -0.294117647058823529e0 * wr_7_4 +
                 0.157199764970486274e0 * wr_9_4 -
                 0.489956280157551604e0 * wr_9_8;
  results[k++] =
      0.790826151588509470e-1 * wr_7_0 + 0.393601322502665418e0 * wr_3_0 -
      0.105400121264098974e-1 * wr_9_0 - 0.279145263119541259e0 * wr_1_0 -
      0.246702684842237894e0 * wr_5_0;
  results[k++] =
      -0.278318164225627959e0 * wr_5_4 + 0.382005323446940336e0 * wr_7_4 -
      0.142192537510679226e0 * wr_9_4 - 0.221591065221934248e0 * wr_9_8;
  results[k++] =
      -0.148767316435454824e0 * wr_5_0 + 0.265409830516290084e0 * wr_7_0 +
      0.533432858212675058e-1 * wr_5_4 - 0.407483433356904559e0 * wr_7_4;
  results[k++] =
      -0.252251074927810643e0 * wr_7_0 + 0.111010544520192612e0 * wr_3_0 -
      0.139159082112813980e0 * wr_5_0 - 0.196197166070299428e0 * wr_9_0 +
      0.249490374284924020e0 * wr_5_4 - 0.774561619512019012e-1 * wr_7_4 +
      0.467369619383198772e0 * wr_9_4;
  results[k++] =
      -0.169812515452273423e-2 * wr_7_0 + 0.314070176479510784e0 * wr_3_0 +
      0.228899884862929071e0 * wr_5_0 + 0.451808902867898757e0 * wr_9_0 +
      0.300946460167673689e0 * wr_5_4 - 0.955947579356139952e-2 * wr_7_4 -
      0.215254643272114414e0 * wr_9_4;
  results[k++] =
      -0.785544327079740633e0 * wr_1_0 - 0.286013990528980349e0 * wr_9_0 -
      0.118675263975364620e0 * wr_3_0 - 0.211816915006690547e0 * wr_7_0 -
      0.214157603370676898e0 * wr_7_4 - 0.317952179767067480e0 * wr_9_4;
  results[k++] =
      0.142192537510679226e0 * wr_9_4 + 0.278318164225627959e0 * wr_5_4 -
      0.382005323446940336e0 * wr_7_4 - 0.221591065221934248e0 * wr_9_8;
  results[k++] =
      0.291557718449917511e0 * wr_5_0 + 0.930484210398470865e-1 * wr_1_0 -
      0.316200363792296921e-1 * wr_9_0 + 0.250473568865332538e0 * wr_3_0 +
      0.155768787434100351e0 * wr_7_0;
  results[k++] =
      0.347503039578942784e-1 * wr_5_4 - 0.919860987120730900e-1 * wr_7_4 +
      0.414257754124907078e-1 * wr_9_4 + 0.903803716200831386e0 * wr_9_8;
  results[k++] =
      -0.520094925986779433e-1 * wr_5_4 + 0.286817054772121011e0 * wr_7_4 -
      0.141715253554271246e0 * wr_9_4 + 0.386482725819037682e0 * wr_9_8;
  results[k++] = -0.923932812851038250e-1 * wr_5_4 -
                 0.373649299314758116e0 * wr_7_4 +
                 0.220283731893533631e0 * wr_9_4;
  results[k++] =
      0.340552978787363928e0 * wr_5_4 + 0.214634230328170544e0 * wr_7_4 -
      0.190558566897457256e0 * wr_9_4 - 0.129114816600118769e0 * wr_9_8;
  results[k++] =
      -0.125040593612263789e0 * wr_7_0 - 0.622338334581454235e0 * wr_3_0 +
      0.166652224426249174e-1 * wr_9_0 + 0.441367414752374764e0 * wr_1_0 +
      0.390071194490084575e0 * wr_5_0;
  results[k++] = -0.381385035698236927e0 * wr_5_4 +
                 0.849343204646164298e-1 * wr_9_4 -
                 0.856450803076289632e-1 * wr_9_8;
  results[k++] =
      -0.165338947657700257e0 * wr_7_0 + 0.207955742134854779e0 * wr_9_0 +
      0.145878355671003223e-1 * wr_5_0 + 0.290596640301068732e-2 * wr_5_4 -
      0.141024840146106885e0 * wr_7_4 + 0.495380223867722757e0 * wr_9_4;
  results[k++] =
      0.103106949137477370e0 * wr_7_0 + 0.109165365413369099e0 * wr_5_0 -
      0.444628079246249343e0 * wr_9_0 + 0.478417748931840895e-1 * wr_5_4 -
      0.263833317425647552e0 * wr_7_4 - 0.423666988319175677e0 * wr_9_4;
  results[k++] =
      -0.859454360558079699e-1 * wr_3_0 + 0.260873298123978648e0 * wr_7_0 +
      0.283542450724721585e0 * wr_9_0 + 0.215476611613886223e-1 * wr_5_0 +
      0.208610486783115513e0 * wr_5_4 - 0.426083510586428743e-1 * wr_7_4 -
      0.202631561803562815e0 * wr_9_4;
  results[k++] =
      -0.175359489939985121e0 * wr_7_0 + 0.251375072910264019e-1 * wr_9_0 -
      0.232741341073522708e0 * wr_3_0 - 0.306344546909106769e0 * wr_5_0 +
      0.370220119743561565e0 * wr_5_4 + 0.233332008241740482e0 * wr_7_4 +
      0.990760447735445509e-1 * wr_9_4;
  results[k++] =
      0.836587527062570079e-1 * wr_9_4 + 0.163748048120053648e0 * wr_5_4 -
      0.224752222909877556e0 * wr_7_4 + 0.724293054874650144e-1 * wr_9_8;
  results[k++] =
      0.245609541400684003e0 * wr_3_0 - 0.131951937489472233e-1 * wr_5_0 -
      0.105745751192551455e0 * wr_7_0 - 0.668351483088289603e-1 * wr_9_0 +
      0.821173352177038390e0 * wr_1_0 + 0.240424296201647170e0 * wr_5_4 +
      0.151527917774147375e0 * wr_7_4 + 0.643408801002544290e-1 * wr_9_4;
  results[k++] = wr_0_0 - 0.318181818181818182e0 * wr_4_0 +
                 0.336181937106199468e-1 * wr_6_0 +
                 0.380300012060943431e0 * wr_4_4 +
                 0.125787762827338382e0 * wr_6_4;
  results[k++] =
      -0.298142396999971959e0 * wr_2_0 - 0.227272727272727273e0 * wr_4_0 +
      0.235327355974339627e0 * wr_6_0 - 0.380300012060943431e0 * wr_4_4 -
      0.125787762827338382e0 * wr_6_4;
  results[k++] =
      -0.659636593224204869e-1 * wr_2_0 - 0.115576947361668235e0 * wr_8_0 +
      0.327271399063575648e0 * wr_6_0 + 0.850957074747518803e-1 * wr_4_0 +
      0.142392353747523679e0 * wr_4_4 - 0.174933921112295741e0 * wr_6_4 -
      0.307344042376750021e0 * wr_8_4;
  results[k++] =
      -0.911010039175064752e-1 * wr_4_4 + 0.163217727713709578e0 * wr_6_4 -
      0.637243745830395416e-1 * wr_8_4 - 0.543714946166432150e0 * wr_8_8;
  results[k++] =
      -0.685171956023266601e-1 * wr_4_0 - 0.823474206650615091e-1 * wr_6_0 +
      0.319893821577079391e0 * wr_8_0 + 0.204734281038153814e-1 * wr_4_4 -
      0.198074465237062609e0 * wr_6_4 - 0.283555566224313097e0 * wr_8_4;
  results[k++] =
      0.960288898357475787e-2 * wr_4_4 + 0.607223263638246082e-1 * wr_6_4 -
      0.121969100565773562e0 * wr_8_4 + 0.522618452069303658e-1 * wr_10_4 +
      0.226233898389705447e0 * wr_8_8 + 0.746448454177756801e0 * wr_10_8;
  results[k++] =
      0.671866379601764195e-2 * wr_4_0 - 0.284993962578178081e-1 * wr_6_0 -
      0.181605194569759726e0 * wr_8_0 + 0.286249915166790073e0 * wr_10_0 +
      0.803033918549950438e-3 * wr_4_4 - 0.507785602507912498e-1 * wr_6_4 +
      0.243902726951016136e-1 * wr_8_4 + 0.624960771900077354e0 * wr_10_4;
  results[k++] =
      -0.298142396999971959e0 * wr_2_0 - 0.227272727272727273e0 * wr_4_0 +
      0.235327355974339627e0 * wr_6_0 - 0.380300012060943431e0 * wr_4_4 -
      0.125787762827338382e0 * wr_6_4;
  results[k++] =
      wr_0_0 + 0.162623125636348342e0 * wr_2_0 -
      0.384615384615384615e-1 * wr_4_0 + 0.221880078490091649e0 * wr_6_0 -
      0.132970580439500036e0 * wr_8_0 - 0.877615412448330996e-1 * wr_4_4 +
      0.226417973089209088e0 * wr_6_4 + 0.353597465951179476e0 * wr_8_4;
  results[k++] =
      -0.263854637289681947e0 * wr_2_0 - 0.289325405414156393e0 * wr_4_0 -
      0.327271399063575648e-1 * wr_6_0 - 0.208038505251002823e0 * wr_8_0 +
      0.345810001958271791e0 * wr_4_4 + 0.699735684449182964e-1 * wr_6_4 -
      0.614688084753500040e-1 * wr_8_4;
  results[k++] =
      0.212569009140848442e0 * wr_4_4 - 0.345637541040796755e0 * wr_6_4 +
      0.905556901969509275e-1 * wr_8_4 + 0.236094950824362552e-1 * wr_10_4 -
      0.337211038730505783e0 * wr_10_8 - 0.257549185026204703e0 * wr_8_8;
  results[k++] =
      0.714975832640776280e-1 * wr_2_0 - 0.213134500544865083e0 * wr_6_0 -
      0.179079316385254970e0 * wr_8_0 - 0.240592401626331073e0 * wr_10_0 +
      0.143313996726707670e0 * wr_4_4 - 0.119103600011828497e0 * wr_6_4 -
      0.150596496894252410e0 * wr_8_4 + 0.525278105134368756e0 * wr_10_4;
  results[k++] =
      -0.672202228850233051e-1 * wr_4_4 - 0.910834895457369126e-1 * wr_6_4 +
      0.302271249228221434e0 * wr_8_4 - 0.141853579847382421e0 * wr_10_4 +
      0.533177467269826287e0 * wr_10_8 + 0.407221017101469804e0 * wr_8_8;
  results[k++] =
      0.470306465721234937e-1 * wr_4_0 + 0.113997585031271233e0 * wr_6_0 +
      0.165095631427054297e-1 * wr_8_0 - 0.449821295262098686e0 * wr_10_0 +
      0.168637122895489592e-1 * wr_4_4 - 0.144718896714755062e0 * wr_6_4 -
      0.248780781490036459e0 * wr_8_4 - 0.267840330814318867e0 * wr_10_4;
  results[k++] =
      -0.659636593224204869e-1 * wr_2_0 - 0.115576947361668235e0 * wr_8_0 +
      0.327271399063575648e0 * wr_6_0 + 0.850957074747518803e-1 * wr_4_0 +
      0.142392353747523679e0 * wr_4_4 - 0.174933921112295741e0 * wr_6_4 -
      0.307344042376750021e0 * wr_8_4;
  results[k++] =
      -0.263854637289681947e0 * wr_2_0 - 0.289325405414156393e0 * wr_4_0 -
      0.327271399063575648e-1 * wr_6_0 - 0.208038505251002823e0 * wr_8_0 +
      0.345810001958271791e0 * wr_4_4 + 0.699735684449182964e-1 * wr_6_4 -
      0.614688084753500040e-1 * wr_8_4;
  results[k++] =
      wr_0_0 + 0.244335633044355719e0 * wr_2_0 -
      0.118343195266272189e-1 * wr_4_0 + 0.149593356086079890e0 * wr_6_0 +
      0.208530785923484295e0 * wr_8_0 + 0.226664853836641838e0 * wr_10_0 +
      0.990130208916065737e-1 * wr_4_4 - 0.186575695270595121e0 * wr_6_4 -
      0.228335205745802131e0 * wr_8_4 + 0.494870511782776965e0 * wr_10_4;
  results[k++] =
      -0.221715905268582184e0 * wr_4_4 + 0.268713776659941442e0 * wr_6_4 +
      0.571378253607197524e-1 * wr_8_4 - 0.861889608792321518e-1 * wr_10_4 +
      0.696452267919365500e-1 * wr_8_8 - 0.527581967528156609e0 * wr_10_8;
  results[k++] =
      0.209517826538375031e0 * wr_2_0 + 0.372505982979733737e-2 * wr_8_0 +
      0.297772946591832213e0 * wr_4_0 + 0.135572812555795303e0 * wr_6_0 +
      0.460066110430181691e0 * wr_10_0 + 0.348788609955313080e0 * wr_4_4 +
      0.108700074759666523e0 * wr_6_4 - 0.231133883997876015e-1 * wr_8_4 -
      0.913134916109869663e-1 * wr_10_4;
  results[k++] =
      0.186967267769292299e0 * wr_4_4 - 0.369455466483133953e-1 * wr_6_4 -
      0.361371337377612686e0 * wr_8_4 + 0.199872512063782970e0 * wr_10_4 +
      0.440475089643002477e0 * wr_8_8 + 0.185373407757996551e0 * wr_10_8;
  results[k++] =
      0.228573514963581333e0 * wr_10_0 - 0.522328301482100313e-1 * wr_2_0 +
      0.104040062719262783e0 * wr_6_0 + 0.277606848051775060e0 * wr_8_0 -
      0.373747708379513744e-1 * wr_4_0 + 0.109444918663448865e0 * wr_4_4 -
      0.895967127509893542e-1 * wr_6_4 - 0.211535725469323756e0 * wr_8_4 -
      0.245937207100551286e0 * wr_10_4;
  results[k++] =
      -0.911010039175064752e-1 * wr_4_4 + 0.163217727713709578e0 * wr_6_4 -
      0.637243745830395416e-1 * wr_8_4 - 0.543714946166432150e0 * wr_8_8;
  results[k++] =
      0.212569009140848442e0 * wr_4_4 - 0.345637541040796755e0 * wr_6_4 +
      0.905556901969509275e-1 * wr_8_4 + 0.236094950824362552e-1 * wr_10_4 -
      0.337211038730505783e0 * wr_10_8 - 0.257549185026204703e0 * wr_8_8;
  results[k++] =
      -0.221715905268582184e0 * wr_4_4 + 0.268713776659941442e0 * wr_6_4 +
      0.571378253607197524e-1 * wr_8_4 - 0.861889608792321518e-1 * wr_10_4 +
      0.696452267919365500e-1 * wr_8_8 - 0.527581967528156609e0 * wr_10_8;
  results[k++] =
      wr_0_0 - 0.712593091730702211e0 * wr_2_0 +
      0.197802197802197802e0 * wr_4_0 + 0.326294233073664189e-1 * wr_6_0 -
      0.363312474750782187e-1 * wr_8_0 + 0.701581690446748547e-2 * wr_10_0;
  results[k++] =
      -0.743836582177274122e-1 * wr_4_4 - 0.823117955625224985e-1 * wr_6_4 +
      0.303969024765150078e0 * wr_8_4 - 0.144578040091793728e0 * wr_10_4 -
      0.185253739828592431e0 * wr_8_8 + 0.442497310994804422e0 * wr_10_8;
  results[k++] =
      -0.233112125665894788e0 * wr_2_0 + 0.417003647494731341e0 * wr_4_0 -
      0.309549889167186782e0 * wr_6_0 + 0.111784370844151157e0 * wr_8_0 -
      0.162697047808747483e-1 * wr_10_0;
  results[k++] =
      0.583513422684012892e-1 * wr_4_4 - 0.290568081996112303e0 * wr_6_4 +
      0.348012371706796302e0 * wr_8_4 - 0.124757980374086434e0 * wr_10_4 +
      0.117831072892145574e0 * wr_8_8 - 0.212130997078831382e0 * wr_10_8;
  results[k++] =
      -0.685171956023266601e-1 * wr_4_0 - 0.823474206650615091e-1 * wr_6_0 +
      0.319893821577079391e0 * wr_8_0 + 0.204734281038153814e-1 * wr_4_4 -
      0.198074465237062609e0 * wr_6_4 - 0.283555566224313097e0 * wr_8_4;
  results[k++] =
      0.714975832640776280e-1 * wr_2_0 - 0.213134500544865083e0 * wr_6_0 -
      0.179079316385254970e0 * wr_8_0 - 0.240592401626331073e0 * wr_10_0 +
      0.143313996726707670e0 * wr_4_4 - 0.119103600011828497e0 * wr_6_4 -
      0.150596496894252410e0 * wr_8_4 + 0.525278105134368756e0 * wr_10_4;
  results[k++] =
      0.209517826538375031e0 * wr_2_0 + 0.372505982979733737e-2 * wr_8_0 +
      0.297772946591832213e0 * wr_4_0 + 0.135572812555795303e0 * wr_6_0 +
      0.460066110430181691e0 * wr_10_0 + 0.348788609955313080e0 * wr_4_4 +
      0.108700074759666523e0 * wr_6_4 - 0.231133883997876015e-1 * wr_8_4 -
      0.913134916109869663e-1 * wr_10_4;
  results[k++] =
      -0.743836582177274122e-1 * wr_4_4 - 0.823117955625224985e-1 * wr_6_4 +
      0.303969024765150078e0 * wr_8_4 - 0.144578040091793728e0 * wr_10_4 -
      0.185253739828592431e0 * wr_8_8 + 0.442497310994804422e0 * wr_10_8;
  results[k++] =
      wr_0_0 + 0.323905950786682823e0 * wr_2_0 +
      0.219780219780219780e-1 * wr_4_0 + 0.326294233073664189e-1 * wr_6_0 +
      0.234501688248232139e0 * wr_8_0 + 0.245553591656361991e0 * wr_10_0 -
      0.234030776652888266e0 * wr_4_4 + 0.665935214968262024e-1 * wr_6_4 +
      0.245923049627700011e0 * wr_8_4 + 0.306348412056004788e0 * wr_10_4;
  results[k++] =
      0.282266136796223379e0 * wr_4_4 - 0.260292752275711634e0 * wr_6_4 -
      0.207834477059027662e0 * wr_8_4 + 0.164590526279954740e0 * wr_10_4 -
      0.316661493471677283e0 * wr_8_8 + 0.186573248165793306e-1 * wr_10_8;
  results[k++] =
      0.268018854015020735e0 * wr_4_0 + 0.261783670533892543e0 * wr_6_0 -
      0.423781788011520815e-1 * wr_10_0 + 0.144570003182477344e0 * wr_2_0 +
      0.115542873073966173e0 * wr_8_0 - 0.330459922227974398e0 * wr_4_4 -
      0.174134187482655078e0 * wr_6_4 - 0.955899564645376379e-1 * wr_8_4 -
      0.384511146100118534e-1 * wr_10_4;
  results[k++] =
      0.960288898357475787e-2 * wr_4_4 + 0.607223263638246082e-1 * wr_6_4 -
      0.121969100565773562e0 * wr_8_4 + 0.522618452069303658e-1 * wr_10_4 +
      0.226233898389705447e0 * wr_8_8 + 0.746448454177756801e0 * wr_10_8;
  results[k++] =
      -0.672202228850233051e-1 * wr_4_4 - 0.910834895457369126e-1 * wr_6_4 +
      0.302271249228221434e0 * wr_8_4 - 0.141853579847382421e0 * wr_10_4 +
      0.533177467269826287e0 * wr_10_8 + 0.407221017101469804e0 * wr_8_8;
  results[k++] =
      0.186967267769292299e0 * wr_4_4 - 0.369455466483133953e-1 * wr_6_4 -
      0.361371337377612686e0 * wr_8_4 + 0.199872512063782970e0 * wr_10_4 +
      0.440475089643002477e0 * wr_8_8 + 0.185373407757996551e0 * wr_10_8;
  results[k++] =
      -0.233112125665894788e0 * wr_2_0 + 0.417003647494731341e0 * wr_4_0 -
      0.309549889167186782e0 * wr_6_0 + 0.111784370844151157e0 * wr_8_0 -
      0.162697047808747483e-1 * wr_10_0;
  results[k++] =
      0.282266136796223379e0 * wr_4_4 - 0.260292752275711634e0 * wr_6_4 -
      0.207834477059027662e0 * wr_8_4 + 0.164590526279954740e0 * wr_10_4 -
      0.316661493471677283e0 * wr_8_8 + 0.186573248165793306e-1 * wr_10_8;
  results[k++] =
      wr_0_0 - 0.491443511538415318e0 * wr_2_0 -
      0.197802197802197802e0 * wr_4_0 + 0.326294233073664189e0 * wr_6_0 -
      0.142379213078009236e0 * wr_8_0 + 0.224506140942959535e-1 * wr_10_0;
  results[k++] =
      0.230653932620255353e0 * wr_4_4 - 0.306285651484759933e0 * wr_6_4 -
      0.152848853959807793e-1 * wr_8_4 + 0.717307953208542981e-1 * wr_10_4 +
      0.139730463555188946e0 * wr_8_8 - 0.487866991339368885e-1 * wr_10_8;
  results[k++] =
      0.671866379601764195e-2 * wr_4_0 - 0.284993962578178081e-1 * wr_6_0 -
      0.181605194569759726e0 * wr_8_0 + 0.286249915166790073e0 * wr_10_0 +
      0.803033918549950438e-3 * wr_4_4 - 0.507785602507912498e-1 * wr_6_4 +
      0.243902726951016136e-1 * wr_8_4 + 0.624960771900077354e0 * wr_10_4;
  results[k++] =
      0.470306465721234937e-1 * wr_4_0 + 0.113997585031271233e0 * wr_6_0 +
      0.165095631427054297e-1 * wr_8_0 - 0.449821295262098686e0 * wr_10_0 +
      0.168637122895489592e-1 * wr_4_4 - 0.144718896714755062e0 * wr_6_4 -
      0.248780781490036459e0 * wr_8_4 - 0.267840330814318867e0 * wr_10_4;
  results[k++] =
      0.228573514963581333e0 * wr_10_0 - 0.522328301482100313e-1 * wr_2_0 +
      0.104040062719262783e0 * wr_6_0 + 0.277606848051775060e0 * wr_8_0 -
      0.373747708379513744e-1 * wr_4_0 + 0.109444918663448865e0 * wr_4_4 -
      0.895967127509893542e-1 * wr_6_4 - 0.211535725469323756e0 * wr_8_4 -
      0.245937207100551286e0 * wr_10_4;
  results[k++] =
      0.583513422684012892e-1 * wr_4_4 - 0.290568081996112303e0 * wr_6_4 +
      0.348012371706796302e0 * wr_8_4 - 0.124757980374086434e0 * wr_10_4 +
      0.117831072892145574e0 * wr_8_8 - 0.212130997078831382e0 * wr_10_8;
  results[k++] =
      0.268018854015020735e0 * wr_4_0 + 0.261783670533892543e0 * wr_6_0 -
      0.423781788011520815e-1 * wr_10_0 + 0.144570003182477344e0 * wr_2_0 +
      0.115542873073966173e0 * wr_8_0 - 0.330459922227974398e0 * wr_4_4 -
      0.174134187482655078e0 * wr_6_4 - 0.955899564645376379e-1 * wr_8_4 -
      0.384511146100118534e-1 * wr_10_4;
  results[k++] =
      0.230653932620255353e0 * wr_4_4 - 0.306285651484759933e0 * wr_6_4 -
      0.152848853959807793e-1 * wr_8_4 + 0.717307953208542981e-1 * wr_10_4 +
      0.139730463555188946e0 * wr_8_8 - 0.487866991339368885e-1 * wr_10_8;
  results[k++] =
      wr_0_0 + 0.415836817455582192e0 * wr_2_0 +
      0.115730423422731115e0 * wr_4_0 - 0.570444463415496835e-1 * wr_6_0 -
      0.103857516170961644e0 * wr_8_0 - 0.564143636215641906e-1 * wr_10_0 +
      0.486063920740614090e0 * wr_4_4 + 0.256128928833946933e0 * wr_6_4 +
      0.140600496148892938e0 * wr_8_4 + 0.565566299180316531e-1 * wr_10_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] =
      0.144841364875580273e0 * wr_6_0 + 0.541946762797134628e0 * wr_6_4;
  results[k++] =
      -0.392232270276368064e0 * wr_6_0 + 0.628970902033150977e0 * wr_6_4;
  results[k++] = 0.239045721866878728e0 * wr_6_4;
  results[k++] =
      0.603022689155527245e0 * wr_6_0 + 0.483493778415228179e0 * wr_6_4;
  results[k++] = -0.626783170528008719e0 * wr_6_4;
  results[k++] =
      0.588348405414552098e0 * wr_6_0 - 0.262071209180479573e0 * wr_6_4;
  results[k++] = 0.741619848709566296e0 * wr_6_4;
  results[k++] =
      0.339683110243378725e0 * wr_6_0 + 0.907841299003203627e-1 * wr_6_4;
  results[k++] =
      -0.222680885707561645e0 * wr_5_0 - 0.372616391489439941e0 * wr_5_4;
  results[k++] =
      -0.968979472765805478e-1 * wr_5_0 + 0.217818417103508982e0 * wr_7_0 +
      0.810706391395213349e-1 * wr_5_4 + 0.668832772901051012e0 * wr_7_4;
  results[k++] =
      0.487056787394848929e0 * wr_5_0 + 0.993072652873696635e-1 * wr_7_0 -
      0.349286523998893628e0 * wr_5_4 - 0.304932679681573801e0 * wr_7_4;
  results[k++] =
      0.984003306256663543e-1 * wr_5_0 - 0.449413380517059377e0 * wr_7_0 +
      0.211699602597167534e0 * wr_5_4 + 0.344991944973161907e0 * wr_7_4;
  results[k++] =
      -0.474104655930760476e0 * wr_5_4 - 0.695353495365115364e-1 * wr_7_4;
  results[k++] =
      -0.402291140640906779e0 * wr_5_4 + 0.196675668757776647e0 * wr_7_4;
  results[k++] =
      -0.534862186740501905e0 * wr_5_0 - 0.335887649103852612e0 * wr_7_0 -
      0.191784776293020855e0 * wr_5_4 - 0.515687954032344966e0 * wr_7_4;
  results[k++] =
      0.151281871697789760e0 * wr_5_0 + 0.431833517087530482e0 * wr_7_0 +
      0.271224631690280130e0 * wr_5_4 - 0.132598708826359174e0 * wr_7_4;
  results[k++] =
      0.662993544131795872e0 * wr_5_4 + 0.298347094859308143e0 * wr_7_4;
  results[k++] =
      0.234403615469247712e0 * wr_5_4 - 0.351605423203871568e0 * wr_7_4;
  results[k++] =
      -0.278318164225627959e0 * wr_5_0 - 0.536259232551796185e0 * wr_7_0 +
      0.554423053966497822e-1 * wr_5_4 + 0.457399019522360701e0 * wr_7_4;
  results[k++] =
      0.492001653128331772e0 * wr_5_0 + 0.126397513270422949e0 * wr_7_0 -
      0.215619965608226192e0 * wr_5_4 + 0.323429948412339288e0 * wr_7_4;
  results[k++] = -0.509901951359278483e0 * wr_7_4;
  results[k++] =
      0.832050294337843681e0 * wr_5_4 + 0.194145068678830193e0 * wr_7_4;
  results[k++] =
      -0.447213595499957940e0 * wr_7_0 - 0.228868854108531729e0 * wr_7_4;
  results[k++] =
      0.511303116375689813e0 * wr_5_0 - 0.121626063852629974e0 * wr_7_0 +
      0.101854018789009561e0 * wr_5_4 - 0.211630016817164311e0 * wr_7_4;
  results[k++] =
      0.340466063963105051e0 * wr_4_0 - 0.110166345618213372e0 * wr_6_0 +
      0.189902897406215823e0 * wr_4_4 - 0.412204720856279095e0 * wr_6_4;
  results[k++] =
      0.750657112586154959e-1 * wr_4_0 - 0.291472753354582845e0 * wr_6_0 -
      0.125608959946864988e0 * wr_4_4 - 0.155798740090359142e0 * wr_6_4;
  results[k++] =
      -0.138605763491624455e-1 * wr_4_0 - 0.139930052456288247e0 * wr_6_0 +
      0.263555990179501549e0 * wr_8_0 + 0.316270641165486318e-1 * wr_4_4 +
      0.142791903928564369e0 * wr_6_4 + 0.700852248337196865e0 * wr_8_4;
  results[k++] =
      -0.537825434827237823e0 * wr_4_0 - 0.213094195881134284e-1 * wr_6_0 +
      0.128564869306645005e0 * wr_4_4 + 0.341710916613128265e-1 * wr_6_4;
  results[k++] =
      0.109457873024465230e0 * wr_4_0 + 0.338276548879659426e0 * wr_6_0 +
      0.166869582937427825e0 * wr_8_0 - 0.183158053898025103e0 * wr_4_4 +
      0.180816421126853421e0 * wr_6_4 - 0.443742228363446483e0 * wr_8_4;
  results[k++] =
      0.716569983633538350e-1 * wr_4_0 + 0.590543958502654657e-1 * wr_6_0 -
      0.458815496997884698e0 * wr_8_0 + 0.856464945029083251e-1 * wr_4_4 +
      0.126263609402638955e0 * wr_6_4 + 0.135565490034924922e0 * wr_8_4;
  results[k++] =
      0.845691372199148565e0 * wr_4_4 + 0.132467532467532468e0 * wr_6_4 +
      0.127485900820902909e-1 * wr_8_4 + 0.543873440542679096e0 * wr_8_8;
  results[k++] =
      0.639282587643402851e0 * wr_4_4 - 0.137441626548809901e0 * wr_6_4 -
      0.843239973097885591e-1 * wr_8_4 + 0.719476934184501439e0 * wr_8_8;
  results[k++] =
      0.195304056556208968e0 * wr_4_4 - 0.404894993977140145e0 * wr_6_4 +
      0.165609043102868009e0 * wr_8_4 + 0.471008215953605550e0 * wr_8_8;
  results[k++] =
      0.318022846491564199e0 * wr_4_0 + 0.334165895254352779e0 * wr_6_0 +
      0.106662357163537151e0 * wr_8_0 + 0.380110004548677622e-1 * wr_4_4 +
      0.267928776511366336e0 * wr_6_4 + 0.283638223438202366e0 * wr_8_4;
  results[k++] =
      -0.480805350316313718e0 * wr_4_0 - 0.693427337633158050e-1 * wr_6_0 -
      0.423303106960002068e0 * wr_8_0 - 0.143668077554775902e0 * wr_4_4 +
      0.166793626288677451e0 * wr_6_4 - 0.375218100764827600e0 * wr_8_4;
  results[k++] =
      0.249675113572943705e0 * wr_6_0 + 0.327501829664994425e0 * wr_8_0 +
      0.131673968068709339e0 * wr_4_4 - 0.139523187395182039e0 * wr_6_4 -
      0.275412198737136099e0 * wr_8_4;
  results[k++] = -0.299659670905757585e0 * wr_6_4 -
                 0.118514211161779749e0 * wr_8_4 +
                 0.388922234131298635e0 * wr_8_8;
  results[k++] =
      0.670485234401511301e0 * wr_4_4 - 0.144149994031289434e0 * wr_6_4 +
      0.277379229996326295e0 * wr_8_4 + 0.514495755427526513e0 * wr_8_8;
  results[k++] =
      0.512091556499189153e0 * wr_4_4 + 0.235920806812791558e0 * wr_6_4 -
      0.250011542812296939e0 * wr_8_4 + 0.336816534854303887e0 * wr_8_8;
  results[k++] =
      0.281284338563097254e0 * wr_6_0 + 0.368964027760854493e0 * wr_8_0 -
      0.125294002758147031e0 * wr_6_4 - 0.545086091859823194e0 * wr_8_4;
  results[k++] =
      -0.469105170104850986e0 * wr_4_0 - 0.676553097759318853e-1 * wr_6_0 -
      0.413002217770133867e0 * wr_8_0 + 0.560687920095995213e-1 * wr_4_4 +
      0.120544280751235613e0 * wr_6_4 - 0.554677785454308102e-1 * wr_8_4;
  results[k++] =
      0.358284991816769174e0 * wr_4_0 + 0.295271979251327329e0 * wr_6_0 +
      0.136552231249370446e-1 * wr_8_0 - 0.128469741754362488e0 * wr_4_4 +
      0.374845090414084396e0 * wr_6_4 + 0.205769047374439613e0 * wr_8_4;
  results[k++] = -0.354562104171167331e0 * wr_6_4 +
                 0.327198446709961882e0 * wr_8_4 +
                 0.153392997769474089e0 * wr_8_8;
  results[k++] =
      -0.309173471200421152e0 * wr_8_4 + 0.202919862478356945e0 * wr_8_8;
  results[k++] =
      0.605914900900173545e0 * wr_4_4 + 0.279145263119541259e0 * wr_6_4 +
      0.108985448819090718e0 * wr_8_4 + 0.132842232831014294e0 * wr_8_8;
  results[k++] =
      -0.162399588588230031e0 * wr_6_0 + 0.497050121747708425e0 * wr_8_0 -
      0.434031157321571406e-1 * wr_6_4 + 0.440587842613505995e0 * wr_8_4;
  results[k++] =
      -0.429668924423659729e0 * wr_6_0 - 0.939336436627724236e-1 * wr_8_0 -
      0.229667700705285825e0 * wr_6_4 + 0.249789827621529211e0 * wr_8_4;
  results[k++] =
      0.620567809416043641e0 * wr_4_0 - 0.511426070114722280e-1 * wr_6_0 -
      0.993364690125377484e-1 * wr_8_0 + 0.741720399846028873e-1 * wr_4_4 -
      0.316652116061498859e0 * wr_6_4 - 0.978359652056092912e-2 * wr_8_4;
  results[k++] = -0.465242105199235432e0 * wr_3_0 +
                 0.259794366658821921e0 * wr_5_0 +
                 0.434719123404346598e0 * wr_5_4;
  results[k++] =
      0.456835370572369126e-1 * wr_3_0 + 0.345366138507265904e0 * wr_5_0 -
      0.120990228379671963e0 * wr_7_0 - 0.288954042607460303e0 * wr_5_4 -
      0.371512340495306106e0 * wr_7_4;
  results[k++] = 0.448935604234937374e-1 * wr_3_0 +
                 0.652680652680652681e-1 * wr_5_0 -
                 0.320110055361521334e0 * wr_7_0;
  results[k++] =
      0.993942733592589436e-3 * wr_3_0 - 0.305263423163375172e-1 * wr_5_0 -
      0.161040961778023747e0 * wr_7_0 + 0.295120339539477126e0 * wr_9_0 +
      0.364859576748217433e-1 * wr_5_4 + 0.154528761916892089e0 * wr_7_4 +
      0.703018721041995059e0 * wr_9_4;
  results[k++] =
      0.400871410767362210e0 * wr_3_0 + 0.108234841643299762e0 * wr_5_0 -
      0.108335198495312360e0 * wr_7_0 - 0.776192275553096950e-1 * wr_5_4 +
      0.332653832379898692e0 * wr_7_4;
  results[k++] =
      -0.432990611098036534e0 * wr_3_0 - 0.141958488509510299e0 * wr_5_0 -
      0.140418465991732959e0 * wr_7_0 - 0.305411124247982088e0 * wr_5_4 +
      0.107792161499287796e0 * wr_7_4;
  results[k++] =
      -0.226599325119155952e-1 * wr_3_0 + 0.198840100812768260e0 * wr_5_0 +
      0.237268385526413982e0 * wr_7_0 + 0.213592420378811656e0 * wr_9_0 +
      0.237659377174355643e0 * wr_5_4 + 0.227673689057786079e0 * wr_7_4 -
      0.508807595007832627e0 * wr_9_4;
  results[k++] =
      0.309535109355743416e-1 * wr_3_0 + 0.944751151737104187e-1 * wr_5_0 +
      0.175219146188059381e-1 * wr_7_0 - 0.456679804268174606e0 * wr_9_0;
  results[k++] =
      -0.316069770620506984e0 * wr_5_4 - 0.189641862372304191e-1 * wr_7_4;
  results[k++] =
      0.133746265344494108e0 * wr_7_4 + 0.182723748293351634e-1 * wr_9_4 -
      0.682788741998918871e-1 * wr_5_4 + 0.398656153327866381e0 * wr_9_8;
  results[k++] =
      0.418073217014932427e0 * wr_5_4 - 0.113854361932171140e-1 * wr_7_4 -
      0.870194873897588396e-1 * wr_9_4 + 0.632847024198701356e0 * wr_9_8;
  results[k++] =
      0.270370547767749843e0 * wr_5_4 - 0.383403612905947782e0 * wr_7_4 +
      0.144709825682299114e0 * wr_9_4 + 0.451027951007805363e0 * wr_9_8;
  results[k++] =
      -0.356574791160334604e0 * wr_5_0 - 0.916057224828688940e-1 * wr_7_0 -
      0.127856517528680570e0 * wr_5_4 - 0.140642169281548627e0 * wr_7_4;
  results[k++] =
      0.512065431378314098e0 * wr_3_0 + 0.256763195677673753e-1 * wr_5_0 +
      0.293661745379224895e0 * wr_7_0 + 0.170659255485854458e0 * wr_9_0 +
      0.460336075947121186e-1 * wr_5_4 - 0.901717137002302089e-1 * wr_7_4 +
      0.406534675694880934e0 * wr_9_4;
  results[k++] =
      -0.348376573650864772e0 * wr_3_0 - 0.262027888044688036e0 * wr_5_0 -
      0.179989794867938280e-2 * wr_7_0 - 0.451521948947006356e0 * wr_9_0 +
      0.344501551057928738e0 * wr_5_4 + 0.101323985605273158e-1 * wr_7_4 -
      0.215117930242589876e0 * wr_9_4;
  results[k++] =
      -0.413811358787223558e-1 * wr_3_0 + 0.726235987291246159e-1 * wr_5_0 +
      0.276118659659734563e0 * wr_7_0 + 0.263289418530098615e0 * wr_9_0 -
      0.182283786119128370e0 * wr_5_4 - 0.279169916136228112e0 * wr_7_4 -
      0.292690033716257400e0 * wr_9_4;
  results[k++] =
      -0.331496772065897936e0 * wr_5_4 + 0.193048120203081739e0 * wr_7_4 +
      0.282269079393350915e-1 * wr_9_4 - 0.615838425193063485e0 * wr_9_8;
  results[k++] =
      -0.631866065328911367e-1 * wr_7_4 - 0.139376206531551143e0 * wr_9_4 +
      0.179028718509858220e0 * wr_5_4 - 0.380103728170675335e0 * wr_9_8;
  results[k++] = 0.405998971470575075e-1 * wr_5_4 -
                 0.262705216833901520e0 * wr_7_4 +
                 0.248909477284390899e0 * wr_9_4;
  results[k++] =
      0.354458778479283313e0 * wr_5_4 + 0.223398389797867634e0 * wr_7_4 -
      0.198339644808714637e0 * wr_9_4 + 0.134386961871886331e0 * wr_9_8;
  results[k++] =
      0.139159082112813980e0 * wr_5_0 - 0.346991268121750472e0 * wr_7_0 -
      0.141697953272994032e0 * wr_9_0 - 0.277211526983248911e-1 * wr_5_4 +
      0.295964071455645161e0 * wr_7_4 + 0.337544725110088003e0 * wr_9_4;
  results[k++] =
      0.375772469583997849e0 * wr_5_0 + 0.227147518516038611e-1 * wr_7_0 +
      0.437289377455898899e0 * wr_9_0 - 0.164682468957245243e0 * wr_5_4 +
      0.581232243378512625e-1 * wr_7_4 - 0.416674254772160173e0 * wr_9_4;
  results[k++] =
      -0.604264866984415872e0 * wr_3_0 + 0.946857622917944096e-2 * wr_5_0 -
      0.183414705916800282e0 * wr_7_0 - 0.320388630568217483e0 * wr_9_0 -
      0.916686169101086052e-1 * wr_5_4 - 0.299570643497086945e-1 * wr_7_4 -
      0.228963417753524682e0 * wr_9_4;
  results[k++] =
      0.242244868191451369e0 * wr_3_0 + 0.318853513711272663e0 * wr_5_0 +
      0.182519943945895189e0 * wr_7_0 - 0.261639471195308369e-1 * wr_9_0 +
      0.385337317794226212e0 * wr_5_4 + 0.242859654071991309e0 * wr_7_4 +
      0.103121616883335967e0 * wr_9_4;
  results[k++] = 0.269948091896088609e0 * wr_7_4 -
                 0.166992639399314377e0 * wr_9_4 -
                 0.520478465277226876e0 * wr_9_8;
  results[k++] =
      -0.314006284596402196e0 * wr_7_4 + 0.288596265197249231e0 * wr_9_4 -
      0.211829636434080846e0 * wr_5_4 - 0.449744796342264869e0 * wr_9_8;
  results[k++] =
      0.336269122990682980e0 * wr_5_4 + 0.282579094950153764e-1 * wr_7_4 -
      0.229066184104189929e0 * wr_9_4 - 0.203985065925775640e0 * wr_9_8;
  results[k++] =
      -0.599144689515278081e-1 * wr_5_4 + 0.158597123695220669e0 * wr_7_4 +
      0.772544566838754720e-1 * wr_9_4 - 0.318017595296978264e-1 * wr_9_8;
  results[k++] =
      0.236760138794095381e0 * wr_7_0 - 0.409046757328910587e0 * wr_9_0 +
      0.121165863939810915e0 * wr_7_4 - 0.584644613717542616e0 * wr_9_4;
  results[k++] =
      -0.130171401881022971e0 * wr_5_0 + 0.196715521441485592e0 * wr_7_0 +
      0.353456795703097936e0 * wr_9_0 - 0.259307639408939264e-1 * wr_5_4 +
      0.342286084019799829e0 * wr_7_4;
  results[k++] =
      -0.344401157189832241e0 * wr_5_0 - 0.252795026540845899e0 * wr_7_0 -
      0.178376517003168941e0 * wr_5_4 + 0.296794540896028994e0 * wr_7_4 +
      0.190944131263273864e0 * wr_9_4;
  results[k++] =
      0.699300699300699301e0 * wr_3_0 + 0.613633873244204340e-1 * wr_5_0 -
      0.103691891749323785e0 * wr_7_0 - 0.755288095626213116e-1 * wr_9_0 -
      0.359382052869492489e0 * wr_5_4 + 0.906005175301241569e-2 * wr_7_4 +
      0.412181261078285615e-1 * wr_9_4;
  results[k++] =
      0.520156486610299385e0 * wr_2_0 - 0.380652631526647173e0 * wr_4_0 +
      0.328452583513414926e-1 * wr_6_0 - 0.212317893862233537e0 * wr_4_4 +
      0.122895703530795384e0 * wr_6_4;
  results[k++] =
      -0.311399577664609188e0 * wr_2_0 - 0.237378621757769779e0 * wr_4_0 +
      0.245791407061590766e0 * wr_6_0 + 0.397210407956955894e0 * wr_4_4 +
      0.131381033405365970e0 * wr_6_4;
  results[k++] =
      -0.335267803528667734e-1 * wr_2_0 + 0.118939869128777799e0 * wr_4_0 +
      0.320203368307785951e0 * wr_6_0 - 0.123360926796523691e0 * wr_8_0 -
      0.271397001985207381e0 * wr_4_4 - 0.326752172263288437e0 * wr_6_4 -
      0.328043323331105856e0 * wr_8_4;
  results[k++] =
      0.132403469318985298e-1 * wr_2_0 + 0.683222671970905181e-1 * wr_4_0 +
      0.459833616918780896e-1 * wr_6_0 - 0.334062968975481275e0 * wr_8_0 +
      0.816607284085513604e-1 * wr_4_4 + 0.983165628246363069e-1 * wr_6_4 +
      0.987050576713450267e-1 * wr_8_4;
  results[k++] =
      -0.871228494774333851e-1 * wr_8_4 - 0.146079151850935249e-1 * wr_4_4 +
      0.312324262839643634e-1 * wr_10_4 + 0.727420095628727815e-1 * wr_6_4 +
      0.446088273913344057e0 * wr_10_8 - 0.247785852344253789e0 * wr_8_8;
  results[k++] =
      0.122834301726547477e-2 * wr_2_0 - 0.448557521562240274e-1 * wr_6_0 -
      0.172290667676668712e0 * wr_8_0 + 0.318273831017521987e0 * wr_10_0 -
      0.984865440866476003e-2 * wr_4_4 + 0.250662447862119868e-1 * wr_6_4 +
      0.144887592399891950e0 * wr_8_4 + 0.694877617666389993e0 * wr_10_4;
  results[k++] =
      -0.400871410767362210e0 * wr_4_0 + 0.228716691648418537e0 * wr_6_0 +
      0.958265957626781617e-1 * wr_4_4 - 0.366762642336344164e0 * wr_6_4;
  results[k++] =
      0.603707553304872419e0 * wr_2_0 - 0.576893644324689122e-1 * wr_4_0 +
      0.213944874696200762e0 * wr_6_0 - 0.129523406960775906e0 * wr_8_0 +
      0.965327703536067886e-1 * wr_4_4 + 0.114358345824209268e0 * wr_6_4 +
      0.344430687835733448e0 * wr_8_4;
  results[k++] =
      -0.278047285569869126e0 * wr_2_0 - 0.307450202386907331e0 * wr_4_0 -
      0.365990021629233774e-1 * wr_6_0 - 0.202823945449399346e0 * wr_8_0 -
      0.367473277838481122e0 * wr_4_4 - 0.782519581665472645e-1 * wr_6_4 +
      0.599280707290309089e-1 * wr_8_4;
  results[k++] =
      -0.496454247532834913e-1 * wr_2_0 + 0.308362623667201700e-1 * wr_4_0 +
      0.226025907040790084e0 * wr_6_0 + 0.173447318127443085e0 * wr_8_0 +
      0.247494756975786228e0 * wr_10_0 + 0.257994680899518128e0 * wr_4_4 +
      0.281903834893817475e0 * wr_6_4 + 0.189919818770640232e0 * wr_8_4 -
      0.540347808559820062e0 * wr_10_4;
  results[k++] =
      0.235929791691995611e0 * wr_8_4 + 0.395584213251215398e-1 * wr_4_4 -
      0.845778102002960278e-1 * wr_10_4 - 0.196986293106391589e0 * wr_6_4 +
      0.517719752732824705e0 * wr_10_8 - 0.287574540081453314e0 * wr_8_8;
  results[k++] =
      0.855351929685525390e-2 * wr_2_0 + 0.531284738739570857e-1 * wr_4_0 +
      0.993845054143626238e-1 * wr_6_0 - 0.153812747358860231e-1 * wr_8_0 -
      0.451465985557882699e0 * wr_10_0 - 0.622306585055398250e-1 * wr_4_4 -
      0.796848790316838609e-1 * wr_6_4 - 0.954382998658348777e-1 * wr_8_4 -
      0.896065468641856474e-1 * wr_10_4;
  results[k++] =
      -0.252136452829649601e0 * wr_4_4 + 0.139391250545441436e0 * wr_6_4 -
      0.116618375621591651e-1 * wr_8_4 - 0.497510993540503870e0 * wr_8_8;
  results[k++] =
      0.498658631208377158e0 * wr_4_4 - 0.162985719454690042e0 * wr_6_4 -
      0.363621672148422108e-1 * wr_8_4 + 0.310252613997011490e0 * wr_8_8;
  results[k++] =
      -0.160144995850655517e0 * wr_4_4 - 0.210057830664865211e0 * wr_6_4 +
      0.114460081801248007e0 * wr_8_4 + 0.212339668105043303e-1 * wr_10_4 +
      0.325535598280236291e0 * wr_8_8 + 0.303281708462541945e0 * wr_10_8;
  results[k++] =
      -0.231965536603277633e0 * wr_4_4 + 0.286981986417085309e0 * wr_6_4 +
      0.501254421531402710e-1 * wr_8_4 - 0.862527809256512655e-1 * wr_10_4 -
      0.610978413119917032e-1 * wr_8_8 + 0.527972624351420935e0 * wr_10_8;
  results[k++] =
      0.630990297665718993e-2 * wr_10_0 - 0.433534931231454830e-1 * wr_8_0 -
      0.161727123635149348e0 * wr_4_0 + 0.904082105634267101e-1 * wr_2_0 +
      0.120053178185260152e0 * wr_6_0;
  results[k++] =
      -0.362721347067557617e0 * wr_8_4 - 0.608176007277884196e-1 * wr_4_4 +
      0.130030959752321981e0 * wr_10_4 + 0.302849136079745109e0 * wr_6_4 +
      0.397974339671118575e0 * wr_10_8 - 0.221060307417329422e0 * wr_8_8;
  results[k++] =
      -0.948160937537490723e-1 * wr_4_0 + 0.351631838847438675e0 * wr_6_0 -
      0.975699332419216599e-1 * wr_8_0 - 0.113326907879812991e-1 * wr_4_4 +
      0.281932685838947803e0 * wr_6_4 - 0.259459506255720522e0 * wr_8_4;
  results[k++] =
      -0.375041871154695254e0 * wr_4_0 - 0.822303667030264425e-1 * wr_6_0 -
      0.182536630720838256e0 * wr_8_0 - 0.112065193525598813e0 * wr_4_4 +
      0.197792909351684255e0 * wr_6_4 - 0.161801429691739392e0 * wr_8_4;
  results[k++] =
      0.657651226514319959e0 * wr_2_0 + 0.129530405434198686e0 * wr_6_0 +
      0.226351686545458180e0 * wr_8_0 + 0.216384596669903620e0 * wr_10_0 -
      0.107969734176688425e0 * wr_4_4 - 0.723840465000515509e-1 * wr_6_4 -
      0.190350129472901016e0 * wr_8_4 + 0.472425937605305202e0 * wr_10_4;
  results[k++] =
      -0.218072809022786879e0 * wr_2_0 - 0.311538593762318381e0 * wr_4_0 -
      0.144789580701886513e0 * wr_6_0 - 0.326789250092560584e-2 * wr_8_0 -
      0.460406774016608452e0 * wr_10_0 + 0.364912643372997831e0 * wr_4_4 +
      0.116089929463096154e0 * wr_6_4 - 0.202767397233338208e-1 * wr_8_4 -
      0.913811062012297958e-1 * wr_10_4;
  results[k++] =
      -0.362721347067557617e0 * wr_8_4 - 0.608176007277884196e-1 * wr_4_4 +
      0.130030959752321981e0 * wr_10_4 + 0.302849136079745109e0 * wr_6_4 +
      0.397974339671118575e0 * wr_10_8 - 0.221060307417329422e0 * wr_8_8;
  results[k++] =
      -0.410946411651939592e-1 * wr_2_0 - 0.179696804039054832e-1 * wr_4_0 +
      0.120053178185260152e0 * wr_6_0 + 0.279827091976666300e0 * wr_8_0 +
      0.220846604183001648e0 * wr_10_0 - 0.191348350881423514e0 * wr_4_4 -
      0.245017015070491006e0 * wr_6_4 - 0.293456018766515091e0 * wr_8_4 -
      0.275524401997362092e0 * wr_10_4;
  results[k++] = 0.167514848565122484e0 * wr_6_4 -
                 0.883352774858346146e-1 * wr_8_4 +
                 0.289885517826224207e0 * wr_8_8;
  results[k++] =
      -0.169620838257652680e0 * wr_4_4 - 0.335178166057758673e0 * wr_6_4 +
      0.153885989896857798e0 * wr_8_4 + 0.384636766083875966e-1 * wr_10_4 +
      0.285434812919284437e0 * wr_8_8 - 0.549371187194835623e0 * wr_10_8;
  results[k++] =
      0.468729735734901522e0 * wr_4_4 + 0.154812791814788879e0 * wr_6_4 +
      0.451661026644185481e-1 * wr_8_4 - 0.144251274947576315e0 * wr_10_4 -
      0.608479513432887553e-1 * wr_8_8 - 0.542189555665353954e0 * wr_10_8;
  results[k++] =
      -0.317331531208767055e0 * wr_4_4 - 0.627060930457677747e-2 * wr_6_4 -
      0.297908041075709449e0 * wr_8_4 + 0.226156699535261804e0 * wr_10_4 -
      0.363119753908638743e0 * wr_8_8 - 0.209750893943706778e0 * wr_10_8;
  results[k++] =
      -0.165447051825330951e-1 * wr_10_0 + 0.113673817966597000e0 * wr_8_0 +
      0.424052095644131702e0 * wr_4_0 - 0.237052327965380238e0 * wr_2_0 -
      0.314782088829121660e0 * wr_6_0;
  results[k++] =
      -0.287037169955027743e0 * wr_4_4 + 0.264692377984269127e0 * wr_6_4 +
      0.211347421235917155e0 * wr_8_4 - 0.167372535016176732e0 * wr_10_4 -
      0.322013897775706780e0 * wr_8_8 + 0.189726822178064782e-1 * wr_10_8;
  results[k++] =
      -0.157242725508287744e0 * wr_6_0 + 0.275009549108463388e0 * wr_8_0 +
      0.700414768350657259e-1 * wr_6_4 - 0.406283184996086474e0 * wr_8_4;
  results[k++] =
      0.118675263975364620e0 * wr_4_0 - 0.157312407864853502e0 * wr_6_0 -
      0.229127664360436909e0 * wr_8_0 - 0.210674233229976881e0 * wr_10_0 -
      0.141844070723667118e-1 * wr_4_4 + 0.280290063294630560e0 * wr_6_4 -
      0.307727222725232938e-1 * wr_8_4 + 0.459958674021428922e0 * wr_10_4;
  results[k++] =
      0.327946882546034487e0 * wr_4_0 + 0.193759423215476704e0 * wr_6_0 -
      0.246689893846018665e-2 * wr_8_0 + 0.457424447165442821e0 * wr_10_0 -
      0.117591448908313959e0 * wr_4_4 + 0.245975824383815851e0 * wr_6_4 -
      0.371734273319176691e-1 * wr_8_4 - 0.272367530265462320e0 * wr_10_4;
  results[k++] =
      -0.709220353618335590e0 * wr_2_0 - 0.634345968686814926e-1 * wr_4_0 -
      0.176582739875617253e-1 * wr_6_0 - 0.228854100307042959e0 * wr_8_0 -
      0.258632021039696609e0 * wr_10_0 - 0.185756170247653052e0 * wr_4_4 -
      0.152068660936025052e-1 * wr_6_4 - 0.174386253346498361e0 * wr_8_4 -
      0.278279121408307333e0 * wr_10_4;
  results[k++] =
      -0.353894687537993417e0 * wr_8_4 - 0.593376319876823097e-1 * wr_4_4 +
      0.126866715300444042e0 * wr_10_4 + 0.295479439659587382e0 * wr_6_4 -
      0.215716563638676960e0 * wr_10_8 + 0.119822725033938880e0 * wr_8_8;
  results[k++] =
      0.147013612914699677e0 * wr_2_0 + 0.272549070973399850e0 * wr_4_0 +
      0.266208496645614171e0 * wr_6_0 + 0.117495848676907121e0 * wr_8_0 -
      0.430944804396160758e-1 * wr_10_0 + 0.336045555929915055e0 * wr_4_4 +
      0.177077508959297469e0 * wr_6_4 + 0.972056757892762642e-1 * wr_8_4 +
      0.391010386316446461e-1 * wr_10_4;
  results[k++] =
      0.349775720811217009e-1 * wr_6_4 - 0.115521784575129029e0 * wr_8_4 +
      0.579203929841167399e-1 * wr_10_4 - 0.541574479397396329e-1 * wr_8_8 +
      0.827268682098290243e0 * wr_10_8;
  results[k++] =
      0.308744956134885351e0 * wr_8_4 - 0.184210526315789474e0 * wr_10_4 -
      0.202638615132551970e0 * wr_8_8 + 0.154767798760990557e0 * wr_10_8;
  results[k++] =
      -0.924347504439625511e-1 * wr_4_4 - 0.211358037189388202e0 * wr_6_4 -
      0.295333242312722829e0 * wr_8_4 + 0.256234500647025823e0 * wr_10_4 -
      0.359981334785059727e0 * wr_8_8 - 0.189403308067174280e0 * wr_10_8;
  results[k++] =
      0.375471731264846329e0 * wr_4_4 + 0.333876824410707144e0 * wr_6_4 +
      0.444314556058188572e-1 * wr_8_4 - 0.186503665408855902e0 * wr_10_4 -
      0.379102135578177431e0 * wr_8_8 - 0.181999110061623854e0 * wr_10_8;
  results[k++] =
      0.195759591695454972e-1 * wr_10_0 - 0.134500675267986083e0 * wr_8_0 -
      0.501745206004254461e0 * wr_4_0 + 0.280484097002537153e0 * wr_2_0 +
      0.372455190360766827e0 * wr_6_0;
  results[k++] =
      -0.566044932723022720e0 * wr_4_4 - 0.134223533668568270e0 * wr_6_4 +
      0.107172703370061253e0 * wr_8_4 + 0.611227944848972673e-1 * wr_10_4 -
      0.228607189260955834e0 * wr_8_8 - 0.623577231666324955e-1 * wr_10_8;
  results[k++] =
      0.160207288059388875e-1 * wr_6_0 - 0.175490188492487779e0 * wr_8_0 +
      0.216718266253869969e0 * wr_10_0 + 0.428171987701737888e-2 * wr_6_4 -
      0.155555426233228107e0 * wr_8_4 + 0.473154428304188661e0 * wr_10_4;
  results[k++] =
      0.119888156556486609e0 * wr_6_0 + 0.938034514398954603e-1 * wr_8_0 -
      0.445987025977698896e0 * wr_10_0 + 0.640829152237555501e-1 * wr_6_4 -
      0.249443618407854379e0 * wr_8_4 - 0.442595440437292192e0 * wr_10_4;
  results[k++] =
      -0.946701104589257973e-1 * wr_4_0 + 0.387232113985899573e-1 * wr_6_0 +
      0.269186040808698661e0 * wr_8_0 + 0.264094127704884160e0 * wr_10_0 -
      0.113152424469355316e-1 * wr_4_4 + 0.239756781020367583e0 * wr_6_4 +
      0.265119914007327542e-1 * wr_8_4 - 0.157251466917278213e0 * wr_10_4;
  results[k++] =
      -0.256367871046480560e0 * wr_4_0 - 0.295655267964144924e0 * wr_6_0 -
      0.148491697955181967e0 * wr_8_0 + 0.340557275541795666e-1 * wr_10_0 -
      0.107246374896116442e0 * wr_4_4 + 0.324242968868679692e0 * wr_6_4 +
      0.251281842376753095e0 * wr_8_4 + 0.114908932588160103e0 * wr_10_4;
  results[k++] =
      -0.204321193114838996e0 * wr_8_4 - 0.342585978011633300e-1 * wr_4_4 +
      0.732465322299149812e-1 * wr_10_4 + 0.170595134027462558e0 * wr_6_4 +
      0.747264096512707082e-1 * wr_10_8 - 0.415078095320274734e-1 * wr_8_8;
  results[k++] =
      0.763905140917571708e0 * wr_2_0 + 0.179441371352664269e0 * wr_4_0 -
      0.430347532156950600e-1 * wr_6_0 - 0.105824565385150343e0 * wr_8_0 -
      0.596344776546398402e-1 * wr_10_0 - 0.323359986960189828e0 * wr_4_4 +
      0.920121727185708854e-1 * wr_6_4 + 0.101019101550656651e0 * wr_8_4 +
      0.501666559546088729e-1 * wr_10_4;
  results[k++] =
      -0.263722808834143599e0 * wr_5_0 + 0.738548945875996396e0 * wr_1_0 -
      0.119652500718920105e0 * wr_3_0 + 0.323359986960189828e-1 * wr_7_0 +
      0.220646332236815517e0 * wr_5_4 + 0.992908495065669826e-1 * wr_7_4;
  results[k++] =
      -0.147709789175199279e0 * wr_1_0 - 0.311096501869192273e0 * wr_3_0 -
      0.131861404417071800e0 * wr_5_0 + 0.226351990872132880e0 * wr_7_0;
  results[k++] =
      -0.326806194281060772e-1 * wr_1_0 + 0.296272278655605244e0 * wr_7_0 -
      0.123396012965233729e0 * wr_9_0 - 0.179201689916475852e-1 * wr_3_0 +
      0.160458004814036892e0 * wr_5_0 - 0.191783997950452755e0 * wr_5_4 -
      0.284291573432435847e0 * wr_7_4 - 0.293946894178386093e0 * wr_9_4;
  results[k++] =
      -0.128836275285942120e0 * wr_5_4 + 0.176834103333646047e0 * wr_7_4 -
      0.658223546325246538e-1 * wr_9_4 - 0.478691411595779953e0 * wr_9_8;
  results[k++] =
      -0.807482893971504563e-1 * wr_5_0 - 0.279553048688995485e-1 * wr_7_0 -
      0.257659405019210233e-1 * wr_3_0 + 0.341535427746684972e0 * wr_9_0 -
      0.106163932206516034e0 * wr_5_4 - 0.157372417153188473e0 * wr_7_4 -
      0.162717215614267848e0 * wr_9_4;
  results[k++] =
      0.798855049325565187e-2 * wr_5_4 + 0.809366299974585781e-1 * wr_7_4 -
      0.138765707729408898e0 * wr_9_4 + 0.571461751818019891e-1 * wr_11_4 +
      0.601374529598321008e0 * wr_11_8;
  results[k++] =
      -0.186306381595161785e-2 * wr_5_0 - 0.565080829676353468e-1 * wr_7_0 +
      0.252655833471857635e-2 * wr_3_0 - 0.178614954939856954e0 * wr_9_0 +
      0.336005070491934008e0 * wr_11_0 - 0.180369761081127553e-1 * wr_5_4 +
      0.922944683894658532e-2 * wr_7_4 + 0.127645885786867128e0 * wr_9_4 +
      0.683368863294938127e0 * wr_11_4;
  results[k++] =
      -0.324020503683746263e0 * wr_3_0 + 0.225170481650328473e0 * wr_7_0 -
      0.178541185595587526e0 * wr_5_0 - 0.384115559342990315e0 * wr_5_4 -
      0.172852001704345641e0 * wr_7_4;
  results[k++] =
      0.763636363636363636e0 * wr_1_0 + 0.448643774331340979e-1 * wr_3_0 +
      0.229585589133668247e0 * wr_7_0 - 0.137302408054459497e0 * wr_9_0 +
      0.220301570799656210e0 * wr_7_4 + 0.327073909772051813e0 * wr_9_4;
  results[k++] =
      -0.537260573666773196e-2 * wr_7_0 - 0.132749303660612933e0 * wr_1_0 -
      0.238684273406789452e0 * wr_9_0 - 0.217261165573416252e0 * wr_5_0 -
      0.301814741509969834e0 * wr_3_0;
  results[k++] =
      0.263377958567515805e0 * wr_5_4 - 0.321346313084768088e0 * wr_7_4 +
      0.721479105365822704e-1 * wr_9_4 + 0.249678881357614818e-1 * wr_11_4 -
      0.224868795918876776e0 * wr_9_8 - 0.262748153046794894e0 * wr_11_8;
  results[k++] =
      -0.707453357439431308e-1 * wr_5_0 + 0.342585978011633300e-1 * wr_1_0 +
      0.473469799192173735e-1 * wr_3_0 - 0.131268083032884771e0 * wr_9_0 -
      0.273133552636142922e0 * wr_11_0 - 0.231426387933724954e0 * wr_7_0 -
      0.177569383442068629e0 * wr_5_4 - 0.233983771291606222e0 * wr_7_4 -
      0.145926334082322183e0 * wr_9_4 + 0.555500442655224162e0 * wr_11_4;
  results[k++] =
      -0.757158395053462036e-1 * wr_5_4 - 0.119551325534757163e0 * wr_7_4 +
      0.308675864206247160e0 * wr_9_4 - 0.138961494977010917e0 * wr_11_4 +
      0.209146344059772490e0 * wr_9_8 + 0.531764873363444347e0 * wr_11_8;
  results[k++] =
      0.175935916652629643e-1 * wr_3_0 + 0.681102089598535469e-1 * wr_5_0 -
      0.407189344115074334e-1 * wr_9_0 - 0.445668260706756727e0 * wr_11_0 +
      0.976752842981754781e-1 * wr_7_0 - 0.823117955625224985e-1 * wr_5_4 -
      0.129965992993456577e0 * wr_7_4 - 0.160488107360020148e0 * wr_9_4 -
      0.151067071835115614e0 * wr_11_4;
  results[k++] =
      -0.291972747440724761e0 * wr_5_4 + 0.144912944501830304e0 * wr_7_4 -
      0.124307211371062092e-1 * wr_9_4 - 0.271206316524017495e0 * wr_9_8;
  results[k++] =
      0.394163209044978428e0 * wr_5_4 - 0.805071913899057247e-1 * wr_7_4 -
      0.447505960935823530e-1 * wr_9_4 + 0.325447579828820995e0 * wr_9_8;
  results[k++] =
      -0.731484503950657077e-2 * wr_5_4 - 0.247494756975786228e0 * wr_7_4 +
      0.963777611274434379e-1 * wr_9_4 + 0.228834474650633689e-1 * wr_11_4 +
      0.300387785826402646e0 * wr_9_8 + 0.240812660009355906e0 * wr_11_8;
  results[k++] =
      -0.310374353304814871e0 * wr_1_0 + 0.410890701806659079e0 * wr_3_0 -
      0.219083270778031670e0 * wr_5_0 + 0.421137950100842420e-1 * wr_7_0 +
      0.628742512802323114e-2 * wr_9_0 - 0.279945909419432332e-2 * wr_11_0;
  results[k++] =
      0.247159262877419851e0 * wr_5_4 - 0.203428956567641199e0 * wr_7_4 -
      0.848220023506320313e-1 * wr_9_4 + 0.844490604462906040e-1 * wr_11_4 +
      0.132185543518571241e0 * wr_9_8 - 0.444347446170646499e0 * wr_11_8;
  results[k++] =
      -0.130865317832669849e-1 * wr_1_0 + 0.119940044962532783e0 * wr_3_0 -
      0.221107063690847701e0 * wr_5_0 + 0.177567350860399954e0 * wr_7_0 -
      0.688243293080625331e-1 * wr_9_0 + 0.106232003449510985e-1 * wr_11_0;
  results[k++] =
      -0.928185690621485557e-1 * wr_5_4 + 0.319165605897914332e0 * wr_7_4 -
      0.345495391110441314e0 * wr_9_4 + 0.119245128125597280e0 * wr_11_4 -
      0.299119822107720273e0 * wr_9_8 + 0.348574815206037854e0 * wr_11_8;
  results[k++] =
      0.109796560886748679e0 * wr_5_0 + 0.318180011238737021e0 * wr_7_0 -
      0.766389361531301494e-1 * wr_3_0 - 0.116099720710907020e0 * wr_9_0 +
      0.196847986167551552e0 * wr_5_4 - 0.977002872522774245e-1 * wr_7_4 -
      0.276566085871545443e0 * wr_9_4;
  results[k++] =
      -0.295607325162073433e0 * wr_3_0 - 0.247042261995184527e0 * wr_5_0 -
      0.127272004495494808e-1 * wr_7_0 - 0.232199441421814040e0 * wr_9_0 +
      0.324799177176460061e0 * wr_5_4 + 0.716468773183367779e-1 * wr_7_4 -
      0.110626434348618177e0 * wr_9_4;
  results[k++] =
      0.784963088134393298e0 * wr_1_0 + 0.175352603507290527e0 * wr_9_0 +
      0.250331035957466032e0 * wr_11_0 + 0.118001836870673692e0 * wr_3_0 -
      0.196482337037384497e-2 * wr_5_0 + 0.178240158070001589e0 * wr_7_0 +
      0.493166751957525863e-2 * wr_5_4 - 0.180209805602524488e0 * wr_7_4 -
      0.194933619889912696e0 * wr_9_4 + 0.509124565409808122e0 * wr_11_4;
  results[k++] =
      -0.247159262877419851e0 * wr_5_4 + 0.203428956567641199e0 * wr_7_4 +
      0.848220023506320313e-1 * wr_9_4 - 0.844490604462906040e-1 * wr_11_4 +
      0.132185543518571241e0 * wr_9_8 - 0.444347446170646499e0 * wr_11_8;
  results[k++] =
      0.258916592737673792e0 * wr_5_0 + 0.261475901149692141e0 * wr_3_0 +
      0.188622753840696934e-1 * wr_9_0 + 0.461910750542063348e0 * wr_11_0 +
      0.103458117768271624e0 * wr_1_0 + 0.829514144138022951e-1 * wr_7_0;
  results[k++] =
      0.216183421308773025e0 * wr_5_4 - 0.350763253316200641e0 * wr_9_4 +
      0.184508224296682319e0 * wr_11_4 + 0.353698561840455567e0 * wr_9_8 +
      0.255481818614237617e0 * wr_11_8;
  results[k++] =
      -0.243477674464614196e-1 * wr_1_0 + 0.150167176606899301e0 * wr_7_0 +
      0.276016973214521420e0 * wr_9_0 + 0.191058646114729597e0 * wr_11_0 -
      0.473350552294628986e-1 * wr_3_0 + 0.747953344382550124e-2 * wr_5_0 -
      0.136281558146268408e0 * wr_5_4 - 0.215181407599371170e0 * wr_7_4 -
      0.265716100414258587e0 * wr_9_4 - 0.250117930165255807e0 * wr_11_4;
  results[k++] =
      -0.382779501175476375e-1 * wr_5_4 + 0.211091636677652413e0 * wr_7_4 -
      0.104299602541861758e0 * wr_9_4 - 0.284443584450024328e0 * wr_9_8;
  results[k++] =
      -0.878141208579034039e-1 * wr_5_4 - 0.317748463630571527e0 * wr_7_4 +
      0.117337052859594478e0 * wr_9_4 + 0.439286142988721383e-1 * wr_11_4 -
      0.462280278178667885e0 * wr_11_8;
  results[k++] =
      0.306874968017121328e0 * wr_5_4 + 0.118971733371299387e0 * wr_7_4 +
      0.104254821464471527e0 * wr_9_4 - 0.144002173067971717e0 * wr_11_4 -
      0.706388716719667117e-1 * wr_9_8 - 0.551054069605533566e0 * wr_11_8;
  results[k++] =
      0.434031157321571408e0 * wr_1_0 - 0.497245158098846904e0 * wr_3_0 +
      0.146665833751951160e0 * wr_5_0 + 0.736155347276672159e-1 * wr_7_0 -
      0.608705271367210399e-1 * wr_9_0 + 0.120113078239693802e-1 * wr_11_0;
  results[k++] =
      0.143399858875304483e0 * wr_5_4 + 0.310226693731792524e0 * wr_9_4 -
      0.208617460475056053e0 * wr_11_4 + 0.312822778270161966e0 * wr_9_8 +
      0.288864999920816636e0 * wr_11_8;
  results[k++] =
      -0.205879054892254885e0 * wr_1_0 + 0.524142418360959148e-1 * wr_3_0 +
      0.309198726389176418e0 * wr_5_0 - 0.349189141365977335e0 * wr_7_0 +
      0.152387527267308122e0 * wr_9_0 - 0.249000259296388702e-1 * wr_11_0;
  results[k++] =
      -0.324496455022912301e0 * wr_5_4 + 0.209214819685825037e0 * wr_7_4 +
      0.201310346221465539e0 * wr_9_4 - 0.146857034464341083e0 * wr_11_4 -
      0.313719516089658735e0 * wr_9_8 - 0.415441307315190897e-1 * wr_11_8;
  results[k++] =
      0.327237405863128469e0 * wr_9_0 - 0.758846598699023653e-1 * wr_7_0 -
      0.803435335180143866e-1 * wr_5_0 + 0.352105929397741122e-1 * wr_5_4 -
      0.194176064006107236e0 * wr_7_4 - 0.311810460649356062e0 * wr_9_4;
  results[k++] =
      0.854559570154935197e-1 * wr_3_0 - 0.204797242300820986e-1 * wr_5_0 -
      0.221844627657944236e0 * wr_7_0 - 0.151032648859905447e0 * wr_9_0 -
      0.258289152286185931e0 * wr_11_0 + 0.198271413719690589e0 * wr_5_4 -
      0.362338109867855608e-1 * wr_7_4 - 0.107934390224777098e0 * wr_9_4 +
      0.525309823869045433e0 * wr_11_4;
  results[k++] =
      0.276049480963870062e0 * wr_5_0 + 0.245116155943289693e0 * wr_3_0 +
      0.972017485252385716e-1 * wr_7_0 + 0.137527605153435827e-1 * wr_9_0 +
      0.461834395346807912e0 * wr_11_0 + 0.333608262098149001e0 * wr_5_4 +
      0.129335909882975999e0 * wr_7_4 - 0.542046234259841245e-1 * wr_9_4 -
      0.156546866647274509e0 * wr_11_4;
  results[k++] =
      -0.615688734313673312e-1 * wr_5_4 - 0.132319070093728036e0 * wr_7_4 +
      0.305567621096113146e0 * wr_9_4 - 0.134826595933112001e0 * wr_11_4 -
      0.264551524610443266e0 * wr_9_8 + 0.394122229570192342e0 * wr_11_8;
  results[k++] =
      -0.496136120801679098e-2 * wr_5_0 + 0.807524091027421351e0 * wr_1_0 +
      0.196240772033598325e0 * wr_3_0 + 0.244118596245905099e0 * wr_9_0 +
      0.216023809812222130e0 * wr_11_0 + 0.622560225790149626e-1 * wr_7_0 -
      0.903989588432349383e-1 * wr_5_4 + 0.892094988584555313e-1 * wr_7_4 +
      0.235008161554798601e0 * wr_9_4 + 0.282800225351750482e0 * wr_11_4;
  results[k++] =
      0.324496455022912301e0 * wr_5_4 - 0.209214819685825037e0 * wr_7_4 -
      0.201310346221465539e0 * wr_9_4 + 0.146857034464341083e0 * wr_11_4 -
      0.313719516089658735e0 * wr_9_8 - 0.415441307315190897e-1 * wr_11_8;
  results[k++] =
      0.686263516307516284e-1 * wr_1_0 + 0.197561373074515371e0 * wr_3_0 +
      0.270278606983545821e0 * wr_5_0 + 0.771191939611883210e-1 * wr_9_0 -
      0.510661548726492083e-1 * wr_11_0 + 0.223839193183318804e0 * wr_7_0;
  results[k++] =
      0.133209062840540677e-1 * wr_5_4 + 0.552116510457504119e-1 * wr_7_4 -
      0.154261192495808418e0 * wr_9_4 + 0.742529105580394775e-1 * wr_11_4 +
      0.240398705628168177e0 * wr_9_8 + 0.781396287959566761e0 * wr_11_8;
  results[k++] =
      -0.559478063930270841e-1 * wr_5_4 - 0.131456312013691457e-1 * wr_7_4 +
      0.323948504241197678e0 * wr_9_4 - 0.185632276395098694e0 * wr_11_4 +
      0.288478446753801813e0 * wr_9_8 + 0.390698143979783380e0 * wr_11_8;
  results[k++] =
      0.259356684889347535e-1 * wr_5_4 - 0.191958072697707880e0 * wr_7_4 -
      0.284255057413050912e0 * wr_9_4 + 0.232344094039047134e0 * wr_11_4 +
      0.117013456167857322e0 * wr_9_8;
  results[k++] =
      -0.196116135138184032e0 * wr_3_0 + 0.404920494501304863e0 * wr_5_0 -
      0.335969004901695209e0 * wr_7_0 + 0.132042128159396364e0 * wr_9_0 -
      0.205284026670584309e-1 * wr_11_0;
  results[k++] =
      -0.195776539844198514e0 * wr_5_4 - 0.309120852385576600e0 * wr_7_4 -
      0.539801726754262980e-1 * wr_9_4 + 0.160229154357081777e0 * wr_11_4 +
      0.841220233735072316e-1 * wr_9_8 + 0.113929892405107699e0 * wr_11_8;
  results[k++] =
      0.568398560058805107e0 * wr_1_0 - 0.558156305651438054e0 * wr_3_0 +
      0.255769530059726099e0 * wr_7_0 - 0.142347910936209957e0 * wr_9_0 +
      0.254672458984767116e-1 * wr_11_0;
  results[k++] =
      -0.383949383449709063e0 * wr_5_4 - 0.146507001579494248e0 * wr_7_4 +
      0.793978712939730968e-1 * wr_9_4 + 0.514666341305839501e-1 * wr_11_4 -
      0.123732645780121649e0 * wr_9_8 - 0.580930744555170567e-1 * wr_11_8;
  results[k++] =
      -0.345884437920405175e-1 * wr_7_0 + 0.298246623202379382e0 * wr_11_0 -
      0.188930604363992042e0 * wr_9_0 + 0.818582835957729293e-2 * wr_5_0 +
      0.163065604107793477e-2 * wr_5_4 - 0.601840815161000923e-1 * wr_7_4 +
      0.606575536437496558e0 * wr_11_4;
  results[k++] =
      0.573007985170410506e-1 * wr_5_0 + 0.117600708892937759e0 * wr_7_0 -
      0.447369934803569073e0 * wr_11_0 + 0.296779399476184129e-1 * wr_5_4 -
      0.138069363478111977e0 * wr_7_4 - 0.270035780088070402e0 * wr_9_4 -
      0.303287768218748278e0 * wr_11_4;
  results[k++] =
      -0.643263084620839054e-1 * wr_3_0 - 0.265628736906911423e-1 * wr_5_0 +
      0.277905599497192583e0 * wr_9_0 + 0.207386831924617021e0 * wr_11_0 +
      0.125503509968001858e0 * wr_7_0 + 0.155568662248124640e0 * wr_5_4 -
      0.109658361547080338e-1 * wr_7_4 - 0.151660645950599725e0 * wr_9_4 -
      0.210892209732391565e0 * wr_11_4;
  results[k++] =
      0.829425465150378281e-1 * wr_5_4 - 0.294664309987634389e0 * wr_7_4 +
      0.323435838541703236e0 * wr_9_4 - 0.112438692102971168e0 * wr_11_4 +
      0.168012783343201857e0 * wr_9_8 - 0.197207031957837228e0 * wr_11_8;
  results[k++] =
      0.879070845776741847e-1 * wr_9_0 - 0.484549825336802052e-1 * wr_11_0 +
      0.178042326879336819e0 * wr_3_0 + 0.274031735573899115e0 * wr_5_0 +
      0.237227307204820074e0 * wr_7_0 - 0.335519120716737379e0 * wr_5_4 -
      0.242809889992375735e0 * wr_7_4 - 0.145373598573666465e0 * wr_9_4 -
      0.606449206010959885e-1 * wr_11_4;
  results[k++] =
      0.262287361921980789e0 * wr_5_4 - 0.258836212423007357e0 * wr_7_4 -
      0.232453165163239782e-1 * wr_9_4 + 0.629071875080219955e-1 * wr_11_4 +
      0.156975907455816455e0 * wr_9_8 - 0.239855150610915508e-1 * wr_11_8;
  results[k++] =
      0.832050294337843681e0 * wr_1_0 + 0.524312633033774745e-1 * wr_5_0 -
      0.775401710637466534e-1 * wr_7_0 + 0.300285968131828892e0 * wr_3_0 -
      0.993793254615756141e-1 * wr_9_0 - 0.489759893446514966e-1 * wr_11_0 +
      0.263202852879713397e0 * wr_5_4 + 0.190475748794529432e0 * wr_7_4 +
      0.114040433213589159e0 * wr_9_4 + 0.475737897761959267e-1 * wr_11_4;
  results[k++] =
      -0.201709162263719681e0 * wr_6_0 + 0.206974887173534253e0 * wr_2_0 +
      0.302205864635227354e-1 * wr_8_0 + wr_0_0 -
      0.195804195804195804e0 * wr_4_0 + 0.446786028155513962e0 * wr_4_4 +
      0.205834520990190080e0 * wr_6_4 + 0.803630604434498809e-1 * wr_8_4;
  results[k++] =
      -0.210183991524123388e0 * wr_2_0 - 0.744860445817002406e-1 * wr_6_0 +
      0.210439890034526007e0 * wr_8_0 - 0.289221964818572015e0 * wr_4_0 -
      0.345686366799062752e0 * wr_4_4 - 0.159257862240395325e0 * wr_6_4 -
      0.621783418434921737e-1 * wr_8_4;
  results[k++] =
      0.157657240086439164e0 * wr_4_4 - 0.300411232908622105e0 * wr_6_4 +
      0.139922797388216858e0 * wr_8_4 - 0.120385276131415360e-1 * wr_10_4 +
      0.397954036411677711e0 * wr_8_8 - 0.171944566668574133e0 * wr_10_8;
  results[k++] =
      0.185246075675815753e0 * wr_6_0 - 0.497137598506713736e-1 * wr_2_0 +
      0.276705735978567037e0 * wr_8_0 - 0.122678535071481460e0 * wr_10_0 +
      0.106292489582611622e0 * wr_4_4 - 0.103519019420363070e0 * wr_6_4 -
      0.232695295861366139e0 * wr_8_4 - 0.267840330814318867e0 * wr_10_4;
  results[k++] =
      -0.516725963689822825e-1 * wr_4_4 - 0.700164353698371278e-1 * wr_6_4 +
      0.232357757605678586e0 * wr_8_4 - 0.109043714232939648e0 * wr_10_4 -
      0.313033285915195688e0 * wr_8_8 - 0.409856779356325156e0 * wr_10_8;
  results[k++] =
      0.345780380228847397e0 * wr_10_0 - 0.876306406843532242e-1 * wr_6_0 -
      0.126910021402400553e-1 * wr_8_0 - 0.361527456023215019e-1 * wr_4_0 +
      0.129632387549648532e-1 * wr_4_4 - 0.111246300829687911e0 * wr_6_4 -
      0.191239307972582837e0 * wr_8_4 - 0.205890500083220426e0 * wr_10_4;
  results[k++] =
      0.359646120845650245e-2 * wr_4_4 + 0.218012009355891747e-1 * wr_6_4 +
      0.723498438009113749e-1 * wr_8_4 - 0.176852025920047632e0 * wr_10_4 +
      0.821610326270096003e-1 * wr_12_4 + 0.881871378209586185e-1 * wr_8_8 +
      0.130725404514442669e0 * wr_10_8 + 0.683539725493285402e0 * wr_12_8;
  results[k++] =
      0.350029142178773637e0 * wr_12_0 + 0.368343483625489027e-2 * wr_4_0 -
      0.399422952539768726e-2 * wr_6_0 - 0.659443815175834139e-1 * wr_8_0 -
      0.182276709031214787e0 * wr_10_0 + 0.440254669691079245e-3 * wr_4_4 -
      0.247304802230512079e-1 * wr_6_4 - 0.649482740809461443e-2 * wr_8_4 +
      0.108534332546926677e0 * wr_10_4 + 0.671177359452222714e0 * wr_12_4;
  results[k++] =
      -0.210183991524123388e0 * wr_2_0 - 0.744860445817002406e-1 * wr_6_0 +
      0.210439890034526007e0 * wr_8_0 - 0.289221964818572015e0 * wr_4_0 -
      0.345686366799062752e0 * wr_4_4 - 0.159257862240395325e0 * wr_6_4 -
      0.621783418434921737e-1 * wr_8_4;
  results[k++] =
      0.533936017756905039e-1 * wr_6_0 + 0.272080998660813571e0 * wr_2_0 -
      0.140316338089349709e0 * wr_10_0 + 0.224593166209574443e0 * wr_8_0 +
      wr_0_0 - 0.279720279720279720e-1 * wr_4_0 -
      0.234030776652888266e0 * wr_4_4 + 0.665935214968262024e-1 * wr_6_4 +
      0.245923049627700011e0 * wr_8_4 + 0.306348412056004788e0 * wr_10_4;
  results[k++] =
      -0.217280857065997610e0 * wr_4_4 + 0.316367902839551660e0 * wr_6_4 -
      0.315760605462769444e-1 * wr_8_4 - 0.489007303322161601e-1 * wr_10_4 +
      0.384880223224805607e-1 * wr_8_8 + 0.299332342089425255e0 * wr_10_8;
  results[k++] =
      -0.195069599271190138e0 * wr_2_0 + 0.205857877827192034e-2 * wr_8_0 -
      0.261026105566598677e0 * wr_10_0 - 0.291816507111495319e0 * wr_4_0 -
      0.159615509571045245e0 * wr_6_0 + 0.341811689216178887e0 * wr_4_4 +
      0.127977117949326039e0 * wr_6_4 + 0.127731454064585524e-1 * wr_8_4 -
      0.518082174725220689e-1 * wr_10_4;
  results[k++] =
      0.186965364206301104e0 * wr_4_4 - 0.349273111342270099e-1 * wr_6_4 -
      0.298055265221625196e0 * wr_8_4 + 0.891956846163666491e-1 * wr_10_4 +
      0.470102534742934390e-1 * wr_12_4 - 0.363299205243491261e0 * wr_8_8 -
      0.827252724445016804e-1 * wr_10_8 - 0.391102384278271406e0 * wr_12_8;
  results[k++] =
      -0.983566348499561908e-1 * wr_6_0 + 0.536120194405543983e-1 * wr_2_0 -
      0.228967198460873786e0 * wr_8_0 - 0.102003877080605528e0 * wr_10_0 +
      0.373743903155667862e-1 * wr_4_0 - 0.293175393727284964e0 * wr_12_0 +
      0.109443804375909513e0 * wr_4_4 - 0.847022861143842049e-1 * wr_6_4 -
      0.174472433857489873e0 * wr_8_4 - 0.109752648493107803e0 * wr_10_4 +
      0.562160868644889337e0 * wr_12_4;
  results[k++] =
      -0.375657286863652488e-1 * wr_4_4 - 0.885568968339559429e-1 * wr_6_4 -
      0.279891861718103322e-1 * wr_8_4 + 0.331004784258222867e0 * wr_10_4 -
      0.182762212402459592e0 * wr_12_4 + 0.238811898150797408e0 * wr_8_8 +
      0.323010145827813933e0 * wr_10_8 + 0.462758581750147718e0 * wr_12_8;
  results[k++] =
      -0.440088720469378486e0 * wr_12_0 + 0.256494566320360274e-1 * wr_4_0 -
      0.604417544669487071e-1 * wr_10_0 + 0.784190789813823841e-1 * wr_6_0 +
      0.935409772731261607e-1 * wr_8_0 + 0.107299375331719414e-1 * wr_4_4 -
      0.860016300739633610e-1 * wr_6_4 - 0.158292681884528642e0 * wr_8_4 -
      0.203939189920503003e0 * wr_10_4 - 0.194738237304000425e0 * wr_12_4;
  results[k++] =
      0.157657240086439164e0 * wr_4_4 - 0.300411232908622105e0 * wr_6_4 +
      0.139922797388216858e0 * wr_8_4 - 0.120385276131415360e-1 * wr_10_4 +
      0.397954036411677711e0 * wr_8_8 - 0.171944566668574133e0 * wr_10_8;
  results[k++] =
      -0.217280857065997610e0 * wr_4_4 + 0.316367902839551660e0 * wr_6_4 -
      0.315760605462769444e-1 * wr_8_4 - 0.489007303322161601e-1 * wr_10_4 +
      0.384880223224805607e-1 * wr_8_8 + 0.299332342089425255e0 * wr_10_8;
  results[k++] =
      0.304437203107007258e-1 * wr_6_0 - 0.707410596518115288e0 * wr_2_0 +
      0.396546172861205700e-2 * wr_10_0 - 0.306692348815595353e-1 * wr_8_0 +
      wr_0_0 + 0.192513368983957219e0 * wr_4_0 +
      0.558429321385304694e-3 * wr_12_0 + 0.918298943502343854e0 * wr_12_12;
  results[k++] =
      0.723947903509432567e-1 * wr_4_4 + 0.767980867688607044e-1 * wr_6_4 -
      0.256597228697853962e0 * wr_8_4 + 0.817180226605790642e-1 * wr_10_4 +
      0.238234090488492116e-1 * wr_12_4 - 0.156383027128032571e0 * wr_8_8 +
      0.250107175779672064e0 * wr_10_8 + 0.198199145761604775e0 * wr_12_8;
  results[k++] =
      -0.255840859626732522e0 * wr_2_0 + 0.420645259961290728e0 * wr_4_0 -
      0.255437145864642212e0 * wr_6_0 + 0.469452136529991269e-1 * wr_8_0 +
      0.138633711601614320e-1 * wr_10_0 - 0.519130430011724341e-2 * wr_12_0 +
      0.656672766279927500e0 * wr_12_12;
  results[k++] =
      -0.588609132918724176e-1 * wr_4_4 + 0.239773568467870732e0 * wr_6_4 -
      0.146152051671339000e0 * wr_8_4 - 0.106305935504817739e0 * wr_10_4 +
      0.824094009490226618e-1 * wr_12_4 + 0.494846001289035780e-1 * wr_8_8 +
      0.180756245223082883e0 * wr_10_8 - 0.380892238230672834e0 * wr_12_8;
  results[k++] =
      -0.144149994031289434e-1 * wr_2_0 + 0.127983647227560400e0 * wr_4_0 -
      0.251864422417079580e0 * wr_6_0 + 0.216013489537844605e0 * wr_8_0 -
      0.885781546339363018e-1 * wr_10_0 + 0.143323461949928051e-1 * wr_12_0 +
      0.258995231780051889e0 * wr_12_12;
  results[k++] =
      0.873857934869393866e-2 * wr_4_4 - 0.115361111916235276e0 * wr_6_4 +
      0.328148047014136476e0 * wr_8_4 - 0.331429106592872191e0 * wr_10_4 +
      0.111017876250572747e0 * wr_12_4 + 0.666632101453814309e-1 * wr_8_8 -
      0.338125320552699427e0 * wr_10_8 + 0.307871530784605239e0 * wr_12_8;
  results[k++] =
      0.185246075675815753e0 * wr_6_0 - 0.497137598506713736e-1 * wr_2_0 +
      0.276705735978567037e0 * wr_8_0 - 0.122678535071481460e0 * wr_10_0 +
      0.106292489582611622e0 * wr_4_4 - 0.103519019420363070e0 * wr_6_4 -
      0.232695295861366139e0 * wr_8_4 - 0.267840330814318867e0 * wr_10_4;
  results[k++] =
      -0.195069599271190138e0 * wr_2_0 + 0.205857877827192034e-2 * wr_8_0 -
      0.261026105566598677e0 * wr_10_0 - 0.291816507111495319e0 * wr_4_0 -
      0.159615509571045245e0 * wr_6_0 + 0.341811689216178887e0 * wr_4_4 +
      0.127977117949326039e0 * wr_6_4 + 0.127731454064585524e-1 * wr_8_4 -
      0.518082174725220689e-1 * wr_10_4;
  results[k++] =
      0.723947903509432567e-1 * wr_4_4 + 0.767980867688607044e-1 * wr_6_4 -
      0.256597228697853962e0 * wr_8_4 + 0.817180226605790642e-1 * wr_10_4 +
      0.238234090488492116e-1 * wr_12_4 - 0.156383027128032571e0 * wr_8_8 +
      0.250107175779672064e0 * wr_10_8 + 0.198199145761604775e0 * wr_12_8;
  results[k++] =
      0.304437203107007258e-1 * wr_6_0 + 0.321550271144597857e0 * wr_2_0 +
      0.138791160501421995e0 * wr_10_0 + 0.197955970599157000e0 * wr_8_0 +
      wr_0_0 + 0.213903743315508021e-1 * wr_4_0 +
      0.276422514085725824e0 * wr_12_0 + 0.227773269255752216e0 * wr_4_4 -
      0.621327114444072224e-1 * wr_6_4 - 0.207597379555850659e0 * wr_8_4 -
      0.173153450292524446e0 * wr_10_4 + 0.530037390436609945e0 * wr_12_4;
  results[k++] =
      -0.284731112555596494e0 * wr_4_4 + 0.214790701135253734e0 * wr_6_4 +
      0.872826304457024332e-1 * wr_8_4 + 0.140247139453174262e0 * wr_10_4 -
      0.141967057977329017e0 * wr_12_4 - 0.132985866936902760e0 * wr_8_8 -
      0.158978556938525746e-1 * wr_10_8 - 0.519682544436341693e0 * wr_12_8;
  results[k++] =
      0.158665765604383528e0 * wr_2_0 + 0.485236426306952652e-1 * wr_8_0 +
      0.361103308096085126e-1 * wr_10_0 + 0.270359411000355957e0 * wr_4_0 +
      0.216020990396903339e0 * wr_6_0 + 0.460389966491354074e0 * wr_12_0 +
      0.333345765025066097e0 * wr_4_4 + 0.143693606118541518e0 * wr_6_4 +
      0.401441712774411647e-1 * wr_8_4 - 0.327640901011997274e-1 * wr_10_4 -
      0.679071638489557505e-1 * wr_12_4;
  results[k++] =
      0.144385026737967914e0 * wr_4_4 + 0.907656374702904549e-1 * wr_6_4 -
      0.172123668465191732e0 * wr_8_4 - 0.276571088785492262e0 * wr_10_4 +
      0.214400613083344257e0 * wr_12_4 + 0.367152332784246836e0 * wr_8_8 +
      0.282158947995109007e0 * wr_10_8 + 0.106717605438283947e0 * wr_12_8;
  results[k++] =
      -0.392595953498009547e-1 * wr_2_0 + 0.169958504685018211e0 * wr_8_0 +
      0.269836687819846344e0 * wr_10_0 - 0.457713614288809250e-1 * wr_4_0 +
      0.291012812897943978e-1 * wr_6_0 + 0.169149445236536584e0 * wr_12_0 +
      0.824816859301901352e-1 * wr_4_4 - 0.622211566300260004e-1 * wr_6_4 -
      0.162240736653975694e0 * wr_8_4 - 0.226996274876169786e0 * wr_10_4 -
      0.224544710697292128e0 * wr_12_4;
  results[k++] =
      -0.516725963689822825e-1 * wr_4_4 - 0.700164353698371278e-1 * wr_6_4 +
      0.232357757605678586e0 * wr_8_4 - 0.109043714232939648e0 * wr_10_4 -
      0.313033285915195688e0 * wr_8_8 - 0.409856779356325156e0 * wr_10_8;
  results[k++] =
      0.186965364206301104e0 * wr_4_4 - 0.349273111342270099e-1 * wr_6_4 -
      0.298055265221625196e0 * wr_8_4 + 0.891956846163666491e-1 * wr_10_4 +
      0.470102534742934390e-1 * wr_12_4 - 0.363299205243491261e0 * wr_8_8 -
      0.827252724445016804e-1 * wr_10_8 - 0.391102384278271406e0 * wr_12_8;
  results[k++] =
      -0.255840859626732522e0 * wr_2_0 + 0.420645259961290728e0 * wr_4_0 -
      0.255437145864642212e0 * wr_6_0 + 0.469452136529991269e-1 * wr_8_0 +
      0.138633711601614320e-1 * wr_10_0 - 0.519130430011724341e-2 * wr_12_0 +
      0.656672766279927500e0 * wr_12_12;
  results[k++] =
      -0.284731112555596494e0 * wr_4_4 + 0.214790701135253734e0 * wr_6_4 +
      0.872826304457024332e-1 * wr_8_4 + 0.140247139453174262e0 * wr_10_4 -
      0.141967057977329017e0 * wr_12_4 - 0.132985866936902760e0 * wr_8_8 -
      0.158978556938525746e-1 * wr_10_8 - 0.519682544436341693e0 * wr_12_8;
  results[k++] =
      0.558134872362846640e-1 * wr_6_0 - 0.447213595499957940e0 * wr_2_0 -
      0.983434508695790135e-1 * wr_10_0 + 0.132209269286722862e0 * wr_8_0 +
      wr_0_0 - 0.132352941176470588e0 * wr_4_0 +
      0.202747918389323693e-1 * wr_12_0 + 0.469584687018244015e0 * wr_12_12;
  results[k++] =
      -0.154334616679729685e0 * wr_4_4 + 0.523909667013405147e-1 * wr_6_4 -
      0.141931078676964379e-1 * wr_8_4 + 0.314212070807655241e0 * wr_10_4 -
      0.194924658155909581e0 * wr_12_4 - 0.129749716158389736e0 * wr_8_8 +
      0.213706953814962674e0 * wr_10_8 + 0.314278701652182380e0 * wr_12_8;
  results[k++] =
      -0.226778683805536336e0 * wr_2_0 + 0.186431085601878657e0 * wr_4_0 +
      0.198118226077723298e0 * wr_6_0 - 0.339835288727102824e0 * wr_8_0 +
      0.172039911730845009e0 * wr_10_0 - 0.307470508043446192e-1 * wr_12_0 +
      0.185206698221452943e0 * wr_12_12;
  results[k++] =
      0.840134106290156596e-1 * wr_4_4 - 0.332727326009360326e0 * wr_6_4 +
      0.172082287609090608e0 * wr_8_4 + 0.193114321964295924e0 * wr_10_4 -
      0.132314239678022302e0 * wr_12_4 + 0.174792411619755649e0 * wr_8_8 -
      0.262688020730399968e0 * wr_10_8 - 0.733859967242234483e-1 * wr_12_8;
  results[k++] =
      0.345780380228847397e0 * wr_10_0 - 0.876306406843532242e-1 * wr_6_0 -
      0.126910021402400553e-1 * wr_8_0 - 0.361527456023215019e-1 * wr_4_0 +
      0.129632387549648532e-1 * wr_4_4 - 0.111246300829687911e0 * wr_6_4 -
      0.191239307972582837e0 * wr_8_4 - 0.205890500083220426e0 * wr_10_4;
  results[k++] =
      -0.983566348499561908e-1 * wr_6_0 + 0.536120194405543983e-1 * wr_2_0 -
      0.228967198460873786e0 * wr_8_0 - 0.102003877080605528e0 * wr_10_0 +
      0.373743903155667862e-1 * wr_4_0 - 0.293175393727284964e0 * wr_12_0 +
      0.109443804375909513e0 * wr_4_4 - 0.847022861143842049e-1 * wr_6_4 -
      0.174472433857489873e0 * wr_8_4 - 0.109752648493107803e0 * wr_10_4 +
      0.562160868644889337e0 * wr_12_4;
  results[k++] =
      -0.588609132918724176e-1 * wr_4_4 + 0.239773568467870732e0 * wr_6_4 -
      0.146152051671339000e0 * wr_8_4 - 0.106305935504817739e0 * wr_10_4 +
      0.824094009490226618e-1 * wr_12_4 + 0.494846001289035780e-1 * wr_8_8 +
      0.180756245223082883e0 * wr_10_8 - 0.380892238230672834e0 * wr_12_8;
  results[k++] =
      0.158665765604383528e0 * wr_2_0 + 0.485236426306952652e-1 * wr_8_0 +
      0.361103308096085126e-1 * wr_10_0 + 0.270359411000355957e0 * wr_4_0 +
      0.216020990396903339e0 * wr_6_0 + 0.460389966491354074e0 * wr_12_0 +
      0.333345765025066097e0 * wr_4_4 + 0.143693606118541518e0 * wr_6_4 +
      0.401441712774411647e-1 * wr_8_4 - 0.327640901011997274e-1 * wr_10_4 -
      0.679071638489557505e-1 * wr_12_4;
  results[k++] =
      -0.154334616679729685e0 * wr_4_4 + 0.523909667013405147e-1 * wr_6_4 -
      0.141931078676964379e-1 * wr_8_4 + 0.314212070807655241e0 * wr_10_4 -
      0.194924658155909581e0 * wr_12_4 - 0.129749716158389736e0 * wr_8_8 +
      0.213706953814962674e0 * wr_10_8 + 0.314278701652182380e0 * wr_12_8;
  results[k++] =
      -0.975760266368613007e-2 * wr_6_0 + 0.378411503884579796e0 * wr_2_0 +
      0.247119440646634444e0 * wr_10_0 + 0.964391221587500980e-1 * wr_8_0 +
      wr_0_0 + 0.774372686137392020e-1 * wr_4_0 +
      0.185328731034747995e0 * wr_12_0 - 0.325233946966146193e0 * wr_4_4 -
      0.438115273005435542e-1 * wr_6_4 + 0.130557603566829157e0 * wr_8_4 +
      0.247742628880073437e0 * wr_10_4 + 0.271041847382357359e0 * wr_12_4;
  results[k++] =
      0.286960427465290094e0 * wr_4_4 - 0.974125865173515371e-1 * wr_6_4 -
      0.285489698952465388e0 * wr_8_4 - 0.599646348293882004e-1 * wr_10_4 +
      0.142435332926699486e0 * wr_12_4 - 0.358217847226196111e0 * wr_8_8 -
      0.815682186433873569e-1 * wr_10_8 + 0.578448227187684647e-1 * wr_12_8;
  results[k++] =
      0.260270219033036362e0 * wr_6_0 + 0.191333817149576238e0 * wr_8_0 +
      0.503681287224572560e-1 * wr_10_0 + 0.110656667034497625e0 * wr_2_0 +
      0.222524303816622082e0 * wr_4_0 - 0.550110900586723108e-1 * wr_12_0 -
      0.295073282162228387e0 * wr_4_4 - 0.166944340731811230e0 * wr_6_4 -
      0.105528454589685762e0 * wr_8_4 - 0.599821146825008833e-1 * wr_10_4 -
      0.243422796630000531e-1 * wr_12_4;
  results[k++] =
      0.359646120845650245e-2 * wr_4_4 + 0.218012009355891747e-1 * wr_6_4 +
      0.723498438009113749e-1 * wr_8_4 - 0.176852025920047632e0 * wr_10_4 +
      0.821610326270096003e-1 * wr_12_4 + 0.881871378209586185e-1 * wr_8_8 +
      0.130725404514442669e0 * wr_10_8 + 0.683539725493285402e0 * wr_12_8;
  results[k++] =
      -0.375657286863652488e-1 * wr_4_4 - 0.885568968339559429e-1 * wr_6_4 -
      0.279891861718103322e-1 * wr_8_4 + 0.331004784258222867e0 * wr_10_4 -
      0.182762212402459592e0 * wr_12_4 + 0.238811898150797408e0 * wr_8_8 +
      0.323010145827813933e0 * wr_10_8 + 0.462758581750147718e0 * wr_12_8;
  results[k++] =
      -0.144149994031289434e-1 * wr_2_0 + 0.127983647227560400e0 * wr_4_0 -
      0.251864422417079580e0 * wr_6_0 + 0.216013489537844605e0 * wr_8_0 -
      0.885781546339363018e-1 * wr_10_0 + 0.143323461949928051e-1 * wr_12_0 +
      0.258995231780051889e0 * wr_12_12;
  results[k++] =
      0.144385026737967914e0 * wr_4_4 + 0.907656374702904549e-1 * wr_6_4 -
      0.172123668465191732e0 * wr_8_4 - 0.276571088785492262e0 * wr_10_4 +
      0.214400613083344257e0 * wr_12_4 + 0.367152332784246836e0 * wr_8_8 +
      0.282158947995109007e0 * wr_10_8 + 0.106717605438283947e0 * wr_12_8;
  results[k++] =
      -0.226778683805536336e0 * wr_2_0 + 0.186431085601878657e0 * wr_4_0 +
      0.198118226077723298e0 * wr_6_0 - 0.339835288727102824e0 * wr_8_0 +
      0.172039911730845009e0 * wr_10_0 - 0.307470508043446192e-1 * wr_12_0 +
      0.185206698221452943e0 * wr_12_12;
  results[k++] =
      0.286960427465290094e0 * wr_4_4 - 0.974125865173515371e-1 * wr_6_4 -
      0.285489698952465388e0 * wr_8_4 - 0.599646348293882004e-1 * wr_10_4 +
      0.142435332926699486e0 * wr_12_4 - 0.358217847226196111e0 * wr_8_8 -
      0.815682186433873569e-1 * wr_10_8 + 0.578448227187684647e-1 * wr_12_8;
  results[k++] =
      0.167440461708853992e0 * wr_6_0 - 0.268328157299974764e0 * wr_2_0 -
      0.133239514081365115e0 * wr_10_0 + 0.159562911208113798e0 * wr_8_0 +
      wr_0_0 - 0.397058823529411765e0 * wr_4_0 +
      0.280293444608964867e-1 * wr_12_0 + 0.730465068695046246e-1 * wr_12_12;
  results[k++] =
      0.298218024078939567e0 * wr_4_4 - 0.281205915241253096e0 * wr_6_4 -
      0.145436077536239216e0 * wr_8_4 + 0.623170765090887953e-1 * wr_10_4 +
      0.450744568734813923e-1 * wr_12_4 + 0.206817170524572562e0 * wr_8_8 -
      0.423840896919701475e-1 * wr_10_8 - 0.467554135550700145e-1 * wr_12_8;
  results[k++] =
      0.350029142178773637e0 * wr_12_0 + 0.368343483625489027e-2 * wr_4_0 -
      0.399422952539768726e-2 * wr_6_0 - 0.659443815175834139e-1 * wr_8_0 -
      0.182276709031214787e0 * wr_10_0 + 0.440254669691079245e-3 * wr_4_4 -
      0.247304802230512079e-1 * wr_6_4 - 0.649482740809461443e-2 * wr_8_4 +
      0.108534332546926677e0 * wr_10_4 + 0.671177359452222714e0 * wr_12_4;
  results[k++] =
      -0.440088720469378486e0 * wr_12_0 + 0.256494566320360274e-1 * wr_4_0 -
      0.604417544669487071e-1 * wr_10_0 + 0.784190789813823841e-1 * wr_6_0 +
      0.935409772731261607e-1 * wr_8_0 + 0.107299375331719414e-1 * wr_4_4 -
      0.860016300739633610e-1 * wr_6_4 - 0.158292681884528642e0 * wr_8_4 -
      0.203939189920503003e0 * wr_10_4 - 0.194738237304000425e0 * wr_12_4;
  results[k++] =
      0.873857934869393866e-2 * wr_4_4 - 0.115361111916235276e0 * wr_6_4 +
      0.328148047014136476e0 * wr_8_4 - 0.331429106592872191e0 * wr_10_4 +
      0.111017876250572747e0 * wr_12_4 + 0.666632101453814309e-1 * wr_8_8 -
      0.338125320552699427e0 * wr_10_8 + 0.307871530784605239e0 * wr_12_8;
  results[k++] =
      -0.392595953498009547e-1 * wr_2_0 + 0.169958504685018211e0 * wr_8_0 +
      0.269836687819846344e0 * wr_10_0 - 0.457713614288809250e-1 * wr_4_0 +
      0.291012812897943978e-1 * wr_6_0 + 0.169149445236536584e0 * wr_12_0 +
      0.824816859301901352e-1 * wr_4_4 - 0.622211566300260004e-1 * wr_6_4 -
      0.162240736653975694e0 * wr_8_4 - 0.226996274876169786e0 * wr_10_4 -
      0.224544710697292128e0 * wr_12_4;
  results[k++] =
      0.840134106290156596e-1 * wr_4_4 - 0.332727326009360326e0 * wr_6_4 +
      0.172082287609090608e0 * wr_8_4 + 0.193114321964295924e0 * wr_10_4 -
      0.132314239678022302e0 * wr_12_4 + 0.174792411619755649e0 * wr_8_8 -
      0.262688020730399968e0 * wr_10_8 - 0.733859967242234483e-1 * wr_12_8;
  results[k++] =
      0.260270219033036362e0 * wr_6_0 + 0.191333817149576238e0 * wr_8_0 +
      0.503681287224572560e-1 * wr_10_0 + 0.110656667034497625e0 * wr_2_0 +
      0.222524303816622082e0 * wr_4_0 - 0.550110900586723108e-1 * wr_12_0 -
      0.295073282162228387e0 * wr_4_4 - 0.166944340731811230e0 * wr_6_4 -
      0.105528454589685762e0 * wr_8_4 - 0.599821146825008833e-1 * wr_10_4 -
      0.243422796630000531e-1 * wr_12_4;
  results[k++] =
      0.298218024078939567e0 * wr_4_4 - 0.281205915241253096e0 * wr_6_4 -
      0.145436077536239216e0 * wr_8_4 + 0.623170765090887953e-1 * wr_10_4 +
      0.450744568734813923e-1 * wr_12_4 + 0.206817170524572562e0 * wr_8_8 -
      0.423840896919701475e-1 * wr_10_8 - 0.467554135550700145e-1 * wr_12_8;
  results[k++] =
      -0.429334517202189724e-2 * wr_6_0 + 0.447213595499957940e0 * wr_2_0 -
      0.919987121037997225e-1 * wr_10_0 - 0.908281186876955469e-1 * wr_8_0 +
      wr_0_0 + 0.173076923076923077e0 * wr_4_0 -
      0.415331807780320366e-1 * wr_12_0 + 0.511081916661086874e0 * wr_4_4 +
      0.289156080183587458e0 * wr_6_4 + 0.182780644993560820e0 * wr_8_4 +
      0.103892070175514668e0 * wr_10_4 + 0.421620651483667001e-1 * wr_12_4;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 4)
void BoxMatrix::setup___oa_4_B2(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 0)
  if (lmax >= 0) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 0, 1));
  }
#endif
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 1, 1));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 2, 1));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 3, 1));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 4, 2));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 5, 2));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 2));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 4)
void BoxMatrix::evaluate___oa_4_B2(WZetaRGLCalculator& wzeta, uint n_elems,
                                   vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 0)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 1)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = -0.816496580927726033e0 * wr_1_0;
  results[k++] = 0.577350269189625763e0 * wr_1_0;
  results[k++] = wr_0_0 + 0.447213595499957940e0 * wr_2_0;
  results[k++] = -0.632455532033675868e0 * wr_2_0;
  results[k++] = -0.632455532033675868e0 * wr_2_0;
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] = 0.534522483824848769e0 * wr_2_0;
  results[k++] = -0.707106781186547525e0 * wr_2_0;
  results[k++] = 0.462910049886275731e0 * wr_2_0;
  results[k++] =
      -0.683130051063973227e0 * wr_1_0 - 0.191662969499981974e0 * wr_3_0;
  results[k++] =
      -0.138013111868470844e0 * wr_1_0 + 0.542104741743150745e0 * wr_3_0;
  results[k++] =
      0.507092552837109947e0 * wr_3_0 + 0.516397779494322249e0 * wr_1_0;
  results[k++] =
      -0.358568582800318092e0 * wr_3_0 - 0.365148371670110743e0 * wr_1_0;
  results[k++] = -0.553283335172488125e0 * wr_3_0;
  results[k++] =
      0.717137165600636186e0 * wr_1_0 - 0.782460796435951591e-1 * wr_3_0;
  results[k++] = wr_0_0 + 0.136902121071415696e0 * wr_2_0 +
                 0.408163265306122449e-1 * wr_4_0 -
                 0.341493888381255327e0 * wr_4_4;
  results[k++] = -0.482945288416295188e0 * wr_2_0 -
                 0.269974623578019447e0 * wr_4_0 -
                 0.451753951452625620e0 * wr_4_4;
  results[k++] = -0.158080952906425179e0 * wr_2_0 +
                 0.530219634970064477e0 * wr_4_0 -
                 0.295742382575294665e0 * wr_4_4;
  results[k++] = -0.482945288416295188e0 * wr_2_0 -
                 0.269974623578019447e0 * wr_4_0 -
                 0.451753951452625620e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.500000000000000000e0 * wr_4_0 -
                 0.597614304667196822e0 * wr_4_4;
  results[k++] = -0.418242888406514220e0 * wr_2_0 -
                 0.233804882395706122e0 * wr_4_0 -
                 0.391230398217975797e0 * wr_4_4;
  results[k++] = -0.158080952906425179e0 * wr_2_0 +
                 0.530219634970064477e0 * wr_4_0 -
                 0.295742382575294665e0 * wr_4_4;
  results[k++] = -0.418242888406514220e0 * wr_2_0 -
                 0.233804882395706122e0 * wr_4_0 -
                 0.391230398217975797e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.182536161428554261e0 * wr_2_0 -
                 0.112244897959183673e0 * wr_4_0 -
                 0.256120416285941495e0 * wr_4_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = -0.267261241912424385e0 * wr_3_0;
  results[k++] = 0.577350269189625763e0 * wr_3_0;
  results[k++] = -0.654653670707977142e0 * wr_3_0;
  results[k++] = 0.408248290463863017e0 * wr_3_0;
  results[k++] = 0.383325938999963950e0 * wr_2_0 +
                 0.476190476190476190e-1 * wr_4_0 +
                 0.398409536444797881e0 * wr_4_4;
  results[k++] = 0.135526185435787686e0 * wr_2_0 -
                 0.336717514850736916e0 * wr_4_0 +
                 0.563436169819011052e0 * wr_4_4;
  results[k++] = -0.621059003408118797e0 * wr_2_0 -
                 0.257172249936819850e0 * wr_4_0 +
                 0.430331482911935208e0 * wr_4_4;
  results[k++] =
      0.509175077217315555e0 * wr_4_0 + 0.608580619450184572e0 * wr_4_4;
  results[k++] = 0.391230398217975797e0 * wr_2_0 +
                 0.524890659167823879e0 * wr_4_0 +
                 0.292770021884559954e0 * wr_4_4;
  results[k++] = -0.442626668137990502e0 * wr_2_0 -
                 0.247435829652696755e0 * wr_4_0 +
                 0.414039335605412531e0 * wr_4_4;
  results[k++] =
      -0.509175077217315555e0 * wr_4_0 + 0.121716123890036914e0 * wr_4_4;
  results[k++] = 0.621059003408118797e0 * wr_2_0 -
                 0.102868899974727940e0 * wr_4_0 +
                 0.172132593164774083e0 * wr_4_4;
  results[k++] =
      -0.585540043769119909e0 * wr_1_0 + 0.638876564999939914e-1 * wr_3_0;
  results[k++] =
      -0.110656667034497625e0 * wr_1_0 + 0.394405318873307737e0 * wr_3_0 +
      0.802618883884812008e-1 * wr_5_0 + 0.402911482012690149e0 * wr_5_4;
  results[k++] = 0.184427778390829375e0 * wr_3_0 -
                 0.367806178960312303e0 * wr_5_0 +
                 0.615457454896663663e0 * wr_5_4;
  results[k++] =
      0.542104741743150745e0 * wr_1_0 + 0.253024038425529880e0 * wr_3_0 +
      0.655335574479976551e-1 * wr_5_0 - 0.328975847479884493e0 * wr_5_4;
  results[k++] = -0.346770991073532924e0 * wr_5_0 -
                 0.358568582800318092e0 * wr_1_0 -
                 0.243432247780073828e0 * wr_3_0;
  results[k++] =
      -0.782460796435951591e-1 * wr_1_0 + 0.796819072889595762e-1 * wr_3_0 +
      0.454029804402663008e0 * wr_5_0 + 0.379868588198793162e0 * wr_5_4;
  results[k++] = -0.391230398217975796e0 * wr_3_0 -
                 0.312093891966179631e0 * wr_5_0 -
                 0.522232967867093514e0 * wr_5_4;
  results[k++] = 0.677630927178938431e0 * wr_1_0 +
                 0.471841613625583116e0 * wr_5_0 -
                 0.394771016975861392e0 * wr_5_4;
  results[k++] = -0.207019667802706266e0 * wr_1_0 -
                 0.391520091258942206e0 * wr_3_0 -
                 0.120124995026074528e0 * wr_5_0;
  results[k++] = -0.162650012158088863e0 * wr_3_0 +
                 0.518999296107681979e0 * wr_5_0 -
                 0.372193684159388346e0 * wr_5_4;
  results[k++] = -0.430331482911935208e0 * wr_3_0 -
                 0.171642883514812408e0 * wr_5_0 -
                 0.369274472937998197e0 * wr_5_4;
  results[k++] =
      0.774596669241483376e0 * wr_1_0 + 0.563436169819011052e-1 * wr_3_0 -
      0.112366643743873681e0 * wr_5_0 - 0.134303827337563383e0 * wr_5_4;
  results[k++] = wr_0_0 - 0.127775312999987983e0 * wr_2_0 -
                 0.714285714285714286e-1 * wr_4_0 -
                 0.597614304667196822e0 * wr_4_4;
  results[k++] = -0.483045891539647953e0 * wr_2_0;
  results[k++] =
      -0.130410132739325265e0 * wr_2_0 + 0.381738661212962820e0 * wr_4_0 +
      0.102934275831326886e0 * wr_6_0 + 0.212923652279679967e0 * wr_4_4 +
      0.385144793516510629e0 * wr_6_4;
  results[k++] =
      0.208298895225265454e0 * wr_4_0 - 0.385144793516510629e0 * wr_6_0 -
      0.497929597731969196e-1 * wr_4_4 + 0.617605654987961318e0 * wr_6_4;
  results[k++] = -0.483045891539647953e0 * wr_2_0;
  results[k++] = wr_0_0 + 0.318181818181818182e0 * wr_4_0 +
                 0.105056855345687334e0 * wr_6_0 -
                 0.393086758835432444e0 * wr_6_4 +
                 0.380300012060943431e0 * wr_4_4;
  results[k++] =
      -0.394405318873307737e0 * wr_2_0 - 0.120261423230208663e0 * wr_4_0 -
      0.389136037874045427e0 * wr_6_0 - 0.208001961510195185e0 * wr_6_4 +
      0.201235851101624140e0 * wr_4_4;
  results[k++] =
      -0.105409255338945978e0 * wr_2_0 + 0.128564869306645005e0 * wr_4_0 +
      0.416003923020390371e0 * wr_6_0 + 0.222363450213740244e0 * wr_6_4 -
      0.215130173930895129e0 * wr_4_4;
  results[k++] =
      -0.130410132739325265e0 * wr_2_0 + 0.381738661212962820e0 * wr_4_0 +
      0.102934275831326886e0 * wr_6_0 + 0.212923652279679967e0 * wr_4_4 +
      0.385144793516510629e0 * wr_6_4;
  results[k++] =
      -0.394405318873307737e0 * wr_2_0 - 0.120261423230208663e0 * wr_4_0 -
      0.389136037874045427e0 * wr_6_0 - 0.208001961510195185e0 * wr_6_4 +
      0.201235851101624140e0 * wr_4_4;
  results[k++] =
      wr_0_0 + 0.127775312999987983e0 * wr_2_0 +
      0.714285714285714286e-1 * wr_4_0 + 0.416025147168921843e0 * wr_6_0 -
      0.162985719454690042e0 * wr_4_4 - 0.424533699542267040e0 * wr_6_4;
  results[k++] =
      -0.278886675511358516e0 * wr_2_0 - 0.340150671524903763e0 * wr_4_0 -
      0.628938814136691911e-1 * wr_6_0 - 0.406557814090870854e0 * wr_4_4 -
      0.134472774842479787e0 * wr_6_4;
  results[k++] =
      0.208298895225265454e0 * wr_4_0 - 0.385144793516510629e0 * wr_6_0 -
      0.497929597731969196e-1 * wr_4_4 + 0.617605654987961318e0 * wr_6_4;
  results[k++] =
      -0.105409255338945978e0 * wr_2_0 + 0.128564869306645005e0 * wr_4_0 +
      0.416003923020390371e0 * wr_6_0 + 0.222363450213740244e0 * wr_6_4 -
      0.215130173930895129e0 * wr_4_4;
  results[k++] =
      -0.278886675511358516e0 * wr_2_0 - 0.340150671524903763e0 * wr_4_0 -
      0.628938814136691911e-1 * wr_6_0 - 0.406557814090870854e0 * wr_4_4 -
      0.134472774842479787e0 * wr_6_4;
  results[k++] =
      wr_0_0 + 0.298142396999971959e0 * wr_2_0 -
      0.454545454545454545e-1 * wr_4_0 - 0.100854581131859840e0 * wr_6_0 -
      0.380300012060943431e0 * wr_4_4 - 0.125787762827338382e0 * wr_6_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] =
      0.890870806374747949e-1 * wr_4_0 - 0.745355992499929899e0 * wr_4_4;
  results[k++] =
      -0.333333333333333333e0 * wr_4_0 - 0.557773351022717034e0 * wr_4_4;
  results[k++] =
      0.592156525463792088e0 * wr_4_0 - 0.330289129537908181e0 * wr_4_4;
  results[k++] =
      -0.623609564462323566e0 * wr_4_0 - 0.149071198499985980e0 * wr_4_4;
  results[k++] = wr_4_4;
  results[k++] =
      -0.376050716545177472e0 * wr_4_0 + 0.449466574975494725e-1 * wr_4_4;
  results[k++] = -0.142857142857142857e0 * wr_3_0;
  results[k++] = -0.673435029701473833e-1 * wr_3_0 +
                 0.134303827337563383e0 * wr_5_0 -
                 0.674199862463242087e0 * wr_5_4;
  results[k++] = 0.445435403187373976e0 * wr_3_0 +
                 0.710669054518701448e-1 * wr_5_0 +
                 0.356753034006337881e0 * wr_5_4;
  results[k++] =
      0.125988157669742409e0 * wr_3_0 - 0.402015126103684830e0 * wr_5_0;
  results[k++] = -0.580288457473997168e0 * wr_3_0 -
                 0.294579122654902737e0 * wr_5_0 +
                 0.492925153153671240e0 * wr_5_4;
  results[k++] = 0.746047096952990733e-1 * wr_3_0 +
                 0.476111760514892467e0 * wr_5_0 +
                 0.398343678185575356e0 * wr_5_4;
  results[k++] = 0.333333333333333333e0 * wr_3_0 +
                 0.531816023478310428e0 * wr_5_0 +
                 0.381385035698236927e0 * wr_5_4;
  results[k++] = -0.471404520791031683e0 * wr_3_0 -
                 0.188025358272588736e0 * wr_5_0 +
                 0.404519917477945253e0 * wr_5_4;
  results[k++] = -0.426401432711220869e0 * wr_5_4;
  results[k++] = 0.301511344577763623e0 * wr_5_4;
  results[k++] =
      0.481045692920834652e0 * wr_5_0 - 0.172487872372820691e0 * wr_5_4;
  results[k++] = -0.568535243614961158e0 * wr_3_0 +
                 0.113383557174967921e0 * wr_5_0 -
                 0.203278907045435427e0 * wr_5_4;
  results[k++] = 0.244897959183673469e0 * wr_2_0 -
                 0.760567339285642754e-1 * wr_4_0 +
                 0.636336290267677108e0 * wr_4_4;
  results[k++] = 0.809923870734058345e-1 * wr_2_0 -
                 0.201227203506789661e0 * wr_4_0 -
                 0.336717514850736916e0 * wr_4_4;
  results[k++] =
      0.589132927744516084e-2 * wr_2_0 - 0.107782467890744440e0 * wr_4_0 +
      0.162753380463507473e0 * wr_6_0 + 0.601181882969189260e-1 * wr_4_4 -
      0.608967388233712415e0 * wr_6_4;
  results[k++] = -0.572702661240909395e0 * wr_2_0 +
                 0.284578240317712772e-1 * wr_4_0 +
                 0.476190476190476190e-1 * wr_4_4;
  results[k++] =
      0.383306383050712647e0 * wr_4_0 + 0.119598820814594893e0 * wr_6_0 -
      0.458138755162699669e0 * wr_4_4 + 0.447497811350381995e0 * wr_6_4;
  results[k++] =
      0.440866714177405458e-1 * wr_2_0 + 0.134428355716043030e0 * wr_4_0 -
      0.426277171763598693e0 * wr_6_0 + 0.224941663320633414e0 * wr_4_4 +
      0.227854732648910462e0 * wr_6_4;
  results[k++] =
      0.414491755338569406e0 * wr_2_0 + 0.298730891743469831e0 * wr_4_0 +
      0.832779295298808125e-1 * wr_6_0 - 0.166624130541759679e0 * wr_4_4 -
      0.311597480180718286e0 * wr_6_4;
  results[k++] =
      -0.438656842044993407e0 * wr_2_0 - 0.145914027412759308e0 * wr_4_0 -
      0.385582209663746804e0 * wr_6_0 - 0.244160868093706058e0 * wr_4_4 +
      0.206102360428139548e0 * wr_6_4;
  results[k++] =
      -0.522124203319862291e-1 * wr_2_0 + 0.175125781698170017e0 * wr_4_0 +
      0.396664414010958819e0 * wr_6_0 + 0.399602021351977223e0 * wr_4_4 +
      0.404777000387580261e0 * wr_6_4;
  results[k++] =
      -0.338798178409059045e0 * wr_4_0 - 0.338276548879659426e0 * wr_6_0 -
      0.809882551249770863e-1 * wr_4_4 - 0.542449263380560261e0 * wr_6_4;
  results[k++] =
      0.566946709513840841e0 * wr_2_0 + 0.256107349917732296e-1 * wr_4_0 +
      0.447497811350381995e0 * wr_6_0 + 0.428549564355483348e-1 * wr_4_4 -
      0.239197641629189786e0 * wr_6_4;
  results[k++] =
      -0.288675134594812882e0 * wr_2_0 - 0.352089395109765171e0 * wr_4_0 -
      0.651013521854029892e-1 * wr_6_0 + 0.420827318078432483e0 * wr_4_4 +
      0.139192545881991409e0 * wr_6_4;
  results[k++] =
      0.202158904543936686e0 * wr_6_4 - 0.434628585212506780e0 * wr_4_4;
  results[k++] =
      -0.267431093370250953e0 * wr_6_4 + 0.574959574576068970e0 * wr_4_4;
  results[k++] =
      -0.376399396004920483e0 * wr_4_4 + 0.175074746936282557e0 * wr_6_4;
  results[k++] =
      0.163442390900179900e0 * wr_4_0 - 0.509971085459158462e0 * wr_6_0 +
      0.408886516917725399e0 * wr_6_4 - 0.195351021581910376e-1 * wr_4_4;
  results[k++] =
      0.432427920007682282e0 * wr_4_0 + 0.134925666795860087e0 * wr_6_0 -
      0.129212555367036627e0 * wr_4_4 + 0.324543611463511761e0 * wr_6_4;
  results[k++] =
      -0.696310623822791351e0 * wr_2_0 + 0.107958379271882620e0 * wr_6_0 -
      0.253768421017764782e0 * wr_4_4 + 0.603291892671168468e-1 * wr_6_4;
  results[k++] =
      -0.436435780471984762e0 * wr_1_0 + 0.214285714285714286e0 * wr_3_0;
  results[k++] =
      -0.673435029701473833e-1 * wr_1_0 + 0.308606699924183820e0 * wr_3_0 -
      0.879224935566662375e-1 * wr_5_0 + 0.441367414752374766e0 * wr_5_4;
  results[k++] = 0.116642368703960862e0 * wr_3_0 -
                 0.232621052599617716e0 * wr_5_0 -
                 0.389249472080761484e0 * wr_5_4;
  results[k++] =
      0.991899501072692640e-2 * wr_3_0 - 0.133905889196690644e0 * wr_5_0 +
      0.182429788374108717e0 * wr_7_0 + 0.960288898357475785e-1 * wr_5_4 -
      0.560168524041860875e0 * wr_7_4;
  results[k++] = 0.583211843519804309e0 * wr_1_0 -
                 0.913717355809759004e-1 * wr_5_0 -
                 0.458682472293862990e0 * wr_5_4;
  results[k++] = -0.314970394174356024e0 * wr_1_0 -
                 0.288675134594812882e0 * wr_3_0 -
                 0.657951694959768986e-1 * wr_5_0;
  results[k++] =
      -0.714285714285714286e-1 * wr_1_0 + 0.694329650750884848e-1 * wr_3_0 +
      0.325200016620534423e0 * wr_5_0 + 0.153241022234251322e0 * wr_7_0 -
      0.272081854534618140e0 * wr_5_4 + 0.470541560195163135e0 * wr_7_4;
  results[k++] =
      0.742269619025205484e-1 * wr_3_0 + 0.125257489861332617e0 * wr_5_0 -
      0.436857449752058096e0 * wr_7_0 + 0.269480403748219489e0 * wr_5_4 +
      0.335353391331117587e0 * wr_7_4;
  results[k++] = -0.422027969071997941e0 * wr_3_0 -
                 0.420827318078432483e-1 * wr_5_0 +
                 0.704178790219530341e-1 * wr_5_4;
  results[k++] =
      0.683876505540241508e0 * wr_1_0 - 0.155400786081324476e-1 * wr_3_0 +
      0.317682317682317682e0 * wr_5_0 + 0.133379189733967221e0 * wr_7_0 +
      0.265792096341494530e0 * wr_5_4 - 0.409553859142554465e0 * wr_7_4;
  results[k++] =
      -0.217124059336723765e0 * wr_1_0 - 0.351241137774355806e0 * wr_3_0 -
      0.396466230429259329e-1 * wr_5_0 - 0.423465799328851872e0 * wr_7_0;
  results[k++] =
      -0.492365963917330931e-1 * wr_1_0 - 0.263723879135579007e-1 * wr_3_0 +
      0.222516119953808662e0 * wr_5_0 + 0.344917319424202484e0 * wr_7_0 +
      0.265957632606875846e0 * wr_5_4 + 0.330969498355223276e0 * wr_7_4;
  results[k++] =
      -0.136363636363636364e0 * wr_3_0 + 0.368180323946522604e0 * wr_5_0 +
      0.119428330605589725e0 * wr_7_0 + 0.264035793944933257e0 * wr_5_4 +
      0.366716380479073968e0 * wr_7_4;
  results[k++] =
      -0.392772163539870317e0 * wr_3_0 - 0.662800336042560868e-1 * wr_5_0 -
      0.412791489439229004e0 * wr_7_0 + 0.142595626304613386e0 * wr_5_4 -
      0.316879169565807524e0 * wr_7_4;
  results[k++] =
      0.748331477354788278e0 * wr_1_0 + 0.296907847610082194e-1 * wr_3_0 +
      0.125257489861332617e0 * wr_5_0 + 0.374449242644621225e0 * wr_7_0 -
      0.149711335415677494e0 * wr_5_4 - 0.359307204997625986e0 * wr_7_4;
  results[k++] =
      -0.133333333333333333e0 * wr_1_0 - 0.319391639345407030e0 * wr_3_0 -
      0.267811778393381289e0 * wr_5_0 - 0.145943830699286974e-1 * wr_7_0;
  results[k++] =
      0.196800661251332709e0 * wr_5_4 - 0.820002755213886286e-1 * wr_7_4;
  results[k++] =
      -0.425138018281696883e0 * wr_5_4 + 0.177140840950707035e0 * wr_7_4;
  results[k++] =
      0.482061201108086320e0 * wr_5_4 - 0.200858833795035967e0 * wr_7_4;
  results[k++] =
      -0.300617975667198281e0 * wr_5_4 + 0.125257489861332617e0 * wr_7_4;
  results[k++] =
      0.396098961957259403e0 * wr_7_0 - 0.222021089040385224e0 * wr_5_0 +
      0.796097872489941651e-1 * wr_5_4 - 0.608130319263149874e0 * wr_7_4;
  results[k++] =
      -0.159873456405428874e0 * wr_5_0 - 0.388941615659623906e0 * wr_7_0 +
      0.118425263141623565e0 * wr_3_0 + 0.286627993453415340e0 * wr_5_4 -
      0.119428330605589725e0 * wr_7_4;
  results[k++] =
      0.313323795220119683e0 * wr_3_0 + 0.302132433492207936e0 * wr_5_0 +
      0.317533203635357844e-1 * wr_7_0 + 0.397229061149478654e0 * wr_5_4 +
      0.178753077517265394e0 * wr_7_4;
  results[k++] =
      -0.804030252207369660e0 * wr_1_0 + 0.807482893971504563e-1 * wr_5_0 +
      0.902076272852915989e-1 * wr_7_0 - 0.167478613262486651e0 * wr_3_0 +
      0.202676597848803337e0 * wr_5_4 + 0.912044690319615017e-1 * wr_7_4;
  results[k++] = wr_0_0 - 0.456340403571385652e0 * wr_2_0 +
                 0.306122448979591837e-1 * wr_4_0 -
                 0.256120416285941495e0 * wr_4_4;
  results[k++] = 0.229081064496363758e0 * wr_4_0 -
                 0.426867360476569158e0 * wr_2_0 +
                 0.383325938999963950e0 * wr_4_4;
  results[k++] =
      -0.842574310045684138e-1 * wr_2_0 - 0.931075557271253006e-1 * wr_6_0 +
      0.332963624949660713e0 * wr_4_0 - 0.185718236856843407e0 * wr_4_4 +
      0.348376573650864772e0 * wr_6_4;
  results[k++] =
      0.136363636363636364e0 * wr_4_0 - 0.252136452829649601e0 * wr_6_0 +
      0.325971438909380084e-1 * wr_4_4 - 0.404317809087873371e0 * wr_6_4;
  results[k++] =
      0.235317848374554953e-1 * wr_8_4 - 0.602721403756178067e-1 * wr_6_4 +
      0.336412752057597128e-1 * wr_4_4 - 0.100390025087060648e1 * wr_8_8;
  results[k++] =
      -0.126508256466194527e-1 * wr_4_0 + 0.152044001819471048e0 * wr_6_0 -
      0.196881037264996714e0 * wr_8_0 + 0.151206287445408497e-2 * wr_4_4 -
      0.121906406254820237e0 * wr_6_4 + 0.523549161330594315e0 * wr_8_4;
  results[k++] = 0.229081064496363758e0 * wr_4_0 -
                 0.426867360476569158e0 * wr_2_0 +
                 0.383325938999963950e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.136363636363636364e0 * wr_4_0 -
                 0.113461403773342320e0 * wr_6_0 -
                 0.162985719454690042e0 * wr_4_4 -
                 0.424533699542267040e0 * wr_6_4;
  results[k++] =
      -0.365704429366253377e0 * wr_2_0 - 0.121931800777802670e0 * wr_6_0 -
      0.173032750947211973e0 * wr_4_0 - 0.289539171997516913e0 * wr_4_4 +
      0.651752890089877105e-1 * wr_6_4;
  results[k++] =
      0.112137584019199043e0 * wr_4_0 - 0.977914316728140252e-1 * wr_2_0 +
      0.283022466361511360e0 * wr_6_0 + 0.177689412330383525e0 * wr_8_0 +
      0.187642068041940394e0 * wr_4_4 - 0.151281871697789760e0 * wr_6_4 +
      0.472514489435992114e0 * wr_8_4;
  results[k++] =
      -0.125874125874125874e0 * wr_4_4 + 0.225517699253106284e0 * wr_6_4 -
      0.880478765610403858e-1 * wr_8_4 - 0.751250157850843527e0 * wr_8_8;
  results[k++] =
      -0.946701104589257973e-1 * wr_4_0 - 0.113779312504498887e0 * wr_6_0 +
      0.441996832438974345e0 * wr_8_0 + 0.282881061173388288e-1 * wr_4_4 -
      0.273679203275047888e0 * wr_6_4 - 0.391788317366384034e0 * wr_8_4;
  results[k++] =
      -0.842574310045684138e-1 * wr_2_0 - 0.931075557271253006e-1 * wr_6_0 +
      0.332963624949660713e0 * wr_4_0 - 0.185718236856843407e0 * wr_4_4 +
      0.348376573650864772e0 * wr_6_4;
  results[k++] =
      -0.365704429366253377e0 * wr_2_0 - 0.121931800777802670e0 * wr_6_0 -
      0.173032750947211973e0 * wr_4_0 - 0.289539171997516913e0 * wr_4_4 +
      0.651752890089877105e-1 * wr_6_4;
  results[k++] =
      wr_0_0 + 0.133206140943316870e0 * wr_2_0 +
      0.443128300271157414e-1 * wr_4_0 + 0.284914191697504049e0 * wr_6_0 +
      0.169235284195727318e0 * wr_8_0 + 0.101113018762599916e0 * wr_4_4 +
      0.290741260898643488e0 * wr_6_4 - 0.450033138483319333e0 * wr_8_4;
  results[k++] =
      -0.285249702782738884e0 * wr_2_0 - 0.744860445817002406e-2 * wr_6_0 -
      0.441923769072504615e0 * wr_8_0 - 0.278892608932194443e0 * wr_4_0 +
      0.333340425127667655e0 * wr_4_4 + 0.159257862240395325e-1 * wr_6_4 -
      0.130574517871333565e0 * wr_8_4;
  results[k++] =
      0.156414373976551602e0 * wr_8_4 - 0.400625331660923511e0 * wr_6_4 +
      0.223611555070243167e0 * wr_4_4 - 0.444857683227080851e0 * wr_8_8;
  results[k++] =
      0.724261233064682466e-1 * wr_2_0 - 0.247042261995184527e0 * wr_6_0 -
      0.309318819210894948e0 * wr_8_0 + 0.150758879673549627e0 * wr_4_4 -
      0.138051900013710304e0 * wr_6_4 - 0.260121221908254164e0 * wr_8_4;
  results[k++] =
      0.136363636363636364e0 * wr_4_0 - 0.252136452829649601e0 * wr_6_0 +
      0.325971438909380084e-1 * wr_4_4 - 0.404317809087873371e0 * wr_6_4;
  results[k++] =
      0.112137584019199043e0 * wr_4_0 - 0.977914316728140252e-1 * wr_2_0 +
      0.283022466361511360e0 * wr_6_0 + 0.177689412330383525e0 * wr_8_0 +
      0.187642068041940394e0 * wr_4_4 - 0.151281871697789760e0 * wr_6_4 +
      0.472514489435992114e0 * wr_8_4;
  results[k++] =
      -0.285249702782738884e0 * wr_2_0 - 0.744860445817002406e-2 * wr_6_0 -
      0.441923769072504615e0 * wr_8_0 - 0.278892608932194443e0 * wr_4_0 +
      0.333340425127667655e0 * wr_4_4 + 0.159257862240395325e-1 * wr_6_4 -
      0.130574517871333565e0 * wr_8_4;
  results[k++] =
      wr_0_0 + 0.243934688454522513e0 * wr_2_0 -
      0.104895104895104895e-1 * wr_4_0 + 0.181538246037347712e0 * wr_6_0 +
      0.322928552495928659e0 * wr_8_0 + 0.877615412448330996e-1 * wr_4_4 -
      0.226417973089209088e0 * wr_6_4 - 0.353597465951179476e0 * wr_8_4;
  results[k++] =
      -0.164722493862188467e0 * wr_8_4 + 0.421904982629324647e0 * wr_6_4 -
      0.235488926440317990e0 * wr_4_4 - 0.200780050174121298e0 * wr_8_8;
  results[k++] =
      0.196130869080215880e0 * wr_2_0 + 0.212861602547259468e0 * wr_6_0 -
      0.107389656689998208e-1 * wr_8_0 + 0.316270641165486318e0 * wr_4_0 +
      0.370455404241250817e0 * wr_4_4 + 0.170668968756748331e0 * wr_6_4 +
      0.666335296238938220e-1 * wr_8_4;
  results[k++] =
      0.235317848374554953e-1 * wr_8_4 - 0.602721403756178067e-1 * wr_6_4 +
      0.336412752057597128e-1 * wr_4_4 - 0.100390025087060648e1 * wr_8_8;
  results[k++] =
      -0.125874125874125874e0 * wr_4_4 + 0.225517699253106284e0 * wr_6_4 -
      0.880478765610403858e-1 * wr_8_4 - 0.751250157850843527e0 * wr_8_8;
  results[k++] =
      0.156414373976551602e0 * wr_8_4 - 0.400625331660923511e0 * wr_6_4 +
      0.223611555070243167e0 * wr_4_4 - 0.444857683227080851e0 * wr_8_8;
  results[k++] =
      -0.164722493862188467e0 * wr_8_4 + 0.421904982629324647e0 * wr_6_4 -
      0.235488926440317990e0 * wr_4_4 - 0.200780050174121298e0 * wr_8_8;
  results[k++] = wr_0_0 - 0.813115628181741708e0 * wr_2_0 +
                 0.377622377622377622e0 * wr_4_0 -
                 0.100854581131859840e0 * wr_6_0 +
                 0.118723732535267889e-1 * wr_8_0;
  results[k++] =
      -0.993314012131817210e-1 * wr_8_4 + 0.254418277193251359e0 * wr_6_4 -
      0.142005165688388696e0 * wr_4_4 + 0.605374628923901556e-1 * wr_8_8;
  results[k++] =
      -0.126508256466194527e-1 * wr_4_0 + 0.152044001819471048e0 * wr_6_0 -
      0.196881037264996714e0 * wr_8_0 + 0.151206287445408497e-2 * wr_4_4 -
      0.121906406254820237e0 * wr_6_4 + 0.523549161330594315e0 * wr_8_4;
  results[k++] =
      -0.946701104589257973e-1 * wr_4_0 - 0.113779312504498887e0 * wr_6_0 +
      0.441996832438974345e0 * wr_8_0 + 0.282881061173388288e-1 * wr_4_4 -
      0.273679203275047888e0 * wr_6_4 - 0.391788317366384034e0 * wr_8_4;
  results[k++] =
      0.724261233064682466e-1 * wr_2_0 - 0.247042261995184527e0 * wr_6_0 -
      0.309318819210894948e0 * wr_8_0 + 0.150758879673549627e0 * wr_4_4 -
      0.138051900013710304e0 * wr_6_4 - 0.260121221908254164e0 * wr_8_4;
  results[k++] =
      0.196130869080215880e0 * wr_2_0 + 0.212861602547259468e0 * wr_6_0 -
      0.107389656689998208e-1 * wr_8_0 + 0.316270641165486318e0 * wr_4_0 +
      0.370455404241250817e0 * wr_4_4 + 0.170668968756748331e0 * wr_6_4 +
      0.666335296238938220e-1 * wr_8_4;
  results[k++] =
      -0.993314012131817210e-1 * wr_8_4 + 0.254418277193251359e0 * wr_6_4 -
      0.142005165688388696e0 * wr_4_4 + 0.605374628923901556e-1 * wr_8_8;
  results[k++] =
      wr_0_0 + 0.369598012809882594e0 * wr_2_0 +
      0.419580419580419580e-1 * wr_4_0 - 0.100854581131859840e0 * wr_6_0 -
      0.766307728182183647e-1 * wr_8_0 - 0.446786028155513962e0 * wr_4_4 -
      0.205834520990190080e0 * wr_6_4 - 0.803630604434498809e-1 * wr_8_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] =
      0.123091490979332733e0 * wr_5_0 - 0.617914380653324670e0 * wr_5_4;
  results[k++] =
      -0.369274472937998197e0 * wr_5_0 - 0.617914380653324672e0 * wr_5_4;
  results[k++] =
      0.599144689515278084e0 * wr_5_0 - 0.429668924423659729e0 * wr_5_4;
  results[k++] = -0.534522483824848769e0 * wr_5_4;
  results[k++] =
      -0.603022689155527245e0 * wr_5_0 - 0.216224991046934150e0 * wr_5_4;
  results[k++] = 0.845154254728516578e0 * wr_5_4;
  results[k++] =
      -0.354787437593449571e0 * wr_5_0 + 0.706753492740219502e-1 * wr_5_4;
  results[k++] =
      -0.192450089729875254e0 * wr_4_0 + 0.322030594359765302e0 * wr_4_4;
  results[k++] =
      -0.865981222196073065e-1 * wr_4_0 + 0.185281696496388395e0 * wr_6_0 -
      0.103504553191511095e0 * wr_4_4 - 0.693260628329719132e0 * wr_6_4;
  results[k++] =
      0.472377492973330170e0 * wr_4_0 + 0.873426293482293452e-1 * wr_6_0 +
      0.326806194281060772e0 * wr_6_4 + 0.263479577203444338e0 * wr_4_4;
  results[k++] =
      0.111340442853780823e0 * wr_4_0 - 0.432323958491572922e0 * wr_6_0 -
      0.231086876109906377e0 * wr_6_4 - 0.186308195744719971e0 * wr_4_4;
  results[k++] =
      -0.553531667023040693e0 * wr_4_0 - 0.318853513711272663e0 * wr_6_0 +
      0.132319376919699514e0 * wr_4_4 + 0.511303116375689813e0 * wr_6_4;
  results[k++] =
      0.120432613954918806e0 * wr_4_0 + 0.450926963500797419e0 * wr_6_0 -
      0.201522307974180891e0 * wr_4_4 + 0.241030600554043160e0 * wr_6_4;
  results[k++] =
      0.797724035217465642e0 * wr_4_4 + 0.212026047822065851e0 * wr_6_4;
  results[k++] =
      0.644658371220304240e0 * wr_4_4 - 0.299850112406331959e0 * wr_6_4;
  results[k++] =
      0.299984695048838344e0 * wr_4_0 + 0.534862186740501905e0 * wr_6_0 +
      0.358550289884825215e-1 * wr_4_4 + 0.428843796840784756e0 * wr_6_4;
  results[k++] =
      -0.484848484848484848e0 * wr_4_0 - 0.151281871697789760e0 * wr_6_0 -
      0.144876195070835593e0 * wr_4_4 + 0.363886028179086034e0 * wr_6_4;
  results[k++] = -0.491689171894441620e0 * wr_6_4;
  results[k++] =
      0.764470787156438317e0 * wr_4_4 + 0.252855816496405587e0 * wr_6_4;
  results[k++] =
      0.461538461538461538e0 * wr_6_0 - 0.205585570701864912e0 * wr_6_4;
  results[k++] =
      -0.534862186740501905e0 * wr_4_0 + 0.118675263975364620e0 * wr_6_0 +
      0.639282587643402851e-1 * wr_4_4 - 0.211448656228938309e0 * wr_6_4;
  results[k++] = 0.307379630651382292e0 * wr_3_0 -
                 0.980816477227499474e-1 * wr_5_0 +
                 0.492365963917330931e0 * wr_5_4;
  results[k++] =
      0.813250060790444318e-1 * wr_3_0 - 0.259499648053840990e0 * wr_5_0;
  results[k++] =
      -0.483997397727227207e-2 * wr_3_0 - 0.130678767035288601e0 * wr_5_0 +
      0.224321887165670489e0 * wr_7_0 - 0.109333700695184838e0 * wr_5_4 -
      0.688802314379664480e0 * wr_7_4;
  results[k++] = -0.553283335172488125e0 * wr_3_0;
  results[k++] =
      0.665386413373999896e-1 * wr_3_0 + 0.359307204997625986e0 * wr_5_0 +
      0.146853146853146853e0 * wr_7_0 - 0.300617975667198279e0 * wr_5_4 +
      0.450926963500797419e0 * wr_7_4;
  results[k++] = 0.629196617045395370e-1 * wr_3_0 +
                 0.914751369247020209e-1 * wr_5_0 -
                 0.448643774331340979e0 * wr_7_0;
  results[k++] =
      0.353638410046370753e0 * wr_3_0 + 0.321333597325386550e0 * wr_5_0 +
      0.964894626931258580e-1 * wr_7_0 - 0.230440265198183878e0 * wr_5_4 -
      0.296280340969093558e0 * wr_7_4;
  results[k++] =
      -0.467819643511491354e0 * wr_3_0 - 0.971621470185991634e-1 * wr_5_0 -
      0.408459395878809026e0 * wr_7_0 - 0.209035760149771523e0 * wr_5_4 +
      0.313553640224657284e0 * wr_7_4;
  results[k++] =
      -0.235584497580073167e-1 * wr_3_0 + 0.222626446698579281e0 * wr_5_0 +
      0.356532590462966826e0 * wr_7_0 + 0.266089498288600425e0 * wr_5_4 +
      0.342115069228200545e0 * wr_7_4;
  results[k++] =
      -0.270293931346128425e0 * wr_5_4 - 0.737165267307622977e-1 * wr_7_4;
  results[k++] =
      -0.130023731496694858e0 * wr_5_4 + 0.195035597245042287e0 * wr_7_4;
  results[k++] =
      0.510723078620758269e0 * wr_5_4 - 0.212801282758649279e0 * wr_7_4;
  results[k++] =
      -0.304932679681573802e0 * wr_5_0 - 0.356084653758673639e0 * wr_7_0 -
      0.109339278802925270e0 * wr_5_4 - 0.546696394014626348e0 * wr_7_4;
  results[k++] =
      0.507066682747924576e0 * wr_3_0 + 0.488955173972098624e-1 * wr_5_0 +
      0.428232472514541625e0 * wr_7_0 + 0.876619818920291914e-1 * wr_5_4 -
      0.131492972838043787e0 * wr_7_4;
  results[k++] =
      -0.331953065154646130e0 * wr_3_0 - 0.320096299452491930e0 * wr_5_0 -
      0.336412752057597128e-1 * wr_7_0 + 0.420847080332456312e0 * wr_5_4 +
      0.189381186149605340e0 * wr_7_4;
  results[k++] =
      -0.388520209443157980e0 * wr_5_4 + 0.279734550799073746e0 * wr_7_4;
  results[k++] =
      0.205585570701864912e0 * wr_5_4 - 0.308378356052797367e0 * wr_7_4;
  results[k++] =
      0.134587348504570225e0 * wr_5_4 + 0.148046083355027248e0 * wr_7_4;
  results[k++] =
      0.163096959863127578e0 * wr_5_0 - 0.502804411755620471e0 * wr_7_0 -
      0.324896920873122317e-1 * wr_5_4 + 0.428863935552521460e0 * wr_7_4;
  results[k++] =
      0.431513995388518698e0 * wr_5_0 + 0.110857952634291092e0 * wr_7_0 -
      0.189111219959400623e0 * wr_5_4 + 0.283666829939100934e0 * wr_7_4;
  results[k++] =
      -0.651013521854029892e0 * wr_3_0 + 0.313880245603287654e-1 * wr_5_0 +
      0.103362351033419915e0 * wr_7_0 - 0.303878506054463893e0 * wr_5_4 +
      0.168821392252479941e-1 * wr_7_4;
  results[k++] = -0.461069445977073440e0 * wr_2_0 +
                 0.247435829652696755e0 * wr_4_0 -
                 0.414039335605412531e0 * wr_4_4;
  results[k++] =
      0.340150671524903763e0 * wr_4_0 - 0.110064292473921085e0 * wr_6_0 +
      0.406557814090870854e0 * wr_4_4 + 0.411822872955094347e0 * wr_6_4;
  results[k++] =
      0.301169300968417080e-1 * wr_2_0 + 0.918320495047464319e-1 * wr_4_0 -
      0.291202746114273260e0 * wr_6_0 - 0.153664409950639378e0 * wr_4_4 -
      0.155654415149618171e0 * wr_6_4;
  results[k++] =
      0.256107349917732296e-2 * wr_2_0 - 0.132155410143086443e-1 * wr_4_0 -
      0.155654415149618171e0 * wr_6_0 + 0.251290776807733446e0 * wr_8_0 +
      0.221138297913872681e-1 * wr_4_4 - 0.832007846040780741e-1 * wr_6_4 -
      0.668236399378178593e0 * wr_8_4;
  results[k++] =
      0.461069445977073440e0 * wr_2_0 + 0.674824989961900242e-1 * wr_4_0 -
      0.101899734239600903e0 * wr_6_0 + 0.376399396004920483e-1 * wr_4_4 -
      0.381273893327904234e0 * wr_6_4;
  results[k++] =
      -0.398409536444797881e0 * wr_2_0 - 0.194371812299945007e0 * wr_4_0 -
      0.110064292473921085e0 * wr_6_0 + 0.325246251272696685e0 * wr_4_4 -
      0.588318389935849068e-1 * wr_6_4;
  results[k++] =
      -0.492822492493773403e-1 * wr_2_0 + 0.155408083777263192e0 * wr_4_0 +
      0.274562589193457645e0 * wr_6_0 + 0.188048798254163537e0 * wr_8_0 -
      0.354610176809167795e0 * wr_4_4 - 0.280177947269312708e0 * wr_6_4 +
      0.500062331968916712e0 * wr_8_4;
  results[k++] =
      0.179275144942412607e-1 * wr_2_0 + 0.925087871001605100e-1 * wr_4_0 +
      0.622617660598472684e-1 * wr_6_0 - 0.452323398253920202e0 * wr_8_0 +
      0.110569148956936340e0 * wr_4_4 + 0.133121255366524919e0 * wr_6_4 +
      0.133647279875635719e0 * wr_8_4;
  results[k++] =
      -0.383214231015951250e0 * wr_4_0 - 0.708563363802828139e-1 * wr_6_0 +
      0.916057224828688940e-1 * wr_4_4 + 0.113622914750153291e0 * wr_6_4;
  results[k++] =
      0.572959709126940516e0 * wr_2_0 + 0.454855689222371245e-2 * wr_4_0 +
      0.306134361946517547e0 * wr_6_0 + 0.154446192441631767e0 * wr_8_0 -
      0.761119146027928695e-2 * wr_4_4 + 0.163635699531787824e0 * wr_6_4 -
      0.410705752299974994e0 * wr_8_4;
  results[k++] =
      -0.303181780321957869e0 * wr_2_0 - 0.300858759026319172e0 * wr_4_0 -
      0.115707912783131530e-1 * wr_6_0 - 0.441316313432691816e0 * wr_8_0 -
      0.359594996157098914e0 * wr_4_4 - 0.247393923756113742e-1 * wr_6_4 +
      0.130395033913131340e0 * wr_8_4;
  results[k++] =
      -0.498638394671177161e-1 * wr_2_0 + 0.321631542310419527e-1 * wr_4_0 +
      0.259763619943919429e0 * wr_6_0 + 0.297051064010663281e0 * wr_8_0 +
      0.269096254723631245e0 * wr_4_4 + 0.323982155792768284e0 * wr_6_4 +
      0.325262361226470983e0 * wr_8_4;
  results[k++] =
      -0.368180323946522604e0 * wr_4_4 + 0.141350698548043901e0 * wr_6_4 +
      0.157676934940536108e-1 * wr_8_4 + 0.672672793996312466e0 * wr_8_8;
  results[k++] =
      0.511303116375689813e0 * wr_4_4 - 0.763381020690574118e-1 * wr_6_4 -
      0.851552774557783934e-1 * wr_8_4 + 0.726569658793938124e0 * wr_8_8;
  results[k++] =
      -0.150308987833599140e0 * wr_4_4 - 0.259677814671502949e0 * wr_6_4 +
      0.173802615664650165e0 * wr_8_4 + 0.494311532742980752e0 * wr_8_8;
  results[k++] =
      -0.241030600554043160e0 * wr_4_4 + 0.431833517087530481e0 * wr_6_4 -
      0.168598847599847940e0 * wr_8_4 + 0.205504933095035880e0 * wr_8_8;
  results[k++] =
      -0.138454474637925390e0 * wr_4_0 + 0.356574791160334604e0 * wr_6_0 +
      0.131921988571160644e0 * wr_8_0 - 0.165484749177611638e-1 * wr_4_4 +
      0.285895864560523171e0 * wr_6_4 + 0.350809033906765550e0 * wr_8_4;
  results[k++] =
      -0.384551806569720839e0 * wr_4_0 - 0.385144793516510629e-1 * wr_6_0 -
      0.427476100174008692e0 * wr_8_0 - 0.114906830245839045e0 * wr_4_4 +
      0.926408482481941975e-1 * wr_6_4 - 0.378917063901453079e0 * wr_8_4;
  results[k++] =
      0.657233537538228319e0 * wr_2_0 + 0.160128153805087133e0 * wr_6_0 +
      0.343705111534147860e0 * wr_8_0 - 0.101338298924401669e0 * wr_4_4 -
      0.894826484340999732e-1 * wr_6_4 - 0.289038325622918534e0 * wr_8_4;
  results[k++] =
      -0.200746344535957591e0 * wr_2_0 - 0.323713321598794217e0 * wr_4_0 -
      0.217870796187373848e0 * wr_6_0 + 0.109916817901171431e-1 * wr_8_0 +
      0.379173194733593261e0 * wr_4_4 + 0.174685258696458690e0 * wr_6_4 +
      0.682015919179671566e-1 * wr_8_4;
  results[k++] = 0.245844585947220811e0 * wr_6_4 -
                 0.129640744710432878e0 * wr_8_4 +
                 0.425435629811517047e0 * wr_8_8;
  results[k++] =
      -0.179653602498812993e0 * wr_4_4 - 0.386243639668214062e0 * wr_6_4 +
      0.247741861020340195e0 * wr_8_4 + 0.459523000112046476e0 * wr_8_8;
  results[k++] =
      0.475318754348711285e0 * wr_4_4 + 0.218979560580543571e0 * wr_6_4 -
      0.232058454380176149e0 * wr_8_4 + 0.312630063431343680e0 * wr_8_8;
  results[k++] =
      -0.508137122366012587e0 * wr_4_4 + 0.341394370999459436e-1 * wr_6_4 +
      0.106631273859026465e0 * wr_8_4 + 0.129972731796165881e0 * wr_8_8;
  results[k++] =
      -0.230769230769230769e0 * wr_6_0 + 0.403603676397787480e0 * wr_8_0 +
      0.102792785350932456e0 * wr_6_4 - 0.596260703145076811e0 * wr_8_4;
  results[k++] =
      0.125694690108100297e0 * wr_4_0 - 0.181279460095324761e0 * wr_6_0 -
      0.368873826772307047e0 * wr_8_0 - 0.150233889658622283e-1 * wr_4_4 +
      0.322993157588601825e0 * wr_6_4 - 0.495411667401741909e-1 * wr_8_4;
  results[k++] =
      0.332556891147363787e0 * wr_4_0 + 0.274068782409306640e0 * wr_6_0 +
      0.126746546857174552e-1 * wr_8_0 - 0.119244453159189883e0 * wr_4_4 +
      0.347927824991652188e0 * wr_6_4 + 0.190992969987964375e0 * wr_8_4;
  results[k++] =
      -0.738179948128318321e0 * wr_2_0 - 0.101576648839519287e0 * wr_4_0 +
      0.961379516424302097e-1 * wr_6_0 + 0.819145537511681477e-1 * wr_8_0 -
      0.297447925996601386e0 * wr_4_4 + 0.827916113528113809e-1 * wr_6_4 +
      0.624186855470421912e-1 * wr_8_4;
  results[k++] =
      0.629940788348712045e0 * wr_1_0 - 0.412393049421161259e0 * wr_3_0 +
      0.328975847479884493e-1 * wr_5_0 - 0.165144564768954091e0 * wr_5_4;
  results[k++] = -0.308606699924183820e0 * wr_3_0 +
                 0.246182981958665465e0 * wr_5_0 -
                 0.235702260395515842e0 * wr_1_0;
  results[k++] =
      -0.465242105199235432e-1 * wr_1_0 + 0.498391284987141276e-1 * wr_3_0 +
      0.336412752057597128e0 * wr_5_0 - 0.114070681259433487e0 * wr_7_0 +
      0.281463102062910591e0 * wr_5_4 + 0.350265193678288735e0 * wr_7_4;
  results[k++] =
      0.524863881081477966e-1 * wr_3_0 + 0.885704204753535175e-1 * wr_5_0 -
      0.308904865131541724e0 * wr_7_0 - 0.190551420887254720e0 * wr_5_4 -
      0.237130657104139207e0 * wr_7_4;
  results[k++] =
      0.290249301777267551e-1 * wr_9_4 + 0.568114573750766460e-1 * wr_5_4 -
      0.779765101226542199e-1 * wr_7_4 - 0.633249214912447188e0 * wr_9_8;
  results[k++] =
      0.171210149324308595e0 * wr_7_0 - 0.486930506169784162e-2 * wr_3_0 +
      0.213639892538733799e-1 * wr_5_0 - 0.271085341720739254e0 * wr_9_0 -
      0.383022767486130150e-1 * wr_5_4 + 0.525717524000570794e-1 * wr_7_4 +
      0.645763929816343240e0 * wr_9_4;
  results[k++] = -0.412393049421161259e0 * wr_3_0 +
                 0.230283093235919145e0 * wr_5_0 +
                 0.385337317794226212e0 * wr_5_4;
  results[k++] =
      0.707106781186547525e0 * wr_1_0 - 0.561103090771243310e-1 * wr_3_0 +
      0.189371524583588819e0 * wr_5_0 - 0.123837446831768701e0 * wr_7_0 -
      0.158439584782903762e0 * wr_5_4 - 0.380255003478969029e0 * wr_7_4;
  results[k++] =
      -0.195401684183678882e0 * wr_1_0 - 0.345551290924417951e0 * wr_3_0 -
      0.784963088134393298e-1 * wr_5_0 - 0.171106021889150231e0 * wr_7_0;
  results[k++] =
      -0.481045692920834652e-1 * wr_1_0 - 0.250319697131166415e-1 * wr_3_0 +
      0.194854925045777738e0 * wr_5_0 + 0.218050493034029452e0 * wr_7_0 +
      0.217960815673446972e0 * wr_9_0 - 0.232896181084422436e0 * wr_5_4 -
      0.209232932738946359e0 * wr_7_4 + 0.519213735356656615e0 * wr_9_4;
  results[k++] =
      -0.870747905331802654e-1 * wr_9_4 - 0.170434372125229937e0 * wr_5_4 +
      0.233929530367962659e0 * wr_7_4 - 0.633249214912447188e0 * wr_9_8;
  results[k++] =
      -0.340851354318848913e-1 * wr_3_0 - 0.106819946269366900e0 * wr_5_0 -
      0.369813922540506566e-1 * wr_7_0 + 0.451808902867898757e0 * wr_9_0 -
      0.140441681411581055e0 * wr_5_4 - 0.208184139504226034e0 * wr_7_4 -
      0.215254643272114414e0 * wr_9_4;
  results[k++] =
      -0.958919989752263774e-1 * wr_7_0 + 0.344891408195572287e0 * wr_5_0 -
      0.912414835752264878e-1 * wr_3_0 - 0.247334446913384734e0 * wr_5_4 +
      0.294445770134981828e0 * wr_7_4;
  results[k++] =
      -0.375533808099405379e0 * wr_3_0 - 0.157869802771196997e0 * wr_7_0 -
      0.115220132599091939e0 * wr_5_0 - 0.247885917936726767e0 * wr_5_4 +
      0.121188670991288642e0 * wr_7_4;
  results[k++] =
      0.252622440230166778e0 * wr_7_0 + 0.749361528052059732e0 * wr_1_0 +
      0.314123836291347774e-1 * wr_3_0 + 0.955196947366979615e-1 * wr_5_0 +
      0.195885097849746214e0 * wr_9_0 + 0.114167871904189304e0 * wr_5_4 +
      0.242406854071079812e0 * wr_7_4 - 0.466626228393497686e0 * wr_9_4;
  results[k++] =
      0.157939763018019915e-2 * wr_7_0 - 0.197080804683184164e0 * wr_5_0 -
      0.144948615067895733e0 * wr_1_0 - 0.316397390736246929e0 * wr_3_0 -
      0.454679445093488919e0 * wr_9_0;
  results[k++] =
      0.141278106562675028e0 * wr_9_4 + 0.276528318237820652e0 * wr_5_4 -
      0.379548672091126386e0 * wr_7_4 - 0.440332055026585289e0 * wr_9_8;
  results[k++] =
      0.474024361251090005e-1 * wr_3_0 - 0.273342417978576486e0 * wr_7_0 -
      0.257045645328767424e0 * wr_9_0 - 0.742776230131180890e-1 * wr_5_0 +
      0.336181937106199468e-1 * wr_1_0 - 0.186435354123130323e0 * wr_5_4 -
      0.276362995523699066e0 * wr_7_4 - 0.285749040040868292e0 * wr_9_4;
  results[k++] =
      0.131868131868131868e0 * wr_5_4 - 0.549450549450549451e-1 * wr_7_4;
  results[k++] =
      -0.370054027263356841e0 * wr_5_4 + 0.114886054215748039e0 * wr_7_4 +
      0.210067022071766943e-1 * wr_9_4 + 0.458312133711946412e0 * wr_9_8;
  results[k++] =
      0.365216511696921294e0 * wr_5_4 + 0.107416621087329793e-1 * wr_7_4 -
      0.870747905331802654e-1 * wr_9_4 + 0.633249214912447188e0 * wr_9_8;
  results[k++] = -0.294117647058823529e0 * wr_7_4 +
                 0.157199764970486274e0 * wr_9_4 +
                 0.489956280157551604e0 * wr_9_8;
  results[k++] =
      0.790826151588509470e-1 * wr_7_0 + 0.393601322502665418e0 * wr_3_0 -
      0.105400121264098974e-1 * wr_9_0 - 0.279145263119541259e0 * wr_1_0 -
      0.246702684842237894e0 * wr_5_0;
  results[k++] =
      0.142192537510679226e0 * wr_9_4 + 0.278318164225627959e0 * wr_5_4 -
      0.382005323446940336e0 * wr_7_4 - 0.221591065221934248e0 * wr_9_8;
  results[k++] =
      0.148767316435454824e0 * wr_5_0 - 0.265409830516290084e0 * wr_7_0 +
      0.533432858212675058e-1 * wr_5_4 - 0.407483433356904559e0 * wr_7_4;
  results[k++] =
      0.252251074927810643e0 * wr_7_0 - 0.111010544520192612e0 * wr_3_0 +
      0.139159082112813980e0 * wr_5_0 + 0.196197166070299428e0 * wr_9_0 +
      0.249490374284924020e0 * wr_5_4 - 0.774561619512019012e-1 * wr_7_4 +
      0.467369619383198772e0 * wr_9_4;
  results[k++] =
      0.169812515452273423e-2 * wr_7_0 - 0.314070176479510784e0 * wr_3_0 -
      0.228899884862929071e0 * wr_5_0 - 0.451808902867898757e0 * wr_9_0 +
      0.300946460167673689e0 * wr_5_4 - 0.955947579356139952e-2 * wr_7_4 -
      0.215254643272114414e0 * wr_9_4;
  results[k++] =
      0.785544327079740633e0 * wr_1_0 + 0.286013990528980349e0 * wr_9_0 +
      0.118675263975364620e0 * wr_3_0 + 0.211816915006690547e0 * wr_7_0 -
      0.214157603370676898e0 * wr_7_4 - 0.317952179767067480e0 * wr_9_4;
  results[k++] =
      -0.278318164225627959e0 * wr_5_4 + 0.382005323446940336e0 * wr_7_4 -
      0.142192537510679226e0 * wr_9_4 - 0.221591065221934248e0 * wr_9_8;
  results[k++] =
      0.291557718449917511e0 * wr_5_0 + 0.930484210398470865e-1 * wr_1_0 -
      0.316200363792296921e-1 * wr_9_0 + 0.250473568865332538e0 * wr_3_0 +
      0.155768787434100351e0 * wr_7_0;
  results[k++] =
      0.347503039578942784e-1 * wr_5_4 - 0.919860987120730900e-1 * wr_7_4 +
      0.414257754124907078e-1 * wr_9_4 - 0.903803716200831386e0 * wr_9_8;
  results[k++] =
      -0.520094925986779433e-1 * wr_5_4 + 0.286817054772121011e0 * wr_7_4 -
      0.141715253554271246e0 * wr_9_4 - 0.386482725819037682e0 * wr_9_8;
  results[k++] = -0.923932812851038250e-1 * wr_5_4 -
                 0.373649299314758116e0 * wr_7_4 +
                 0.220283731893533631e0 * wr_9_4;
  results[k++] =
      0.340552978787363928e0 * wr_5_4 + 0.214634230328170544e0 * wr_7_4 -
      0.190558566897457256e0 * wr_9_4 + 0.129114816600118769e0 * wr_9_8;
  results[k++] =
      -0.125040593612263789e0 * wr_7_0 - 0.622338334581454235e0 * wr_3_0 +
      0.166652224426249174e-1 * wr_9_0 + 0.441367414752374764e0 * wr_1_0 +
      0.390071194490084575e0 * wr_5_0;
  results[k++] = 0.381385035698236927e0 * wr_5_4 -
                 0.849343204646164298e-1 * wr_9_4 -
                 0.856450803076289632e-1 * wr_9_8;
  results[k++] =
      0.165338947657700257e0 * wr_7_0 - 0.207955742134854779e0 * wr_9_0 -
      0.145878355671003223e-1 * wr_5_0 + 0.290596640301068732e-2 * wr_5_4 -
      0.141024840146106885e0 * wr_7_4 + 0.495380223867722757e0 * wr_9_4;
  results[k++] =
      -0.103106949137477370e0 * wr_7_0 - 0.109165365413369099e0 * wr_5_0 +
      0.444628079246249343e0 * wr_9_0 + 0.478417748931840895e-1 * wr_5_4 -
      0.263833317425647552e0 * wr_7_4 - 0.423666988319175677e0 * wr_9_4;
  results[k++] =
      0.859454360558079699e-1 * wr_3_0 - 0.260873298123978648e0 * wr_7_0 -
      0.283542450724721585e0 * wr_9_0 - 0.215476611613886223e-1 * wr_5_0 +
      0.208610486783115513e0 * wr_5_4 - 0.426083510586428743e-1 * wr_7_4 -
      0.202631561803562815e0 * wr_9_4;
  results[k++] =
      0.175359489939985121e0 * wr_7_0 - 0.251375072910264019e-1 * wr_9_0 +
      0.232741341073522708e0 * wr_3_0 + 0.306344546909106769e0 * wr_5_0 +
      0.370220119743561565e0 * wr_5_4 + 0.233332008241740482e0 * wr_7_4 +
      0.990760447735445509e-1 * wr_9_4;
  results[k++] =
      -0.836587527062570079e-1 * wr_9_4 - 0.163748048120053648e0 * wr_5_4 +
      0.224752222909877556e0 * wr_7_4 + 0.724293054874650144e-1 * wr_9_8;
  results[k++] =
      0.245609541400684003e0 * wr_3_0 - 0.131951937489472233e-1 * wr_5_0 -
      0.105745751192551455e0 * wr_7_0 - 0.668351483088289603e-1 * wr_9_0 +
      0.821173352177038390e0 * wr_1_0 - 0.240424296201647170e0 * wr_5_4 -
      0.151527917774147375e0 * wr_7_4 - 0.643408801002544290e-1 * wr_9_4;
  results[k++] = wr_0_0 - 0.318181818181818182e0 * wr_4_0 +
                 0.336181937106199468e-1 * wr_6_0 -
                 0.380300012060943431e0 * wr_4_4 -
                 0.125787762827338382e0 * wr_6_4;
  results[k++] =
      -0.298142396999971959e0 * wr_2_0 - 0.227272727272727273e0 * wr_4_0 +
      0.235327355974339627e0 * wr_6_0 + 0.380300012060943431e0 * wr_4_4 +
      0.125787762827338382e0 * wr_6_4;
  results[k++] =
      -0.659636593224204869e-1 * wr_2_0 - 0.115576947361668235e0 * wr_8_0 +
      0.327271399063575648e0 * wr_6_0 + 0.850957074747518803e-1 * wr_4_0 -
      0.142392353747523679e0 * wr_4_4 + 0.174933921112295741e0 * wr_6_4 +
      0.307344042376750021e0 * wr_8_4;
  results[k++] =
      -0.911010039175064752e-1 * wr_4_4 + 0.163217727713709578e0 * wr_6_4 -
      0.637243745830395416e-1 * wr_8_4 + 0.543714946166432150e0 * wr_8_8;
  results[k++] =
      0.685171956023266601e-1 * wr_4_0 + 0.823474206650615091e-1 * wr_6_0 -
      0.319893821577079391e0 * wr_8_0 + 0.204734281038153814e-1 * wr_4_4 -
      0.198074465237062609e0 * wr_6_4 - 0.283555566224313097e0 * wr_8_4;
  results[k++] =
      0.960288898357475787e-2 * wr_4_4 + 0.607223263638246082e-1 * wr_6_4 -
      0.121969100565773562e0 * wr_8_4 + 0.522618452069303658e-1 * wr_10_4 -
      0.226233898389705447e0 * wr_8_8 - 0.746448454177756801e0 * wr_10_8;
  results[k++] =
      -0.671866379601764195e-2 * wr_4_0 + 0.284993962578178081e-1 * wr_6_0 +
      0.181605194569759726e0 * wr_8_0 - 0.286249915166790073e0 * wr_10_0 +
      0.803033918549950438e-3 * wr_4_4 - 0.507785602507912498e-1 * wr_6_4 +
      0.243902726951016136e-1 * wr_8_4 + 0.624960771900077354e0 * wr_10_4;
  results[k++] =
      -0.298142396999971959e0 * wr_2_0 - 0.227272727272727273e0 * wr_4_0 +
      0.235327355974339627e0 * wr_6_0 + 0.380300012060943431e0 * wr_4_4 +
      0.125787762827338382e0 * wr_6_4;
  results[k++] =
      wr_0_0 + 0.162623125636348342e0 * wr_2_0 -
      0.384615384615384615e-1 * wr_4_0 + 0.221880078490091649e0 * wr_6_0 -
      0.132970580439500036e0 * wr_8_0 + 0.877615412448330996e-1 * wr_4_4 -
      0.226417973089209088e0 * wr_6_4 - 0.353597465951179476e0 * wr_8_4;
  results[k++] =
      -0.263854637289681947e0 * wr_2_0 - 0.289325405414156393e0 * wr_4_0 -
      0.327271399063575648e-1 * wr_6_0 - 0.208038505251002823e0 * wr_8_0 -
      0.345810001958271791e0 * wr_4_4 - 0.699735684449182964e-1 * wr_6_4 +
      0.614688084753500040e-1 * wr_8_4;
  results[k++] =
      0.212569009140848442e0 * wr_4_4 - 0.345637541040796755e0 * wr_6_4 +
      0.905556901969509275e-1 * wr_8_4 + 0.236094950824362552e-1 * wr_10_4 +
      0.337211038730505783e0 * wr_10_8 + 0.257549185026204703e0 * wr_8_8;
  results[k++] =
      -0.714975832640776280e-1 * wr_2_0 + 0.213134500544865083e0 * wr_6_0 +
      0.179079316385254970e0 * wr_8_0 + 0.240592401626331073e0 * wr_10_0 +
      0.143313996726707670e0 * wr_4_4 - 0.119103600011828497e0 * wr_6_4 -
      0.150596496894252410e0 * wr_8_4 + 0.525278105134368756e0 * wr_10_4;
  results[k++] =
      -0.672202228850233051e-1 * wr_4_4 - 0.910834895457369126e-1 * wr_6_4 +
      0.302271249228221434e0 * wr_8_4 - 0.141853579847382421e0 * wr_10_4 -
      0.533177467269826287e0 * wr_10_8 - 0.407221017101469804e0 * wr_8_8;
  results[k++] =
      -0.470306465721234937e-1 * wr_4_0 - 0.113997585031271233e0 * wr_6_0 -
      0.165095631427054297e-1 * wr_8_0 + 0.449821295262098686e0 * wr_10_0 +
      0.168637122895489592e-1 * wr_4_4 - 0.144718896714755062e0 * wr_6_4 -
      0.248780781490036459e0 * wr_8_4 - 0.267840330814318867e0 * wr_10_4;
  results[k++] =
      -0.659636593224204869e-1 * wr_2_0 - 0.115576947361668235e0 * wr_8_0 +
      0.327271399063575648e0 * wr_6_0 + 0.850957074747518803e-1 * wr_4_0 -
      0.142392353747523679e0 * wr_4_4 + 0.174933921112295741e0 * wr_6_4 +
      0.307344042376750021e0 * wr_8_4;
  results[k++] =
      -0.263854637289681947e0 * wr_2_0 - 0.289325405414156393e0 * wr_4_0 -
      0.327271399063575648e-1 * wr_6_0 - 0.208038505251002823e0 * wr_8_0 -
      0.345810001958271791e0 * wr_4_4 - 0.699735684449182964e-1 * wr_6_4 +
      0.614688084753500040e-1 * wr_8_4;
  results[k++] =
      wr_0_0 + 0.244335633044355719e0 * wr_2_0 -
      0.118343195266272189e-1 * wr_4_0 + 0.149593356086079890e0 * wr_6_0 +
      0.208530785923484295e0 * wr_8_0 + 0.226664853836641838e0 * wr_10_0 -
      0.990130208916065737e-1 * wr_4_4 + 0.186575695270595121e0 * wr_6_4 +
      0.228335205745802131e0 * wr_8_4 - 0.494870511782776965e0 * wr_10_4;
  results[k++] =
      -0.221715905268582184e0 * wr_4_4 + 0.268713776659941442e0 * wr_6_4 +
      0.571378253607197524e-1 * wr_8_4 - 0.861889608792321518e-1 * wr_10_4 -
      0.696452267919365500e-1 * wr_8_8 + 0.527581967528156609e0 * wr_10_8;
  results[k++] =
      -0.209517826538375031e0 * wr_2_0 - 0.372505982979733737e-2 * wr_8_0 -
      0.297772946591832213e0 * wr_4_0 - 0.135572812555795303e0 * wr_6_0 -
      0.460066110430181691e0 * wr_10_0 + 0.348788609955313080e0 * wr_4_4 +
      0.108700074759666523e0 * wr_6_4 - 0.231133883997876015e-1 * wr_8_4 -
      0.913134916109869663e-1 * wr_10_4;
  results[k++] =
      0.186967267769292299e0 * wr_4_4 - 0.369455466483133953e-1 * wr_6_4 -
      0.361371337377612686e0 * wr_8_4 + 0.199872512063782970e0 * wr_10_4 -
      0.440475089643002477e0 * wr_8_8 - 0.185373407757996551e0 * wr_10_8;
  results[k++] =
      -0.228573514963581333e0 * wr_10_0 + 0.522328301482100313e-1 * wr_2_0 -
      0.104040062719262783e0 * wr_6_0 - 0.277606848051775060e0 * wr_8_0 +
      0.373747708379513744e-1 * wr_4_0 + 0.109444918663448865e0 * wr_4_4 -
      0.895967127509893542e-1 * wr_6_4 - 0.211535725469323756e0 * wr_8_4 -
      0.245937207100551286e0 * wr_10_4;
  results[k++] =
      -0.911010039175064752e-1 * wr_4_4 + 0.163217727713709578e0 * wr_6_4 -
      0.637243745830395416e-1 * wr_8_4 + 0.543714946166432150e0 * wr_8_8;
  results[k++] =
      0.212569009140848442e0 * wr_4_4 - 0.345637541040796755e0 * wr_6_4 +
      0.905556901969509275e-1 * wr_8_4 + 0.236094950824362552e-1 * wr_10_4 +
      0.337211038730505783e0 * wr_10_8 + 0.257549185026204703e0 * wr_8_8;
  results[k++] =
      -0.221715905268582184e0 * wr_4_4 + 0.268713776659941442e0 * wr_6_4 +
      0.571378253607197524e-1 * wr_8_4 - 0.861889608792321518e-1 * wr_10_4 -
      0.696452267919365500e-1 * wr_8_8 + 0.527581967528156609e0 * wr_10_8;
  results[k++] =
      wr_0_0 - 0.712593091730702211e0 * wr_2_0 +
      0.197802197802197802e0 * wr_4_0 + 0.326294233073664189e-1 * wr_6_0 -
      0.363312474750782187e-1 * wr_8_0 + 0.701581690446748547e-2 * wr_10_0;
  results[k++] =
      0.743836582177274122e-1 * wr_4_4 + 0.823117955625224985e-1 * wr_6_4 -
      0.303969024765150078e0 * wr_8_4 + 0.144578040091793728e0 * wr_10_4 -
      0.185253739828592431e0 * wr_8_8 + 0.442497310994804422e0 * wr_10_8;
  results[k++] =
      -0.233112125665894788e0 * wr_2_0 + 0.417003647494731341e0 * wr_4_0 -
      0.309549889167186782e0 * wr_6_0 + 0.111784370844151157e0 * wr_8_0 -
      0.162697047808747483e-1 * wr_10_0;
  results[k++] =
      -0.583513422684012892e-1 * wr_4_4 + 0.290568081996112303e0 * wr_6_4 -
      0.348012371706796302e0 * wr_8_4 + 0.124757980374086434e0 * wr_10_4 +
      0.117831072892145574e0 * wr_8_8 - 0.212130997078831382e0 * wr_10_8;
  results[k++] =
      0.685171956023266601e-1 * wr_4_0 + 0.823474206650615091e-1 * wr_6_0 -
      0.319893821577079391e0 * wr_8_0 + 0.204734281038153814e-1 * wr_4_4 -
      0.198074465237062609e0 * wr_6_4 - 0.283555566224313097e0 * wr_8_4;
  results[k++] =
      -0.714975832640776280e-1 * wr_2_0 + 0.213134500544865083e0 * wr_6_0 +
      0.179079316385254970e0 * wr_8_0 + 0.240592401626331073e0 * wr_10_0 +
      0.143313996726707670e0 * wr_4_4 - 0.119103600011828497e0 * wr_6_4 -
      0.150596496894252410e0 * wr_8_4 + 0.525278105134368756e0 * wr_10_4;
  results[k++] =
      -0.209517826538375031e0 * wr_2_0 - 0.372505982979733737e-2 * wr_8_0 -
      0.297772946591832213e0 * wr_4_0 - 0.135572812555795303e0 * wr_6_0 -
      0.460066110430181691e0 * wr_10_0 + 0.348788609955313080e0 * wr_4_4 +
      0.108700074759666523e0 * wr_6_4 - 0.231133883997876015e-1 * wr_8_4 -
      0.913134916109869663e-1 * wr_10_4;
  results[k++] =
      0.743836582177274122e-1 * wr_4_4 + 0.823117955625224985e-1 * wr_6_4 -
      0.303969024765150078e0 * wr_8_4 + 0.144578040091793728e0 * wr_10_4 -
      0.185253739828592431e0 * wr_8_8 + 0.442497310994804422e0 * wr_10_8;
  results[k++] =
      wr_0_0 + 0.323905950786682823e0 * wr_2_0 +
      0.219780219780219780e-1 * wr_4_0 + 0.326294233073664189e-1 * wr_6_0 +
      0.234501688248232139e0 * wr_8_0 + 0.245553591656361991e0 * wr_10_0 +
      0.234030776652888266e0 * wr_4_4 - 0.665935214968262024e-1 * wr_6_4 -
      0.245923049627700011e0 * wr_8_4 - 0.306348412056004788e0 * wr_10_4;
  results[k++] =
      -0.282266136796223379e0 * wr_4_4 + 0.260292752275711634e0 * wr_6_4 +
      0.207834477059027662e0 * wr_8_4 - 0.164590526279954740e0 * wr_10_4 -
      0.316661493471677283e0 * wr_8_8 + 0.186573248165793306e-1 * wr_10_8;
  results[k++] =
      0.268018854015020735e0 * wr_4_0 + 0.261783670533892543e0 * wr_6_0 -
      0.423781788011520815e-1 * wr_10_0 + 0.144570003182477344e0 * wr_2_0 +
      0.115542873073966173e0 * wr_8_0 + 0.330459922227974398e0 * wr_4_4 +
      0.174134187482655078e0 * wr_6_4 + 0.955899564645376379e-1 * wr_8_4 +
      0.384511146100118534e-1 * wr_10_4;
  results[k++] =
      0.960288898357475787e-2 * wr_4_4 + 0.607223263638246082e-1 * wr_6_4 -
      0.121969100565773562e0 * wr_8_4 + 0.522618452069303658e-1 * wr_10_4 -
      0.226233898389705447e0 * wr_8_8 - 0.746448454177756801e0 * wr_10_8;
  results[k++] =
      -0.672202228850233051e-1 * wr_4_4 - 0.910834895457369126e-1 * wr_6_4 +
      0.302271249228221434e0 * wr_8_4 - 0.141853579847382421e0 * wr_10_4 -
      0.533177467269826287e0 * wr_10_8 - 0.407221017101469804e0 * wr_8_8;
  results[k++] =
      0.186967267769292299e0 * wr_4_4 - 0.369455466483133953e-1 * wr_6_4 -
      0.361371337377612686e0 * wr_8_4 + 0.199872512063782970e0 * wr_10_4 -
      0.440475089643002477e0 * wr_8_8 - 0.185373407757996551e0 * wr_10_8;
  results[k++] =
      -0.233112125665894788e0 * wr_2_0 + 0.417003647494731341e0 * wr_4_0 -
      0.309549889167186782e0 * wr_6_0 + 0.111784370844151157e0 * wr_8_0 -
      0.162697047808747483e-1 * wr_10_0;
  results[k++] =
      -0.282266136796223379e0 * wr_4_4 + 0.260292752275711634e0 * wr_6_4 +
      0.207834477059027662e0 * wr_8_4 - 0.164590526279954740e0 * wr_10_4 -
      0.316661493471677283e0 * wr_8_8 + 0.186573248165793306e-1 * wr_10_8;
  results[k++] =
      wr_0_0 - 0.491443511538415318e0 * wr_2_0 -
      0.197802197802197802e0 * wr_4_0 + 0.326294233073664189e0 * wr_6_0 -
      0.142379213078009236e0 * wr_8_0 + 0.224506140942959535e-1 * wr_10_0;
  results[k++] =
      -0.230653932620255353e0 * wr_4_4 + 0.306285651484759933e0 * wr_6_4 +
      0.152848853959807793e-1 * wr_8_4 - 0.717307953208542981e-1 * wr_10_4 +
      0.139730463555188946e0 * wr_8_8 - 0.487866991339368885e-1 * wr_10_8;
  results[k++] =
      -0.671866379601764195e-2 * wr_4_0 + 0.284993962578178081e-1 * wr_6_0 +
      0.181605194569759726e0 * wr_8_0 - 0.286249915166790073e0 * wr_10_0 +
      0.803033918549950438e-3 * wr_4_4 - 0.507785602507912498e-1 * wr_6_4 +
      0.243902726951016136e-1 * wr_8_4 + 0.624960771900077354e0 * wr_10_4;
  results[k++] =
      -0.470306465721234937e-1 * wr_4_0 - 0.113997585031271233e0 * wr_6_0 -
      0.165095631427054297e-1 * wr_8_0 + 0.449821295262098686e0 * wr_10_0 +
      0.168637122895489592e-1 * wr_4_4 - 0.144718896714755062e0 * wr_6_4 -
      0.248780781490036459e0 * wr_8_4 - 0.267840330814318867e0 * wr_10_4;
  results[k++] =
      -0.228573514963581333e0 * wr_10_0 + 0.522328301482100313e-1 * wr_2_0 -
      0.104040062719262783e0 * wr_6_0 - 0.277606848051775060e0 * wr_8_0 +
      0.373747708379513744e-1 * wr_4_0 + 0.109444918663448865e0 * wr_4_4 -
      0.895967127509893542e-1 * wr_6_4 - 0.211535725469323756e0 * wr_8_4 -
      0.245937207100551286e0 * wr_10_4;
  results[k++] =
      -0.583513422684012892e-1 * wr_4_4 + 0.290568081996112303e0 * wr_6_4 -
      0.348012371706796302e0 * wr_8_4 + 0.124757980374086434e0 * wr_10_4 +
      0.117831072892145574e0 * wr_8_8 - 0.212130997078831382e0 * wr_10_8;
  results[k++] =
      0.268018854015020735e0 * wr_4_0 + 0.261783670533892543e0 * wr_6_0 -
      0.423781788011520815e-1 * wr_10_0 + 0.144570003182477344e0 * wr_2_0 +
      0.115542873073966173e0 * wr_8_0 + 0.330459922227974398e0 * wr_4_4 +
      0.174134187482655078e0 * wr_6_4 + 0.955899564645376379e-1 * wr_8_4 +
      0.384511146100118534e-1 * wr_10_4;
  results[k++] =
      -0.230653932620255353e0 * wr_4_4 + 0.306285651484759933e0 * wr_6_4 +
      0.152848853959807793e-1 * wr_8_4 - 0.717307953208542981e-1 * wr_10_4 +
      0.139730463555188946e0 * wr_8_8 - 0.487866991339368885e-1 * wr_10_8;
  results[k++] =
      wr_0_0 + 0.415836817455582192e0 * wr_2_0 +
      0.115730423422731115e0 * wr_4_0 - 0.570444463415496835e-1 * wr_6_0 -
      0.103857516170961644e0 * wr_8_0 - 0.564143636215641906e-1 * wr_10_0 -
      0.486063920740614090e0 * wr_4_4 - 0.256128928833946933e0 * wr_6_4 -
      0.140600496148892938e0 * wr_8_4 - 0.565566299180316531e-1 * wr_10_4;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] =
      0.144841364875580273e0 * wr_6_0 - 0.541946762797134628e0 * wr_6_4;
  results[k++] =
      -0.392232270276368064e0 * wr_6_0 - 0.628970902033150977e0 * wr_6_4;
  results[k++] = 0.239045721866878728e0 * wr_6_4;
  results[k++] =
      -0.603022689155527245e0 * wr_6_0 + 0.483493778415228179e0 * wr_6_4;
  results[k++] = -0.626783170528008719e0 * wr_6_4;
  results[k++] =
      -0.588348405414552098e0 * wr_6_0 - 0.262071209180479573e0 * wr_6_4;
  results[k++] = 0.741619848709566296e0 * wr_6_4;
  results[k++] =
      -0.339683110243378725e0 * wr_6_0 + 0.907841299003203627e-1 * wr_6_4;
  results[k++] =
      -0.222680885707561645e0 * wr_5_0 + 0.372616391489439941e0 * wr_5_4;
  results[k++] =
      -0.968979472765805478e-1 * wr_5_0 + 0.217818417103508982e0 * wr_7_0 -
      0.810706391395213349e-1 * wr_5_4 - 0.668832772901051012e0 * wr_7_4;
  results[k++] =
      0.487056787394848929e0 * wr_5_0 + 0.993072652873696635e-1 * wr_7_0 +
      0.349286523998893628e0 * wr_5_4 + 0.304932679681573801e0 * wr_7_4;
  results[k++] =
      0.984003306256663543e-1 * wr_5_0 - 0.449413380517059377e0 * wr_7_0 -
      0.211699602597167534e0 * wr_5_4 - 0.344991944973161907e0 * wr_7_4;
  results[k++] =
      -0.474104655930760476e0 * wr_5_4 - 0.695353495365115364e-1 * wr_7_4;
  results[k++] =
      -0.402291140640906779e0 * wr_5_4 + 0.196675668757776647e0 * wr_7_4;
  results[k++] =
      0.534862186740501905e0 * wr_5_0 + 0.335887649103852612e0 * wr_7_0 -
      0.191784776293020855e0 * wr_5_4 - 0.515687954032344966e0 * wr_7_4;
  results[k++] =
      -0.151281871697789760e0 * wr_5_0 - 0.431833517087530482e0 * wr_7_0 +
      0.271224631690280130e0 * wr_5_4 - 0.132598708826359174e0 * wr_7_4;
  results[k++] =
      0.662993544131795872e0 * wr_5_4 + 0.298347094859308143e0 * wr_7_4;
  results[k++] =
      0.234403615469247712e0 * wr_5_4 - 0.351605423203871568e0 * wr_7_4;
  results[k++] =
      0.278318164225627959e0 * wr_5_0 + 0.536259232551796185e0 * wr_7_0 +
      0.554423053966497822e-1 * wr_5_4 + 0.457399019522360701e0 * wr_7_4;
  results[k++] =
      -0.492001653128331772e0 * wr_5_0 - 0.126397513270422949e0 * wr_7_0 -
      0.215619965608226192e0 * wr_5_4 + 0.323429948412339288e0 * wr_7_4;
  results[k++] = -0.509901951359278483e0 * wr_7_4;
  results[k++] =
      0.832050294337843681e0 * wr_5_4 + 0.194145068678830193e0 * wr_7_4;
  results[k++] =
      0.447213595499957940e0 * wr_7_0 - 0.228868854108531729e0 * wr_7_4;
  results[k++] =
      -0.511303116375689813e0 * wr_5_0 + 0.121626063852629974e0 * wr_7_0 +
      0.101854018789009561e0 * wr_5_4 - 0.211630016817164311e0 * wr_7_4;
  results[k++] =
      0.340466063963105051e0 * wr_4_0 - 0.110166345618213372e0 * wr_6_0 -
      0.189902897406215823e0 * wr_4_4 + 0.412204720856279095e0 * wr_6_4;
  results[k++] =
      0.750657112586154959e-1 * wr_4_0 - 0.291472753354582845e0 * wr_6_0 +
      0.125608959946864988e0 * wr_4_4 + 0.155798740090359142e0 * wr_6_4;
  results[k++] =
      -0.138605763491624455e-1 * wr_4_0 - 0.139930052456288247e0 * wr_6_0 +
      0.263555990179501549e0 * wr_8_0 - 0.316270641165486318e-1 * wr_4_4 -
      0.142791903928564369e0 * wr_6_4 - 0.700852248337196865e0 * wr_8_4;
  results[k++] =
      -0.537825434827237823e0 * wr_4_0 - 0.213094195881134284e-1 * wr_6_0 -
      0.128564869306645005e0 * wr_4_4 - 0.341710916613128265e-1 * wr_6_4;
  results[k++] =
      0.109457873024465230e0 * wr_4_0 + 0.338276548879659426e0 * wr_6_0 +
      0.166869582937427825e0 * wr_8_0 + 0.183158053898025103e0 * wr_4_4 -
      0.180816421126853421e0 * wr_6_4 + 0.443742228363446483e0 * wr_8_4;
  results[k++] =
      0.716569983633538350e-1 * wr_4_0 + 0.590543958502654657e-1 * wr_6_0 -
      0.458815496997884698e0 * wr_8_0 - 0.856464945029083251e-1 * wr_4_4 -
      0.126263609402638955e0 * wr_6_4 - 0.135565490034924922e0 * wr_8_4;
  results[k++] =
      0.845691372199148565e0 * wr_4_4 + 0.132467532467532468e0 * wr_6_4 +
      0.127485900820902909e-1 * wr_8_4 - 0.543873440542679096e0 * wr_8_8;
  results[k++] =
      0.639282587643402851e0 * wr_4_4 - 0.137441626548809901e0 * wr_6_4 -
      0.843239973097885591e-1 * wr_8_4 - 0.719476934184501439e0 * wr_8_8;
  results[k++] =
      0.195304056556208968e0 * wr_4_4 - 0.404894993977140145e0 * wr_6_4 +
      0.165609043102868009e0 * wr_8_4 - 0.471008215953605550e0 * wr_8_8;
  results[k++] =
      -0.318022846491564199e0 * wr_4_0 - 0.334165895254352779e0 * wr_6_0 -
      0.106662357163537151e0 * wr_8_0 + 0.380110004548677622e-1 * wr_4_4 +
      0.267928776511366336e0 * wr_6_4 + 0.283638223438202366e0 * wr_8_4;
  results[k++] =
      0.480805350316313718e0 * wr_4_0 + 0.693427337633158050e-1 * wr_6_0 +
      0.423303106960002068e0 * wr_8_0 - 0.143668077554775902e0 * wr_4_4 +
      0.166793626288677451e0 * wr_6_4 - 0.375218100764827600e0 * wr_8_4;
  results[k++] =
      -0.249675113572943705e0 * wr_6_0 - 0.327501829664994425e0 * wr_8_0 +
      0.131673968068709339e0 * wr_4_4 - 0.139523187395182039e0 * wr_6_4 -
      0.275412198737136099e0 * wr_8_4;
  results[k++] = -0.299659670905757585e0 * wr_6_4 -
                 0.118514211161779749e0 * wr_8_4 -
                 0.388922234131298635e0 * wr_8_8;
  results[k++] =
      0.670485234401511301e0 * wr_4_4 - 0.144149994031289434e0 * wr_6_4 +
      0.277379229996326295e0 * wr_8_4 - 0.514495755427526513e0 * wr_8_8;
  results[k++] =
      0.512091556499189153e0 * wr_4_4 + 0.235920806812791558e0 * wr_6_4 -
      0.250011542812296939e0 * wr_8_4 - 0.336816534854303887e0 * wr_8_8;
  results[k++] =
      -0.281284338563097254e0 * wr_6_0 - 0.368964027760854493e0 * wr_8_0 -
      0.125294002758147031e0 * wr_6_4 - 0.545086091859823194e0 * wr_8_4;
  results[k++] =
      0.469105170104850986e0 * wr_4_0 + 0.676553097759318853e-1 * wr_6_0 +
      0.413002217770133867e0 * wr_8_0 + 0.560687920095995213e-1 * wr_4_4 +
      0.120544280751235613e0 * wr_6_4 - 0.554677785454308102e-1 * wr_8_4;
  results[k++] =
      -0.358284991816769174e0 * wr_4_0 - 0.295271979251327329e0 * wr_6_0 -
      0.136552231249370446e-1 * wr_8_0 - 0.128469741754362488e0 * wr_4_4 +
      0.374845090414084396e0 * wr_6_4 + 0.205769047374439613e0 * wr_8_4;
  results[k++] = -0.354562104171167331e0 * wr_6_4 +
                 0.327198446709961882e0 * wr_8_4 -
                 0.153392997769474089e0 * wr_8_8;
  results[k++] =
      -0.309173471200421152e0 * wr_8_4 - 0.202919862478356945e0 * wr_8_8;
  results[k++] =
      0.605914900900173545e0 * wr_4_4 + 0.279145263119541259e0 * wr_6_4 +
      0.108985448819090718e0 * wr_8_4 - 0.132842232831014294e0 * wr_8_8;
  results[k++] =
      0.162399588588230031e0 * wr_6_0 - 0.497050121747708425e0 * wr_8_0 -
      0.434031157321571406e-1 * wr_6_4 + 0.440587842613505995e0 * wr_8_4;
  results[k++] =
      0.429668924423659729e0 * wr_6_0 + 0.939336436627724236e-1 * wr_8_0 -
      0.229667700705285825e0 * wr_6_4 + 0.249789827621529211e0 * wr_8_4;
  results[k++] =
      -0.620567809416043641e0 * wr_4_0 + 0.511426070114722280e-1 * wr_6_0 +
      0.993364690125377484e-1 * wr_8_0 + 0.741720399846028873e-1 * wr_4_4 -
      0.316652116061498859e0 * wr_6_4 - 0.978359652056092912e-2 * wr_8_4;
  results[k++] = -0.465242105199235432e0 * wr_3_0 +
                 0.259794366658821921e0 * wr_5_0 -
                 0.434719123404346598e0 * wr_5_4;
  results[k++] =
      0.456835370572369126e-1 * wr_3_0 + 0.345366138507265904e0 * wr_5_0 -
      0.120990228379671963e0 * wr_7_0 + 0.288954042607460303e0 * wr_5_4 +
      0.371512340495306106e0 * wr_7_4;
  results[k++] = 0.448935604234937374e-1 * wr_3_0 +
                 0.652680652680652681e-1 * wr_5_0 -
                 0.320110055361521334e0 * wr_7_0;
  results[k++] =
      0.993942733592589436e-3 * wr_3_0 - 0.305263423163375172e-1 * wr_5_0 -
      0.161040961778023747e0 * wr_7_0 + 0.295120339539477126e0 * wr_9_0 -
      0.364859576748217433e-1 * wr_5_4 - 0.154528761916892089e0 * wr_7_4 -
      0.703018721041995059e0 * wr_9_4;
  results[k++] =
      0.400871410767362210e0 * wr_3_0 + 0.108234841643299762e0 * wr_5_0 -
      0.108335198495312360e0 * wr_7_0 + 0.776192275553096950e-1 * wr_5_4 -
      0.332653832379898692e0 * wr_7_4;
  results[k++] =
      -0.432990611098036534e0 * wr_3_0 - 0.141958488509510299e0 * wr_5_0 -
      0.140418465991732959e0 * wr_7_0 + 0.305411124247982088e0 * wr_5_4 -
      0.107792161499287796e0 * wr_7_4;
  results[k++] =
      -0.226599325119155952e-1 * wr_3_0 + 0.198840100812768260e0 * wr_5_0 +
      0.237268385526413982e0 * wr_7_0 + 0.213592420378811656e0 * wr_9_0 -
      0.237659377174355643e0 * wr_5_4 - 0.227673689057786079e0 * wr_7_4 +
      0.508807595007832627e0 * wr_9_4;
  results[k++] =
      0.309535109355743416e-1 * wr_3_0 + 0.944751151737104187e-1 * wr_5_0 +
      0.175219146188059381e-1 * wr_7_0 - 0.456679804268174606e0 * wr_9_0;
  results[k++] =
      -0.316069770620506984e0 * wr_5_4 - 0.189641862372304191e-1 * wr_7_4;
  results[k++] =
      0.133746265344494108e0 * wr_7_4 + 0.182723748293351634e-1 * wr_9_4 -
      0.682788741998918871e-1 * wr_5_4 - 0.398656153327866381e0 * wr_9_8;
  results[k++] =
      0.418073217014932427e0 * wr_5_4 - 0.113854361932171140e-1 * wr_7_4 -
      0.870194873897588396e-1 * wr_9_4 - 0.632847024198701356e0 * wr_9_8;
  results[k++] =
      0.270370547767749843e0 * wr_5_4 - 0.383403612905947782e0 * wr_7_4 +
      0.144709825682299114e0 * wr_9_4 - 0.451027951007805363e0 * wr_9_8;
  results[k++] =
      0.356574791160334604e0 * wr_5_0 + 0.916057224828688940e-1 * wr_7_0 -
      0.127856517528680570e0 * wr_5_4 - 0.140642169281548627e0 * wr_7_4;
  results[k++] =
      -0.512065431378314098e0 * wr_3_0 - 0.256763195677673753e-1 * wr_5_0 -
      0.293661745379224895e0 * wr_7_0 - 0.170659255485854458e0 * wr_9_0 +
      0.460336075947121186e-1 * wr_5_4 - 0.901717137002302089e-1 * wr_7_4 +
      0.406534675694880934e0 * wr_9_4;
  results[k++] =
      0.348376573650864772e0 * wr_3_0 + 0.262027888044688036e0 * wr_5_0 +
      0.179989794867938280e-2 * wr_7_0 + 0.451521948947006356e0 * wr_9_0 +
      0.344501551057928738e0 * wr_5_4 + 0.101323985605273158e-1 * wr_7_4 -
      0.215117930242589876e0 * wr_9_4;
  results[k++] =
      0.413811358787223558e-1 * wr_3_0 - 0.726235987291246159e-1 * wr_5_0 -
      0.276118659659734563e0 * wr_7_0 - 0.263289418530098615e0 * wr_9_0 -
      0.182283786119128370e0 * wr_5_4 - 0.279169916136228112e0 * wr_7_4 -
      0.292690033716257400e0 * wr_9_4;
  results[k++] =
      -0.331496772065897936e0 * wr_5_4 + 0.193048120203081739e0 * wr_7_4 +
      0.282269079393350915e-1 * wr_9_4 + 0.615838425193063485e0 * wr_9_8;
  results[k++] =
      -0.631866065328911367e-1 * wr_7_4 - 0.139376206531551143e0 * wr_9_4 +
      0.179028718509858220e0 * wr_5_4 + 0.380103728170675335e0 * wr_9_8;
  results[k++] = 0.405998971470575075e-1 * wr_5_4 -
                 0.262705216833901520e0 * wr_7_4 +
                 0.248909477284390899e0 * wr_9_4;
  results[k++] =
      0.354458778479283313e0 * wr_5_4 + 0.223398389797867634e0 * wr_7_4 -
      0.198339644808714637e0 * wr_9_4 - 0.134386961871886331e0 * wr_9_8;
  results[k++] =
      -0.139159082112813980e0 * wr_5_0 + 0.346991268121750472e0 * wr_7_0 +
      0.141697953272994032e0 * wr_9_0 - 0.277211526983248911e-1 * wr_5_4 +
      0.295964071455645161e0 * wr_7_4 + 0.337544725110088003e0 * wr_9_4;
  results[k++] =
      -0.375772469583997849e0 * wr_5_0 - 0.227147518516038611e-1 * wr_7_0 -
      0.437289377455898899e0 * wr_9_0 - 0.164682468957245243e0 * wr_5_4 +
      0.581232243378512625e-1 * wr_7_4 - 0.416674254772160173e0 * wr_9_4;
  results[k++] =
      0.604264866984415872e0 * wr_3_0 - 0.946857622917944096e-2 * wr_5_0 +
      0.183414705916800282e0 * wr_7_0 + 0.320388630568217483e0 * wr_9_0 -
      0.916686169101086052e-1 * wr_5_4 - 0.299570643497086945e-1 * wr_7_4 -
      0.228963417753524682e0 * wr_9_4;
  results[k++] =
      -0.242244868191451369e0 * wr_3_0 - 0.318853513711272663e0 * wr_5_0 -
      0.182519943945895189e0 * wr_7_0 + 0.261639471195308369e-1 * wr_9_0 +
      0.385337317794226212e0 * wr_5_4 + 0.242859654071991309e0 * wr_7_4 +
      0.103121616883335967e0 * wr_9_4;
  results[k++] = 0.269948091896088609e0 * wr_7_4 -
                 0.166992639399314377e0 * wr_9_4 +
                 0.520478465277226876e0 * wr_9_8;
  results[k++] =
      -0.314006284596402196e0 * wr_7_4 + 0.288596265197249231e0 * wr_9_4 -
      0.211829636434080846e0 * wr_5_4 + 0.449744796342264869e0 * wr_9_8;
  results[k++] =
      0.336269122990682980e0 * wr_5_4 + 0.282579094950153764e-1 * wr_7_4 -
      0.229066184104189929e0 * wr_9_4 + 0.203985065925775640e0 * wr_9_8;
  results[k++] =
      -0.599144689515278081e-1 * wr_5_4 + 0.158597123695220669e0 * wr_7_4 +
      0.772544566838754720e-1 * wr_9_4 + 0.318017595296978264e-1 * wr_9_8;
  results[k++] =
      -0.236760138794095381e0 * wr_7_0 + 0.409046757328910587e0 * wr_9_0 +
      0.121165863939810915e0 * wr_7_4 - 0.584644613717542616e0 * wr_9_4;
  results[k++] =
      0.130171401881022971e0 * wr_5_0 - 0.196715521441485592e0 * wr_7_0 -
      0.353456795703097936e0 * wr_9_0 - 0.259307639408939264e-1 * wr_5_4 +
      0.342286084019799829e0 * wr_7_4;
  results[k++] =
      0.344401157189832241e0 * wr_5_0 + 0.252795026540845899e0 * wr_7_0 -
      0.178376517003168941e0 * wr_5_4 + 0.296794540896028994e0 * wr_7_4 +
      0.190944131263273864e0 * wr_9_4;
  results[k++] =
      -0.699300699300699301e0 * wr_3_0 - 0.613633873244204340e-1 * wr_5_0 +
      0.103691891749323785e0 * wr_7_0 + 0.755288095626213116e-1 * wr_9_0 -
      0.359382052869492489e0 * wr_5_4 + 0.906005175301241569e-2 * wr_7_4 +
      0.412181261078285615e-1 * wr_9_4;
  results[k++] =
      0.520156486610299385e0 * wr_2_0 - 0.380652631526647173e0 * wr_4_0 +
      0.328452583513414926e-1 * wr_6_0 + 0.212317893862233537e0 * wr_4_4 -
      0.122895703530795384e0 * wr_6_4;
  results[k++] =
      -0.311399577664609188e0 * wr_2_0 - 0.237378621757769779e0 * wr_4_0 +
      0.245791407061590766e0 * wr_6_0 - 0.397210407956955894e0 * wr_4_4 -
      0.131381033405365970e0 * wr_6_4;
  results[k++] =
      -0.335267803528667734e-1 * wr_2_0 + 0.118939869128777799e0 * wr_4_0 +
      0.320203368307785951e0 * wr_6_0 - 0.123360926796523691e0 * wr_8_0 +
      0.271397001985207381e0 * wr_4_4 + 0.326752172263288437e0 * wr_6_4 +
      0.328043323331105856e0 * wr_8_4;
  results[k++] =
      0.132403469318985298e-1 * wr_2_0 + 0.683222671970905181e-1 * wr_4_0 +
      0.459833616918780896e-1 * wr_6_0 - 0.334062968975481275e0 * wr_8_0 -
      0.816607284085513604e-1 * wr_4_4 - 0.983165628246363069e-1 * wr_6_4 -
      0.987050576713450267e-1 * wr_8_4;
  results[k++] =
      -0.871228494774333851e-1 * wr_8_4 - 0.146079151850935249e-1 * wr_4_4 +
      0.312324262839643634e-1 * wr_10_4 + 0.727420095628727815e-1 * wr_6_4 -
      0.446088273913344057e0 * wr_10_8 + 0.247785852344253789e0 * wr_8_8;
  results[k++] =
      -0.122834301726547477e-2 * wr_2_0 + 0.448557521562240274e-1 * wr_6_0 +
      0.172290667676668712e0 * wr_8_0 - 0.318273831017521987e0 * wr_10_0 -
      0.984865440866476003e-2 * wr_4_4 + 0.250662447862119868e-1 * wr_6_4 +
      0.144887592399891950e0 * wr_8_4 + 0.694877617666389993e0 * wr_10_4;
  results[k++] =
      -0.400871410767362210e0 * wr_4_0 + 0.228716691648418537e0 * wr_6_0 -
      0.958265957626781617e-1 * wr_4_4 + 0.366762642336344164e0 * wr_6_4;
  results[k++] =
      0.603707553304872419e0 * wr_2_0 - 0.576893644324689122e-1 * wr_4_0 +
      0.213944874696200762e0 * wr_6_0 - 0.129523406960775906e0 * wr_8_0 -
      0.965327703536067886e-1 * wr_4_4 - 0.114358345824209268e0 * wr_6_4 -
      0.344430687835733448e0 * wr_8_4;
  results[k++] =
      -0.278047285569869126e0 * wr_2_0 - 0.307450202386907331e0 * wr_4_0 -
      0.365990021629233774e-1 * wr_6_0 - 0.202823945449399346e0 * wr_8_0 +
      0.367473277838481122e0 * wr_4_4 + 0.782519581665472645e-1 * wr_6_4 -
      0.599280707290309089e-1 * wr_8_4;
  results[k++] =
      -0.496454247532834913e-1 * wr_2_0 + 0.308362623667201700e-1 * wr_4_0 +
      0.226025907040790084e0 * wr_6_0 + 0.173447318127443085e0 * wr_8_0 +
      0.247494756975786228e0 * wr_10_0 - 0.257994680899518128e0 * wr_4_4 -
      0.281903834893817475e0 * wr_6_4 - 0.189919818770640232e0 * wr_8_4 +
      0.540347808559820062e0 * wr_10_4;
  results[k++] =
      0.235929791691995611e0 * wr_8_4 + 0.395584213251215398e-1 * wr_4_4 -
      0.845778102002960278e-1 * wr_10_4 - 0.196986293106391589e0 * wr_6_4 -
      0.517719752732824705e0 * wr_10_8 + 0.287574540081453314e0 * wr_8_8;
  results[k++] =
      -0.855351929685525390e-2 * wr_2_0 - 0.531284738739570857e-1 * wr_4_0 -
      0.993845054143626238e-1 * wr_6_0 + 0.153812747358860231e-1 * wr_8_0 +
      0.451465985557882699e0 * wr_10_0 - 0.622306585055398250e-1 * wr_4_4 -
      0.796848790316838609e-1 * wr_6_4 - 0.954382998658348777e-1 * wr_8_4 -
      0.896065468641856474e-1 * wr_10_4;
  results[k++] =
      -0.252136452829649601e0 * wr_4_4 + 0.139391250545441436e0 * wr_6_4 -
      0.116618375621591651e-1 * wr_8_4 + 0.497510993540503870e0 * wr_8_8;
  results[k++] =
      0.498658631208377158e0 * wr_4_4 - 0.162985719454690042e0 * wr_6_4 -
      0.363621672148422108e-1 * wr_8_4 - 0.310252613997011490e0 * wr_8_8;
  results[k++] =
      -0.160144995850655517e0 * wr_4_4 - 0.210057830664865211e0 * wr_6_4 +
      0.114460081801248007e0 * wr_8_4 + 0.212339668105043303e-1 * wr_10_4 -
      0.325535598280236291e0 * wr_8_8 - 0.303281708462541945e0 * wr_10_8;
  results[k++] =
      -0.231965536603277633e0 * wr_4_4 + 0.286981986417085309e0 * wr_6_4 +
      0.501254421531402710e-1 * wr_8_4 - 0.862527809256512655e-1 * wr_10_4 +
      0.610978413119917032e-1 * wr_8_8 - 0.527972624351420935e0 * wr_10_8;
  results[k++] =
      0.630990297665718993e-2 * wr_10_0 - 0.433534931231454830e-1 * wr_8_0 -
      0.161727123635149348e0 * wr_4_0 + 0.904082105634267101e-1 * wr_2_0 +
      0.120053178185260152e0 * wr_6_0;
  results[k++] =
      0.362721347067557617e0 * wr_8_4 + 0.608176007277884196e-1 * wr_4_4 -
      0.130030959752321981e0 * wr_10_4 - 0.302849136079745109e0 * wr_6_4 +
      0.397974339671118575e0 * wr_10_8 - 0.221060307417329422e0 * wr_8_8;
  results[k++] =
      0.948160937537490723e-1 * wr_4_0 - 0.351631838847438675e0 * wr_6_0 +
      0.975699332419216599e-1 * wr_8_0 - 0.113326907879812991e-1 * wr_4_4 +
      0.281932685838947803e0 * wr_6_4 - 0.259459506255720522e0 * wr_8_4;
  results[k++] =
      0.375041871154695254e0 * wr_4_0 + 0.822303667030264425e-1 * wr_6_0 +
      0.182536630720838256e0 * wr_8_0 - 0.112065193525598813e0 * wr_4_4 +
      0.197792909351684255e0 * wr_6_4 - 0.161801429691739392e0 * wr_8_4;
  results[k++] =
      -0.657651226514319959e0 * wr_2_0 - 0.129530405434198686e0 * wr_6_0 -
      0.226351686545458180e0 * wr_8_0 - 0.216384596669903620e0 * wr_10_0 -
      0.107969734176688425e0 * wr_4_4 - 0.723840465000515509e-1 * wr_6_4 -
      0.190350129472901016e0 * wr_8_4 + 0.472425937605305202e0 * wr_10_4;
  results[k++] =
      0.218072809022786879e0 * wr_2_0 + 0.311538593762318381e0 * wr_4_0 +
      0.144789580701886513e0 * wr_6_0 + 0.326789250092560584e-2 * wr_8_0 +
      0.460406774016608452e0 * wr_10_0 + 0.364912643372997831e0 * wr_4_4 +
      0.116089929463096154e0 * wr_6_4 - 0.202767397233338208e-1 * wr_8_4 -
      0.913811062012297958e-1 * wr_10_4;
  results[k++] =
      0.362721347067557617e0 * wr_8_4 + 0.608176007277884196e-1 * wr_4_4 -
      0.130030959752321981e0 * wr_10_4 - 0.302849136079745109e0 * wr_6_4 +
      0.397974339671118575e0 * wr_10_8 - 0.221060307417329422e0 * wr_8_8;
  results[k++] =
      -0.410946411651939592e-1 * wr_2_0 - 0.179696804039054832e-1 * wr_4_0 +
      0.120053178185260152e0 * wr_6_0 + 0.279827091976666300e0 * wr_8_0 +
      0.220846604183001648e0 * wr_10_0 + 0.191348350881423514e0 * wr_4_4 +
      0.245017015070491006e0 * wr_6_4 + 0.293456018766515091e0 * wr_8_4 +
      0.275524401997362092e0 * wr_10_4;
  results[k++] = 0.167514848565122484e0 * wr_6_4 -
                 0.883352774858346146e-1 * wr_8_4 -
                 0.289885517826224207e0 * wr_8_8;
  results[k++] =
      -0.169620838257652680e0 * wr_4_4 - 0.335178166057758673e0 * wr_6_4 +
      0.153885989896857798e0 * wr_8_4 + 0.384636766083875966e-1 * wr_10_4 -
      0.285434812919284437e0 * wr_8_8 + 0.549371187194835623e0 * wr_10_8;
  results[k++] =
      0.468729735734901522e0 * wr_4_4 + 0.154812791814788879e0 * wr_6_4 +
      0.451661026644185481e-1 * wr_8_4 - 0.144251274947576315e0 * wr_10_4 +
      0.608479513432887553e-1 * wr_8_8 + 0.542189555665353954e0 * wr_10_8;
  results[k++] =
      -0.317331531208767055e0 * wr_4_4 - 0.627060930457677747e-2 * wr_6_4 -
      0.297908041075709449e0 * wr_8_4 + 0.226156699535261804e0 * wr_10_4 +
      0.363119753908638743e0 * wr_8_8 + 0.209750893943706778e0 * wr_10_8;
  results[k++] =
      -0.165447051825330951e-1 * wr_10_0 + 0.113673817966597000e0 * wr_8_0 +
      0.424052095644131702e0 * wr_4_0 - 0.237052327965380238e0 * wr_2_0 -
      0.314782088829121660e0 * wr_6_0;
  results[k++] =
      0.287037169955027743e0 * wr_4_4 - 0.264692377984269127e0 * wr_6_4 -
      0.211347421235917155e0 * wr_8_4 + 0.167372535016176732e0 * wr_10_4 -
      0.322013897775706780e0 * wr_8_8 + 0.189726822178064782e-1 * wr_10_8;
  results[k++] =
      0.157242725508287744e0 * wr_6_0 - 0.275009549108463388e0 * wr_8_0 +
      0.700414768350657259e-1 * wr_6_4 - 0.406283184996086474e0 * wr_8_4;
  results[k++] =
      -0.118675263975364620e0 * wr_4_0 + 0.157312407864853502e0 * wr_6_0 +
      0.229127664360436909e0 * wr_8_0 + 0.210674233229976881e0 * wr_10_0 -
      0.141844070723667118e-1 * wr_4_4 + 0.280290063294630560e0 * wr_6_4 -
      0.307727222725232938e-1 * wr_8_4 + 0.459958674021428922e0 * wr_10_4;
  results[k++] =
      -0.327946882546034487e0 * wr_4_0 - 0.193759423215476704e0 * wr_6_0 +
      0.246689893846018665e-2 * wr_8_0 - 0.457424447165442821e0 * wr_10_0 -
      0.117591448908313959e0 * wr_4_4 + 0.245975824383815851e0 * wr_6_4 -
      0.371734273319176691e-1 * wr_8_4 - 0.272367530265462320e0 * wr_10_4;
  results[k++] =
      0.709220353618335590e0 * wr_2_0 + 0.634345968686814926e-1 * wr_4_0 +
      0.176582739875617253e-1 * wr_6_0 + 0.228854100307042959e0 * wr_8_0 +
      0.258632021039696609e0 * wr_10_0 - 0.185756170247653052e0 * wr_4_4 -
      0.152068660936025052e-1 * wr_6_4 - 0.174386253346498361e0 * wr_8_4 -
      0.278279121408307333e0 * wr_10_4;
  results[k++] =
      0.353894687537993417e0 * wr_8_4 + 0.593376319876823097e-1 * wr_4_4 -
      0.126866715300444042e0 * wr_10_4 - 0.295479439659587382e0 * wr_6_4 -
      0.215716563638676960e0 * wr_10_8 + 0.119822725033938880e0 * wr_8_8;
  results[k++] =
      0.147013612914699677e0 * wr_2_0 + 0.272549070973399850e0 * wr_4_0 +
      0.266208496645614171e0 * wr_6_0 + 0.117495848676907121e0 * wr_8_0 -
      0.430944804396160758e-1 * wr_10_0 - 0.336045555929915055e0 * wr_4_4 -
      0.177077508959297469e0 * wr_6_4 - 0.972056757892762642e-1 * wr_8_4 -
      0.391010386316446461e-1 * wr_10_4;
  results[k++] =
      0.349775720811217009e-1 * wr_6_4 - 0.115521784575129029e0 * wr_8_4 +
      0.579203929841167399e-1 * wr_10_4 + 0.541574479397396329e-1 * wr_8_8 -
      0.827268682098290243e0 * wr_10_8;
  results[k++] =
      0.308744956134885351e0 * wr_8_4 - 0.184210526315789474e0 * wr_10_4 +
      0.202638615132551970e0 * wr_8_8 - 0.154767798760990557e0 * wr_10_8;
  results[k++] =
      -0.924347504439625511e-1 * wr_4_4 - 0.211358037189388202e0 * wr_6_4 -
      0.295333242312722829e0 * wr_8_4 + 0.256234500647025823e0 * wr_10_4 +
      0.359981334785059727e0 * wr_8_8 + 0.189403308067174280e0 * wr_10_8;
  results[k++] =
      0.375471731264846329e0 * wr_4_4 + 0.333876824410707144e0 * wr_6_4 +
      0.444314556058188572e-1 * wr_8_4 - 0.186503665408855902e0 * wr_10_4 +
      0.379102135578177431e0 * wr_8_8 + 0.181999110061623854e0 * wr_10_8;
  results[k++] =
      0.195759591695454972e-1 * wr_10_0 - 0.134500675267986083e0 * wr_8_0 -
      0.501745206004254461e0 * wr_4_0 + 0.280484097002537153e0 * wr_2_0 +
      0.372455190360766827e0 * wr_6_0;
  results[k++] =
      0.566044932723022720e0 * wr_4_4 + 0.134223533668568270e0 * wr_6_4 -
      0.107172703370061253e0 * wr_8_4 - 0.611227944848972673e-1 * wr_10_4 -
      0.228607189260955834e0 * wr_8_8 - 0.623577231666324955e-1 * wr_10_8;
  results[k++] =
      -0.160207288059388875e-1 * wr_6_0 + 0.175490188492487779e0 * wr_8_0 -
      0.216718266253869969e0 * wr_10_0 + 0.428171987701737888e-2 * wr_6_4 -
      0.155555426233228107e0 * wr_8_4 + 0.473154428304188661e0 * wr_10_4;
  results[k++] =
      -0.119888156556486609e0 * wr_6_0 - 0.938034514398954603e-1 * wr_8_0 +
      0.445987025977698896e0 * wr_10_0 + 0.640829152237555501e-1 * wr_6_4 -
      0.249443618407854379e0 * wr_8_4 - 0.442595440437292192e0 * wr_10_4;
  results[k++] =
      0.946701104589257973e-1 * wr_4_0 - 0.387232113985899573e-1 * wr_6_0 -
      0.269186040808698661e0 * wr_8_0 - 0.264094127704884160e0 * wr_10_0 -
      0.113152424469355316e-1 * wr_4_4 + 0.239756781020367583e0 * wr_6_4 +
      0.265119914007327542e-1 * wr_8_4 - 0.157251466917278213e0 * wr_10_4;
  results[k++] =
      0.256367871046480560e0 * wr_4_0 + 0.295655267964144924e0 * wr_6_0 +
      0.148491697955181967e0 * wr_8_0 - 0.340557275541795666e-1 * wr_10_0 -
      0.107246374896116442e0 * wr_4_4 + 0.324242968868679692e0 * wr_6_4 +
      0.251281842376753095e0 * wr_8_4 + 0.114908932588160103e0 * wr_10_4;
  results[k++] =
      0.204321193114838996e0 * wr_8_4 + 0.342585978011633300e-1 * wr_4_4 -
      0.732465322299149812e-1 * wr_10_4 - 0.170595134027462558e0 * wr_6_4 +
      0.747264096512707082e-1 * wr_10_8 - 0.415078095320274734e-1 * wr_8_8;
  results[k++] =
      0.763905140917571708e0 * wr_2_0 + 0.179441371352664269e0 * wr_4_0 -
      0.430347532156950600e-1 * wr_6_0 - 0.105824565385150343e0 * wr_8_0 -
      0.596344776546398402e-1 * wr_10_0 + 0.323359986960189828e0 * wr_4_4 -
      0.920121727185708854e-1 * wr_6_4 - 0.101019101550656651e0 * wr_8_4 -
      0.501666559546088729e-1 * wr_10_4;
  results[k++] =
      -0.263722808834143599e0 * wr_5_0 + 0.738548945875996396e0 * wr_1_0 -
      0.119652500718920105e0 * wr_3_0 + 0.323359986960189828e-1 * wr_7_0 -
      0.220646332236815517e0 * wr_5_4 - 0.992908495065669826e-1 * wr_7_4;
  results[k++] =
      -0.147709789175199279e0 * wr_1_0 - 0.311096501869192273e0 * wr_3_0 -
      0.131861404417071800e0 * wr_5_0 + 0.226351990872132880e0 * wr_7_0;
  results[k++] =
      -0.326806194281060772e-1 * wr_1_0 + 0.296272278655605244e0 * wr_7_0 -
      0.123396012965233729e0 * wr_9_0 - 0.179201689916475852e-1 * wr_3_0 +
      0.160458004814036892e0 * wr_5_0 + 0.191783997950452755e0 * wr_5_4 +
      0.284291573432435847e0 * wr_7_4 + 0.293946894178386093e0 * wr_9_4;
  results[k++] =
      -0.128836275285942120e0 * wr_5_4 + 0.176834103333646047e0 * wr_7_4 -
      0.658223546325246538e-1 * wr_9_4 + 0.478691411595779953e0 * wr_9_8;
  results[k++] =
      0.807482893971504563e-1 * wr_5_0 + 0.279553048688995485e-1 * wr_7_0 +
      0.257659405019210233e-1 * wr_3_0 - 0.341535427746684972e0 * wr_9_0 -
      0.106163932206516034e0 * wr_5_4 - 0.157372417153188473e0 * wr_7_4 -
      0.162717215614267848e0 * wr_9_4;
  results[k++] =
      0.798855049325565187e-2 * wr_5_4 + 0.809366299974585781e-1 * wr_7_4 -
      0.138765707729408898e0 * wr_9_4 + 0.571461751818019891e-1 * wr_11_4 -
      0.601374529598321008e0 * wr_11_8;
  results[k++] =
      0.186306381595161785e-2 * wr_5_0 + 0.565080829676353468e-1 * wr_7_0 -
      0.252655833471857635e-2 * wr_3_0 + 0.178614954939856954e0 * wr_9_0 -
      0.336005070491934008e0 * wr_11_0 - 0.180369761081127553e-1 * wr_5_4 +
      0.922944683894658532e-2 * wr_7_4 + 0.127645885786867128e0 * wr_9_4 +
      0.683368863294938127e0 * wr_11_4;
  results[k++] =
      -0.324020503683746263e0 * wr_3_0 + 0.225170481650328473e0 * wr_7_0 -
      0.178541185595587526e0 * wr_5_0 + 0.384115559342990315e0 * wr_5_4 +
      0.172852001704345641e0 * wr_7_4;
  results[k++] =
      0.763636363636363636e0 * wr_1_0 + 0.448643774331340979e-1 * wr_3_0 +
      0.229585589133668247e0 * wr_7_0 - 0.137302408054459497e0 * wr_9_0 -
      0.220301570799656210e0 * wr_7_4 - 0.327073909772051813e0 * wr_9_4;
  results[k++] =
      -0.537260573666773196e-2 * wr_7_0 - 0.132749303660612933e0 * wr_1_0 -
      0.238684273406789452e0 * wr_9_0 - 0.217261165573416252e0 * wr_5_0 -
      0.301814741509969834e0 * wr_3_0;
  results[k++] =
      0.263377958567515805e0 * wr_5_4 - 0.321346313084768088e0 * wr_7_4 +
      0.721479105365822704e-1 * wr_9_4 + 0.249678881357614818e-1 * wr_11_4 +
      0.224868795918876776e0 * wr_9_8 + 0.262748153046794894e0 * wr_11_8;
  results[k++] =
      0.707453357439431308e-1 * wr_5_0 - 0.342585978011633300e-1 * wr_1_0 -
      0.473469799192173735e-1 * wr_3_0 + 0.131268083032884771e0 * wr_9_0 +
      0.273133552636142922e0 * wr_11_0 + 0.231426387933724954e0 * wr_7_0 -
      0.177569383442068629e0 * wr_5_4 - 0.233983771291606222e0 * wr_7_4 -
      0.145926334082322183e0 * wr_9_4 + 0.555500442655224162e0 * wr_11_4;
  results[k++] =
      -0.757158395053462036e-1 * wr_5_4 - 0.119551325534757163e0 * wr_7_4 +
      0.308675864206247160e0 * wr_9_4 - 0.138961494977010917e0 * wr_11_4 -
      0.209146344059772490e0 * wr_9_8 - 0.531764873363444347e0 * wr_11_8;
  results[k++] =
      -0.175935916652629643e-1 * wr_3_0 - 0.681102089598535469e-1 * wr_5_0 +
      0.407189344115074334e-1 * wr_9_0 + 0.445668260706756727e0 * wr_11_0 -
      0.976752842981754781e-1 * wr_7_0 - 0.823117955625224985e-1 * wr_5_4 -
      0.129965992993456577e0 * wr_7_4 - 0.160488107360020148e0 * wr_9_4 -
      0.151067071835115614e0 * wr_11_4;
  results[k++] =
      -0.291972747440724761e0 * wr_5_4 + 0.144912944501830304e0 * wr_7_4 -
      0.124307211371062092e-1 * wr_9_4 + 0.271206316524017495e0 * wr_9_8;
  results[k++] =
      0.394163209044978428e0 * wr_5_4 - 0.805071913899057247e-1 * wr_7_4 -
      0.447505960935823530e-1 * wr_9_4 - 0.325447579828820995e0 * wr_9_8;
  results[k++] =
      -0.731484503950657077e-2 * wr_5_4 - 0.247494756975786228e0 * wr_7_4 +
      0.963777611274434379e-1 * wr_9_4 + 0.228834474650633689e-1 * wr_11_4 -
      0.300387785826402646e0 * wr_9_8 - 0.240812660009355906e0 * wr_11_8;
  results[k++] =
      -0.310374353304814871e0 * wr_1_0 + 0.410890701806659079e0 * wr_3_0 -
      0.219083270778031670e0 * wr_5_0 + 0.421137950100842420e-1 * wr_7_0 +
      0.628742512802323114e-2 * wr_9_0 - 0.279945909419432332e-2 * wr_11_0;
  results[k++] =
      -0.247159262877419851e0 * wr_5_4 + 0.203428956567641199e0 * wr_7_4 +
      0.848220023506320313e-1 * wr_9_4 - 0.844490604462906040e-1 * wr_11_4 +
      0.132185543518571241e0 * wr_9_8 - 0.444347446170646499e0 * wr_11_8;
  results[k++] =
      -0.130865317832669849e-1 * wr_1_0 + 0.119940044962532783e0 * wr_3_0 -
      0.221107063690847701e0 * wr_5_0 + 0.177567350860399954e0 * wr_7_0 -
      0.688243293080625331e-1 * wr_9_0 + 0.106232003449510985e-1 * wr_11_0;
  results[k++] =
      0.928185690621485557e-1 * wr_5_4 - 0.319165605897914332e0 * wr_7_4 +
      0.345495391110441314e0 * wr_9_4 - 0.119245128125597280e0 * wr_11_4 -
      0.299119822107720273e0 * wr_9_8 + 0.348574815206037854e0 * wr_11_8;
  results[k++] =
      -0.109796560886748679e0 * wr_5_0 - 0.318180011238737021e0 * wr_7_0 +
      0.766389361531301494e-1 * wr_3_0 + 0.116099720710907020e0 * wr_9_0 +
      0.196847986167551552e0 * wr_5_4 - 0.977002872522774245e-1 * wr_7_4 -
      0.276566085871545443e0 * wr_9_4;
  results[k++] =
      0.295607325162073433e0 * wr_3_0 + 0.247042261995184527e0 * wr_5_0 +
      0.127272004495494808e-1 * wr_7_0 + 0.232199441421814040e0 * wr_9_0 +
      0.324799177176460061e0 * wr_5_4 + 0.716468773183367779e-1 * wr_7_4 -
      0.110626434348618177e0 * wr_9_4;
  results[k++] =
      -0.784963088134393298e0 * wr_1_0 - 0.175352603507290527e0 * wr_9_0 -
      0.250331035957466032e0 * wr_11_0 - 0.118001836870673692e0 * wr_3_0 +
      0.196482337037384497e-2 * wr_5_0 - 0.178240158070001589e0 * wr_7_0 +
      0.493166751957525863e-2 * wr_5_4 - 0.180209805602524488e0 * wr_7_4 -
      0.194933619889912696e0 * wr_9_4 + 0.509124565409808122e0 * wr_11_4;
  results[k++] =
      0.247159262877419851e0 * wr_5_4 - 0.203428956567641199e0 * wr_7_4 -
      0.848220023506320313e-1 * wr_9_4 + 0.844490604462906040e-1 * wr_11_4 +
      0.132185543518571241e0 * wr_9_8 - 0.444347446170646499e0 * wr_11_8;
  results[k++] =
      0.258916592737673792e0 * wr_5_0 + 0.261475901149692141e0 * wr_3_0 +
      0.188622753840696934e-1 * wr_9_0 + 0.461910750542063348e0 * wr_11_0 +
      0.103458117768271624e0 * wr_1_0 + 0.829514144138022951e-1 * wr_7_0;
  results[k++] =
      -0.216183421308773025e0 * wr_5_4 + 0.350763253316200641e0 * wr_9_4 -
      0.184508224296682319e0 * wr_11_4 + 0.353698561840455567e0 * wr_9_8 +
      0.255481818614237617e0 * wr_11_8;
  results[k++] =
      -0.243477674464614196e-1 * wr_1_0 + 0.150167176606899301e0 * wr_7_0 +
      0.276016973214521420e0 * wr_9_0 + 0.191058646114729597e0 * wr_11_0 -
      0.473350552294628986e-1 * wr_3_0 + 0.747953344382550124e-2 * wr_5_0 +
      0.136281558146268408e0 * wr_5_4 + 0.215181407599371170e0 * wr_7_4 +
      0.265716100414258587e0 * wr_9_4 + 0.250117930165255807e0 * wr_11_4;
  results[k++] =
      -0.382779501175476375e-1 * wr_5_4 + 0.211091636677652413e0 * wr_7_4 -
      0.104299602541861758e0 * wr_9_4 + 0.284443584450024328e0 * wr_9_8;
  results[k++] =
      -0.878141208579034039e-1 * wr_5_4 - 0.317748463630571527e0 * wr_7_4 +
      0.117337052859594478e0 * wr_9_4 + 0.439286142988721383e-1 * wr_11_4 +
      0.462280278178667885e0 * wr_11_8;
  results[k++] =
      0.306874968017121328e0 * wr_5_4 + 0.118971733371299387e0 * wr_7_4 +
      0.104254821464471527e0 * wr_9_4 - 0.144002173067971717e0 * wr_11_4 +
      0.706388716719667117e-1 * wr_9_8 + 0.551054069605533566e0 * wr_11_8;
  results[k++] =
      0.434031157321571408e0 * wr_1_0 - 0.497245158098846904e0 * wr_3_0 +
      0.146665833751951160e0 * wr_5_0 + 0.736155347276672159e-1 * wr_7_0 -
      0.608705271367210399e-1 * wr_9_0 + 0.120113078239693802e-1 * wr_11_0;
  results[k++] =
      -0.143399858875304483e0 * wr_5_4 - 0.310226693731792524e0 * wr_9_4 +
      0.208617460475056053e0 * wr_11_4 + 0.312822778270161966e0 * wr_9_8 +
      0.288864999920816636e0 * wr_11_8;
  results[k++] =
      -0.205879054892254885e0 * wr_1_0 + 0.524142418360959148e-1 * wr_3_0 +
      0.309198726389176418e0 * wr_5_0 - 0.349189141365977335e0 * wr_7_0 +
      0.152387527267308122e0 * wr_9_0 - 0.249000259296388702e-1 * wr_11_0;
  results[k++] =
      0.324496455022912301e0 * wr_5_4 - 0.209214819685825037e0 * wr_7_4 -
      0.201310346221465539e0 * wr_9_4 + 0.146857034464341083e0 * wr_11_4 -
      0.313719516089658735e0 * wr_9_8 - 0.415441307315190897e-1 * wr_11_8;
  results[k++] =
      -0.327237405863128469e0 * wr_9_0 + 0.758846598699023653e-1 * wr_7_0 +
      0.803435335180143866e-1 * wr_5_0 + 0.352105929397741122e-1 * wr_5_4 -
      0.194176064006107236e0 * wr_7_4 - 0.311810460649356062e0 * wr_9_4;
  results[k++] =
      -0.854559570154935197e-1 * wr_3_0 + 0.204797242300820986e-1 * wr_5_0 +
      0.221844627657944236e0 * wr_7_0 + 0.151032648859905447e0 * wr_9_0 +
      0.258289152286185931e0 * wr_11_0 + 0.198271413719690589e0 * wr_5_4 -
      0.362338109867855608e-1 * wr_7_4 - 0.107934390224777098e0 * wr_9_4 +
      0.525309823869045433e0 * wr_11_4;
  results[k++] =
      -0.276049480963870062e0 * wr_5_0 - 0.245116155943289693e0 * wr_3_0 -
      0.972017485252385716e-1 * wr_7_0 - 0.137527605153435827e-1 * wr_9_0 -
      0.461834395346807912e0 * wr_11_0 + 0.333608262098149001e0 * wr_5_4 +
      0.129335909882975999e0 * wr_7_4 - 0.542046234259841245e-1 * wr_9_4 -
      0.156546866647274509e0 * wr_11_4;
  results[k++] =
      0.615688734313673312e-1 * wr_5_4 + 0.132319070093728036e0 * wr_7_4 -
      0.305567621096113146e0 * wr_9_4 + 0.134826595933112001e0 * wr_11_4 -
      0.264551524610443266e0 * wr_9_8 + 0.394122229570192342e0 * wr_11_8;
  results[k++] =
      -0.496136120801679098e-2 * wr_5_0 + 0.807524091027421351e0 * wr_1_0 +
      0.196240772033598325e0 * wr_3_0 + 0.244118596245905099e0 * wr_9_0 +
      0.216023809812222130e0 * wr_11_0 + 0.622560225790149626e-1 * wr_7_0 +
      0.903989588432349383e-1 * wr_5_4 - 0.892094988584555313e-1 * wr_7_4 -
      0.235008161554798601e0 * wr_9_4 - 0.282800225351750482e0 * wr_11_4;
  results[k++] =
      -0.324496455022912301e0 * wr_5_4 + 0.209214819685825037e0 * wr_7_4 +
      0.201310346221465539e0 * wr_9_4 - 0.146857034464341083e0 * wr_11_4 -
      0.313719516089658735e0 * wr_9_8 - 0.415441307315190897e-1 * wr_11_8;
  results[k++] =
      0.686263516307516284e-1 * wr_1_0 + 0.197561373074515371e0 * wr_3_0 +
      0.270278606983545821e0 * wr_5_0 + 0.771191939611883210e-1 * wr_9_0 -
      0.510661548726492083e-1 * wr_11_0 + 0.223839193183318804e0 * wr_7_0;
  results[k++] =
      0.133209062840540677e-1 * wr_5_4 + 0.552116510457504119e-1 * wr_7_4 -
      0.154261192495808418e0 * wr_9_4 + 0.742529105580394775e-1 * wr_11_4 -
      0.240398705628168177e0 * wr_9_8 - 0.781396287959566761e0 * wr_11_8;
  results[k++] =
      -0.559478063930270841e-1 * wr_5_4 - 0.131456312013691457e-1 * wr_7_4 +
      0.323948504241197678e0 * wr_9_4 - 0.185632276395098694e0 * wr_11_4 -
      0.288478446753801813e0 * wr_9_8 - 0.390698143979783380e0 * wr_11_8;
  results[k++] =
      0.259356684889347535e-1 * wr_5_4 - 0.191958072697707880e0 * wr_7_4 -
      0.284255057413050912e0 * wr_9_4 + 0.232344094039047134e0 * wr_11_4 -
      0.117013456167857322e0 * wr_9_8;
  results[k++] =
      -0.196116135138184032e0 * wr_3_0 + 0.404920494501304863e0 * wr_5_0 -
      0.335969004901695209e0 * wr_7_0 + 0.132042128159396364e0 * wr_9_0 -
      0.205284026670584309e-1 * wr_11_0;
  results[k++] =
      0.195776539844198514e0 * wr_5_4 + 0.309120852385576600e0 * wr_7_4 +
      0.539801726754262980e-1 * wr_9_4 - 0.160229154357081777e0 * wr_11_4 +
      0.841220233735072316e-1 * wr_9_8 + 0.113929892405107699e0 * wr_11_8;
  results[k++] =
      0.568398560058805107e0 * wr_1_0 - 0.558156305651438054e0 * wr_3_0 +
      0.255769530059726099e0 * wr_7_0 - 0.142347910936209957e0 * wr_9_0 +
      0.254672458984767116e-1 * wr_11_0;
  results[k++] =
      0.383949383449709063e0 * wr_5_4 + 0.146507001579494248e0 * wr_7_4 -
      0.793978712939730968e-1 * wr_9_4 - 0.514666341305839501e-1 * wr_11_4 -
      0.123732645780121649e0 * wr_9_8 - 0.580930744555170567e-1 * wr_11_8;
  results[k++] =
      0.345884437920405175e-1 * wr_7_0 - 0.298246623202379382e0 * wr_11_0 +
      0.188930604363992042e0 * wr_9_0 - 0.818582835957729293e-2 * wr_5_0 +
      0.163065604107793477e-2 * wr_5_4 - 0.601840815161000923e-1 * wr_7_4 +
      0.606575536437496558e0 * wr_11_4;
  results[k++] =
      -0.573007985170410506e-1 * wr_5_0 - 0.117600708892937759e0 * wr_7_0 +
      0.447369934803569073e0 * wr_11_0 + 0.296779399476184129e-1 * wr_5_4 -
      0.138069363478111977e0 * wr_7_4 - 0.270035780088070402e0 * wr_9_4 -
      0.303287768218748278e0 * wr_11_4;
  results[k++] =
      0.643263084620839054e-1 * wr_3_0 + 0.265628736906911423e-1 * wr_5_0 -
      0.277905599497192583e0 * wr_9_0 - 0.207386831924617021e0 * wr_11_0 -
      0.125503509968001858e0 * wr_7_0 + 0.155568662248124640e0 * wr_5_4 -
      0.109658361547080338e-1 * wr_7_4 - 0.151660645950599725e0 * wr_9_4 -
      0.210892209732391565e0 * wr_11_4;
  results[k++] =
      -0.829425465150378281e-1 * wr_5_4 + 0.294664309987634389e0 * wr_7_4 -
      0.323435838541703236e0 * wr_9_4 + 0.112438692102971168e0 * wr_11_4 +
      0.168012783343201857e0 * wr_9_8 - 0.197207031957837228e0 * wr_11_8;
  results[k++] =
      0.879070845776741847e-1 * wr_9_0 - 0.484549825336802052e-1 * wr_11_0 +
      0.178042326879336819e0 * wr_3_0 + 0.274031735573899115e0 * wr_5_0 +
      0.237227307204820074e0 * wr_7_0 + 0.335519120716737379e0 * wr_5_4 +
      0.242809889992375735e0 * wr_7_4 + 0.145373598573666465e0 * wr_9_4 +
      0.606449206010959885e-1 * wr_11_4;
  results[k++] =
      -0.262287361921980789e0 * wr_5_4 + 0.258836212423007357e0 * wr_7_4 +
      0.232453165163239782e-1 * wr_9_4 - 0.629071875080219955e-1 * wr_11_4 +
      0.156975907455816455e0 * wr_9_8 - 0.239855150610915508e-1 * wr_11_8;
  results[k++] =
      0.832050294337843681e0 * wr_1_0 + 0.524312633033774745e-1 * wr_5_0 -
      0.775401710637466534e-1 * wr_7_0 + 0.300285968131828892e0 * wr_3_0 -
      0.993793254615756141e-1 * wr_9_0 - 0.489759893446514966e-1 * wr_11_0 -
      0.263202852879713397e0 * wr_5_4 - 0.190475748794529432e0 * wr_7_4 -
      0.114040433213589159e0 * wr_9_4 - 0.475737897761959267e-1 * wr_11_4;
  results[k++] =
      -0.201709162263719681e0 * wr_6_0 + 0.206974887173534253e0 * wr_2_0 +
      0.302205864635227354e-1 * wr_8_0 + wr_0_0 -
      0.195804195804195804e0 * wr_4_0 - 0.446786028155513962e0 * wr_4_4 -
      0.205834520990190080e0 * wr_6_4 - 0.803630604434498809e-1 * wr_8_4;
  results[k++] =
      -0.210183991524123388e0 * wr_2_0 - 0.744860445817002406e-1 * wr_6_0 +
      0.210439890034526007e0 * wr_8_0 - 0.289221964818572015e0 * wr_4_0 +
      0.345686366799062752e0 * wr_4_4 + 0.159257862240395325e0 * wr_6_4 +
      0.621783418434921737e-1 * wr_8_4;
  results[k++] =
      0.157657240086439164e0 * wr_4_4 - 0.300411232908622105e0 * wr_6_4 +
      0.139922797388216858e0 * wr_8_4 - 0.120385276131415360e-1 * wr_10_4 -
      0.397954036411677711e0 * wr_8_8 + 0.171944566668574133e0 * wr_10_8;
  results[k++] =
      -0.185246075675815753e0 * wr_6_0 + 0.497137598506713736e-1 * wr_2_0 -
      0.276705735978567037e0 * wr_8_0 + 0.122678535071481460e0 * wr_10_0 +
      0.106292489582611622e0 * wr_4_4 - 0.103519019420363070e0 * wr_6_4 -
      0.232695295861366139e0 * wr_8_4 - 0.267840330814318867e0 * wr_10_4;
  results[k++] =
      -0.516725963689822825e-1 * wr_4_4 - 0.700164353698371278e-1 * wr_6_4 +
      0.232357757605678586e0 * wr_8_4 - 0.109043714232939648e0 * wr_10_4 +
      0.313033285915195688e0 * wr_8_8 + 0.409856779356325156e0 * wr_10_8;
  results[k++] =
      -0.345780380228847397e0 * wr_10_0 + 0.876306406843532242e-1 * wr_6_0 +
      0.126910021402400553e-1 * wr_8_0 + 0.361527456023215019e-1 * wr_4_0 +
      0.129632387549648532e-1 * wr_4_4 - 0.111246300829687911e0 * wr_6_4 -
      0.191239307972582837e0 * wr_8_4 - 0.205890500083220426e0 * wr_10_4;
  results[k++] =
      0.359646120845650245e-2 * wr_4_4 + 0.218012009355891747e-1 * wr_6_4 +
      0.723498438009113749e-1 * wr_8_4 - 0.176852025920047632e0 * wr_10_4 +
      0.821610326270096003e-1 * wr_12_4 - 0.881871378209586185e-1 * wr_8_8 -
      0.130725404514442669e0 * wr_10_8 - 0.683539725493285402e0 * wr_12_8;
  results[k++] =
      -0.350029142178773637e0 * wr_12_0 - 0.368343483625489027e-2 * wr_4_0 +
      0.399422952539768726e-2 * wr_6_0 + 0.659443815175834139e-1 * wr_8_0 +
      0.182276709031214787e0 * wr_10_0 + 0.440254669691079245e-3 * wr_4_4 -
      0.247304802230512079e-1 * wr_6_4 - 0.649482740809461443e-2 * wr_8_4 +
      0.108534332546926677e0 * wr_10_4 + 0.671177359452222714e0 * wr_12_4;
  results[k++] =
      -0.210183991524123388e0 * wr_2_0 - 0.744860445817002406e-1 * wr_6_0 +
      0.210439890034526007e0 * wr_8_0 - 0.289221964818572015e0 * wr_4_0 +
      0.345686366799062752e0 * wr_4_4 + 0.159257862240395325e0 * wr_6_4 +
      0.621783418434921737e-1 * wr_8_4;
  results[k++] =
      0.533936017756905039e-1 * wr_6_0 + 0.272080998660813571e0 * wr_2_0 -
      0.140316338089349709e0 * wr_10_0 + 0.224593166209574443e0 * wr_8_0 +
      wr_0_0 - 0.279720279720279720e-1 * wr_4_0 +
      0.234030776652888266e0 * wr_4_4 - 0.665935214968262024e-1 * wr_6_4 -
      0.245923049627700011e0 * wr_8_4 - 0.306348412056004788e0 * wr_10_4;
  results[k++] =
      -0.217280857065997610e0 * wr_4_4 + 0.316367902839551660e0 * wr_6_4 -
      0.315760605462769444e-1 * wr_8_4 - 0.489007303322161601e-1 * wr_10_4 -
      0.384880223224805607e-1 * wr_8_8 - 0.299332342089425255e0 * wr_10_8;
  results[k++] =
      0.195069599271190138e0 * wr_2_0 - 0.205857877827192034e-2 * wr_8_0 +
      0.261026105566598677e0 * wr_10_0 + 0.291816507111495319e0 * wr_4_0 +
      0.159615509571045245e0 * wr_6_0 + 0.341811689216178887e0 * wr_4_4 +
      0.127977117949326039e0 * wr_6_4 + 0.127731454064585524e-1 * wr_8_4 -
      0.518082174725220689e-1 * wr_10_4;
  results[k++] =
      0.186965364206301104e0 * wr_4_4 - 0.349273111342270099e-1 * wr_6_4 -
      0.298055265221625196e0 * wr_8_4 + 0.891956846163666491e-1 * wr_10_4 +
      0.470102534742934390e-1 * wr_12_4 + 0.363299205243491261e0 * wr_8_8 +
      0.827252724445016804e-1 * wr_10_8 + 0.391102384278271406e0 * wr_12_8;
  results[k++] =
      0.983566348499561908e-1 * wr_6_0 - 0.536120194405543983e-1 * wr_2_0 +
      0.228967198460873786e0 * wr_8_0 + 0.102003877080605528e0 * wr_10_0 -
      0.373743903155667862e-1 * wr_4_0 + 0.293175393727284964e0 * wr_12_0 +
      0.109443804375909513e0 * wr_4_4 - 0.847022861143842049e-1 * wr_6_4 -
      0.174472433857489873e0 * wr_8_4 - 0.109752648493107803e0 * wr_10_4 +
      0.562160868644889337e0 * wr_12_4;
  results[k++] =
      -0.375657286863652488e-1 * wr_4_4 - 0.885568968339559429e-1 * wr_6_4 -
      0.279891861718103322e-1 * wr_8_4 + 0.331004784258222867e0 * wr_10_4 -
      0.182762212402459592e0 * wr_12_4 - 0.238811898150797408e0 * wr_8_8 -
      0.323010145827813933e0 * wr_10_8 - 0.462758581750147718e0 * wr_12_8;
  results[k++] =
      0.440088720469378486e0 * wr_12_0 - 0.256494566320360274e-1 * wr_4_0 +
      0.604417544669487071e-1 * wr_10_0 - 0.784190789813823841e-1 * wr_6_0 -
      0.935409772731261607e-1 * wr_8_0 + 0.107299375331719414e-1 * wr_4_4 -
      0.860016300739633610e-1 * wr_6_4 - 0.158292681884528642e0 * wr_8_4 -
      0.203939189920503003e0 * wr_10_4 - 0.194738237304000425e0 * wr_12_4;
  results[k++] =
      0.157657240086439164e0 * wr_4_4 - 0.300411232908622105e0 * wr_6_4 +
      0.139922797388216858e0 * wr_8_4 - 0.120385276131415360e-1 * wr_10_4 -
      0.397954036411677711e0 * wr_8_8 + 0.171944566668574133e0 * wr_10_8;
  results[k++] =
      -0.217280857065997610e0 * wr_4_4 + 0.316367902839551660e0 * wr_6_4 -
      0.315760605462769444e-1 * wr_8_4 - 0.489007303322161601e-1 * wr_10_4 -
      0.384880223224805607e-1 * wr_8_8 - 0.299332342089425255e0 * wr_10_8;
  results[k++] =
      0.304437203107007258e-1 * wr_6_0 - 0.707410596518115288e0 * wr_2_0 +
      0.396546172861205700e-2 * wr_10_0 - 0.306692348815595353e-1 * wr_8_0 +
      wr_0_0 + 0.192513368983957219e0 * wr_4_0 +
      0.558429321385304694e-3 * wr_12_0 - 0.918298943502343854e0 * wr_12_12;
  results[k++] =
      -0.723947903509432567e-1 * wr_4_4 - 0.767980867688607044e-1 * wr_6_4 +
      0.256597228697853962e0 * wr_8_4 - 0.817180226605790642e-1 * wr_10_4 -
      0.238234090488492116e-1 * wr_12_4 - 0.156383027128032571e0 * wr_8_8 +
      0.250107175779672064e0 * wr_10_8 + 0.198199145761604775e0 * wr_12_8;
  results[k++] =
      -0.255840859626732522e0 * wr_2_0 + 0.420645259961290728e0 * wr_4_0 -
      0.255437145864642212e0 * wr_6_0 + 0.469452136529991269e-1 * wr_8_0 +
      0.138633711601614320e-1 * wr_10_0 - 0.519130430011724341e-2 * wr_12_0 -
      0.656672766279927500e0 * wr_12_12;
  results[k++] =
      0.588609132918724176e-1 * wr_4_4 - 0.239773568467870732e0 * wr_6_4 +
      0.146152051671339000e0 * wr_8_4 + 0.106305935504817739e0 * wr_10_4 -
      0.824094009490226618e-1 * wr_12_4 + 0.494846001289035780e-1 * wr_8_8 +
      0.180756245223082883e0 * wr_10_8 - 0.380892238230672834e0 * wr_12_8;
  results[k++] =
      -0.144149994031289434e-1 * wr_2_0 + 0.127983647227560400e0 * wr_4_0 -
      0.251864422417079580e0 * wr_6_0 + 0.216013489537844605e0 * wr_8_0 -
      0.885781546339363018e-1 * wr_10_0 + 0.143323461949928051e-1 * wr_12_0 -
      0.258995231780051889e0 * wr_12_12;
  results[k++] =
      -0.873857934869393866e-2 * wr_4_4 + 0.115361111916235276e0 * wr_6_4 -
      0.328148047014136476e0 * wr_8_4 + 0.331429106592872191e0 * wr_10_4 -
      0.111017876250572747e0 * wr_12_4 + 0.666632101453814309e-1 * wr_8_8 -
      0.338125320552699427e0 * wr_10_8 + 0.307871530784605239e0 * wr_12_8;
  results[k++] =
      -0.185246075675815753e0 * wr_6_0 + 0.497137598506713736e-1 * wr_2_0 -
      0.276705735978567037e0 * wr_8_0 + 0.122678535071481460e0 * wr_10_0 +
      0.106292489582611622e0 * wr_4_4 - 0.103519019420363070e0 * wr_6_4 -
      0.232695295861366139e0 * wr_8_4 - 0.267840330814318867e0 * wr_10_4;
  results[k++] =
      0.195069599271190138e0 * wr_2_0 - 0.205857877827192034e-2 * wr_8_0 +
      0.261026105566598677e0 * wr_10_0 + 0.291816507111495319e0 * wr_4_0 +
      0.159615509571045245e0 * wr_6_0 + 0.341811689216178887e0 * wr_4_4 +
      0.127977117949326039e0 * wr_6_4 + 0.127731454064585524e-1 * wr_8_4 -
      0.518082174725220689e-1 * wr_10_4;
  results[k++] =
      -0.723947903509432567e-1 * wr_4_4 - 0.767980867688607044e-1 * wr_6_4 +
      0.256597228697853962e0 * wr_8_4 - 0.817180226605790642e-1 * wr_10_4 -
      0.238234090488492116e-1 * wr_12_4 - 0.156383027128032571e0 * wr_8_8 +
      0.250107175779672064e0 * wr_10_8 + 0.198199145761604775e0 * wr_12_8;
  results[k++] =
      0.304437203107007258e-1 * wr_6_0 + 0.321550271144597857e0 * wr_2_0 +
      0.138791160501421995e0 * wr_10_0 + 0.197955970599157000e0 * wr_8_0 +
      wr_0_0 + 0.213903743315508021e-1 * wr_4_0 +
      0.276422514085725824e0 * wr_12_0 - 0.227773269255752216e0 * wr_4_4 +
      0.621327114444072224e-1 * wr_6_4 + 0.207597379555850659e0 * wr_8_4 +
      0.173153450292524446e0 * wr_10_4 - 0.530037390436609945e0 * wr_12_4;
  results[k++] =
      0.284731112555596494e0 * wr_4_4 - 0.214790701135253734e0 * wr_6_4 -
      0.872826304457024332e-1 * wr_8_4 - 0.140247139453174262e0 * wr_10_4 +
      0.141967057977329017e0 * wr_12_4 - 0.132985866936902760e0 * wr_8_8 -
      0.158978556938525746e-1 * wr_10_8 - 0.519682544436341693e0 * wr_12_8;
  results[k++] =
      0.158665765604383528e0 * wr_2_0 + 0.485236426306952652e-1 * wr_8_0 +
      0.361103308096085126e-1 * wr_10_0 + 0.270359411000355957e0 * wr_4_0 +
      0.216020990396903339e0 * wr_6_0 + 0.460389966491354074e0 * wr_12_0 -
      0.333345765025066097e0 * wr_4_4 - 0.143693606118541518e0 * wr_6_4 -
      0.401441712774411647e-1 * wr_8_4 + 0.327640901011997274e-1 * wr_10_4 +
      0.679071638489557505e-1 * wr_12_4;
  results[k++] =
      -0.144385026737967914e0 * wr_4_4 - 0.907656374702904549e-1 * wr_6_4 +
      0.172123668465191732e0 * wr_8_4 + 0.276571088785492262e0 * wr_10_4 -
      0.214400613083344257e0 * wr_12_4 + 0.367152332784246836e0 * wr_8_8 +
      0.282158947995109007e0 * wr_10_8 + 0.106717605438283947e0 * wr_12_8;
  results[k++] =
      -0.392595953498009547e-1 * wr_2_0 + 0.169958504685018211e0 * wr_8_0 +
      0.269836687819846344e0 * wr_10_0 - 0.457713614288809250e-1 * wr_4_0 +
      0.291012812897943978e-1 * wr_6_0 + 0.169149445236536584e0 * wr_12_0 -
      0.824816859301901352e-1 * wr_4_4 + 0.622211566300260004e-1 * wr_6_4 +
      0.162240736653975694e0 * wr_8_4 + 0.226996274876169786e0 * wr_10_4 +
      0.224544710697292128e0 * wr_12_4;
  results[k++] =
      -0.516725963689822825e-1 * wr_4_4 - 0.700164353698371278e-1 * wr_6_4 +
      0.232357757605678586e0 * wr_8_4 - 0.109043714232939648e0 * wr_10_4 +
      0.313033285915195688e0 * wr_8_8 + 0.409856779356325156e0 * wr_10_8;
  results[k++] =
      0.186965364206301104e0 * wr_4_4 - 0.349273111342270099e-1 * wr_6_4 -
      0.298055265221625196e0 * wr_8_4 + 0.891956846163666491e-1 * wr_10_4 +
      0.470102534742934390e-1 * wr_12_4 + 0.363299205243491261e0 * wr_8_8 +
      0.827252724445016804e-1 * wr_10_8 + 0.391102384278271406e0 * wr_12_8;
  results[k++] =
      -0.255840859626732522e0 * wr_2_0 + 0.420645259961290728e0 * wr_4_0 -
      0.255437145864642212e0 * wr_6_0 + 0.469452136529991269e-1 * wr_8_0 +
      0.138633711601614320e-1 * wr_10_0 - 0.519130430011724341e-2 * wr_12_0 -
      0.656672766279927500e0 * wr_12_12;
  results[k++] =
      0.284731112555596494e0 * wr_4_4 - 0.214790701135253734e0 * wr_6_4 -
      0.872826304457024332e-1 * wr_8_4 - 0.140247139453174262e0 * wr_10_4 +
      0.141967057977329017e0 * wr_12_4 - 0.132985866936902760e0 * wr_8_8 -
      0.158978556938525746e-1 * wr_10_8 - 0.519682544436341693e0 * wr_12_8;
  results[k++] =
      0.558134872362846640e-1 * wr_6_0 - 0.447213595499957940e0 * wr_2_0 -
      0.983434508695790135e-1 * wr_10_0 + 0.132209269286722862e0 * wr_8_0 +
      wr_0_0 - 0.132352941176470588e0 * wr_4_0 +
      0.202747918389323693e-1 * wr_12_0 - 0.469584687018244015e0 * wr_12_12;
  results[k++] =
      0.154334616679729685e0 * wr_4_4 - 0.523909667013405147e-1 * wr_6_4 +
      0.141931078676964379e-1 * wr_8_4 - 0.314212070807655241e0 * wr_10_4 +
      0.194924658155909581e0 * wr_12_4 - 0.129749716158389736e0 * wr_8_8 +
      0.213706953814962674e0 * wr_10_8 + 0.314278701652182380e0 * wr_12_8;
  results[k++] =
      -0.226778683805536336e0 * wr_2_0 + 0.186431085601878657e0 * wr_4_0 +
      0.198118226077723298e0 * wr_6_0 - 0.339835288727102824e0 * wr_8_0 +
      0.172039911730845009e0 * wr_10_0 - 0.307470508043446192e-1 * wr_12_0 -
      0.185206698221452943e0 * wr_12_12;
  results[k++] =
      -0.840134106290156596e-1 * wr_4_4 + 0.332727326009360326e0 * wr_6_4 -
      0.172082287609090608e0 * wr_8_4 - 0.193114321964295924e0 * wr_10_4 +
      0.132314239678022302e0 * wr_12_4 + 0.174792411619755649e0 * wr_8_8 -
      0.262688020730399968e0 * wr_10_8 - 0.733859967242234483e-1 * wr_12_8;
  results[k++] =
      -0.345780380228847397e0 * wr_10_0 + 0.876306406843532242e-1 * wr_6_0 +
      0.126910021402400553e-1 * wr_8_0 + 0.361527456023215019e-1 * wr_4_0 +
      0.129632387549648532e-1 * wr_4_4 - 0.111246300829687911e0 * wr_6_4 -
      0.191239307972582837e0 * wr_8_4 - 0.205890500083220426e0 * wr_10_4;
  results[k++] =
      0.983566348499561908e-1 * wr_6_0 - 0.536120194405543983e-1 * wr_2_0 +
      0.228967198460873786e0 * wr_8_0 + 0.102003877080605528e0 * wr_10_0 -
      0.373743903155667862e-1 * wr_4_0 + 0.293175393727284964e0 * wr_12_0 +
      0.109443804375909513e0 * wr_4_4 - 0.847022861143842049e-1 * wr_6_4 -
      0.174472433857489873e0 * wr_8_4 - 0.109752648493107803e0 * wr_10_4 +
      0.562160868644889337e0 * wr_12_4;
  results[k++] =
      0.588609132918724176e-1 * wr_4_4 - 0.239773568467870732e0 * wr_6_4 +
      0.146152051671339000e0 * wr_8_4 + 0.106305935504817739e0 * wr_10_4 -
      0.824094009490226618e-1 * wr_12_4 + 0.494846001289035780e-1 * wr_8_8 +
      0.180756245223082883e0 * wr_10_8 - 0.380892238230672834e0 * wr_12_8;
  results[k++] =
      0.158665765604383528e0 * wr_2_0 + 0.485236426306952652e-1 * wr_8_0 +
      0.361103308096085126e-1 * wr_10_0 + 0.270359411000355957e0 * wr_4_0 +
      0.216020990396903339e0 * wr_6_0 + 0.460389966491354074e0 * wr_12_0 -
      0.333345765025066097e0 * wr_4_4 - 0.143693606118541518e0 * wr_6_4 -
      0.401441712774411647e-1 * wr_8_4 + 0.327640901011997274e-1 * wr_10_4 +
      0.679071638489557505e-1 * wr_12_4;
  results[k++] =
      0.154334616679729685e0 * wr_4_4 - 0.523909667013405147e-1 * wr_6_4 +
      0.141931078676964379e-1 * wr_8_4 - 0.314212070807655241e0 * wr_10_4 +
      0.194924658155909581e0 * wr_12_4 - 0.129749716158389736e0 * wr_8_8 +
      0.213706953814962674e0 * wr_10_8 + 0.314278701652182380e0 * wr_12_8;
  results[k++] =
      -0.975760266368613007e-2 * wr_6_0 + 0.378411503884579796e0 * wr_2_0 +
      0.247119440646634444e0 * wr_10_0 + 0.964391221587500980e-1 * wr_8_0 +
      wr_0_0 + 0.774372686137392020e-1 * wr_4_0 +
      0.185328731034747995e0 * wr_12_0 + 0.325233946966146193e0 * wr_4_4 +
      0.438115273005435542e-1 * wr_6_4 - 0.130557603566829157e0 * wr_8_4 -
      0.247742628880073437e0 * wr_10_4 - 0.271041847382357359e0 * wr_12_4;
  results[k++] =
      -0.286960427465290094e0 * wr_4_4 + 0.974125865173515371e-1 * wr_6_4 +
      0.285489698952465388e0 * wr_8_4 + 0.599646348293882004e-1 * wr_10_4 -
      0.142435332926699486e0 * wr_12_4 - 0.358217847226196111e0 * wr_8_8 -
      0.815682186433873569e-1 * wr_10_8 + 0.578448227187684647e-1 * wr_12_8;
  results[k++] =
      0.260270219033036362e0 * wr_6_0 + 0.191333817149576238e0 * wr_8_0 +
      0.503681287224572560e-1 * wr_10_0 + 0.110656667034497625e0 * wr_2_0 +
      0.222524303816622082e0 * wr_4_0 - 0.550110900586723108e-1 * wr_12_0 +
      0.295073282162228387e0 * wr_4_4 + 0.166944340731811230e0 * wr_6_4 +
      0.105528454589685762e0 * wr_8_4 + 0.599821146825008833e-1 * wr_10_4 +
      0.243422796630000531e-1 * wr_12_4;
  results[k++] =
      0.359646120845650245e-2 * wr_4_4 + 0.218012009355891747e-1 * wr_6_4 +
      0.723498438009113749e-1 * wr_8_4 - 0.176852025920047632e0 * wr_10_4 +
      0.821610326270096003e-1 * wr_12_4 - 0.881871378209586185e-1 * wr_8_8 -
      0.130725404514442669e0 * wr_10_8 - 0.683539725493285402e0 * wr_12_8;
  results[k++] =
      -0.375657286863652488e-1 * wr_4_4 - 0.885568968339559429e-1 * wr_6_4 -
      0.279891861718103322e-1 * wr_8_4 + 0.331004784258222867e0 * wr_10_4 -
      0.182762212402459592e0 * wr_12_4 - 0.238811898150797408e0 * wr_8_8 -
      0.323010145827813933e0 * wr_10_8 - 0.462758581750147718e0 * wr_12_8;
  results[k++] =
      -0.144149994031289434e-1 * wr_2_0 + 0.127983647227560400e0 * wr_4_0 -
      0.251864422417079580e0 * wr_6_0 + 0.216013489537844605e0 * wr_8_0 -
      0.885781546339363018e-1 * wr_10_0 + 0.143323461949928051e-1 * wr_12_0 -
      0.258995231780051889e0 * wr_12_12;
  results[k++] =
      -0.144385026737967914e0 * wr_4_4 - 0.907656374702904549e-1 * wr_6_4 +
      0.172123668465191732e0 * wr_8_4 + 0.276571088785492262e0 * wr_10_4 -
      0.214400613083344257e0 * wr_12_4 + 0.367152332784246836e0 * wr_8_8 +
      0.282158947995109007e0 * wr_10_8 + 0.106717605438283947e0 * wr_12_8;
  results[k++] =
      -0.226778683805536336e0 * wr_2_0 + 0.186431085601878657e0 * wr_4_0 +
      0.198118226077723298e0 * wr_6_0 - 0.339835288727102824e0 * wr_8_0 +
      0.172039911730845009e0 * wr_10_0 - 0.307470508043446192e-1 * wr_12_0 -
      0.185206698221452943e0 * wr_12_12;
  results[k++] =
      -0.286960427465290094e0 * wr_4_4 + 0.974125865173515371e-1 * wr_6_4 +
      0.285489698952465388e0 * wr_8_4 + 0.599646348293882004e-1 * wr_10_4 -
      0.142435332926699486e0 * wr_12_4 - 0.358217847226196111e0 * wr_8_8 -
      0.815682186433873569e-1 * wr_10_8 + 0.578448227187684647e-1 * wr_12_8;
  results[k++] =
      0.167440461708853992e0 * wr_6_0 - 0.268328157299974764e0 * wr_2_0 -
      0.133239514081365115e0 * wr_10_0 + 0.159562911208113798e0 * wr_8_0 +
      wr_0_0 - 0.397058823529411765e0 * wr_4_0 +
      0.280293444608964867e-1 * wr_12_0 - 0.730465068695046246e-1 * wr_12_12;
  results[k++] =
      -0.298218024078939567e0 * wr_4_4 + 0.281205915241253096e0 * wr_6_4 +
      0.145436077536239216e0 * wr_8_4 - 0.623170765090887953e-1 * wr_10_4 -
      0.450744568734813923e-1 * wr_12_4 + 0.206817170524572562e0 * wr_8_8 -
      0.423840896919701475e-1 * wr_10_8 - 0.467554135550700145e-1 * wr_12_8;
  results[k++] =
      -0.350029142178773637e0 * wr_12_0 - 0.368343483625489027e-2 * wr_4_0 +
      0.399422952539768726e-2 * wr_6_0 + 0.659443815175834139e-1 * wr_8_0 +
      0.182276709031214787e0 * wr_10_0 + 0.440254669691079245e-3 * wr_4_4 -
      0.247304802230512079e-1 * wr_6_4 - 0.649482740809461443e-2 * wr_8_4 +
      0.108534332546926677e0 * wr_10_4 + 0.671177359452222714e0 * wr_12_4;
  results[k++] =
      0.440088720469378486e0 * wr_12_0 - 0.256494566320360274e-1 * wr_4_0 +
      0.604417544669487071e-1 * wr_10_0 - 0.784190789813823841e-1 * wr_6_0 -
      0.935409772731261607e-1 * wr_8_0 + 0.107299375331719414e-1 * wr_4_4 -
      0.860016300739633610e-1 * wr_6_4 - 0.158292681884528642e0 * wr_8_4 -
      0.203939189920503003e0 * wr_10_4 - 0.194738237304000425e0 * wr_12_4;
  results[k++] =
      -0.873857934869393866e-2 * wr_4_4 + 0.115361111916235276e0 * wr_6_4 -
      0.328148047014136476e0 * wr_8_4 + 0.331429106592872191e0 * wr_10_4 -
      0.111017876250572747e0 * wr_12_4 + 0.666632101453814309e-1 * wr_8_8 -
      0.338125320552699427e0 * wr_10_8 + 0.307871530784605239e0 * wr_12_8;
  results[k++] =
      -0.392595953498009547e-1 * wr_2_0 + 0.169958504685018211e0 * wr_8_0 +
      0.269836687819846344e0 * wr_10_0 - 0.457713614288809250e-1 * wr_4_0 +
      0.291012812897943978e-1 * wr_6_0 + 0.169149445236536584e0 * wr_12_0 -
      0.824816859301901352e-1 * wr_4_4 + 0.622211566300260004e-1 * wr_6_4 +
      0.162240736653975694e0 * wr_8_4 + 0.226996274876169786e0 * wr_10_4 +
      0.224544710697292128e0 * wr_12_4;
  results[k++] =
      -0.840134106290156596e-1 * wr_4_4 + 0.332727326009360326e0 * wr_6_4 -
      0.172082287609090608e0 * wr_8_4 - 0.193114321964295924e0 * wr_10_4 +
      0.132314239678022302e0 * wr_12_4 + 0.174792411619755649e0 * wr_8_8 -
      0.262688020730399968e0 * wr_10_8 - 0.733859967242234483e-1 * wr_12_8;
  results[k++] =
      0.260270219033036362e0 * wr_6_0 + 0.191333817149576238e0 * wr_8_0 +
      0.503681287224572560e-1 * wr_10_0 + 0.110656667034497625e0 * wr_2_0 +
      0.222524303816622082e0 * wr_4_0 - 0.550110900586723108e-1 * wr_12_0 +
      0.295073282162228387e0 * wr_4_4 + 0.166944340731811230e0 * wr_6_4 +
      0.105528454589685762e0 * wr_8_4 + 0.599821146825008833e-1 * wr_10_4 +
      0.243422796630000531e-1 * wr_12_4;
  results[k++] =
      -0.298218024078939567e0 * wr_4_4 + 0.281205915241253096e0 * wr_6_4 +
      0.145436077536239216e0 * wr_8_4 - 0.623170765090887953e-1 * wr_10_4 -
      0.450744568734813923e-1 * wr_12_4 + 0.206817170524572562e0 * wr_8_8 -
      0.423840896919701475e-1 * wr_10_8 - 0.467554135550700145e-1 * wr_12_8;
  results[k++] =
      -0.429334517202189724e-2 * wr_6_0 + 0.447213595499957940e0 * wr_2_0 -
      0.919987121037997225e-1 * wr_10_0 - 0.908281186876955469e-1 * wr_8_0 +
      wr_0_0 + 0.173076923076923077e0 * wr_4_0 -
      0.415331807780320366e-1 * wr_12_0 - 0.511081916661086874e0 * wr_4_4 -
      0.289156080183587458e0 * wr_6_4 - 0.182780644993560820e0 * wr_8_4 -
      0.103892070175514668e0 * wr_10_4 - 0.421620651483667001e-1 * wr_12_4;
  if (k == n_elems)
    return;
#endif
}
#endif

#if (OA_SX2MAX >= 4)
void BoxMatrix::setup___oa_4_E(
    uint lmax, std::vector<BoxMatrixQuantumNumbers>& quantnums) {
  quantnums.clear();
#if (OA_LMAX >= 0)
  if (lmax >= 0) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 0, 1));
  }
#endif
#if (OA_LMAX >= 1)
  if (lmax >= 1) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 2, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 1, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 2, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 2, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 2, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 4, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 1, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 1, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 1, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 6, 1, 2));
  }
#endif
#if (OA_LMAX >= 2)
  if (lmax >= 2) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 2, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 4, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 6, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 6, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 2, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 2, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 2, 2));
  }
#endif
#if (OA_LMAX >= 3)
  if (lmax >= 3) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 2, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 4, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 6, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 6, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 8, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 8, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 3, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 3, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 3, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 3, 3));
  }
#endif
#if (OA_LMAX >= 4)
  if (lmax >= 4) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 4, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 6, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 6, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 8, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 8, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 10, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 10, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 10, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 12, 4, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 12, 4, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 4, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 12, 4, 3));
  }
#endif
#if (OA_LMAX >= 5)
  if (lmax >= 5) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 6, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 6, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 8, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 8, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 10, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 10, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 10, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 12, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 12, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 12, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 14, 5, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 14, 5, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 14, 5, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 14, 5, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 14, 5, 4));
  }
#endif
#if (OA_LMAX >= 6)
  if (lmax >= 6) {
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 0, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 1, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 1, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 1, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 2, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 2, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 2, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 2, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(2, 3, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 3, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 3, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 3, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 3, 3, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(4, 4, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 4, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 4, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 4, 3, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 4, 3, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(6, 5, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 5, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 5, 3, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 5, 3, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 3, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 5, 4, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 8, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 8, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 10, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 10, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 10, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 12, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 12, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 12, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 14, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 14, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 14, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 14, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 16, 6, 1));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 16, 6, 2));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 16, 6, 3));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(8, 6, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(10, 6, 3, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(12, 6, 3, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 3, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(14, 6, 4, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 1, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 2, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 3, 16, 6, 4));
    quantnums.push_back(BoxMatrixQuantumNumbers(16, 6, 4, 16, 6, 4));
  }
#endif
}
#endif

#if (OA_SX2MAX >= 4)
void BoxMatrix::evaluate___oa_4_E(WZetaRGLCalculator& wzeta, uint n_elems,
                                  vector<cmplx>& results) {
  results.resize(n_elems);
  uint k = 0;
  if (k == n_elems)
    return;
#if (OA_LMAX >= 0)
  cmplx wr_0_0 = wzeta.eval_wr_lm(0, 0);
  results[k++] = wr_0_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 1)
  cmplx wr_1_0 = wzeta.eval_wr_lm(1, 0);
  cmplx wr_2_0 = wzeta.eval_wr_lm(2, 0);
  results[k++] = -0.547722557505166112e0 * wr_1_0;
  results[k++] = -0.408248290463863017e0 * wr_1_0;
  results[k++] = -0.730296743340221485e0 * wr_1_0;
  results[k++] = wr_0_0 - 0.447213595499957940e-1 * wr_2_0;
  results[k++] = 0.300000000000000000e0 * wr_2_0;
  results[k++] = 0.536656314599949528e0 * wr_2_0;
  results[k++] = 0.300000000000000000e0 * wr_2_0;
  results[k++] = wr_0_0 - 0.223606797749978970e0 * wr_2_0;
  results[k++] = 0.400000000000000000e0 * wr_2_0;
  results[k++] = wr_0_0 - 0.447213595499957940e0 * wr_2_0;
  results[k++] = 0.536656314599949528e0 * wr_2_0;
  results[k++] = 0.400000000000000000e0 * wr_2_0;
  results[k++] = wr_0_0 + 0.268328157299974764e0 * wr_2_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 2)
  cmplx wr_3_0 = wzeta.eval_wr_lm(3, 0);
  cmplx wr_4_0 = wzeta.eval_wr_lm(4, 0);
  cmplx wr_4_4 = wzeta.eval_wr_lm(4, 4);
  results[k++] = 0.547722557505166112e0 * wr_2_0;
  results[k++] = -0.267261241912424385e0 * wr_2_0;
  results[k++] = -0.447213595499957940e0 * wr_2_0;
  results[k++] = -0.654653670707977142e0 * wr_2_0;
  results[k++] = -0.670820393249936910e0 * wr_1_0;
  results[k++] =
      -0.300000000000000000e0 * wr_1_0 - 0.130930734141595428e0 * wr_3_0;
  results[k++] = -0.585540043769119909e0 * wr_3_0;
  results[k++] =
      0.458257569495584000e0 * wr_1_0 - 0.857142857142857143e-1 * wr_3_0;
  results[k++] =
      -0.341565025531986613e0 * wr_1_0 + 0.383325938999963950e0 * wr_3_0;
  results[k++] =
      0.171428571428571429e0 * wr_3_0 + 0.174574312188793905e0 * wr_1_0;
  results[k++] =
      -0.547722557505166114e0 * wr_1_0 + 0.358568582800318092e0 * wr_3_0;
  results[k++] = 0.358568582800318092e0 * wr_3_0;
  results[k++] =
      0.653197264742180827e0 * wr_1_0 - 0.160356745147454631e0 * wr_3_0;
  results[k++] =
      0.182574185835055371e0 * wr_1_0 + 0.358568582800318092e0 * wr_3_0;
  results[k++] =
      0.547722557505166114e0 * wr_1_0 - 0.358568582800318092e0 * wr_3_0;
  results[k++] = 0.524890659167823879e0 * wr_3_0;
  results[k++] = 0.391230398217975796e0 * wr_3_0;
  results[k++] =
      0.801783725737273156e0 * wr_1_0 + 0.174963553055941293e0 * wr_3_0;
  results[k++] = wr_0_0 + 0.223606797749978970e0 * wr_2_0;
  results[k++] = -0.327326835353988572e0 * wr_2_0;
  results[k++] = -0.377964473009227227e0 * wr_4_4;
  results[k++] =
      -0.312984318574380637e0 * wr_2_0 - 0.174963553055941293e0 * wr_4_0;
  results[k++] = -0.377964473009227227e0 * wr_4_4;
  results[k++] = -0.597614304667196822e0 * wr_4_0;
  results[k++] = -0.327326835353988572e0 * wr_2_0;
  results[k++] = wr_0_0 - 0.684510605357078480e-1 * wr_2_0 -
                 0.163265306122448980e0 * wr_4_0;
  results[k++] = -0.553283335172488125e0 * wr_4_4;
  results[k++] =
      -0.305441419328485011e0 * wr_2_0 + 0.426867360476569158e0 * wr_4_0;
  results[k++] = -0.553283335172488125e0 * wr_4_4;
  results[k++] =
      0.223560227553129027e0 * wr_2_0 + 0.124973966468529495e0 * wr_4_0;
  results[k++] = -0.377964473009227227e0 * wr_4_4;
  results[k++] = -0.553283335172488125e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.159719141249984979e0 * wr_2_0 -
                 0.214285714285714286e0 * wr_4_0;
  results[k++] = -0.462910049886275731e0 * wr_4_4;
  results[k++] =
      -0.479157423749954936e0 * wr_2_0 + 0.357142857142857143e0 * wr_4_0;
  results[k++] = 0.225876975726312810e0 * wr_4_4;
  results[k++] =
      -0.312984318574380637e0 * wr_2_0 - 0.174963553055941293e0 * wr_4_0;
  results[k++] =
      -0.305441419328485011e0 * wr_2_0 + 0.426867360476569158e0 * wr_4_0;
  results[k++] = -0.462910049886275731e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.714285714285714286e-1 * wr_4_0 +
                 0.958314847499909870e-1 * wr_2_0;
  results[k++] = -0.462910049886275731e0 * wr_4_4;
  results[k++] =
      0.233804882395706122e0 * wr_2_0 + 0.313682166304885666e0 * wr_4_0;
  results[k++] = -0.377964473009227227e0 * wr_4_4;
  results[k++] = -0.553283335172488125e0 * wr_4_4;
  results[k++] =
      -0.479157423749954936e0 * wr_2_0 + 0.357142857142857143e0 * wr_4_0;
  results[k++] = -0.462910049886275731e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.159719141249984979e0 * wr_2_0 -
                 0.214285714285714286e0 * wr_4_0;
  results[k++] = 0.225876975726312810e0 * wr_4_4;
  results[k++] = -0.597614304667196822e0 * wr_4_0;
  results[k++] =
      0.223560227553129027e0 * wr_2_0 + 0.124973966468529495e0 * wr_4_0;
  results[k++] = 0.225876975726312810e0 * wr_4_4;
  results[k++] =
      0.233804882395706122e0 * wr_2_0 + 0.313682166304885666e0 * wr_4_0;
  results[k++] = 0.225876975726312810e0 * wr_4_4;
  results[k++] = wr_0_0 + 0.387889343035677806e0 * wr_2_0 +
                 0.918367346938775510e-1 * wr_4_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 3)
  cmplx wr_5_0 = wzeta.eval_wr_lm(5, 0);
  cmplx wr_5_4 = wzeta.eval_wr_lm(5, 4);
  cmplx wr_6_0 = wzeta.eval_wr_lm(6, 0);
  cmplx wr_6_4 = wzeta.eval_wr_lm(6, 4);
  results[k++] = -0.292770021884559954e0 * wr_3_0;
  results[k++] = 0.534522483824848769e0 * wr_3_0;
  results[k++] = 0.182574185835055371e0 * wr_3_0;
  results[k++] = -0.462910049886275731e0 * wr_3_0;
  results[k++] = -0.617213399848367641e0 * wr_3_0;
  results[k++] = 0.328633534503099669e0 * wr_2_0;
  results[k++] = 0.244948974278317810e0 * wr_2_0;
  results[k++] = 0.755928946018454454e0 * wr_4_4;
  results[k++] =
      -0.312984318574380637e-1 * wr_2_0 + 0.349927106111882585e0 * wr_4_0;
  results[k++] = -0.600000000000000000e0 * wr_2_0;
  results[k++] =
      -0.191662969499981974e0 * wr_2_0 - 0.190476190476190476e0 * wr_4_0;
  results[k++] = 0.690065559342354218e0 * wr_4_4;
  results[k++] =
      -0.857142857142857143e-1 * wr_2_0 - 0.532397137499949928e0 * wr_4_0;
  results[k++] = 0.235702260395515842e0 * wr_4_4;
  results[k++] = 0.527046276694729891e0 * wr_4_4;
  results[k++] =
      0.292770021884559954e0 * wr_2_0 - 0.218217890235992381e0 * wr_4_0;
  results[k++] = -0.471404520791031683e0 * wr_4_4;
  results[k++] =
      -0.351324026261471945e0 * wr_2_0 + 0.109108945117996190e0 * wr_4_0;
  results[k++] =
      0.392792202424786286e0 * wr_2_0 - 0.406625030395222158e0 * wr_4_0;
  results[k++] = -0.471404520791031683e0 * wr_4_4;
  results[k++] =
      -0.175662013130735973e0 * wr_2_0 - 0.727392967453307936e-1 * wr_4_0;
  results[k++] = 0.244948974278317810e0 * wr_4_4;
  results[k++] = 0.547722557505166115e0 * wr_4_4;
  results[k++] =
      -0.507092552837109947e0 * wr_2_0 + 0.377964473009227227e0 * wr_4_0;
  results[k++] = -0.489897948556635620e0 * wr_4_4;
  results[k++] = 0.387298334620741688e0 * wr_4_0;
  results[k++] =
      0.553283335172488125e0 * wr_2_0 - 0.123717914826348378e0 * wr_4_0;
  results[k++] = 0.239045721866878728e0 * wr_4_4;
  results[k++] =
      0.247435829652696755e0 * wr_2_0 + 0.331970001103492875e0 * wr_4_0;
  results[k++] = -0.894427190999915880e0 * wr_4_4;
  results[k++] = 0.666666666666666667e0 * wr_4_4;
  results[k++] = 0.298142396999971959e0 * wr_4_4;
  results[k++] = -0.133333333333333333e0 * wr_4_4;
  results[k++] = -0.298142396999971959e0 * wr_4_4;
  results[k++] =
      -0.414039335605412531e0 * wr_2_0 + 0.308606699924183820e0 * wr_4_0;
  results[k++] = 0.266666666666666667e0 * wr_4_4;
  results[k++] = 0.516397779494322249e0 * wr_4_0;
  results[k++] = 0.384900179459750509e0 * wr_4_0;
  results[k++] = -0.796819072889595760e-1 * wr_4_4;
  results[k++] =
      0.742307488958090266e0 * wr_2_0 + 0.135247037486608208e0 * wr_4_0;
  results[k++] = -0.547722557505166114e0 * wr_1_0;
  results[k++] =
      -0.160356745147454631e0 * wr_1_0 + 0.279941684889506069e0 * wr_3_0;
  results[k++] = 0.292770021884559954e0 * wr_3_0;
  results[k++] = 0.720749970156447168e0 * wr_5_4;
  results[k++] =
      -0.476190476190476190e-1 * wr_3_0 + 0.379868588198793162e0 * wr_5_0;
  results[k++] =
      0.600000000000000000e0 * wr_1_0 + 0.261861468283190857e0 * wr_3_0;
  results[k++] =
      -0.292770021884559954e0 * wr_1_0 - 0.127775312999987983e0 * wr_3_0;
  results[k++] = -0.328975847479884493e0 * wr_5_4;
  results[k++] = -0.139970842444753034e0 * wr_1_0 -
                 0.124721912892464713e0 * wr_3_0 -
                 0.253810376613821946e0 * wr_5_0;
  results[k++] = 0.328975847479884493e0 * wr_5_4;
  results[k++] =
      -0.130410132739325265e0 * wr_3_0 - 0.520156486610299385e0 * wr_5_0;
  results[k++] = 0.268607654675126766e0 * wr_5_4;
  results[k++] = -0.537852874200477139e0 * wr_1_0 +
                 0.243432247780073828e0 * wr_3_0 +
                 0.866927477683832308e-1 * wr_5_0;
  results[k++] = 0.561833218719368406e0 * wr_5_4;
  results[k++] = -0.597614304667196822e-1 * wr_1_0 +
                 0.365148371670110743e0 * wr_3_0 -
                 0.260078243305149693e0 * wr_5_0;
  results[k++] = -0.493463771219826740e0 * wr_5_4;
  results[k++] = 0.223606797749978970e0 * wr_3_0;
  results[k++] = -0.685714285714285714e0 * wr_1_0 +
                 0.800132264198638729e-1 * wr_3_0 +
                 0.207235304709164093e0 * wr_5_0;
  results[k++] = 0.561833218719368405e0 * wr_5_4;
  results[k++] = 0.179284291400159047e0 * wr_1_0 +
                 0.243432247780073828e0 * wr_3_0 -
                 0.433463738841916154e0 * wr_5_0;
  results[k++] = 0.112366643743873681e0 * wr_5_4;
  results[k++] = -0.874817765279706465e-1 * wr_1_0 -
                 0.178174161274949590e0 * wr_3_0 -
                 0.253810376613821946e-1 * wr_5_0;
  results[k++] = -0.381385035698236927e0 * wr_5_4;
  results[k++] = -0.279145263119541259e0 * wr_5_4;
  results[k++] =
      0.517549169506765664e0 * wr_1_0 - 0.270281238808667688e0 * wr_5_0;
  results[k++] = 0.116774841624228445e0 * wr_5_4;
  results[k++] = -0.310529501704059399e0 * wr_1_0 -
                 0.210818510677891956e0 * wr_3_0 +
                 0.330343736321704953e0 * wr_5_0;
  results[k++] = -0.284901441149094872e0 * wr_5_4;
  results[k++] =
      -0.314970394174356024e0 * wr_3_0 - 0.201007563051842415e0 * wr_5_0;
  results[k++] =
      -0.276641667586244063e0 * wr_3_0 + 0.441367414752374763e0 * wr_5_0;
  results[k++] = -0.512822594068370770e0 * wr_5_4;
  results[k++] =
      0.757614408414158062e0 * wr_1_0 - 0.263767480669998712e-1 * wr_5_0;
  results[k++] = -0.284901441149094872e0 * wr_5_4;
  results[k++] = 0.103509833901353133e0 * wr_1_0 +
                 0.271052370871575372e0 * wr_3_0 +
                 0.270281238808667688e0 * wr_5_0;
  results[k++] = 0.348155311911395676e0 * wr_5_4;
  results[k++] = -0.509647191437625545e0 * wr_5_4;
  results[k++] = 0.426401432711220869e0 * wr_5_4;
  results[k++] = 0.208062594644119753e0 * wr_5_4;
  results[k++] = 0.467099366496913781e0 * wr_5_4;
  results[k++] = 0.531816023478310428e0 * wr_5_4;
  results[k++] =
      0.430331482911935208e0 * wr_3_0 - 0.343285767029624816e0 * wr_5_0;
  results[k++] = 0.254256690465491285e0 * wr_5_4;
  results[k++] = -0.676123403782813265e0 * wr_1_0 +
                 0.258198889747161125e0 * wr_3_0 +
                 0.147122471584124921e0 * wr_5_0;
  results[k++] = -0.603022689155527245e0 * wr_5_0;
  results[k++] =
      0.245903704521105834e0 * wr_3_0 + 0.980816477227499474e-1 * wr_5_0;
  results[k++] = 0.265908011739155214e0 * wr_5_4;
  results[k++] =
      0.257172249936819850e0 * wr_3_0 + 0.287213478951776376e0 * wr_5_0;
  results[k++] = 0.189934294099396581e0 * wr_5_4;
  results[k++] = 0.828078671210825063e0 * wr_1_0 +
                 0.286110835919996226e0 * wr_3_0 +
                 0.600624975130372640e-1 * wr_5_0;
  results[k++] = wr_0_0 - 0.178885438199983176e0 * wr_2_0;
  results[k++] = -0.489897948556635620e0 * wr_2_0;
  results[k++] = -0.577350269189625763e0 * wr_4_4;
  results[k++] =
      0.191236577493502982e0 * wr_2_0 - 0.267261241912424385e0 * wr_4_0;
  results[k++] = 0.200000000000000000e0 * wr_4_4;
  results[k++] = 0.316227766016837934e0 * wr_4_0;
  results[k++] =
      -0.102934275831326886e0 * wr_6_4 + 0.995859195463938390e-1 * wr_4_4;
  results[k++] =
      0.148453923805041097e-1 * wr_4_4 - 0.690504113920681783e0 * wr_6_4;
  results[k++] =
      -0.574959574576068970e-1 * wr_4_0 + 0.398662736048649643e0 * wr_6_0;
  results[k++] = -0.489897948556635620e0 * wr_2_0;
  results[k++] = wr_0_0 + 0.638876564999939914e-1 * wr_2_0 +
                 0.285714285714285714e0 * wr_4_0;
  results[k++] = 0.305505046330389333e0 * wr_2_0;
  results[k++] =
      -0.411737103325307545e0 * wr_6_4 + 0.398343678185575357e0 * wr_4_4;
  results[k++] = -0.184427778390829375e0 * wr_2_0 -
                 0.899766653282533658e-1 * wr_4_0 -
                 0.291142097827431151e0 * wr_6_0;
  results[k++] =
      0.281897124066382855e0 * wr_6_4 - 0.272727272727272727e0 * wr_4_4;
  results[k++] =
      -0.126068226414824800e0 * wr_6_4 + 0.121967344227261256e0 * wr_4_4;
  results[k++] =
      -0.157459164324443390e0 * wr_4_0 - 0.509498671198004514e0 * wr_6_0;
  results[k++] = -0.577350269189625763e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.236029397624977803e0 * wr_2_0 -
                 0.136363636363636364e0 * wr_4_0 -
                 0.175094758909478889e-1 * wr_6_0;
  results[k++] =
      -0.294579122654902737e0 * wr_4_4 - 0.253736411764046840e0 * wr_6_4;
  results[k++] = -0.451848057057531971e0 * wr_2_0 +
                 0.183702358378517289e0 * wr_4_0 +
                 0.127374667799501129e0 * wr_6_0;
  results[k++] =
      0.116183572804126145e0 * wr_4_4 + 0.540404948114466153e0 * wr_6_4;
  results[k++] = 0.702728368926306519e-1 * wr_2_0 -
                 0.385694607919935013e0 * wr_4_0 +
                 0.277335948680260247e0 * wr_6_0;
  results[k++] =
      0.995859195463938390e-1 * wr_4_4 - 0.480359953879525470e0 * wr_6_4;
  results[k++] =
      0.191236577493502982e0 * wr_2_0 - 0.267261241912424385e0 * wr_4_0;
  results[k++] = 0.305505046330389333e0 * wr_2_0;
  results[k++] =
      -0.294579122654902737e0 * wr_4_4 - 0.253736411764046840e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.141617638574986681e0 * wr_2_0 -
                 0.454545454545454545e-1 * wr_4_0 -
                 0.262642138364218334e0 * wr_6_0;
  results[k++] =
      -0.238105470067432634e0 * wr_4_4 + 0.439484356905546509e0 * wr_6_4;
  results[k++] = 0.220479275922049216e0 * wr_2_0 +
                 0.161347630448171347e0 * wr_4_0 -
                 0.435067316590649163e0 * wr_6_0;
  results[k++] =
      0.385144793516510629e0 * wr_6_4 - 0.372616391489439941e0 * wr_4_4;
  results[k++] =
      -0.333278232360424727e0 * wr_4_4 - 0.287069979827679347e0 * wr_6_4;
  results[k++] =
      -0.125988157669742409e0 * wr_2_0 - 0.169030850945703316e0 * wr_4_0;
  results[k++] = 0.200000000000000000e0 * wr_4_4;
  results[k++] =
      -0.411737103325307545e0 * wr_6_4 + 0.398343678185575357e0 * wr_4_4;
  results[k++] = -0.451848057057531971e0 * wr_2_0 +
                 0.183702358378517289e0 * wr_4_0 +
                 0.127374667799501129e0 * wr_6_0;
  results[k++] =
      -0.238105470067432634e0 * wr_4_4 + 0.439484356905546509e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.111803398874989485e0 * wr_2_0 +
                 0.136363636363636364e0 * wr_4_0 -
                 0.321473977357803241e0 * wr_6_0;
  results[k++] =
      -0.143739893644017243e0 * wr_4_4 - 0.802293280110752860e-1 * wr_6_4;
  results[k++] = 0.365148371670110744e0 * wr_2_0 +
                 0.742269619025205484e-1 * wr_4_0 -
                 0.288215972327715282e0 * wr_6_0;
  results[k++] =
      0.287479787288034485e0 * wr_4_4 - 0.166401569208156148e0 * wr_6_4;
  results[k++] = 0.316227766016837934e0 * wr_4_0;
  results[k++] = -0.184427778390829375e0 * wr_2_0 -
                 0.899766653282533658e-1 * wr_4_0 -
                 0.291142097827431151e0 * wr_6_0;
  results[k++] =
      0.116183572804126145e0 * wr_4_4 + 0.540404948114466153e0 * wr_6_4;
  results[k++] = 0.220479275922049216e0 * wr_2_0 +
                 0.161347630448171347e0 * wr_4_0 -
                 0.435067316590649163e0 * wr_6_0;
  results[k++] =
      -0.143739893644017243e0 * wr_4_4 - 0.802293280110752860e-1 * wr_6_4;
  results[k++] = wr_0_0 + 0.271522540124974465e0 * wr_2_0 -
                 0.584415584415584416e-1 * wr_4_0 +
                 0.189102339622237201e-1 * wr_6_0;
  results[k++] =
      0.325506760927014946e0 * wr_6_4 - 0.314918328648886780e0 * wr_4_4;
  results[k++] =
      0.469452526813020227e0 * wr_4_4 + 0.262027888044688036e0 * wr_6_4;
  results[k++] = 0.149071198499985980e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 +
                 0.235327355974339627e0 * wr_6_0;
  results[k++] =
      -0.102934275831326886e0 * wr_6_4 + 0.995859195463938390e-1 * wr_4_4;
  results[k++] =
      0.281897124066382855e0 * wr_6_4 - 0.272727272727272727e0 * wr_4_4;
  results[k++] =
      0.385144793516510629e0 * wr_6_4 - 0.372616391489439941e0 * wr_4_4;
  results[k++] =
      0.325506760927014946e0 * wr_6_4 - 0.314918328648886780e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.745355992499929899e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 -
                 0.420227421382749334e-1 * wr_6_0;
  results[k++] =
      0.162753380463507473e0 * wr_6_4 - 0.157459164324443390e0 * wr_4_4;
  results[k++] =
      0.148453923805041097e-1 * wr_4_4 - 0.690504113920681783e0 * wr_6_4;
  results[k++] =
      -0.126068226414824800e0 * wr_6_4 + 0.121967344227261256e0 * wr_4_4;
  results[k++] = 0.702728368926306519e-1 * wr_2_0 -
                 0.385694607919935013e0 * wr_4_0 +
                 0.277335948680260247e0 * wr_6_0;
  results[k++] =
      -0.333278232360424727e0 * wr_4_4 - 0.287069979827679347e0 * wr_6_4;
  results[k++] = 0.365148371670110744e0 * wr_2_0 +
                 0.742269619025205484e-1 * wr_4_0 -
                 0.288215972327715282e0 * wr_6_0;
  results[k++] =
      0.469452526813020227e0 * wr_4_4 + 0.262027888044688036e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.496903994999953266e-1 * wr_2_0 -
                 0.272727272727272727e0 * wr_4_0 -
                 0.812439681339982046e-1 * wr_6_0;
  results[k++] =
      -0.352089395109765171e0 * wr_4_4 - 0.630807878626100827e-1 * wr_6_4;
  results[k++] =
      -0.574959574576068970e-1 * wr_4_0 + 0.398662736048649643e0 * wr_6_0;
  results[k++] =
      -0.157459164324443390e0 * wr_4_0 - 0.509498671198004514e0 * wr_6_0;
  results[k++] =
      0.995859195463938390e-1 * wr_4_4 - 0.480359953879525470e0 * wr_6_4;
  results[k++] =
      -0.125988157669742409e0 * wr_2_0 - 0.169030850945703316e0 * wr_4_0;
  results[k++] =
      0.287479787288034485e0 * wr_4_4 - 0.166401569208156148e0 * wr_6_4;
  results[k++] = 0.149071198499985980e0 * wr_2_0 +
                 0.272727272727272727e0 * wr_4_0 +
                 0.235327355974339627e0 * wr_6_0;
  results[k++] =
      0.162753380463507473e0 * wr_6_4 - 0.157459164324443390e0 * wr_4_4;
  results[k++] =
      -0.352089395109765171e0 * wr_4_4 - 0.630807878626100827e-1 * wr_6_4;
  results[k++] = wr_0_0 + 0.447213595499957940e0 * wr_2_0 +
                 0.181818181818181818e0 * wr_4_0 +
                 0.336181937106199468e-1 * wr_6_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 4)
  cmplx wr_7_0 = wzeta.eval_wr_lm(7, 0);
  cmplx wr_7_4 = wzeta.eval_wr_lm(7, 4);
  cmplx wr_8_0 = wzeta.eval_wr_lm(8, 0);
  cmplx wr_8_4 = wzeta.eval_wr_lm(8, 4);
  cmplx wr_8_8 = wzeta.eval_wr_lm(8, 8);
  results[k++] = -0.356348322549899180e0 * wr_4_0;
  results[k++] = -0.683130051063973227e0 * wr_4_4;
  results[k++] = 0.527046276694729891e0 * wr_4_0;
  results[k++] = -0.617914380653324670e0 * wr_4_4;
  results[k++] = 0.139572631559770631e0 * wr_4_0;
  results[k++] = 0.816496580927726033e0 * wr_4_4;
  results[k++] = -0.365148371670110742e0 * wr_4_4;
  results[k++] = -0.471404520791031683e0 * wr_4_0;
  results[k++] = 0.577350269189625763e0 * wr_4_4;
  results[k++] = 0.134839972492648417e0 * wr_4_4;
  results[k++] = -0.594588390010563136e0 * wr_4_0;
  results[k++] = 0.383325938999963950e0 * wr_3_0;
  results[k++] = 0.285714285714285714e0 * wr_3_0;
  results[k++] = 0.550481882563180302e0 * wr_5_4;
  results[k++] =
      -0.212958854999979971e-1 * wr_3_0 + 0.424705992864687954e0 * wr_5_0;
  results[k++] = -0.291287632501767655e0 * wr_5_4;
  results[k++] =
      0.100503781525921207e0 * wr_5_0 - 0.125988157669742409e0 * wr_3_0;
  results[k++] = 0.651338947278929605e0 * wr_5_4;
  results[k++] = -0.566946709513840841e0 * wr_3_0;
  results[k++] =
      -0.140859042454752763e0 * wr_3_0 - 0.224733287487747362e0 * wr_5_0;
  results[k++] = 0.651338947278929608e0 * wr_5_4;
  results[k++] =
      -0.125988157669742409e0 * wr_3_0 - 0.502518907629606037e0 * wr_5_0;
  results[k++] = 0.235663298123922190e0 * wr_5_4;
  results[k++] = 0.263479577203444336e0 * wr_5_4;
  results[k++] =
      -0.272727272727272727e0 * wr_5_0 + 0.341881729378913846e0 * wr_3_0;
  results[k++] = 0.117831649061961095e0 * wr_5_4;
  results[k++] =
      -0.305838870920598309e0 * wr_3_0 + 0.124205463829813314e0 * wr_5_0;
  results[k++] =
      0.410325903324144904e0 * wr_3_0 - 0.416597790450530909e0 * wr_5_0;
  results[k++] = -0.517463617118462073e0 * wr_5_4;
  results[k++] =
      -0.166821202320326350e0 * wr_3_0 - 0.266154565349599958e-1 * wr_5_0;
  results[k++] = 0.233549683248456891e0 * wr_5_4;
  results[k++] = -0.522232967867093514e0 * wr_5_4;
  results[k++] = -0.467099366496913781e0 * wr_5_4;
  results[k++] = 0.313339780720256109e0 * wr_5_4;
  results[k++] = 0.544949260913066078e0 * wr_5_4;
  results[k++] =
      0.376050716545177472e0 * wr_5_0 - 0.471404520791031683e0 * wr_3_0;
  results[k++] = -0.278524249529116540e0 * wr_5_4;
  results[k++] = 0.404519917477945253e0 * wr_5_0;
  results[k++] =
      0.503952630678969636e0 * wr_3_0 - 0.100503781525921207e0 * wr_5_0;
  results[k++] = 0.291287632501767655e0 * wr_5_4;
  results[k++] =
      0.281718084909505526e0 * wr_3_0 + 0.314626602482846307e0 * wr_5_0;
  results[k++] = -0.825722823844770454e0 * wr_5_4;
  results[k++] = 0.369274472937998197e0 * wr_5_4;
  results[k++] = -0.192847303959967507e0 * wr_5_4;
  results[k++] = -0.373723723474444832e0 * wr_5_4;
  results[k++] =
      0.277731860300353940e0 * wr_5_0 - 0.348155311911395676e0 * wr_3_0;
  results[k++] = 0.257129738613290009e0 * wr_5_4;
  results[k++] = 0.510226007287355645e0 * wr_5_0;
  results[k++] = 0.380300012060943431e0 * wr_5_0;
  results[k++] = -0.104972776216295593e0 * wr_5_4;
  results[k++] =
      0.710669054518701448e0 * wr_3_0 + 0.113383557174967921e0 * wr_5_0;
  results[k++] = -0.585540043769119909e0 * wr_2_0;
  results[k++] =
      -0.122448979591836735e0 * wr_2_0 + 0.304226935714257102e0 * wr_4_0;
  results[k++] = -0.412393049421161259e0 * wr_4_4;
  results[k++] =
      0.512240832571882989e-1 * wr_2_0 + 0.318168145133838554e0 * wr_4_0;
  results[k++] =
      0.112470831660316707e0 * wr_4_4 + 0.651013521854029892e0 * wr_6_4;
  results[k++] = -0.833159776456863298e-2 * wr_2_0 -
                 0.254045713128555712e-1 * wr_4_0 +
                 0.460336075947121191e0 * wr_6_0;
  results[k++] = 0.597614304667196822e0 * wr_4_4;
  results[k++] = 0.583211843519804309e-1 * wr_4_4;
  results[k++] = 0.252538136138052687e0 * wr_2_0 -
                 0.164274164164591135e0 * wr_4_0 -
                 0.199331368024324821e-1 * wr_6_0;
  results[k++] =
      -0.354872753799466611e0 * wr_4_4 - 0.288858595137382972e0 * wr_6_4;
  results[k++] = 0.505076272276105375e-1 * wr_2_0 -
                 0.205342705205738918e0 * wr_4_0 +
                 0.139531957617027376e0 * wr_6_0;
  results[k++] =
      -0.129870129870129870e0 * wr_4_4 + 0.591983960539403996e0 * wr_6_4;
  results[k++] =
      0.494871659305393511e0 * wr_2_0 + 0.276641667586244063e0 * wr_4_0;
  results[k++] =
      -0.362208966312221391e0 * wr_2_0 - 0.449957705963365747e-1 * wr_4_0;
  results[k++] =
      -0.354872753799466611e0 * wr_4_4 - 0.288858595137382972e0 * wr_6_4;
  results[k++] = -0.151522881682831613e0 * wr_2_0 -
                 0.547580547215303781e-1 * wr_4_0 -
                 0.298997052036487233e0 * wr_6_0;
  results[k++] =
      0.266154565349599958e0 * wr_4_4 + 0.481430991895638286e0 * wr_6_4;
  results[k++] = -0.246451985479412221e-1 * wr_2_0 -
                 0.180354564890756778e0 * wr_4_0 -
                 0.476592366659880293e0 * wr_6_0;
  results[k++] = 0.108112495523467075e0 * wr_4_4;
  results[k++] =
      -0.311725204428180297e0 * wr_4_4 + 0.333111718119523252e0 * wr_6_4;
  results[k++] = -0.502544545695367454e0 * wr_2_0 +
                 0.222887358524943659e0 * wr_4_0 +
                 0.126211404458032352e0 * wr_6_0;
  results[k++] =
      -0.288895035110645301e0 * wr_4_4 + 0.435470717063580965e0 * wr_6_4;
  results[k++] = 0.456858677904879503e-1 * wr_2_0 +
                 0.334331037787415488e0 * wr_4_0 -
                 0.306513410826649997e0 * wr_6_0;
  results[k++] =
      -0.352415857298684754e0 * wr_4_4 - 0.764956628188737691e-1 * wr_6_4;
  results[k++] = 0.170940864689456923e0 * wr_4_0;
  results[k++] = -0.586179861891635575e0 * wr_2_0 +
                 0.704115464339039791e-1 * wr_4_0 +
                 0.235545554775016627e0 * wr_6_0;
  results[k++] =
      0.140966342919473902e0 * wr_4_4 + 0.535469639732116383e0 * wr_6_4;
  results[k++] = 0.245216629401998281e0 * wr_2_0 +
                 0.195764210499418546e0 * wr_4_0 -
                 0.431094015861357090e0 * wr_6_0;
  results[k++] =
      -0.352415857298684754e0 * wr_4_4 - 0.764956628188737691e-1 * wr_6_4;
  results[k++] = -0.110951393205470736e0 * wr_2_0 -
                 0.143284730480320924e0 * wr_4_0 +
                 0.180302006368617645e-1 * wr_6_0;
  results[k++] =
      -0.545454545454545455e0 * wr_4_4 - 0.563794248132765711e-1 * wr_6_4;
  results[k++] =
      0.443590942249333264e0 * wr_4_4 + 0.247593081546328261e0 * wr_6_4;
  results[k++] =
      0.742269619025205484e-1 * wr_4_4 - 0.414302468352409070e0 * wr_6_4;
  results[k++] =
      0.325971438909380084e0 * wr_4_4 - 0.336931507573227809e0 * wr_6_4;
  results[k++] =
      -0.813115628181741708e-1 * wr_4_4 - 0.378204679244474401e0 * wr_6_4;
  results[k++] =
      -0.198379900214538528e0 * wr_4_4 - 0.110726992219247748e0 * wr_6_4;
  results[k++] = -0.298331874233587997e0 * wr_6_0 +
                 0.377964473009227227e0 * wr_2_0 +
                 0.768322049753196889e-1 * wr_4_0;
  results[k++] =
      0.663906130309292260e-1 * wr_4_4 + 0.308802827493980658e0 * wr_6_4;
  results[k++] = 0.298331874233587997e0 * wr_6_0 -
                 0.377964473009227227e0 * wr_2_0 -
                 0.768322049753196889e-1 * wr_4_0;
  results[k++] =
      -0.485929530749862518e0 * wr_4_4 - 0.271224631690280131e0 * wr_6_4;
  results[k++] =
      -0.314918328648886780e0 * wr_4_0 - 0.218356573370573363e0 * wr_6_0;
  results[k++] =
      -0.256107349917732296e0 * wr_4_0 + 0.447497811350381995e0 * wr_6_0;
  results[k++] =
      0.198379900214538528e-1 * wr_4_4 - 0.516725963689822823e0 * wr_6_4;
  results[k++] =
      0.677630927178938431e0 * wr_2_0 - 0.336717514850736916e-1 * wr_4_0;
  results[k++] =
      0.297569850321807792e0 * wr_4_4 - 0.172241987896607608e0 * wr_6_4;
  results[k++] = 0.154303349962091910e0 * wr_2_0 +
                 0.282299547003690362e0 * wr_4_0 +
                 0.243586955293484967e0 * wr_6_0;
  results[k++] = 0.438529009653514607e0 * wr_6_4;
  results[k++] =
      -0.250932930669946988e0 * wr_4_4 - 0.525224240808847669e0 * wr_6_4;
  results[k++] =
      0.524863881081477966e0 * wr_4_4 + 0.292956084834313451e0 * wr_6_4;
  results[k++] =
      0.460993229851918134e0 * wr_4_4 + 0.476493107600871952e-1 * wr_6_4;
  results[k++] = 0.512091556499189153e0 * wr_6_4;
  results[k++] =
      -0.586053064745731126e-1 * wr_4_4 + 0.477034269737346299e0 * wr_6_4;
  results[k++] =
      0.397210407956955893e0 * wr_4_0 - 0.330499036854640118e0 * wr_6_0;
  results[k++] =
      -0.245163586350269850e0 * wr_4_4 + 0.114033001364603287e0 * wr_6_4;
  results[k++] = -0.558290526239082519e0 * wr_2_0 +
                 0.283721719969254209e0 * wr_4_0 +
                 0.110166345618213372e0 * wr_6_0;
  results[k++] =
      0.358882742705328538e0 * wr_4_4 + 0.778993700451795715e-1 * wr_6_4;
  results[k++] = -0.605914900900173548e0 * wr_6_0;
  results[k++] =
      0.258425110734073254e0 * wr_4_0 + 0.806335085439658117e-1 * wr_6_0;
  results[k++] =
      -0.500438075057436640e-1 * wr_4_4 + 0.279322667181375902e0 * wr_6_4;
  results[k++] =
      0.270267450004801426e0 * wr_4_0 + 0.269851333591720173e0 * wr_6_0;
  results[k++] =
      -0.150131422517230992e0 * wr_4_4 + 0.155179259545208835e0 * wr_6_4;
  results[k++] = 0.778498944161522970e0 * wr_2_0 +
                 0.237378621757769779e0 * wr_4_0 +
                 0.438913226895697797e-1 * wr_6_0;
  results[k++] =
      0.717137165600636186e0 * wr_1_0 - 0.156492159287190318e0 * wr_3_0;
  results[k++] =
      -0.218217890235992381e0 * wr_1_0 - 0.428571428571428571e0 * wr_3_0;
  results[k++] = -0.360374985078223584e0 * wr_5_4;
  results[k++] = 0.851835419999919885e-1 * wr_1_0 +
                 0.975900072948533181e-1 * wr_3_0 -
                 0.278035337200543917e0 * wr_5_0;
  results[k++] = -0.208062594644119753e0 * wr_5_4;
  results[k++] =
      0.824786098842322518e-1 * wr_3_0 + 0.328975847479884493e0 * wr_5_0;
  results[k++] =
      0.131492972838043787e0 * wr_5_4 - 0.102272312207367390e0 * wr_7_4;
  results[k++] =
      -0.137212705387053032e0 * wr_5_4 - 0.686063526935265157e0 * wr_7_4;
  results[k++] = -0.149961108880422276e-1 * wr_3_0 -
                 0.253058344215295764e-1 * wr_5_0 +
                 0.482663851768033944e0 * wr_7_0;
  results[k++] = 0.374512670359415557e0 * wr_5_4;
  results[k++] = -0.472455591261534033e0 * wr_1_0 +
                 0.288675134594812882e0 * wr_3_0 +
                 0.164487923739942247e-1 * wr_5_0;
  results[k++] = 0.106600358177805217e0 * wr_5_4;
  results[k++] =
      -0.545544725589980954e-1 * wr_1_0 + 0.318181818181818182e0 * wr_3_0 -
      0.186281711520562032e0 * wr_5_0 - 0.334399325695651230e-1 * wr_7_0;
  results[k++] =
      -0.353444696903642363e0 * wr_5_4 - 0.271667296443583932e0 * wr_7_4;
  results[k++] = -0.742269619025205484e-1 * wr_3_0 +
                 0.250514979722665233e0 * wr_5_0 -
                 0.163821543657021786e0 * wr_7_0;
  results[k++] =
      -0.194048068888274238e0 * wr_5_4 + 0.543334592887167863e0 * wr_7_4;
  results[k++] = -0.462910049886275731e0 * wr_3_0;
  results[k++] =
      0.737711113563317500e0 * wr_1_0 + 0.288942798198532323e0 * wr_5_0;
  results[k++] = 0.106600358177805217e0 * wr_5_4;
  results[k++] = 0.157485197087178011e0 * wr_1_0 +
                 0.288675134594812882e0 * wr_3_0 -
                 0.822439618699711234e-1 * wr_5_0;
  results[k++] =
      0.804828979480252482e-1 * wr_5_4 - 0.397680201625536520e0 * wr_7_4;
  results[k++] =
      -0.798595706249924893e-1 * wr_1_0 - 0.155256829787266642e0 * wr_3_0 -
      0.181792335861894100e-1 * wr_5_0 - 0.342657342657342657e0 * wr_7_0;
  results[k++] =
      -0.311169167290727117e0 * wr_5_4 + 0.242020463448343313e0 * wr_7_4;
  results[k++] =
      -0.185545442817085306e0 * wr_5_4 - 0.324704524929899286e0 * wr_7_4;
  results[k++] = -0.443590942249333264e-1 * wr_3_0 -
                 0.209595869581948492e0 * wr_5_0 -
                 0.456876456876456876e0 * wr_7_0;
  results[k++] = -0.494789855575715643e0 * wr_5_4;
  results[k++] = 0.376399396004920483e-1 * wr_5_4;
  results[k++] =
      0.522319308773340599e0 * wr_1_0 - 0.712135865273309339e-1 * wr_3_0 -
      0.181975408466028611e0 * wr_5_0 - 0.291057253851324612e-1 * wr_7_0;
  results[k++] =
      0.786223623836790605e-1 * wr_5_4 - 0.346136186594813473e0 * wr_7_4;
  results[k++] =
      -0.325686089005085649e0 * wr_1_0 - 0.189129843416960818e0 * wr_3_0 +
      0.109028213368046316e0 * wr_5_0 + 0.181485342569507945e0 * wr_7_0;
  results[k++] =
      -0.940302227623211785e-1 * wr_5_4 + 0.491464630971065358e0 * wr_7_4;
  results[k++] =
      0.429772247480202826e-1 * wr_1_0 - 0.120853463870617592e0 * wr_3_0 -
      0.291341989438914795e0 * wr_5_0 + 0.312829008025945135e0 * wr_7_0;
  results[k++] =
      -0.376120891049284712e0 * wr_5_4 - 0.163821543657021786e0 * wr_7_4;
  results[k++] =
      0.204313411981198354e0 * wr_3_0 - 0.260777151127504067e0 * wr_5_0;
  results[k++] =
      0.298418838781196294e0 * wr_3_0 - 0.595139700643615584e-1 * wr_5_0;
  results[k++] =
      -0.345274061335282828e0 * wr_5_4 - 0.236456030823603893e0 * wr_7_4;
  results[k++] =
      0.764597177301495774e0 * wr_1_0 + 0.347486721434744691e-1 * wr_3_0 -
      0.177589814396836445e-1 * wr_5_0 - 0.298244935028992799e0 * wr_7_0;
  results[k++] =
      -0.940302227623211785e-1 * wr_5_4 + 0.491464630971065358e0 * wr_7_4;
  results[k++] =
      0.108562029668361883e0 * wr_1_0 + 0.243166941536092480e0 * wr_3_0 +
      0.892049018465833491e-1 * wr_5_0 - 0.423465799328851872e0 * wr_7_0;
  results[k++] =
      -0.412019792753272328e0 * wr_5_4 + 0.320459838808100699e0 * wr_7_4;
  results[k++] = -0.124205463829813314e0 * wr_7_4;
  results[k++] =
      -0.526361355967815189e-1 * wr_1_0 - 0.133918025773500206e0 * wr_3_0 -
      0.118939869128777799e0 * wr_5_0 + 0.403300761265573209e-1 * wr_7_0;
  results[k++] = 0.190692517849118463e0 * wr_5_4;
  results[k++] =
      -0.361545900831064740e0 * wr_5_4 - 0.669529445983453222e-1 * wr_7_4;
  results[k++] =
      -0.164655246464463638e0 * wr_5_4 - 0.228687842311755052e0 * wr_7_4;
  results[k++] =
      0.231931803521356633e0 * wr_5_4 - 0.347897705282034949e0 * wr_7_4;
  results[k++] =
      0.364859576748217433e-1 * wr_7_0 + 0.416597790450530909e0 * wr_3_0 -
      0.333333333333333333e0 * wr_1_0 - 0.200858833795035967e0 * wr_5_0;
  results[k++] =
      0.347897705282034949e0 * wr_5_4 - 0.270587104108249405e0 * wr_7_4;
  results[k++] = 0.255840859626732522e0 * wr_5_4;
  results[k++] =
      0.377272565247507285e0 * wr_5_4 - 0.449134006247032482e0 * wr_7_4;
  results[k++] = -0.392772163539870317e0 * wr_3_0 +
                 0.132560067208512173e0 * wr_5_0 +
                 0.154796808539710877e0 * wr_7_0;
  results[k++] =
      -0.981814197190726943e-1 * wr_5_4 + 0.306816936622102170e0 * wr_7_4;
  results[k++] =
      0.653197264742180827e0 * wr_1_0 - 0.136060268609961505e0 * wr_3_0 +
      0.164000551042777257e0 * wr_5_0 - 0.339613520504368734e0 * wr_7_0;
  results[k++] = 0.134839972492648417e0 * wr_7_4;
  results[k++] =
      0.200000000000000000e0 * wr_1_0 + 0.305505046330389333e0 * wr_3_0 -
      0.669529445983453222e-1 * wr_5_0 - 0.240807320653823505e0 * wr_7_0;
  results[k++] =
      -0.259307639408939264e0 * wr_5_4 - 0.217818417103508982e0 * wr_7_4;
  results[k++] = 0.330289129537908181e0 * wr_5_0;
  results[k++] = -0.206162439823214851e0 * wr_3_0 -
                 0.695795410564069898e-1 * wr_5_0 -
                 0.315977662277994384e0 * wr_7_0;
  results[k++] =
      0.102680586534140711e0 * wr_5_4 + 0.513402932670703555e0 * wr_7_4;
  results[k++] = 0.234726263406510114e0 * wr_3_0 +
                 0.110907709348032633e0 * wr_5_0 -
                 0.431707673134082380e0 * wr_7_0;
  results[k++] =
      -0.211723800985838578e0 * wr_5_4 - 0.177847992828104406e0 * wr_7_4;
  results[k++] =
      0.800000000000000000e0 * wr_1_0 + 0.150768724163049281e0 * wr_3_0 -
      0.669529445983453222e-1 * wr_5_0 + 0.437831492097860920e-1 * wr_7_0;
  results[k++] =
      -0.347897705282034949e0 * wr_5_4 + 0.270587104108249405e0 * wr_7_4;
  results[k++] =
      0.259307639408939264e0 * wr_5_4 + 0.217818417103508982e0 * wr_7_4;
  results[k++] =
      0.666666666666666667e-1 * wr_1_0 + 0.194412302210247757e0 * wr_3_0 +
      0.267811778393381289e0 * wr_5_0 + 0.204321362979001763e0 * wr_7_0;
  results[k++] =
      0.103723055763575706e0 * wr_5_4 - 0.155584583645363558e0 * wr_7_4;
  results[k++] =
      -0.170434372125229937e0 * wr_5_4 + 0.378743049167177638e0 * wr_7_4;
  results[k++] = 0.420437482591260847e0 * wr_7_4;
  results[k++] =
      0.262400881668443612e0 * wr_5_4 + 0.246000826564165886e0 * wr_7_4;
  results[k++] =
      -0.515989361799036255e-1 * wr_7_0 - 0.589158245309805476e0 * wr_3_0 +
      0.471404520791031683e0 * wr_1_0 + 0.284057286875383229e0 * wr_5_0;
  results[k++] =
      0.295200991876999063e0 * wr_5_4 + 0.546668503475924191e-1 * wr_7_4;
  results[k++] =
      0.242244868191451369e-1 * wr_5_4 - 0.666173387526491265e0 * wr_7_4;
  results[k++] = 0.172487872372820691e0 * wr_5_4;
  results[k++] = 0.725203668379514220e-1 * wr_3_0 -
                 0.391608391608391608e0 * wr_5_0 +
                 0.285812549429929762e0 * wr_7_0;
  results[k++] =
      -0.362558920190649524e0 * wr_5_4 - 0.339898987678733928e0 * wr_7_4;
  results[k++] =
      0.376826879840594965e0 * wr_3_0 - 0.257421765667783343e0 * wr_7_0;
  results[k++] =
      0.306418213988904120e0 * wr_5_4 + 0.187681156068203773e0 * wr_7_4;
  results[k++] =
      0.738548945875996396e0 * wr_1_0 - 0.102559286330502947e0 * wr_3_0 -
      0.247240133282009624e0 * wr_5_0 - 0.485039980440284743e-1 * wr_7_0;
  results[k++] =
      -0.383022767486130150e-1 * wr_5_4 + 0.766045534972260299e-2 * wr_7_4;
  results[k++] =
      -0.640919677616201398e-1 * wr_5_0 + 0.411638116161159094e0 * wr_7_0;
  results[k++] =
      -0.175523082489666199e0 * wr_5_0 - 0.501029959445330466e0 * wr_7_0;
  results[k++] =
      0.148014059360256816e0 * wr_5_4 - 0.462543935500802550e0 * wr_7_4;
  results[k++] = -0.148031578927029456e0 * wr_3_0 -
                 0.159873456405428874e0 * wr_5_0 +
                 0.155576646263849562e-1 * wr_7_0;
  results[k++] =
      0.341823828061974079e0 * wr_5_4 - 0.961379516424302097e-1 * wr_7_4;
  results[k++] = 0.175153326270102824e0 * wr_3_0 +
                 0.270235463798404449e0 * wr_5_0 +
                 0.213007748532583044e0 * wr_7_0;
  results[k++] =
      -0.175523082489666199e0 * wr_5_4 + 0.136517953047518155e0 * wr_7_4;
  results[k++] =
      -0.287819798982610876e0 * wr_5_4 - 0.784963088134393298e-1 * wr_7_4;
  results[k++] =
      0.840874965182521696e0 * wr_1_0 + 0.350306652540205647e0 * wr_3_0 +
      0.135117731899202225e0 * wr_5_0 + 0.210378023242057327e-1 * wr_7_0;
  results[k++] = wr_0_0 + 0.228170201785692826e0 * wr_2_0 -
                 0.122448979591836735e0 * wr_4_0;
  results[k++] = 0.469476477861570956e0 * wr_4_4;
  results[k++] =
      -0.269974623578019447e0 * wr_2_0 - 0.362208966312221391e0 * wr_4_0;
  results[k++] =
      -0.347447006397020294e0 * wr_4_4 - 0.372430222908501201e0 * wr_6_4;
  results[k++] = 0.119158001657375965e0 * wr_2_0 +
                 0.784802790301198047e-1 * wr_4_0 -
                 0.263347936137418678e0 * wr_6_0;
  results[k++] =
      -0.178541910193084675e0 * wr_4_4 + 0.184544987032079580e0 * wr_6_4;
  results[k++] =
      0.798463696048799876e-1 * wr_4_4 - 0.825310271821094205e-1 * wr_6_4;
  results[k++] =
      0.103081219911607425e0 * wr_4_0 + 0.333545175320610366e0 * wr_6_0;
  results[k++] = 0.194227992959276530e-1 * wr_4_4 +
                 0.156591614117240335e0 * wr_6_4 -
                 0.163032987725007410e0 * wr_8_4;
  results[k++] = 0.453618862336225490e-2 * wr_4_4 -
                 0.142224140630623609e0 * wr_6_4 -
                 0.698065548440792421e0 * wr_8_4;
  results[k++] = -0.200027116624949438e-1 * wr_4_0 -
                 0.240402675158156860e-1 * wr_6_0 +
                 0.498074004683101846e0 * wr_8_0;
  results[k++] = 0.469476477861570956e0 * wr_4_4;
  results[k++] = wr_0_0 - 0.399297853124962445e0 * wr_2_0 -
                 0.584415584415584416e-1 * wr_4_0 +
                 0.189102339622237201e-1 * wr_6_0;
  results[k++] =
      -0.126248195423529745e0 * wr_4_4 + 0.274035324705170587e0 * wr_6_4;
  results[k++] = -0.418967057387871868e0 * wr_2_0 +
                 0.264311892974013565e0 * wr_4_0 +
                 0.399115504776111504e-1 * wr_6_0;
  results[k++] =
      0.167165518893707744e0 * wr_4_4 + 0.169330367942328204e0 * wr_6_4;
  results[k++] = -0.751250157850843527e0 * wr_8_8;
  results[k++] =
      -0.651942877818760169e-1 * wr_2_0 + 0.336412752057597128e0 * wr_4_0 -
      0.188681644241007573e0 * wr_6_0 - 0.444223530825958814e-1 * wr_8_0;
  results[k++] = 0.868613990780585731e-1 * wr_4_4 -
                 0.326806194281060772e0 * wr_6_4 -
                 0.255186990189603751e0 * wr_8_4;
  results[k++] = -0.531214080983795704e0 * wr_8_8;
  results[k++] = -0.869600491939834535e-1 * wr_4_0 +
                 0.278701258920691817e0 * wr_6_0 -
                 0.180444451233653789e0 * wr_8_0;
  results[k++] = 0.109559363888201437e-1 * wr_4_4 -
                 0.235545554775016626e0 * wr_6_4 +
                 0.505796542799543819e0 * wr_8_4;
  results[k++] =
      -0.269974623578019447e0 * wr_2_0 - 0.362208966312221391e0 * wr_4_0;
  results[k++] =
      -0.126248195423529745e0 * wr_4_4 + 0.274035324705170587e0 * wr_6_4;
  results[k++] = wr_0_0 + 0.239578711874977468e0 * wr_2_0 -
                 0.194805194805194805e-1 * wr_4_0 +
                 0.283653509433355801e0 * wr_6_0;
  results[k++] =
      -0.342587368373982455e0 * wr_4_4 + 0.137707932022766716e0 * wr_6_4;
  results[k++] = 0.204434990933928221e0 * wr_2_0 +
                 0.232147796071054259e0 * wr_4_0 -
                 0.136323897579064251e0 * wr_6_0;
  results[k++] = 0.325005595485937081e0 * wr_4_4 -
                 0.262027888044688036e0 * wr_6_4 -
                 0.682015919179671566e-1 * wr_8_4;
  results[k++] = 0.290693841829741643e0 * wr_4_4 +
                 0.195304056556208968e0 * wr_6_4 -
                 0.457510187106824466e0 * wr_8_4;
  results[k++] = -0.116883116883116883e0 * wr_2_0 -
                 0.147433053461524596e0 * wr_4_0 -
                 0.371664071087907429e0 * wr_8_0;
  results[k++] = -0.114906830245839045e0 * wr_4_4 -
                 0.247042261995184527e0 * wr_6_4 +
                 0.337580656930385472e0 * wr_8_4;
  results[k++] = 0.536729076139998298e-1 * wr_4_4 -
                 0.961610700632627441e-1 * wr_6_4 -
                 0.206490573920445887e0 * wr_8_4;
  results[k++] = -0.591688190368286234e-1 * wr_4_0 -
                 0.227558625008997774e0 * wr_6_0 -
                 0.441996832438974345e0 * wr_8_0;
  results[k++] =
      -0.347447006397020294e0 * wr_4_4 - 0.372430222908501201e0 * wr_6_4;
  results[k++] = -0.418967057387871868e0 * wr_2_0 +
                 0.264311892974013565e0 * wr_4_0 +
                 0.399115504776111504e-1 * wr_6_0;
  results[k++] =
      -0.342587368373982455e0 * wr_4_4 + 0.137707932022766716e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.116555373325402261e0 * wr_2_0 +
                 0.845972209608573245e-1 * wr_4_0 -
                 0.220160966311707674e0 * wr_6_0 -
                 0.483529383416363768e-1 * wr_8_0;
  results[k++] = -0.891733006522824254e-1 * wr_4_4 -
                 0.549449337287970137e-1 * wr_6_4 -
                 0.340193076047072738e0 * wr_8_4;
  results[k++] = -0.679531335623594990e0 * wr_8_8;
  results[k++] =
      -0.373479529990158988e0 * wr_2_0 - 0.608593567235951554e-1 * wr_4_0 +
      0.341337937513496661e-1 * wr_6_0 + 0.216980263197314679e0 * wr_8_0;
  results[k++] = 0.235707275051380421e0 * wr_4_4 -
                 0.197071550108048956e-1 * wr_6_4 +
                 0.507815698703412013e0 * wr_8_4;
  results[k++] = -0.480501215448195769e0 * wr_8_8;
  results[k++] =
      0.580700869853672637e-1 * wr_2_0 - 0.168553551580884134e0 * wr_4_0 -
      0.252094773938079685e0 * wr_6_0 + 0.311598281283864187e0 * wr_8_0;
  results[k++] = 0.891901560159434587e-1 * wr_4_4 -
                 0.355098284647652669e0 * wr_6_4 -
                 0.207959175957647485e0 * wr_8_4;
  results[k++] = 0.119158001657375965e0 * wr_2_0 +
                 0.784802790301198047e-1 * wr_4_0 -
                 0.263347936137418678e0 * wr_6_0;
  results[k++] =
      0.167165518893707744e0 * wr_4_4 + 0.169330367942328204e0 * wr_6_4;
  results[k++] = 0.204434990933928221e0 * wr_2_0 +
                 0.232147796071054259e0 * wr_4_0 -
                 0.136323897579064251e0 * wr_6_0;
  results[k++] = -0.891733006522824254e-1 * wr_4_4 -
                 0.549449337287970137e-1 * wr_6_4 -
                 0.340193076047072738e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.283063049504548350e0 * wr_2_0 -
                 0.362559518403674248e-1 * wr_4_0 +
                 0.129506450771592749e-1 * wr_6_0 -
                 0.338470568391454637e0 * wr_8_0;
  results[k++] = 0.258204383027431436e0 * wr_4_4 -
                 0.385501905131028820e-1 * wr_6_4 -
                 0.210713722147807344e0 * wr_8_4;
  results[k++] = -0.384908368358486426e0 * wr_4_4 -
                 0.310323047518315948e-1 * wr_6_4 +
                 0.395782973472180177e0 * wr_8_4;
  results[k++] =
      0.152472379641729464e0 * wr_2_0 + 0.223611555070243167e0 * wr_4_0 +
      0.278701258920691817e-1 * wr_6_0 - 0.413381833735279590e0 * wr_8_0;
  results[k++] = -0.273867105256178200e0 * wr_4_4 -
                 0.109036404511393440e0 * wr_6_4 +
                 0.361850104419447697e0 * wr_8_4;
  results[k++] = -0.213205252282507407e0 * wr_4_4 -
                 0.178257924153305876e0 * wr_6_4 -
                 0.213760530743239506e0 * wr_8_4;
  results[k++] =
      -0.809748675300224166e-1 * wr_2_0 - 0.141022018938075192e0 * wr_4_0 -
      0.100436962024826442e0 * wr_6_0 + 0.532044543442714590e-1 * wr_8_0;
  results[k++] =
      -0.178541910193084675e0 * wr_4_4 + 0.184544987032079580e0 * wr_6_4;
  results[k++] = -0.751250157850843527e0 * wr_8_8;
  results[k++] = 0.325005595485937081e0 * wr_4_4 -
                 0.262027888044688036e0 * wr_6_4 -
                 0.682015919179671566e-1 * wr_8_4;
  results[k++] = -0.679531335623594990e0 * wr_8_8;
  results[k++] = 0.258204383027431436e0 * wr_4_4 -
                 0.385501905131028820e-1 * wr_6_4 -
                 0.210713722147807344e0 * wr_8_4;
  results[k++] = wr_0_0 - 0.609836721136306281e0 * wr_2_0 +
                 0.629370629370629371e-1 * wr_4_0 +
                 0.756409358488948801e-1 * wr_6_0 -
                 0.237447465070535778e-1 * wr_8_0;
  results[k++] = -0.401560100348242595e0 * wr_8_8;
  results[k++] = 0.363367302287177053e-1 * wr_4_4 +
                 0.292956084834313451e0 * wr_6_4 -
                 0.305006791404549644e0 * wr_8_4;
  results[k++] =
      -0.287479787288034485e0 * wr_2_0 + 0.445032239907617323e0 * wr_4_0 -
      0.249602353812234222e0 * wr_6_0 + 0.503702138180795188e-1 * wr_8_0;
  results[k++] = 0.148285894409026950e0 * wr_8_8;
  results[k++] = -0.916639402977590526e-1 * wr_4_4 +
                 0.344875212689085673e0 * wr_6_4 -
                 0.230825317592460005e0 * wr_8_4;
  results[k++] =
      0.798463696048799876e-1 * wr_4_4 - 0.825310271821094205e-1 * wr_6_4;
  results[k++] =
      -0.651942877818760169e-1 * wr_2_0 + 0.336412752057597128e0 * wr_4_0 -
      0.188681644241007573e0 * wr_6_0 - 0.444223530825958814e-1 * wr_8_0;
  results[k++] = 0.290693841829741643e0 * wr_4_4 +
                 0.195304056556208968e0 * wr_6_4 -
                 0.457510187106824466e0 * wr_8_4;
  results[k++] =
      -0.373479529990158988e0 * wr_2_0 - 0.608593567235951554e-1 * wr_4_0 +
      0.341337937513496661e-1 * wr_6_0 + 0.216980263197314679e0 * wr_8_0;
  results[k++] = -0.384908368358486426e0 * wr_4_4 -
                 0.310323047518315948e-1 * wr_6_4 +
                 0.395782973472180177e0 * wr_8_4;
  results[k++] = -0.401560100348242595e0 * wr_8_8;
  results[k++] = wr_0_0 + 0.406557814090870854e-1 * wr_2_0 -
                 0.629370629370629371e-1 * wr_4_0 +
                 0.146239142641196768e0 * wr_6_0 -
                 0.346673299002982236e0 * wr_8_0;
  results[k++] = 0.812513988714842701e-1 * wr_4_4 -
                 0.113545418152698149e0 * wr_6_4 +
                 0.272806367671868626e-1 * wr_8_4;
  results[k++] = -0.283945870010192842e0 * wr_8_8;
  results[k++] =
      0.270236560531015786e0 * wr_2_0 + 0.232410507443495369e0 * wr_4_0 -
      0.130350578017975421e0 * wr_6_0 - 0.201671561283087423e0 * wr_8_0;
  results[k++] = 0.286953522227780175e0 * wr_4_4 -
                 0.110166345618213372e0 * wr_6_4 -
                 0.172047033688239557e0 * wr_8_4;
  results[k++] =
      0.103081219911607425e0 * wr_4_0 + 0.333545175320610366e0 * wr_6_0;
  results[k++] = 0.868613990780585731e-1 * wr_4_4 -
                 0.326806194281060772e0 * wr_6_4 -
                 0.255186990189603751e0 * wr_8_4;
  results[k++] = -0.116883116883116883e0 * wr_2_0 -
                 0.147433053461524596e0 * wr_4_0 -
                 0.371664071087907429e0 * wr_8_0;
  results[k++] = 0.235707275051380421e0 * wr_4_4 -
                 0.197071550108048956e-1 * wr_6_4 +
                 0.507815698703412013e0 * wr_8_4;
  results[k++] =
      0.152472379641729464e0 * wr_2_0 + 0.223611555070243167e0 * wr_4_0 +
      0.278701258920691817e-1 * wr_6_0 - 0.413381833735279590e0 * wr_8_0;
  results[k++] = 0.363367302287177053e-1 * wr_4_4 +
                 0.292956084834313451e0 * wr_6_4 -
                 0.305006791404549644e0 * wr_8_4;
  results[k++] = 0.812513988714842701e-1 * wr_4_4 -
                 0.113545418152698149e0 * wr_6_4 +
                 0.272806367671868626e-1 * wr_8_4;
  results[k++] = wr_0_0 + 0.365902032681783768e0 * wr_2_0 +
                 0.419580419580419580e-1 * wr_4_0 -
                 0.605127486791159041e-1 * wr_6_0 +
                 0.664852902197500178e-1 * wr_8_0;
  results[k++] = -0.359715276912214965e0 * wr_4_4 +
                 0.138100822784136357e0 * wr_6_4 +
                 0.215672370510107830e0 * wr_8_4;
  results[k++] = 0.420056944912393819e0 * wr_4_4 +
                 0.311782899703334472e0 * wr_6_4 +
                 0.184690783999624902e0 * wr_8_4;
  results[k++] =
      0.102559286330502947e0 * wr_2_0 + 0.211688802423571896e0 * wr_4_0 +
      0.254418277193251359e0 * wr_6_0 + 0.179697266031478329e0 * wr_8_0;
  results[k++] = 0.194227992959276530e-1 * wr_4_4 +
                 0.156591614117240335e0 * wr_6_4 -
                 0.163032987725007410e0 * wr_8_4;
  results[k++] = -0.531214080983795704e0 * wr_8_8;
  results[k++] = -0.114906830245839045e0 * wr_4_4 -
                 0.247042261995184527e0 * wr_6_4 +
                 0.337580656930385472e0 * wr_8_4;
  results[k++] = -0.480501215448195769e0 * wr_8_8;
  results[k++] = -0.273867105256178200e0 * wr_4_4 -
                 0.109036404511393440e0 * wr_6_4 +
                 0.361850104419447697e0 * wr_8_4;
  results[k++] =
      -0.287479787288034485e0 * wr_2_0 + 0.445032239907617323e0 * wr_4_0 -
      0.249602353812234222e0 * wr_6_0 + 0.503702138180795188e-1 * wr_8_0;
  results[k++] = -0.283945870010192842e0 * wr_8_8;
  results[k++] = -0.359715276912214965e0 * wr_4_4 +
                 0.138100822784136357e0 * wr_6_4 +
                 0.215672370510107830e0 * wr_8_4;
  results[k++] = wr_0_0 - 0.406557814090870854e0 * wr_2_0 -
                 0.251748251748251748e0 * wr_4_0 +
                 0.252136452829649601e0 * wr_6_0 -
                 0.593618662676339444e-1 * wr_8_0;
  results[k++] = 0.104853961490935311e0 * wr_8_8;
  results[k++] = -0.259264775099297065e0 * wr_4_4 +
                 0.209025944190518863e0 * wr_6_4 +
                 0.544060491130556521e-1 * wr_8_4;
  results[k++] = 0.453618862336225490e-2 * wr_4_4 -
                 0.142224140630623609e0 * wr_6_4 -
                 0.698065548440792421e0 * wr_8_4;
  results[k++] = -0.869600491939834535e-1 * wr_4_0 +
                 0.278701258920691817e0 * wr_6_0 -
                 0.180444451233653789e0 * wr_8_0;
  results[k++] = 0.536729076139998298e-1 * wr_4_4 -
                 0.961610700632627441e-1 * wr_6_4 -
                 0.206490573920445887e0 * wr_8_4;
  results[k++] =
      0.580700869853672637e-1 * wr_2_0 - 0.168553551580884134e0 * wr_4_0 -
      0.252094773938079685e0 * wr_6_0 + 0.311598281283864187e0 * wr_8_0;
  results[k++] = -0.213205252282507407e0 * wr_4_4 -
                 0.178257924153305876e0 * wr_6_4 -
                 0.213760530743239506e0 * wr_8_4;
  results[k++] = 0.148285894409026950e0 * wr_8_8;
  results[k++] =
      0.270236560531015786e0 * wr_2_0 + 0.232410507443495369e0 * wr_4_0 -
      0.130350578017975421e0 * wr_6_0 - 0.201671561283087423e0 * wr_8_0;
  results[k++] = 0.420056944912393819e0 * wr_4_4 +
                 0.311782899703334472e0 * wr_6_4 +
                 0.184690783999624902e0 * wr_8_4;
  results[k++] = 0.104853961490935311e0 * wr_8_8;
  results[k++] = wr_0_0 + 0.184799006404941297e0 * wr_2_0 -
                 0.205975842339478703e0 * wr_4_0 -
                 0.197124863121362415e0 * wr_6_0 -
                 0.205068265288189990e-1 * wr_8_0;
  results[k++] = -0.423858442713462701e0 * wr_4_4 -
                 0.135605397378903635e0 * wr_6_4 -
                 0.211775258952568942e-1 * wr_8_4;
  results[k++] = -0.200027116624949438e-1 * wr_4_0 -
                 0.240402675158156860e-1 * wr_6_0 +
                 0.498074004683101846e0 * wr_8_0;
  results[k++] = 0.109559363888201437e-1 * wr_4_4 -
                 0.235545554775016626e0 * wr_6_4 +
                 0.505796542799543819e0 * wr_8_4;
  results[k++] = -0.591688190368286234e-1 * wr_4_0 -
                 0.227558625008997774e0 * wr_6_0 -
                 0.441996832438974345e0 * wr_8_0;
  results[k++] = 0.891901560159434587e-1 * wr_4_4 -
                 0.355098284647652669e0 * wr_6_4 -
                 0.207959175957647485e0 * wr_8_4;
  results[k++] =
      -0.809748675300224166e-1 * wr_2_0 - 0.141022018938075192e0 * wr_4_0 -
      0.100436962024826442e0 * wr_6_0 + 0.532044543442714590e-1 * wr_8_0;
  results[k++] = -0.916639402977590526e-1 * wr_4_4 +
                 0.344875212689085673e0 * wr_6_4 -
                 0.230825317592460005e0 * wr_8_4;
  results[k++] = 0.286953522227780175e0 * wr_4_4 -
                 0.110166345618213372e0 * wr_6_4 -
                 0.172047033688239557e0 * wr_8_4;
  results[k++] =
      0.102559286330502947e0 * wr_2_0 + 0.211688802423571896e0 * wr_4_0 +
      0.254418277193251359e0 * wr_6_0 + 0.179697266031478329e0 * wr_8_0;
  results[k++] = -0.259264775099297065e0 * wr_4_4 +
                 0.209025944190518863e0 * wr_6_4 +
                 0.544060491130556521e-1 * wr_8_4;
  results[k++] = -0.423858442713462701e0 * wr_4_4 -
                 0.135605397378903635e0 * wr_6_4 -
                 0.211775258952568942e-1 * wr_8_4;
  results[k++] = wr_0_0 + 0.480477416652847374e0 * wr_2_0 +
                 0.244119516846789574e0 * wr_4_0 +
                 0.916859828471453094e-1 * wr_6_0 +
                 0.107930665941152626e-1 * wr_8_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 5)
  cmplx wr_9_0 = wzeta.eval_wr_lm(9, 0);
  cmplx wr_9_4 = wzeta.eval_wr_lm(9, 4);
  cmplx wr_9_8 = wzeta.eval_wr_lm(9, 8);
  cmplx wr_10_0 = wzeta.eval_wr_lm(10, 0);
  cmplx wr_10_4 = wzeta.eval_wr_lm(10, 4);
  cmplx wr_10_8 = wzeta.eval_wr_lm(10, 8);
  results[k++] = 0.504524979109513018e0 * wr_5_4;
  results[k++] = 0.389249472080761484e0 * wr_5_0;
  results[k++] = -0.330289129537908181e0 * wr_5_4;
  results[k++] = 0.522232967867093514e0 * wr_5_0;
  results[k++] = -0.588348405414552098e0 * wr_5_4;
  results[k++] = 0.613940613514920451e0 * wr_5_4;
  results[k++] = 0.113227703414459575e0 * wr_5_0;
  results[k++] = 0.462910049886275731e0 * wr_5_4;
  results[k++] = -0.468487480601690658e0 * wr_5_4;
  results[k++] = -0.476731294622796159e0 * wr_5_0;
  results[k++] = -0.662993544131795874e0 * wr_5_4;
  results[k++] = 0.199900074937554639e0 * wr_5_4;
  results[k++] = -0.579365459502321093e0 * wr_5_0;
  results[k++] = -0.881917103688196862e0 * wr_4_4;
  results[k++] = 0.394405318873307737e0 * wr_4_4;
  results[k++] =
      -0.308802827493980659e-1 * wr_6_0 + 0.371134809512602742e-1 * wr_4_0;
  results[k++] =
      -0.447497811350381995e0 * wr_6_4 + 0.801742821534724420e-1 * wr_4_4;
  results[k++] = -0.408248290463863017e0 * wr_4_0;
  results[k++] = -0.304290309725092286e0 * wr_4_0;
  results[k++] =
      -0.447497811350381995e0 * wr_6_4 + 0.801742821534724420e-1 * wr_4_4;
  results[k++] =
      0.123711603170867581e-1 * wr_4_0 - 0.463204241240970989e0 * wr_6_0;
  results[k++] = -0.346410161513775458e0 * wr_4_4;
  results[k++] =
      0.492925153153671240e0 * wr_4_4 - 0.349370517392917382e0 * wr_6_4;
  results[k++] =
      0.141511233180755680e0 * wr_6_0 - 0.170075335762451881e0 * wr_4_0;
  results[k++] =
      0.220442830054220746e0 * wr_4_4 + 0.488260141390522419e0 * wr_6_4;
  results[k++] = -0.547722557505166114e0 * wr_4_0;
  results[k++] =
      -0.111340442853780823e0 * wr_4_0 - 0.247042261995184527e0 * wr_6_0;
  results[k++] =
      0.600381315577098660e0 * wr_6_4 - 0.107565086965447564e0 * wr_4_4;
  results[k++] =
      -0.149378879319590758e0 * wr_4_0 - 0.483352879744477250e0 * wr_6_0;
  results[k++] =
      0.486172434804397732e0 * wr_4_4 - 0.347897705282034949e-1 * wr_6_4;
  results[k++] =
      0.724743075339478667e0 * wr_4_4 + 0.233376875468045338e0 * wr_6_4;
  results[k++] =
      -0.349046876269824013e0 * wr_4_4 + 0.417477246338441939e0 * wr_6_4;
  results[k++] =
      0.724743075339478667e-1 * wr_4_4 - 0.233376875468045338e0 * wr_6_4;
  results[k++] =
      -0.324114956536265155e0 * wr_4_4 - 0.104369311584610485e0 * wr_6_4;
  results[k++] =
      0.300617975667198279e0 * wr_6_0 - 0.361297841864756418e0 * wr_4_0;
  results[k++] =
      -0.312197017069313887e0 * wr_4_4 - 0.311169167290727117e0 * wr_6_4;
  results[k++] =
      -0.280691786106894813e0 * wr_4_0 + 0.134740201874109745e0 * wr_6_0;
  results[k++] =
      0.418430609640565234e0 * wr_4_0 - 0.421803550969575530e0 * wr_6_0;
  results[k++] =
      -0.520685607524091885e0 * wr_6_4 + 0.932867016375254984e-1 * wr_4_4;
  results[k++] = -0.158338956265427843e0 * wr_4_0;
  results[k++] = 0.301096895798247410e0 * wr_6_4;
  results[k++] =
      0.460566186471838290e0 * wr_4_4 - 0.550859831033769827e0 * wr_6_4;
  results[k++] =
      -0.588489886336499686e0 * wr_4_4 - 0.328469340870815357e0 * wr_6_4;
  results[k++] = 0.351605423203871568e0 * wr_6_4;
  results[k++] =
      0.107565086965447564e0 * wr_4_4 + 0.500317762980915550e0 * wr_6_4;
  results[k++] =
      0.370563392992776791e0 * wr_6_0 - 0.445361771415123290e0 * wr_4_0;
  results[k++] =
      0.274883253097619801e0 * wr_4_4 - 0.127856517528680570e0 * wr_6_4;
  results[k++] = 0.416025147168921843e0 * wr_6_0;
  results[k++] =
      0.474317449772682663e0 * wr_4_0 - 0.845691372199148565e-1 * wr_6_0;
  results[k++] =
      0.313183228234480671e0 * wr_6_4 - 0.561103090771243310e-1 * wr_4_4;
  results[k++] =
      0.302563743395579521e0 * wr_6_0 + 0.303030303030303030e0 * wr_4_0;
  results[k++] =
      0.116774841624228445e1 * wr_4_4 - 0.144841364875580273e0 * wr_6_4;
  results[k++] = 0.776231876189614292e0 * wr_6_4;
  results[k++] = -0.192856360162464221e0 * wr_6_4;
  results[k++] =
      0.474104655930760476e0 * wr_4_4 + 0.113690527320701083e0 * wr_6_4;
  results[k++] = -0.234042716694050745e0 * wr_6_4;
  results[k++] = -0.407038663240706244e0 * wr_6_4;
  results[k++] =
      0.256939483508724975e0 * wr_6_0 - 0.308802827493980659e0 * wr_4_0;
  results[k++] =
      -0.142947932280261585e0 * wr_4_4 + 0.225768479235170163e0 * wr_6_4;
  results[k++] = 0.505590053081691797e0 * wr_6_0;
  results[k++] = 0.376844575812796630e0 * wr_6_0;
  results[k++] =
      -0.118939869128777799e0 * wr_6_4 + 0.213094195881134284e-1 * wr_4_4;
  results[k++] =
      0.690504113920681786e0 * wr_4_0 + 0.995859195463938386e-1 * wr_6_0;
  results[k++] = -0.402015126103684830e0 * wr_5_4;
  results[k++] =
      -0.813250060790444318e-1 * wr_3_0 + 0.648749120134602474e-1 * wr_5_0;
  results[k++] = 0.420437482591260848e0 * wr_5_4;
  results[k++] = -0.221795471124666632e-1 * wr_3_0 +
                 0.748556677078387471e-1 * wr_5_0 -
                 0.489510489510489510e-1 * wr_7_0;
  results[k++] =
      -0.397680201625536520e0 * wr_7_4 + 0.142028643437691614e0 * wr_5_4;
  results[k++] = 0.597614304667196822e0 * wr_3_0;
  results[k++] =
      0.972019739199673848e-1 * wr_3_0 - 0.310161403466156955e0 * wr_5_0;
  results[k++] = 0.420437482591260848e0 * wr_5_4;
  results[k++] =
      -0.813250060790444318e-1 * wr_3_0 - 0.324374560067301237e0 * wr_5_0;
  results[k++] =
      -0.323413448147123729e-1 * wr_5_4 - 0.582144206664822711e0 * wr_7_4;
  results[k++] = 0.108225108225108225e-1 * wr_3_0 +
                 0.730516515766909929e-2 * wr_5_0 -
                 0.501598988543476844e0 * wr_7_0;
  results[k++] = 0.539359889970593670e0 * wr_5_4;
  results[k++] = 0.304918360568153142e0 * wr_3_0 -
                 0.205819058080579547e0 * wr_5_0 -
                 0.320459838808100699e-1 * wr_7_0;
  results[k++] =
      0.889239964140522027e-1 * wr_5_4 - 0.381102841774509440e0 * wr_7_4;
  results[k++] = 0.338798178409059045e-1 * wr_3_0 -
                 0.251556626542930557e0 * wr_5_0 +
                 0.192275903284860419e0 * wr_7_0;
  results[k++] =
      0.216952336468371619e0 * wr_5_4 + 0.520685607524091885e0 * wr_7_4;
  results[k++] =
      0.445435403187373976e0 * wr_3_0 + 0.284267621807480580e0 * wr_5_0;
  results[k++] = -0.391230398217975796e0 * wr_3_0;
  results[k++] =
      -0.390514205643068914e0 * wr_5_4 - 0.260342803762045942e0 * wr_7_4;
  results[k++] = -0.148784925160903896e0 * wr_3_0 -
                 0.200858833795035967e-1 * wr_5_0 -
                 0.328373619073395690e0 * wr_7_0;
  results[k++] =
      0.216952336468371619e0 * wr_5_4 + 0.520685607524091885e0 * wr_7_4;
  results[k++] = -0.435597657954504487e-1 * wr_3_0 -
                 0.205819058080579547e0 * wr_5_0 -
                 0.448643774331340979e0 * wr_7_0;
  results[k++] = -0.800640769025435665e-1 * wr_5_4;
  results[k++] =
      -0.315543328516294998e0 * wr_5_4 - 0.540931420313648566e-1 * wr_7_4;
  results[k++] =
      0.241373704785457270e0 * wr_5_4 + 0.226287848236366191e0 * wr_7_4;
  results[k++] =
      -0.412224078188974558e0 * wr_5_4 + 0.331251491401854556e0 * wr_7_4;
  results[k++] = -0.107417231105914932e0 * wr_5_4;
  results[k++] =
      0.329268955124192285e0 * wr_5_4 - 0.362867828096048641e0 * wr_7_4;
  results[k++] = 0.467819643511491354e0 * wr_3_0 -
                 0.194324294037198327e0 * wr_5_0 -
                 0.153172273454553385e0 * wr_7_0;
  results[k++] =
      0.143927469834999666e0 * wr_5_4 - 0.303597006683202421e0 * wr_7_4;
  results[k++] = -0.107958379271882620e0 * wr_3_0 -
                 0.291486441055797490e0 * wr_5_0 +
                 0.323363688404057144e0 * wr_7_0;
  results[k++] = -0.128388147753273875e0 * wr_7_4;
  results[k++] = 0.138675049056307280e0 * wr_5_0;
  results[k++] = -0.534651021155990119e0 * wr_3_0 +
                 0.607263418866244770e-1 * wr_5_0 +
                 0.255287122424255641e0 * wr_7_0;
  results[k++] =
      0.150522950913916473e0 * wr_5_4 + 0.508014959334468097e0 * wr_7_4;
  results[k++] = 0.279575710966775800e0 * wr_3_0 +
                 0.162583369005377851e0 * wr_5_0 -
                 0.427177061242571037e0 * wr_7_0;
  results[k++] =
      -0.376307377284791182e0 * wr_5_4 - 0.169338319778156032e0 * wr_7_4;
  results[k++] = -0.119628950257273295e0 * wr_3_0 -
                 0.118998841254424900e0 * wr_5_0 +
                 0.416882125228565098e-1 * wr_7_0;
  results[k++] =
      -0.508798329050882807e0 * wr_5_4 - 0.872225706944370523e-1 * wr_7_4;
  results[k++] =
      0.234081411034514207e0 * wr_5_4 + 0.340482052413838847e0 * wr_7_4;
  results[k++] = -0.462910049886275731e0 * wr_7_4;
  results[k++] =
      -0.278002431663154228e0 * wr_5_4 - 0.260627279684207089e0 * wr_7_4;
  results[k++] =
      -0.118829688587177821e0 * wr_5_4 - 0.373464735559701724e0 * wr_7_4;
  results[k++] = -0.236901770739671418e0 * wr_5_4;
  results[k++] = 0.310513659574533285e0 * wr_3_0 +
                 0.119769068332541995e0 * wr_5_0 -
                 0.314685314685314685e0 * wr_7_0;
  results[k++] =
      0.110884610793299564e0 * wr_5_4 + 0.374235561427386030e0 * wr_7_4;
  results[k++] =
      -0.399231848024399937e0 * wr_3_0 + 0.272727272727272727e0 * wr_7_0;
  results[k++] =
      -0.324636899286152261e0 * wr_5_4 - 0.198840100812768260e0 * wr_7_4;
  results[k++] =
      -0.314393804372922737e0 * wr_5_0 - 0.230769230769230769e0 * wr_7_0;
  results[k++] =
      -0.241070450203080276e0 * wr_5_0 + 0.450415418283938391e0 * wr_7_0;
  results[k++] =
      0.452684527951153605e-1 * wr_5_4 - 0.509270093945047805e0 * wr_7_4;
  results[k++] = 0.633833353434905720e0 * wr_3_0 -
                 0.488955173972098624e-1 * wr_5_0 +
                 0.171292989005816650e-1 * wr_7_0;
  results[k++] =
      0.362147622360922884e0 * wr_5_4 - 0.101854018789009561e0 * wr_7_4;
  results[k++] = 0.185567404756301371e0 * wr_3_0 +
                 0.286302833968760266e0 * wr_5_0 +
                 0.225672534629570827e0 * wr_7_0;
  results[k++] =
      -0.471055719765995789e0 * wr_5_4 + 0.942111439531991576e-1 * wr_7_4;
  results[k++] =
      0.471055719765995789e0 * wr_5_4 - 0.942111439531991576e-1 * wr_7_4;
  results[k++] = -0.487198765764690091e0 * wr_7_4;
  results[k++] =
      0.304780327596279737e0 * wr_5_4 + 0.493744130705973175e0 * wr_7_4;
  results[k++] =
      -0.446245654704093378e0 * wr_5_4 - 0.175948286711899675e0 * wr_7_4;
  results[k++] =
      -0.167975164406066402e0 * wr_5_4 + 0.335950328812132805e-1 * wr_7_4;
  results[k++] = 0.538618501455241608e0 * wr_7_4;
  results[k++] =
      -0.918947263744055790e-1 * wr_5_4 + 0.424553635849753775e0 * wr_7_4;
  results[k++] =
      0.373702082094978301e0 * wr_5_0 - 0.320019343976093724e0 * wr_7_0;
  results[k++] =
      -0.326759737878695084e0 * wr_5_4 + 0.253719325882280888e-1 * wr_7_4;
  results[k++] = -0.492119965418878881e0 * wr_3_0 +
                 0.290657174962760901e0 * wr_5_0 +
                 0.872780029025710155e-1 * wr_7_0;
  results[k++] =
      0.365779683213706538e0 * wr_5_4 + 0.102418311299837831e0 * wr_7_4;
  results[k++] = -0.607643620250199969e0 * wr_7_0;
  results[k++] =
      0.266336220175900461e0 * wr_5_0 + 0.684230138456401090e-1 * wr_7_0;
  results[k++] =
      -0.773636808924820730e-1 * wr_5_4 + 0.283666829939100934e0 * wr_7_4;
  results[k++] =
      0.278541086299192833e0 * wr_5_0 + 0.257610602608356024e0 * wr_7_0;
  results[k++] =
      -0.197707184503009742e0 * wr_5_4 + 0.128939468154136788e0 * wr_7_4;
  results[k++] = 0.751725664177020947e0 * wr_3_0 +
                 0.208401670936218571e0 * wr_5_0 +
                 0.342821189833377593e-1 * wr_7_0;
  results[k++] = 0.308606699924183820e0 * wr_4_4;
  results[k++] = -0.507092552837109947e0 * wr_4_4;
  results[k++] = 0.166003973518665784e0 * wr_2_0 -
                 0.145778859224958755e0 * wr_4_0 +
                 0.183440487456535141e-1 * wr_6_0;
  results[k++] =
      -0.314918328648886780e0 * wr_4_4 + 0.265830521423728873e0 * wr_6_4;
  results[k++] = 0.345032779671177109e-1 * wr_2_0 -
                 0.140275772692810827e0 * wr_4_0 +
                 0.953184733319760584e-1 * wr_6_0;
  results[k++] =
      -0.887181884498666528e-1 * wr_4_4 + 0.404402033192336160e0 * wr_6_4;
  results[k++] = 0.106242816196759141e1 * wr_8_8;
  results[k++] =
      -0.170738233278488198e-2 * wr_2_0 + 0.396466230429259329e-1 * wr_4_0 -
      0.103769610099745447e0 * wr_6_0 + 0.628226942019333614e-1 * wr_8_0;
  results[k++] = -0.102367140519076907e-1 * wr_4_4 +
                 0.179734236974371627e0 * wr_6_4 -
                 0.360888902467307578e0 * wr_8_4;
  results[k++] =
      -0.638876564999939914e0 * wr_2_0 + 0.142857142857142857e0 * wr_4_0;
  results[k++] =
      0.291605921759902156e0 * wr_2_0 + 0.391230398217975796e0 * wr_4_0;
  results[k++] =
      -0.314918328648886780e0 * wr_4_4 + 0.265830521423728873e0 * wr_6_4;
  results[k++] = -0.996023841111994706e-1 * wr_2_0 -
                 0.485929530749862518e-1 * wr_4_0 +
                 0.275160731184802712e0 * wr_6_0;
  results[k++] =
      0.181818181818181818e0 * wr_4_4 + 0.328879978077446664e0 * wr_6_4;
  results[k++] = -0.168358757425368459e-1 * wr_2_0 -
                 0.123205623123443351e0 * wr_4_0 -
                 0.325574567773063876e0 * wr_6_0;
  results[k++] = -0.144107986163857641e0 * wr_6_4 +
                 0.383022767486130151e-1 * wr_4_4 +
                 0.964516162658244206e-1 * wr_8_4;
  results[k++] = 0.342585978011633300e-1 * wr_4_4 +
                 0.107411751054328277e0 * wr_6_4 +
                 0.647017111530323490e0 * wr_8_4;
  results[k++] = 0.306106831682488106e-2 * wr_2_0 +
                 0.173751519789471392e-1 * wr_4_0 -
                 0.525612369979316806e0 * wr_8_0;
  results[k++] = -0.282842712474619010e0 * wr_4_4;
  results[k++] =
      0.704178790219530341e-1 * wr_4_4 + 0.407598936958403612e0 * wr_6_4;
  results[k++] = -0.456435464587638429e0 * wr_2_0 +
                 0.296907847610082194e0 * wr_4_0 +
                 0.360269965409644102e-1 * wr_6_0;
  results[k++] =
      -0.384836554336667723e0 * wr_4_4 + 0.124304947597328332e0 * wr_6_4;
  results[k++] =
      0.431219680932051729e-1 * wr_2_0 + 0.296688159938411549e0 * wr_4_0 -
      0.212162000740399089e0 * wr_6_0 - 0.537282280726181533e-1 * wr_8_0;
  results[k++] = -0.312736780069900657e0 * wr_4_4 -
                 0.529486550942264161e-1 * wr_6_4 -
                 0.378011591548793691e0 * wr_8_4;
  results[k++] = 0.695522496095612988e0 * wr_8_8;
  results[k++] =
      -0.234726263406510114e-1 * wr_2_0 - 0.201870723492876141e-1 * wr_4_0 -
      0.222086379760526309e0 * wr_8_0 + 0.285319255870882528e0 * wr_6_0;
  results[k++] = -0.781841950174751643e-1 * wr_4_4 +
                 0.164729149182037739e0 * wr_6_4 +
                 0.519765938379591325e0 * wr_8_4;
  results[k++] = -0.447213595499957940e0 * wr_4_0;
  results[k++] = 0.652050663696626329e0 * wr_2_0 -
                 0.159057775505401175e-1 * wr_4_0 +
                 0.288215972327715282e0 * wr_6_0;
  results[k++] =
      0.187781010725208091e0 * wr_4_4 + 0.152849601359401354e0 * wr_6_4;
  results[k++] = 0.222717701593686987e0 * wr_2_0 +
                 0.260777151127504067e0 * wr_4_0 -
                 0.123055619933553022e0 * wr_6_0;
  results[k++] = -0.312736780069900657e0 * wr_4_4 -
                 0.529486550942264161e-1 * wr_6_4 -
                 0.378011591548793691e0 * wr_8_4;
  results[k++] =
      -0.104724779654926848e0 * wr_2_0 - 0.127152068545033521e0 * wr_4_0 +
      0.124801176906117111e-1 * wr_6_0 - 0.376097596508327073e0 * wr_8_0;
  results[k++] = -0.322235253162984832e0 * wr_6_4 +
                 0.856464945029083251e-1 * wr_4_4 +
                 0.215672370510107830e0 * wr_8_4;
  results[k++] = -0.127674255828710050e0 * wr_4_4 -
                 0.259394375094943753e0 * wr_6_4 -
                 0.405096788316462567e0 * wr_8_4;
  results[k++] =
      -0.958265957626781617e-2 * wr_2_0 - 0.741720399846028873e-1 * wr_4_0 -
      0.423109796071867957e0 * wr_8_0 - 0.232962196891418607e0 * wr_6_0;
  results[k++] =
      -0.366422889931475577e0 * wr_4_4 + 0.662800336042560868e-1 * wr_6_4;
  results[k++] =
      0.501745206004254461e0 * wr_4_4 + 0.518615278817878529e-1 * wr_6_4;
  results[k++] = 0.652980528943973388e0 * wr_8_8;
  results[k++] = -0.131829703153380814e-1 * wr_4_4 +
                 0.283425345521131256e0 * wr_6_4 +
                 0.592802691620295806e-1 * wr_8_4;
  results[k++] = 0.678597271490497057e0 * wr_8_8;
  results[k++] = -0.278541086299192833e0 * wr_4_4 +
                 0.598845341662709976e-1 * wr_6_4 +
                 0.210424081155712092e0 * wr_8_4;
  results[k++] =
      0.108234841643299762e0 * wr_6_0 - 0.218419900007840648e-1 * wr_8_0 +
      0.124659598667794290e0 * wr_2_0 - 0.192978925386251716e0 * wr_4_0;
  results[k++] = -0.369381567999249804e0 * wr_8_8;
  results[k++] = -0.419191739163896983e0 * wr_6_4 +
                 0.111416434519677133e0 * wr_4_4 +
                 0.280565441540949456e0 * wr_8_4;
  results[k++] =
      -0.546230993599135097e-1 * wr_4_4 + 0.444619982070261014e0 * wr_6_4;
  results[k++] =
      -0.224387277602029723e0 * wr_4_4 - 0.231931803521356633e-1 * wr_6_4;
  results[k++] =
      -0.381973139417960344e0 * wr_2_0 - 0.136456706766711374e-1 * wr_4_0 +
      0.204089574631011698e0 * wr_6_0 + 0.386115481104079418e-1 * wr_8_0;
  results[k++] = -0.117912071081831154e-1 * wr_4_4 -
                 0.211252779710538350e0 * wr_6_4 +
                 0.397664134712347912e0 * wr_8_4;
  results[k++] =
      0.396958130759098541e0 * wr_2_0 + 0.656527636537421992e-1 * wr_4_0 -
      0.216682008399017893e0 * wr_8_0 - 0.530240268834048694e-1 * wr_6_0;
  results[k++] = 0.415224535661087000e0 * wr_4_4 +
                 0.482061201108086320e-1 * wr_6_4 -
                 0.395238941636367985e0 * wr_8_4;
  results[k++] = -0.369381567999249804e0 * wr_8_8;
  results[k++] =
      -0.831063991118628602e-2 * wr_2_0 + 0.192978925386251716e0 * wr_4_0 +
      0.209254027177046207e0 * wr_6_0 - 0.318893054011447346e0 * wr_8_0;
  results[k++] = 0.249134721396652200e0 * wr_4_4 +
                 0.162472478891984649e0 * wr_6_4 -
                 0.250945359769122531e-1 * wr_8_4;
  results[k++] =
      0.211554354139178037e0 * wr_4_0 - 0.256701466335351778e0 * wr_6_0;
  results[k++] =
      0.289682729751160547e0 * wr_4_0 - 0.937341224376834511e-1 * wr_6_0;
  results[k++] = 0.352329701857188054e-2 * wr_4_4 -
                 0.353493512556032462e0 * wr_6_4 -
                 0.221806457000055464e0 * wr_8_4;
  results[k++] = 0.684817836344431798e0 * wr_2_0 -
                 0.598022186164801118e-2 * wr_4_0 -
                 0.323047388665756430e0 * wr_8_0;
  results[k++] = 0.254272060263435140e0 * wr_4_4 -
                 0.306134361946517547e-1 * wr_6_4 +
                 0.507117669921637534e0 * wr_8_4;
  results[k++] =
      0.162057478268132578e0 * wr_2_0 + 0.241223656732814645e0 * wr_4_0 -
      0.412813611014818825e0 * wr_8_0 + 0.432939366573199048e-1 * wr_6_0;
  results[k++] = -0.419191739163896983e0 * wr_6_4 +
                 0.111416434519677133e0 * wr_4_4 +
                 0.280565441540949456e0 * wr_8_4;
  results[k++] = 0.249134721396652200e0 * wr_4_4 +
                 0.162472478891984649e0 * wr_6_4 -
                 0.250945359769122531e-1 * wr_8_4;
  results[k++] =
      -0.747957592006765742e-1 * wr_2_0 - 0.128652616924167811e0 * wr_4_0 -
      0.865878733146398095e-1 * wr_6_0 + 0.611575720021953816e-1 * wr_8_0;
  results[k++] = 0.245844585947220811e0 * wr_6_4;
  results[k++] = -0.212569009140848442e0 * wr_4_4 -
                 0.367239887355846551e0 * wr_6_4 -
                 0.109241784999496357e0 * wr_8_4;
  results[k++] = 0.513762332737589700e0 * wr_8_8;
  results[k++] = -0.466753750936090676e0 * wr_4_4 -
                 0.836242010007090770e-1 * wr_6_4 -
                 0.326490264471986695e0 * wr_8_4;
  results[k++] = 0.533917477989967491e0 * wr_8_8;
  results[k++] = -0.184090161973261302e0 * wr_4_4 +
                 0.706753492740219503e-1 * wr_6_4 -
                 0.402076184098367075e0 * wr_8_4;
  results[k++] =
      -0.255476154010634166e0 * wr_6_0 + 0.515555574953296540e-1 * wr_8_0 -
      0.294244943168249843e0 * wr_2_0 + 0.455505019587532375e0 * wr_4_0;
  results[k++] = -0.290627863517575250e0 * wr_8_8;
  results[k++] = 0.368180323946522604e0 * wr_4_4 -
                 0.141350698548043901e0 * wr_6_4 -
                 0.220747708916750551e0 * wr_8_4;
  results[k++] = 0.287084625881607282e0 * wr_6_4;
  results[k++] = -0.496454247532834913e-1 * wr_4_4 +
                 0.333545175320610366e0 * wr_6_4 -
                 0.467745378542354065e0 * wr_8_4;
  results[k++] = -0.353233389660476984e0 * wr_4_0 +
                 0.943408221205037868e-1 * wr_6_0 +
                 0.174516387110198104e0 * wr_8_0;
  results[k++] = 0.218020381372306232e0 * wr_4_4 -
                 0.325506760927014946e-1 * wr_6_4 +
                 0.199706827705359886e0 * wr_8_4;
  results[k++] =
      0.526959154406888676e0 * wr_2_0 - 0.113299662559577976e0 * wr_4_0 +
      0.163403097140530386e0 * wr_6_0 - 0.346237976388690006e0 * wr_8_0;
  results[k++] = -0.143313996726707670e0 * wr_4_4 +
                 0.115543438054953189e0 * wr_6_4 +
                 0.237523818460625906e0 * wr_8_4;
  results[k++] = 0.151775451709655915e0 * wr_8_8;
  results[k++] =
      0.276595937911150880e0 * wr_2_0 + 0.237879738257555598e0 * wr_4_0 -
      0.206417423806352473e0 * wr_8_0 - 0.133418070128244146e0 * wr_6_0;
  results[k++] = -0.429941990180123009e0 * wr_4_4 -
                 0.319119971770823093e0 * wr_6_4 -
                 0.189037044149542065e0 * wr_8_4;
  results[k++] = 0.339683110243378725e0 * wr_6_0;
  results[k++] = -0.218915746048930460e0 * wr_4_0 -
                 0.563794248132765711e-1 * wr_6_0 -
                 0.333739165874855650e0 * wr_8_0;
  results[k++] = -0.445032239907617323e-1 * wr_4_4 +
                 0.797325472097299287e-1 * wr_6_4 +
                 0.489179826028046454e0 * wr_8_4;
  results[k++] = 0.240344879106075525e0 * wr_4_0 -
                 0.427476100174008692e0 * wr_8_0 +
                 0.770289587033021258e-1 * wr_6_0;
  results[k++] = -0.599525461520358276e-1 * wr_4_4 -
                 0.230168037973560594e0 * wr_6_4 -
                 0.231077539832258389e0 * wr_8_4;
  results[k++] =
      0.734809433514069153e0 * wr_2_0 + 0.947932986833983151e-1 * wr_4_0 -
      0.651013521854029892e-1 * wr_6_0 + 0.591190764311155113e-1 * wr_8_0;
  results[k++] = -0.352991033961509441e0 * wr_6_4 +
                 0.938210340209701971e-1 * wr_4_4 +
                 0.236257244717996057e0 * wr_8_4;
  results[k++] = -0.293706293706293706e0 * wr_4_4 +
                 0.112758849626553142e0 * wr_6_4 +
                 0.176095753122080771e0 * wr_8_4;
  results[k++] =
      0.104972776216295593e0 * wr_2_0 + 0.216670396990624721e0 * wr_4_0 +
      0.260405408741611957e0 * wr_6_0 + 0.183926015563470480e0 * wr_8_0;
  results[k++] = 0.871883590552725750e0 * wr_8_8;
  results[k++] = 0.795917183440543395e0 * wr_8_8;
  results[k++] = -0.274425410774106063e0 * wr_4_4 +
                 0.221248839434354889e0 * wr_6_4 -
                 0.493606883015190697e-1 * wr_8_4;
  results[k++] = -0.543714946166432150e0 * wr_8_8;
  results[k++] = -0.383214231015951250e0 * wr_6_4 +
                 0.475318754348711285e0 * wr_4_4 +
                 0.854952200348017389e-1 * wr_8_4;
  results[k++] = 0.275713800067227886e0 * wr_8_8;
  results[k++] = -0.312893109387371941e0 * wr_6_4 +
                 0.388096137776548475e0 * wr_4_4 +
                 0.698065548440792421e-1 * wr_8_4;
  results[k++] = -0.919046000224092953e-1 * wr_8_8;
  results[k++] =
      -0.105631778819322337e0 * wr_6_4 + 0.194959097694248822e0 * wr_8_4;
  results[k++] =
      0.964281800812321105e-1 * wr_6_4 - 0.432218910753783206e0 * wr_8_4;
  results[k++] = -0.220747708916750552e0 * wr_8_8;
  results[k++] = -0.111416434519677133e0 * wr_4_4 -
                 0.173665149082185893e0 * wr_6_4 -
                 0.402143799542027554e0 * wr_8_4;
  results[k++] = -0.229407748498942349e0 * wr_8_8;
  results[k++] = -0.395489109460142443e0 * wr_4_4 -
                 0.349220515017108154e0 * wr_6_4 -
                 0.159209865749450874e0 * wr_8_4;
  results[k++] =
      -0.274425410774106063e0 * wr_6_0 + 0.553795523427011026e-1 * wr_8_0 -
      0.316069770620506984e0 * wr_2_0 + 0.489290879589382733e0 * wr_4_0;
  results[k++] = 0.124873761525142735e0 * wr_8_8;
  results[k++] = -0.527318812613523258e0 * wr_4_4 -
                 0.187263174719318865e0 * wr_6_4 +
                 0.790403588827061073e-2 * wr_8_4;
  results[k++] =
      0.318491796619548101e-1 * wr_6_4 - 0.646606176518065915e0 * wr_8_4;
  results[k++] =
      0.203519331620353122e0 * wr_6_4 + 0.843239973097885591e-1 * wr_8_4;
  results[k++] = 0.725698631696182975e-1 * wr_4_0 -
                 0.392481544067196649e0 * wr_6_0 +
                 0.290412822523634806e0 * wr_8_0;
  results[k++] = 0.335933189800882098e-1 * wr_4_4 -
                 0.344867048543411014e0 * wr_6_4 -
                 0.350056636189552443e0 * wr_8_4;
  results[k++] = 0.377084070324300891e0 * wr_4_0 -
                 0.234737889764195394e0 * wr_8_0 -
                 0.453198650238311904e-1 * wr_6_0;
  results[k++] = -0.198740755265316471e0 * wr_4_4 +
                 0.160229919404050349e0 * wr_6_4 +
                 0.123583686462800478e0 * wr_8_4;
  results[k++] = -0.420949364227594615e-1 * wr_8_8;
  results[k++] =
      0.639282587643402851e0 * wr_2_0 - 0.168605253458770076e0 * wr_4_0 -
      0.222021089040385224e0 * wr_6_0 - 0.298695092581799995e-1 * wr_8_0;
  results[k++] = 0.397481510530632943e0 * wr_4_4 +
                 0.991899501072692640e-1 * wr_6_4 +
                 0.405136603004772917e-1 * wr_8_4;
  results[k++] =
      -0.688020916153781445e-1 * wr_6_0 + 0.421159786317330785e0 * wr_8_0;
  results[k++] =
      -0.494311532742980752e0 * wr_8_0 - 0.188422287906398315e0 * wr_6_0;
  results[k++] = -0.500779632195407611e-2 * wr_4_4 +
                 0.181683651143588527e0 * wr_6_4 -
                 0.445870500661567718e0 * wr_8_4;
  results[k++] = -0.162271147165124865e0 * wr_4_0 -
                 0.152120004824377373e0 * wr_6_0 +
                 0.259753125080171780e-1 * wr_8_0;
  results[k++] = -0.607163036450670765e-1 * wr_4_4 +
                 0.356643356643356643e0 * wr_6_4 -
                 0.514846907161338673e-1 * wr_8_4;
  results[k++] = 0.192001810624795556e0 * wr_4_0 +
                 0.197578312956482156e0 * wr_8_0 +
                 0.267019343944570394e0 * wr_6_0;
  results[k++] = -0.178743958160194070e0 * wr_6_4 +
                 0.475081273067662553e-1 * wr_4_4 +
                 0.119633506242317132e0 * wr_8_4;
  results[k++] = 0.198298617331067590e0 * wr_4_4 -
                 0.222680885707561645e0 * wr_6_4 -
                 0.802525957033399601e-1 * wr_8_4;
  results[k++] =
      0.797325472097299287e0 * wr_2_0 + 0.301717130981821588e0 * wr_4_0 +
      0.108785658644084235e0 * wr_6_0 + 0.139701837443977282e-1 * wr_8_0;
  results[k++] = 0.134839972492648417e0 * wr_5_4;
  results[k++] = -0.353553390593273762e0 * wr_1_0 +
                 0.308606699924183820e0 * wr_3_0 -
                 0.615457454896663663e-1 * wr_5_0;
  results[k++] = -0.398862017608732821e0 * wr_5_4;
  results[k++] =
      -0.355334527259350724e-1 * wr_1_0 + 0.228391578915988304e0 * wr_3_0 -
      0.192704612631543732e0 * wr_5_0 + 0.248922634022159300e-1 * wr_7_0;
  results[k++] =
      -0.365631294921679216e0 * wr_5_4 + 0.202225703857916406e0 * wr_7_4;
  results[k++] = 0.524863881081477966e-1 * wr_3_0 -
                 0.177140840950707035e0 * wr_5_0 +
                 0.115839324424328146e0 * wr_7_0;
  results[k++] =
      -0.137212705387053032e0 * wr_5_4 + 0.384195575083748488e0 * wr_7_4;
  results[k++] = 0.895549628091297599e0 * wr_9_8;
  results[k++] =
      0.523308725422928865e-1 * wr_5_0 - 0.125813251389081052e0 * wr_7_0 +
      0.737800848848692818e-1 * wr_9_0 - 0.298182820077776831e-2 * wr_3_0;
  results[k++] = -0.197792106625607699e-1 * wr_5_4 +
                 0.203609521526360866e0 * wr_7_4 -
                 0.333471059434687007e0 * wr_9_4;
  results[k++] = -0.796819072889595762e0 * wr_1_0 -
                 0.130410132739325265e0 * wr_3_0 +
                 0.104031297322059877e0 * wr_5_0;
  results[k++] = -0.398862017608732821e0 * wr_5_4;
  results[k++] = 0.117851130197757921e0 * wr_1_0 +
                 0.308606699924183820e0 * wr_3_0 +
                 0.307728727448331832e0 * wr_5_0;
  results[k++] =
      0.832579083901444590e-1 * wr_5_4 + 0.296028118720513632e0 * wr_7_4;
  results[k++] =
      -0.520156486610299385e-1 * wr_1_0 - 0.111443679262471829e0 * wr_3_0 -
      0.188060445524642356e-1 * wr_5_0 + 0.255069797535804600e0 * wr_7_0;
  results[k++] =
      0.220029828287444381e0 * wr_5_4 - 0.171134310890234518e0 * wr_7_4;
  results[k++] =
      0.131200440834221806e0 * wr_5_4 + 0.229600771459888160e0 * wr_7_4;
  results[k++] = -0.313666163337433736e-1 * wr_3_0 -
                 0.148206660690087005e0 * wr_5_0 -
                 0.323060440821825909e0 * wr_7_0;
  results[k++] =
      -0.185074472048733122e0 * wr_7_4 + 0.158976089883533741e0 * wr_9_4;
  results[k++] = 0.484489736382902738e-1 * wr_5_4 +
                 0.149621830353543493e0 * wr_7_4 +
                 0.680694949666921143e0 * wr_9_4;
  results[k++] =
      0.608663132712230204e-2 * wr_3_0 + 0.213639892538733799e-1 * wr_5_0 -
      0.684840597297234383e-2 * wr_7_0 - 0.542170683441478508e0 * wr_9_0;
  results[k++] = 0.205971460217774891e0 * wr_5_4;
  results[k++] =
      0.540061724867321686e0 * wr_1_0 - 0.257129738613290009e0 * wr_3_0 -
      0.108476168234185809e0 * wr_5_0 + 0.270235463798404449e-1 * wr_7_0;
  results[k++] =
      0.468670612188417256e-1 * wr_5_4 + 0.321374134072057547e0 * wr_7_4;
  results[k++] =
      -0.293102526275518324e0 * wr_1_0 - 0.186066079728532743e0 * wr_3_0 +
      0.215864849236958157e0 * wr_5_0 + 0.733311522382072420e-1 * wr_7_0;
  results[k++] =
      -0.186170342824813092e0 * wr_5_4 + 0.198581699013133965e0 * wr_7_4;
  results[k++] = -0.552745230687170999e0 * wr_9_8;
  results[k++] =
      -0.419891104865182373e-1 * wr_1_0 + 0.114710896004199032e0 * wr_3_0 +
      0.255124983873492296e0 * wr_5_0 - 0.197764842743403544e0 * wr_7_0 -
      0.713444240255634287e-1 * wr_9_0;
  results[k++] = -0.329364937914490487e0 * wr_5_4 -
                 0.103565017911080431e0 * wr_7_4 -
                 0.367139553155889383e0 * wr_9_4;
  results[k++] = 0.195424950443710579e0 * wr_9_8;
  results[k++] = -0.409933603182543109e-1 * wr_3_0 +
                 0.299805348917865392e0 * wr_7_0 -
                 0.241502016975129082e0 * wr_9_0;
  results[k++] = -0.120852973396883174e0 * wr_5_4 +
                 0.111966725352994706e0 * wr_7_4 +
                 0.509385457312190347e0 * wr_9_4;
  results[k++] =
      -0.291605921759902156e0 * wr_3_0 - 0.325669473639464803e0 * wr_5_0;
  results[k++] =
      -0.205819058080579547e0 * wr_5_4 + 0.219540328619284850e0 * wr_7_4;
  results[k++] =
      0.790569415042094835e0 * wr_1_0 + 0.125466465334973494e0 * wr_3_0 -
      0.105861900492919289e-1 * wr_5_0 + 0.276908949275850779e0 * wr_7_0;
  results[k++] =
      -0.186170342824813092e0 * wr_5_4 + 0.198581699013133965e0 * wr_7_4;
  results[k++] =
      0.977008420918394408e-1 * wr_1_0 + 0.239227816793827812e0 * wr_3_0 +
      0.176616694830238492e0 * wr_5_0 - 0.171106021889150231e0 * wr_7_0;
  results[k++] = 0.360801212294109966e0 * wr_5_4 -
                 0.202588915994018965e0 * wr_7_4 -
                 0.670302050052825379e-1 * wr_9_4;
  results[k++] =
      0.785204485261076027e-1 * wr_7_4 - 0.449652284812675216e0 * wr_9_4;
  results[k++] =
      -0.514259477226580018e-1 * wr_1_0 - 0.127111430947793196e0 * wr_3_0 -
      0.104154338520973851e0 * wr_5_0 + 0.254959449359523797e-1 * wr_7_0 -
      0.407767347995913160e0 * wr_9_0;
  results[k++] = -0.927727214085426531e-1 * wr_5_4 -
                 0.286503992585205252e0 * wr_7_4 +
                 0.308083831273138324e0 * wr_9_4;
  results[k++] = -0.218582194611130233e0 * wr_7_4 -
                 0.304416035879206702e0 * wr_9_4 -
                 0.108335198495312360e0 * wr_5_4;
  results[k++] =
      -0.190541699619953174e-1 * wr_3_0 - 0.955426644844717800e-1 * wr_5_0 -
      0.248078720947924321e0 * wr_7_0 - 0.404110167860888521e0 * wr_9_0;
  results[k++] =
      -0.338676639556312064e0 * wr_5_4 + 0.537581967549701690e-1 * wr_7_4;
  results[k++] =
      0.286234002898173361e0 * wr_5_4 + 0.874603897744418606e-1 * wr_7_4;
  results[k++] = 0.496761554431673740e0 * wr_9_8;
  results[k++] = -0.176868106622746730e0 * wr_5_4 +
                 0.234709427205955920e0 * wr_7_4 +
                 0.602411870490531675e-1 * wr_9_4;
  results[k++] =
      -0.362371537669739333e0 * wr_1_0 + 0.412692248786409038e0 * wr_3_0 -
      0.147810603512388123e0 * wr_5_0 - 0.394849407545049788e-2 * wr_7_0 +
      0.947248843944768581e-2 * wr_9_0;
  results[k++] = 0.660498082539877933e0 * wr_9_8;
  results[k++] = -0.256015475180874979e0 * wr_5_4 -
                 0.292828157886621708e-1 * wr_7_4 +
                 0.196197166070299428e0 * wr_9_4;
  results[k++] =
      -0.197104131996360873e-1 * wr_1_0 + 0.166752850091426039e0 * wr_3_0 -
      0.261294700187214403e0 * wr_5_0 + 0.156352388428653451e0 * wr_7_0 -
      0.334903040512231789e-1 * wr_9_0;
  results[k++] = -0.406508468844119757e0 * wr_9_8;
  results[k++] = 0.161457752834178747e0 * wr_5_4 -
                 0.413669536673189993e0 * wr_7_4 +
                 0.247465927782408689e0 * wr_9_4;
  results[k++] =
      0.353408527938250396e0 * wr_5_4 + 0.360620946875765711e0 * wr_7_4;
  results[k++] = 0.375533808099405379e0 * wr_3_0 -
                 0.230440265198183878e0 * wr_5_0 -
                 0.592011760391988740e-1 * wr_7_0;
  results[k++] =
      0.170676983453916653e0 * wr_5_4 - 0.117340426124567699e0 * wr_7_4;
  results[k++] =
      -0.654096366702159587e0 * wr_1_0 + 0.143949625739501753e0 * wr_3_0 -
      0.125064637568569529e0 * wr_5_0 + 0.229120496222757676e0 * wr_7_0 +
      0.641184491721638200e-1 * wr_9_0;
  results[k++] =
      -0.909698805933763679e-1 * wr_7_4 + 0.404110167860888523e0 * wr_9_4;
  results[k++] = 0.660498082539877933e0 * wr_9_8;
  results[k++] =
      0.217422922601843600e0 * wr_1_0 + 0.302640982443366628e0 * wr_3_0 -
      0.492702011707960409e-1 * wr_5_0 + 0.260600608979732861e-1 * wr_7_0 -
      0.255757187865087517e0 * wr_9_0;
  results[k++] = -0.235722120033789826e-1 * wr_7_4 -
                 0.438710200326004806e0 * wr_9_4 +
                 0.190822668598782241e0 * wr_5_4;
  results[k++] = 0.155680891041553224e0 * wr_9_8;
  results[k++] =
      -0.308802827493980658e-1 * wr_1_0 + 0.290279452678473190e-1 * wr_3_0 +
      0.227427844611185622e0 * wr_5_0 + 0.146974269315967742e0 * wr_7_0 -
      0.308985422203468731e0 * wr_9_0;
  results[k++] = 0.264755707943160872e0 * wr_5_4 +
                 0.237855395371395863e0 * wr_7_4 +
                 0.368900424424346408e-1 * wr_9_4;
  results[k++] = 0.137944157024362165e0 * wr_3_0 +
                 0.651783496720248757e-1 * wr_5_0 -
                 0.253706382009309565e0 * wr_7_0;
  results[k++] =
      0.178498261881637350e0 * wr_5_4 + 0.196348088069801085e0 * wr_7_4;
  results[k++] = 0.224424375606350670e0 * wr_3_0 +
                 0.192800158395231930e0 * wr_5_0 -
                 0.165104191719348690e0 * wr_7_0;
  results[k++] = -0.161457752834178747e0 * wr_5_4 -
                 0.119985271223830872e0 * wr_7_4 -
                 0.329954570376544919e0 * wr_9_4;
  results[k++] =
      0.801101170514342108e0 * wr_1_0 + 0.159510940542889313e0 * wr_3_0 -
      0.510574244848511282e-1 * wr_5_0 + 0.295383318610019382e-1 * wr_7_0 -
      0.366467461664219611e0 * wr_9_0;
  results[k++] = 0.256015475180874979e0 * wr_5_4 +
                 0.292828157886621708e-1 * wr_7_4 -
                 0.196197166070299428e0 * wr_9_4;
  results[k++] = -0.190822668598782241e0 * wr_5_4 +
                 0.235722120033789826e-1 * wr_7_4 +
                 0.438710200326004806e0 * wr_9_4;
  results[k++] =
      0.724743075339478667e-1 * wr_1_0 + 0.192589716100324218e0 * wr_3_0 +
      0.197080804683184164e0 * wr_5_0 - 0.221115668225227882e-1 * wr_7_0 -
      0.397844514456802804e0 * wr_9_0;
  results[k++] = -0.271545417883639429e0 * wr_5_4 -
                 0.165648620931196166e0 * wr_7_4 +
                 0.323708808681747870e0 * wr_9_4;
  results[k++] = 0.352329701857188057e-1 * wr_5_4 -
                 0.232123097694147426e-1 * wr_7_4 -
                 0.126003482887262579e0 * wr_9_4;
  results[k++] =
      -0.351587485524437205e-1 * wr_1_0 - 0.991493086655337940e-1 * wr_3_0 -
      0.124290236082086882e0 * wr_5_0 - 0.637476445097823476e-1 * wr_7_0 +
      0.716866054804117092e-1 * wr_9_0;
  results[k++] =
      -0.114201152147398503e0 * wr_5_4 + 0.253780338105330006e0 * wr_7_4;
  results[k++] = -0.648151235295586005e0 * wr_9_8;
  results[k++] =
      -0.272677961559148977e0 * wr_7_4 - 0.115058446576642368e0 * wr_9_4;
  results[k++] = -0.195424950443710579e0 * wr_9_8;
  results[k++] = 0.131557955778920779e-1 * wr_7_4 -
                 0.308083831273138324e0 * wr_9_4 -
                 0.198798688732591400e0 * wr_5_4;
  results[k++] =
      0.460566186471838290e0 * wr_1_0 - 0.417477246338441939e0 * wr_3_0 +
      0.121159682481044053e0 * wr_7_0 - 0.372645702418644040e-1 * wr_9_0;
  results[k++] = 0.173225704092170310e0 * wr_9_8;
  results[k++] =
      0.128363464844701401e0 * wr_7_4 - 0.360189911103260422e0 * wr_9_4;
  results[k++] =
      -0.232621052599617716e0 * wr_1_0 + 0.370054027263356841e0 * wr_5_0 -
      0.289969588915786806e0 * wr_7_0 + 0.685100788216643328e-1 * wr_9_0;
  results[k++] = -0.191903491733849486e0 * wr_9_8;
  results[k++] = 0.381102841774509440e0 * wr_5_4 -
                 0.697443109129821199e-1 * wr_7_4 -
                 0.194705150758746231e0 * wr_9_4;
  results[k++] = 0.115577119279412929e0 * wr_5_4;
  results[k++] =
      -0.679797975357467856e-1 * wr_3_0 + 0.340868744250459874e0 * wr_5_0 -
      0.185365926192510924e0 * wr_7_0 - 0.533981050947029138e-1 * wr_9_0;
  results[k++] = 0.315583134811305089e0 * wr_5_4 +
                 0.220444101522602820e0 * wr_7_4 -
                 0.492650835472295948e0 * wr_9_4;
  results[k++] = -0.377724534361057579e0 * wr_3_0 -
                 0.137665721441876966e-1 * wr_7_0 +
                 0.241502016975129082e0 * wr_9_0;
  results[k++] = -0.232146853918526486e0 * wr_5_4 +
                 0.100369375076539392e-1 * wr_7_4 +
                 0.304416035879206702e0 * wr_9_4;
  results[k++] = -0.452320867794605135e0 * wr_9_8;
  results[k++] =
      0.721568539381251978e0 * wr_1_0 - 0.726734604574354107e-1 * wr_3_0 +
      0.113892445022238598e0 * wr_7_0 - 0.343807239008710997e0 * wr_9_0;
  results[k++] =
      0.179875479330926663e-1 * wr_7_4 + 0.140203732745760529e0 * wr_9_4;
  results[k++] = -0.191903491733849486e0 * wr_9_8;
  results[k++] =
      0.139572631559770630e0 * wr_1_0 + 0.286255507274665758e0 * wr_3_0 +
      0.123351342421118947e0 * wr_5_0 - 0.179733216270115789e0 * wr_7_0 -
      0.163370187959353409e0 * wr_9_0;
  results[k++] = -0.207681711956888084e0 * wr_5_4 -
                 0.244331425831633041e0 * wr_7_4 -
                 0.166735529717343503e0 * wr_9_4;
  results[k++] =
      0.335719831132295971e0 * wr_7_0 + 0.117610890331759741e0 * wr_5_0;
  results[k++] = 0.128836275285942120e0 * wr_5_4 -
                 0.299986425298149543e0 * wr_7_4 -
                 0.241348633652590397e0 * wr_9_4;
  results[k++] =
      -0.138763180650240765e0 * wr_3_0 - 0.139159082112813980e0 * wr_5_0 +
      0.100900429971124257e-1 * wr_7_0 - 0.392394332140598857e0 * wr_9_0;
  results[k++] = 0.258970657279035374e0 * wr_5_4 +
                 0.514132922539261404e-2 * wr_7_4 +
                 0.509385457312190347e0 * wr_9_4;
  results[k++] =
      0.175570566078385425e0 * wr_3_0 + 0.204734281038153814e0 * wr_5_0 -
      0.113913698394455046e-1 * wr_7_0 - 0.404110167860888521e0 * wr_9_0;
  results[k++] =
      0.320558388772391811e0 * wr_7_4 - 0.275354664866917038e0 * wr_9_4;
  results[k++] =
      -0.184317518070738887e0 * wr_7_4 - 0.410474499042733052e-1 * wr_9_4;
  results[k++] =
      0.821541921922785398e0 * wr_1_0 + 0.248227123766417456e0 * wr_3_0 -
      0.493989535135508675e-1 * wr_7_0 + 0.797654909683645102e-1 * wr_9_0;
  results[k++] = -0.381102841774509440e0 * wr_5_4 +
                 0.697443109129821199e-1 * wr_7_4 +
                 0.194705150758746231e0 * wr_9_4;
  results[k++] = 0.244331425831633041e0 * wr_7_4 +
                 0.166735529717343503e0 * wr_9_4 +
                 0.207681711956888084e0 * wr_5_4;
  results[k++] =
      0.465242105199235432e-1 * wr_1_0 + 0.143127753637332879e0 * wr_3_0 +
      0.224275168038398085e0 * wr_5_0 + 0.239644288360154385e0 * wr_7_0 +
      0.158100181896148460e0 * wr_9_0;
  results[k++] = 0.483103407273797102e0 * wr_9_8;
  results[k++] = 0.202944023919471135e-1 * wr_9_4 +
                 0.119168718344843596e0 * wr_5_4 -
                 0.876240576065026444e-1 * wr_7_4;
  results[k++] = 0.571615660183810204e0 * wr_9_8;
  results[k++] = -0.550709329733834072e-1 * wr_9_4 -
                 0.323376484497863387e0 * wr_5_4 +
                 0.237776826836664255e0 * wr_7_4;
  results[k++] = -0.454126547101140489e0 * wr_9_8;
  results[k++] = 0.759347006199916618e-1 * wr_9_4 +
                 0.445888515267367341e0 * wr_5_4 -
                 0.327859202402475987e0 * wr_7_4;
  results[k++] = 0.255634294634883910e0 * wr_9_8;
  results[k++] = 0.560814930983042118e-1 * wr_9_4 +
                 0.329310492928927275e0 * wr_5_4 -
                 0.242140068330093584e0 * wr_7_4;
  results[k++] = -0.921242051145285004e-1 * wr_9_8;
  results[k++] = -0.272603812283974630e-1 * wr_5_4 -
                 0.162359623492661360e0 * wr_7_4 +
                 0.211230837194002314e0 * wr_9_4;
  results[k++] = 0.603395962288861814e0 * wr_9_8;
  results[k++] = 0.163646275415865073e0 * wr_7_4 -
                 0.392749809725630821e0 * wr_9_4 +
                 0.112892213185437354e0 * wr_5_4;
  results[k++] = 0.377856127182132579e0 * wr_9_8;
  results[k++] = 0.115313785332164733e0 * wr_5_4 -
                 0.847895480383564213e-1 * wr_7_4 -
                 0.351300359256385494e0 * wr_9_4;
  results[k++] =
      0.249134721396652201e0 * wr_3_0 - 0.437229661583696234e0 * wr_5_0 +
      0.270304011978623620e0 * wr_7_0 - 0.587085686547499181e-1 * wr_9_0;
  results[k++] = 0.992396026130852909e-1 * wr_9_8;
  results[k++] = -0.270465710156824284e0 * wr_7_4 -
                 0.146164499931325324e0 * wr_9_4 -
                 0.100973865125214399e0 * wr_5_4;
  results[k++] =
      -0.599700224812663918e0 * wr_1_0 + 0.493261582600063276e0 * wr_3_0 +
      0.883337310404945484e-1 * wr_5_0 - 0.212370888724460593e0 * wr_7_0 +
      0.603828756502249502e-1 * wr_9_0;
  results[k++] = 0.183233259747617299e-1 * wr_9_8;
  results[k++] = -0.291107641102317596e0 * wr_5_4 -
                 0.168564167182408167e0 * wr_7_4 -
                 0.309847232245396326e-2 * wr_9_4;
  results[k++] = 0.821931419787654662e-2 * wr_5_4 -
                 0.139607469096285461e0 * wr_7_4 -
                 0.700573431125153522e0 * wr_9_4;
  results[k++] = -0.945399796613887669e-1 * wr_5_0 +
                 0.297644124199218059e0 * wr_7_0 -
                 0.192529605931566236e0 * wr_9_0;
  results[k++] = 0.826644015469018266e-1 * wr_5_4 -
                 0.235979692997211097e-1 * wr_7_4 -
                 0.118418523213035773e0 * wr_9_4;
  results[k++] =
      0.649686428927633920e-1 * wr_3_0 - 0.199534134688418272e0 * wr_5_0 -
      0.220278469319125630e0 * wr_7_0 + 0.308110797271253247e0 * wr_9_0;
  results[k++] = -0.251105215572268673e0 * wr_5_4 -
                 0.258490663089100104e0 * wr_7_4 -
                 0.253289452254453520e0 * wr_9_4;
  results[k++] = 0.183995147689784484e0 * wr_9_8;
  results[k++] =
      0.302339870820793888e0 * wr_3_0 + 0.176868106622746730e0 * wr_5_0 -
      0.161990157954889410e0 * wr_7_0 - 0.174157759214763281e0 * wr_9_0;
  results[k++] = 0.304447658411171479e0 * wr_5_4 +
                 0.254239378610169459e0 * wr_7_4 +
                 0.142580236453568737e0 * wr_9_4;
  results[k++] = 0.946212484631759508e-1 * wr_9_8;
  results[k++] =
      0.774209661138763754e0 * wr_1_0 + 0.248103103212202497e-1 * wr_3_0 -
      0.230150137480789458e0 * wr_5_0 - 0.159516880533159634e0 * wr_7_0 -
      0.584654679473586451e-2 * wr_9_0;
  results[k++] = -0.768007242499182225e-1 * wr_5_4 -
                 0.169413362315996079e-1 * wr_7_4 +
                 0.102764701168808848e-1 * wr_9_4;
  results[k++] = -0.238218357273465770e-1 * wr_5_0 -
                 0.224997809094500863e-1 * wr_7_0 +
                 0.509385457312190347e0 * wr_9_0;
  results[k++] = 0.195716351835753093e-1 * wr_5_4 -
                 0.263833317425647552e0 * wr_7_4 +
                 0.476625361859072637e0 * wr_9_4;
  results[k++] = -0.704659403714376109e-1 * wr_5_0 -
                 0.239598898132623025e0 * wr_7_0 -
                 0.430509286544228826e0 * wr_9_0;
  results[k++] = 0.135724610915060913e0 * wr_5_4 -
                 0.325426656605804619e0 * wr_7_4 -
                 0.232143617537987279e0 * wr_9_4;
  results[k++] =
      -0.992412412848809990e-1 * wr_3_0 - 0.143066301677247500e0 * wr_5_0 -
      0.865236651106200696e-1 * wr_7_0 + 0.613887413447265775e-1 * wr_9_0;
  results[k++] = -0.127359592982263949e0 * wr_5_4 +
                 0.337128334364816334e0 * wr_7_4 -
                 0.204499173281961575e0 * wr_9_4;
  results[k++] = 0.341741648994056829e0 * wr_5_4 -
                 0.179486160185954217e-1 * wr_7_4 -
                 0.137182215840292455e0 * wr_9_4;
  results[k++] =
      0.125694690108100297e0 * wr_3_0 + 0.220593285876573789e0 * wr_5_0 +
      0.243527010708451140e0 * wr_7_0 + 0.162909666557479122e0 * wr_9_0;
  results[k++] = -0.283035757233169184e0 * wr_5_4 +
                 0.158923820906324942e0 * wr_7_4 +
                 0.525828189726246798e-1 * wr_9_4;
  results[k++] = -0.336523912835313914e0 * wr_5_4 -
                 0.154652533472111173e0 * wr_7_4 -
                 0.337719269672604693e-1 * wr_9_4;
  results[k++] =
      0.848104191288263402e0 * wr_1_0 + 0.389556109820219805e0 * wr_3_0 +
      0.193062447972021714e0 * wr_5_0 + 0.682585888834908132e-1 * wr_7_0 +
      0.533714260497726528e-2 * wr_9_0;
  results[k++] = wr_0_0 - 0.621129993749941584e0 * wr_2_0 +
                 0.136363636363636364e0 * wr_4_0 -
                 0.560303228510332445e-2 * wr_6_0;
  results[k++] =
      0.294579122654902737e0 * wr_4_4 - 0.811956517644949887e-1 * wr_6_4;
  results[k++] = -0.770289587033021258e-1 * wr_6_0 +
                 0.347164825375442424e0 * wr_4_0 -
                 0.341565025531986613e0 * wr_2_0;
  results[k++] =
      0.219566314336203615e0 * wr_4_4 - 0.326806194281060772e0 * wr_6_4;
  results[k++] = -0.488645883908554695e0 * wr_8_8;
  results[k++] =
      0.439757728816136580e-1 * wr_2_0 - 0.288942368404170587e-1 * wr_8_0 -
      0.255287122424255641e0 * wr_4_0 + 0.218180932709050432e0 * wr_6_0;
  results[k++] = 0.659148515766904072e-1 * wr_4_4 -
                 0.377900460694841674e0 * wr_6_4 +
                 0.165984753653682826e0 * wr_8_4;
  results[k++] = 0.384464525466762808e0 * wr_8_8;
  results[k++] = -0.201709162263719681e0 * wr_6_0 +
                 0.130596105788794678e0 * wr_8_0 +
                 0.629370629370629371e-1 * wr_4_0;
  results[k++] = 0.792932460858518658e-2 * wr_4_4 -
                 0.170475356704907427e0 * wr_6_4 +
                 0.366068661903726315e0 * wr_8_4;
  results[k++] =
      0.243014189473190661e-1 * wr_8_4 - 0.570223480044817756e-2 * wr_10_4 -
      0.347830821170048599e-1 * wr_6_4 + 0.146686552191629587e-1 * wr_4_4;
  results[k++] =
      0.108679249431813625e0 * wr_8_8 - 0.776928183707944947e0 * wr_10_8;
  results[k++] =
      -0.142977010869661557e0 * wr_8_0 + 0.617030028794734677e-1 * wr_6_0 -
      0.387902235122537847e-2 * wr_4_0 + 0.826332327885268935e-1 * wr_10_0;
  results[k++] =
      0.267677972849983480e-3 * wr_4_4 - 0.285629401410700780e-1 * wr_6_4 +
      0.219512454255914523e0 * wr_8_4 - 0.312480385950038678e0 * wr_10_4;
  results[k++] =
      0.294579122654902737e0 * wr_4_4 - 0.811956517644949887e-1 * wr_6_4;
  results[k++] = wr_0_0 + 0.372677996249964951e0 * wr_2_0 +
                 0.454545454545454545e-1 * wr_4_0 -
                 0.840454842765498668e-1 * wr_6_0;
  results[k++] =
      -0.449977042573257516e0 * wr_4_4 - 0.265775157365766429e0 * wr_6_4;
  results[k++] = 0.166666666666666667e0 * wr_2_0 +
                 0.304918360568153142e0 * wr_4_0 +
                 0.263103982461957331e0 * wr_6_0;
  results[k++] = -0.246630791300031638e0 * wr_4_4 +
                 0.302994439333742111e0 * wr_6_4 -
                 0.443612914000110927e-1 * wr_8_4;
  results[k++] = -0.220593285876573789e0 * wr_4_4 -
                 0.225838721051561150e0 * wr_6_4 -
                 0.297584589420304859e0 * wr_8_4;
  results[k++] = -0.788416527985443491e-1 * wr_2_0 -
                 0.111879706515911462e0 * wr_4_0 +
                 0.241746529615851996e0 * wr_8_0;
  results[k++] = 0.178796062507069680e0 * wr_6_4 -
                 0.244322941954277347e0 * wr_8_4 +
                 0.831634580949746732e-1 * wr_4_4;
  results[k++] = -0.388455985918553061e-1 * wr_4_4 +
                 0.695962729409957046e-1 * wr_6_4 +
                 0.149446905414590126e0 * wr_8_4;
  results[k++] = -0.428232472514541625e-1 * wr_4_0 -
                 0.164694841330123018e0 * wr_6_0 -
                 0.319893821577079391e0 * wr_8_0;
  results[k++] =
      -0.315432043491927653e0 * wr_10_8 + 0.267683558503029836e0 * wr_8_8;
  results[k++] =
      0.595545893183664426e-2 * wr_4_4 + 0.273023314238890175e-1 * wr_6_4 +
      0.197984778697600861e0 * wr_8_4 - 0.210674233229976881e0 * wr_10_4;
  results[k++] =
      -0.179563843011571853e-2 * wr_4_4 + 0.542174092284613969e-1 * wr_6_4 +
      0.172341052445773304e0 * wr_8_4 + 0.698727384619656684e0 * wr_10_4;
  results[k++] =
      0.867375766358101093e-2 * wr_4_0 + 0.239151655347571092e-1 * wr_6_0 -
      0.127882526209715826e-1 * wr_8_0 - 0.554320577147131917e0 * wr_10_0;
  results[k++] = -0.770289587033021258e-1 * wr_6_0 +
                 0.347164825375442424e0 * wr_4_0 -
                 0.341565025531986613e0 * wr_2_0;
  results[k++] =
      -0.449977042573257516e0 * wr_4_4 - 0.265775157365766429e0 * wr_6_4;
  results[k++] = wr_0_0 - 0.142295234931804799e0 * wr_2_0 -
                 0.734265734265734266e-1 * wr_4_0 -
                 0.171452787924161728e0 * wr_6_0 +
                 0.379915944112857245e-1 * wr_8_0;
  results[k++] = 0.773984042698554383e-1 * wr_4_4 -
                 0.427889749392401524e-1 * wr_6_4 +
                 0.267294559751271438e0 * wr_8_4;
  results[k++] = 0.319893821577079391e0 * wr_8_8;
  results[k++] =
      0.631359795611503757e-1 * wr_4_0 - 0.149974595900293522e0 * wr_6_0 +
      0.345466813670024386e0 * wr_2_0 - 0.102144878333377332e0 * wr_8_0;
  results[k++] = 0.244524597386827262e0 * wr_4_4 -
                 0.865878733146398095e-1 * wr_6_4 +
                 0.239057562174074123e0 * wr_8_4;
  results[k++] =
      0.278184914206850183e0 * wr_8_8 - 0.624393515043765160e0 * wr_10_8;
  results[k++] =
      0.217493530456382473e0 * wr_6_0 - 0.180399004953816108e0 * wr_8_0 +
      0.160229919404050349e0 * wr_4_0 - 0.857346987377947130e-1 * wr_10_0 -
      0.573255986906830680e-1 * wr_2_0;
  results[k++] =
      0.847857038670079791e-1 * wr_4_4 - 0.306359304401896421e0 * wr_6_4 -
      0.120397417659690649e0 * wr_8_4 - 0.355152820376035841e0 * wr_10_4;
  results[k++] =
      -0.111363091820923687e0 * wr_8_4 + 0.159396106705039596e0 * wr_6_4 +
      0.261309226034651829e-1 * wr_10_4 - 0.672202228850233051e-1 * wr_4_4;
  results[k++] =
      0.298818532195363441e0 * wr_8_8 + 0.726598410486982524e-1 * wr_10_8;
  results[k++] =
      0.188505787534176882e-1 * wr_6_0 - 0.255024703218100695e0 * wr_10_0 -
      0.533277406407476256e-1 * wr_4_0 + 0.305761388309415732e0 * wr_8_0;
  results[k++] =
      0.858658200720168463e-2 * wr_4_4 - 0.148344079969205774e0 * wr_6_4 +
      0.670621625075506358e-1 * wr_8_4 + 0.496804191238492839e0 * wr_10_4;
  results[k++] =
      0.219566314336203615e0 * wr_4_4 - 0.326806194281060772e0 * wr_6_4;
  results[k++] = 0.166666666666666667e0 * wr_2_0 +
                 0.304918360568153142e0 * wr_4_0 +
                 0.263103982461957331e0 * wr_6_0;
  results[k++] = 0.773984042698554383e-1 * wr_4_4 -
                 0.427889749392401524e-1 * wr_6_4 +
                 0.267294559751271438e0 * wr_8_4;
  results[k++] = wr_0_0 + 0.345574141977240225e0 * wr_2_0 +
                 0.314685314685314685e-1 * wr_4_0 +
                 0.100854581131859840e-1 * wr_6_0 +
                 0.265941160879000072e0 * wr_8_0;
  results[k++] = -0.267863275707268173e0 * wr_4_4 +
                 0.169379040788670862e0 * wr_6_4 +
                 0.991948631401016193e-1 * wr_8_4;
  results[k++] = 0.399306995438146462e0 * wr_4_4 +
                 0.136347497700183950e0 * wr_6_4 -
                 0.186317423880046590e0 * wr_8_4;
  results[k++] =
      0.141036236092785358e0 * wr_2_0 + 0.231976401503409335e0 * wr_4_0 +
      0.122453744778607019e0 * wr_6_0 - 0.194602202476456027e0 * wr_8_0;
  results[k++] =
      0.260342803762045942e0 * wr_4_4 + 0.940706235000257127e-1 * wr_6_4 -
      0.209492165716522351e0 * wr_8_4 - 0.115662432073434983e0 * wr_10_4;
  results[k++] =
      0.202676597848803337e0 * wr_4_4 + 0.153791150249910952e0 * wr_6_4 +
      0.123756096746086030e0 * wr_8_4 - 0.495236946865776523e0 * wr_10_4;
  results[k++] =
      -0.799367282027144367e-1 * wr_2_0 - 0.134057968620145552e0 * wr_4_0 -
      0.866514966488698712e-1 * wr_6_0 + 0.308025788308940026e-1 * wr_8_0 -
      0.430384771925125789e0 * wr_10_0;
  results[k++] =
      0.423196494917772221e0 * wr_10_8 - 0.359135179963089935e0 * wr_8_8;
  results[k++] =
      0.559306062369390965e-1 * wr_4_4 + 0.145256584881209253e0 * wr_6_4 +
      0.207381218400698938e0 * wr_8_4 - 0.363406042241902331e0 * wr_10_4;
  results[k++] =
      0.281061871492482654e-1 * wr_4_4 - 0.666468603291635156e-1 * wr_6_4 -
      0.160975799787670650e0 * wr_8_4 - 0.223200275678599055e0 * wr_10_4;
  results[k++] =
      -0.271531564585776493e-1 * wr_4_0 - 0.111065405183052242e0 * wr_6_0 -
      0.257358619565390801e0 * wr_8_0 - 0.389556668860198213e0 * wr_10_0;
  results[k++] = -0.488645883908554695e0 * wr_8_8;
  results[k++] = -0.246630791300031638e0 * wr_4_4 +
                 0.302994439333742111e0 * wr_6_4 -
                 0.443612914000110927e-1 * wr_8_4;
  results[k++] = 0.319893821577079391e0 * wr_8_8;
  results[k++] = -0.267863275707268173e0 * wr_4_4 +
                 0.169379040788670862e0 * wr_6_4 +
                 0.991948631401016193e-1 * wr_8_4;
  results[k++] =
      wr_0_0 - 0.610839082610889297e0 * wr_2_0 +
      0.710059171597633136e-1 * wr_4_0 + 0.623305650358666207e-1 * wr_6_0 -
      0.153331460237856100e-1 * wr_8_0 - 0.188887378197201532e-2 * wr_10_0;
  results[k++] =
      -0.259307028362529125e0 * wr_8_8 - 0.395122417660646142e0 * wr_10_8;
  results[k++] =
      -0.409952853862456164e-1 * wr_4_4 - 0.241405240343609727e0 * wr_6_4 +
      0.196957826838160600e0 * wr_8_4 + 0.597612918901983385e-1 * wr_10_4;
  results[k++] =
      -0.307101786112358071e0 * wr_2_0 + 0.419003676463017058e0 * wr_4_0 -
      0.158973214153822504e0 * wr_6_0 - 0.174720793319666133e-1 * wr_8_0 +
      0.163477373857756856e-1 * wr_10_0;
  results[k++] =
      -0.514364088324794415e-1 * wr_8_8 + 0.595291134137798114e0 * wr_10_8;
  results[k++] =
      0.863027990777037396e-1 * wr_4_4 - 0.219653060981990693e0 * wr_6_4 -
      0.800671260870104717e-1 * wr_8_4 + 0.184519541367867857e0 * wr_10_4;
  results[k++] =
      0.223647617165223211e-1 * wr_2_0 - 0.180032858995423650e0 * wr_4_0 +
      0.296981956250630586e0 * wr_6_0 - 0.187680238350273749e0 * wr_8_0 +
      0.421446884358401381e-1 * wr_10_0;
  results[k++] =
      0.142658930362487273e0 * wr_8_8 - 0.396249730700850965e0 * wr_10_8;
  results[k++] =
      -0.174804484231005064e-1 * wr_4_4 + 0.193435914745122854e0 * wr_6_4 -
      0.405435652987835588e0 * wr_8_4 + 0.224244244247355519e0 * wr_10_4;
  results[k++] =
      0.439757728816136580e-1 * wr_2_0 - 0.288942368404170587e-1 * wr_8_0 -
      0.255287122424255641e0 * wr_4_0 + 0.218180932709050432e0 * wr_6_0;
  results[k++] = -0.220593285876573789e0 * wr_4_4 -
                 0.225838721051561150e0 * wr_6_4 -
                 0.297584589420304859e0 * wr_8_4;
  results[k++] =
      0.631359795611503757e-1 * wr_4_0 - 0.149974595900293522e0 * wr_6_0 +
      0.345466813670024386e0 * wr_2_0 - 0.102144878333377332e0 * wr_8_0;
  results[k++] = 0.399306995438146462e0 * wr_4_4 +
                 0.136347497700183950e0 * wr_6_4 -
                 0.186317423880046590e0 * wr_8_4;
  results[k++] =
      -0.259307028362529125e0 * wr_8_8 - 0.395122417660646142e0 * wr_10_8;
  results[k++] =
      wr_0_0 + 0.407226055073926198e-1 * wr_2_0 -
      0.710059171597633136e-1 * wr_4_0 + 0.120505759069342133e0 * wr_6_0 -
      0.223863931947269906e0 * wr_8_0 - 0.849993201887406896e-1 * wr_10_0;
  results[k++] =
      -0.916682448806489204e-1 * wr_4_4 + 0.935650781057175794e-1 * wr_6_4 -
      0.176164435804303829e-1 * wr_8_4 + 0.400890933269071149e0 * wr_10_4;
  results[k++] =
      0.984932242837067106e-1 * wr_8_8 + 0.435232918016050532e0 * wr_10_8;
  results[k++] =
      0.288681618957735812e0 * wr_2_0 + 0.699544681399570895e-1 * wr_8_0 -
      0.281731804625220738e0 * wr_10_0 + 0.218817533506504835e0 * wr_4_0 -
      0.830210534389217637e-1 * wr_6_0;
  results[k++] =
      -0.270170495540752402e0 * wr_4_4 + 0.701655965459482716e-1 * wr_6_4 -
      0.596785122312007186e-1 * wr_8_4 - 0.459752321981424149e0 * wr_10_4;
  results[k++] =
      -0.236573072502904968e0 * wr_8_4 + 0.338611528214836325e0 * wr_6_4 +
      0.555109645983793795e-1 * wr_10_4 - 0.142798609505309880e0 * wr_4_4;
  results[k++] =
      -0.423194777409985461e0 * wr_8_8 - 0.290898315178686920e0 * wr_10_8;
  results[k++] =
      -0.452349578199075929e-1 * wr_2_0 + 0.101227192706258443e0 * wr_8_0 +
      0.620377102620514278e-1 * wr_4_0 + 0.240270232869887662e0 * wr_6_0 -
      0.298662113522907016e0 * wr_10_0;
  results[k++] =
      -0.729632791089659100e-1 * wr_4_4 + 0.240984261881971366e0 * wr_6_4 +
      0.271974504174844829e0 * wr_8_4 + 0.764076759924042832e-1 * wr_10_4;
  results[k++] = 0.659148515766904072e-1 * wr_4_4 -
                 0.377900460694841674e0 * wr_6_4 +
                 0.165984753653682826e0 * wr_8_4;
  results[k++] = -0.788416527985443491e-1 * wr_2_0 -
                 0.111879706515911462e0 * wr_4_0 +
                 0.241746529615851996e0 * wr_8_0;
  results[k++] = 0.244524597386827262e0 * wr_4_4 -
                 0.865878733146398095e-1 * wr_6_4 +
                 0.239057562174074123e0 * wr_8_4;
  results[k++] =
      0.141036236092785358e0 * wr_2_0 + 0.231976401503409335e0 * wr_4_0 +
      0.122453744778607019e0 * wr_6_0 - 0.194602202476456027e0 * wr_8_0;
  results[k++] =
      -0.409952853862456164e-1 * wr_4_4 - 0.241405240343609727e0 * wr_6_4 +
      0.196957826838160600e0 * wr_8_4 + 0.597612918901983385e-1 * wr_10_4;
  results[k++] =
      -0.916682448806489204e-1 * wr_4_4 + 0.935650781057175794e-1 * wr_6_4 -
      0.176164435804303829e-1 * wr_8_4 + 0.400890933269071149e0 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.366503449566533577e0 * wr_2_0 +
      0.473372781065088757e-1 * wr_4_0 - 0.498644520286932966e-1 * wr_6_0 +
      0.429328088665997080e-1 * wr_8_0 - 0.396663494214123217e0 * wr_10_0;
  results[k++] =
      0.338676639556312064e0 * wr_4_4 - 0.879572301301171098e-1 * wr_6_4 +
      0.748109742173330686e-1 * wr_8_4 - 0.291523584672827108e0 * wr_10_4;
  results[k++] =
      -0.395489109460142443e0 * wr_4_4 - 0.198576371284237970e0 * wr_6_4 +
      0.640642908838775819e-1 * wr_8_4 + 0.362389185221481391e0 * wr_10_4;
  results[k++] =
      0.109559493944349181e0 * wr_2_0 + 0.199307777117321761e0 * wr_4_0 +
      0.162040504214615641e0 * wr_6_0 - 0.623321731207851841e-1 * wr_8_0 -
      0.384918924159944744e0 * wr_10_0;
  results[k++] =
      -0.367020622296547291e0 * wr_10_8 + 0.311462922830319460e0 * wr_8_8;
  results[k++] =
      0.194025103260773461e0 * wr_4_4 + 0.202655372929825244e0 * wr_6_4 -
      0.267866256892063655e-1 * wr_8_4 - 0.317860596953105196e0 * wr_10_4;
  results[k++] =
      -0.107342921853207633e0 * wr_6_4 - 0.137300015980315883e0 * wr_8_4 -
      0.178682090802005892e0 * wr_10_4 - 0.146251924414988088e0 * wr_4_4;
  results[k++] =
      -0.564179046890883029e-1 * wr_2_0 - 0.111015757628956913e0 * wr_4_0 -
      0.117727354857554910e0 * wr_6_0 - 0.473446841664701433e-1 * wr_8_0 +
      0.779645095264536619e-1 * wr_10_0;
  results[k++] = 0.384464525466762808e0 * wr_8_8;
  results[k++] = 0.178796062507069680e0 * wr_6_4 -
                 0.244322941954277347e0 * wr_8_4 +
                 0.831634580949746732e-1 * wr_4_4;
  results[k++] =
      0.278184914206850183e0 * wr_8_8 - 0.624393515043765160e0 * wr_10_8;
  results[k++] =
      0.260342803762045942e0 * wr_4_4 + 0.940706235000257127e-1 * wr_6_4 -
      0.209492165716522351e0 * wr_8_4 - 0.115662432073434983e0 * wr_10_4;
  results[k++] =
      -0.307101786112358071e0 * wr_2_0 + 0.419003676463017058e0 * wr_4_0 -
      0.158973214153822504e0 * wr_6_0 - 0.174720793319666133e-1 * wr_8_0 +
      0.163477373857756856e-1 * wr_10_0;
  results[k++] =
      0.984932242837067106e-1 * wr_8_8 + 0.435232918016050532e0 * wr_10_8;
  results[k++] =
      0.338676639556312064e0 * wr_4_4 - 0.879572301301171098e-1 * wr_6_4 +
      0.748109742173330686e-1 * wr_8_4 - 0.291523584672827108e0 * wr_10_4;
  results[k++] =
      wr_0_0 - 0.356296545865351107e0 * wr_2_0 -
      0.131868131868131868e0 * wr_4_0 - 0.815735582684160473e-1 * wr_6_0 +
      0.181656237375391093e0 * wr_8_0 - 0.572958380531511314e-1 * wr_10_0;
  results[k++] =
      -0.320868889675268207e0 * wr_8_8 - 0.425793236030893137e-1 * wr_10_8;
  results[k++] =
      0.135805358385346081e0 * wr_4_4 + 0.676260407675208085e-1 * wr_6_4 +
      0.166490691646719176e0 * wr_8_4 - 0.329952724492340425e0 * wr_10_4;
  results[k++] =
      0.263947506272121648e0 * wr_2_0 - 0.141649095963843867e0 * wr_4_0 -
      0.280396984340808462e0 * wr_6_0 + 0.291113014531210714e0 * wr_8_0 -
      0.773716149179274420e-1 * wr_10_0;
  results[k++] =
      0.240521670358706308e0 * wr_8_8 - 0.103922540294193157e0 * wr_10_8;
  results[k++] =
      -0.123781889427971317e0 * wr_4_4 + 0.365266953201457389e0 * wr_6_4 -
      0.273424342189654506e-1 * wr_8_4 - 0.176434427859309454e0 * wr_10_4;
  results[k++] = -0.201709162263719681e0 * wr_6_0 +
                 0.130596105788794678e0 * wr_8_0 +
                 0.629370629370629371e-1 * wr_4_0;
  results[k++] = -0.388455985918553061e-1 * wr_4_4 +
                 0.695962729409957046e-1 * wr_6_4 +
                 0.149446905414590126e0 * wr_8_4;
  results[k++] =
      0.217493530456382473e0 * wr_6_0 - 0.180399004953816108e0 * wr_8_0 +
      0.160229919404050349e0 * wr_4_0 - 0.857346987377947130e-1 * wr_10_0 -
      0.573255986906830680e-1 * wr_2_0;
  results[k++] =
      0.202676597848803337e0 * wr_4_4 + 0.153791150249910952e0 * wr_6_4 +
      0.123756096746086030e0 * wr_8_4 - 0.495236946865776523e0 * wr_10_4;
  results[k++] =
      -0.514364088324794415e-1 * wr_8_8 + 0.595291134137798114e0 * wr_10_8;
  results[k++] =
      0.288681618957735812e0 * wr_2_0 + 0.699544681399570895e-1 * wr_8_0 -
      0.281731804625220738e0 * wr_10_0 + 0.218817533506504835e0 * wr_4_0 -
      0.830210534389217637e-1 * wr_6_0;
  results[k++] =
      -0.395489109460142443e0 * wr_4_4 - 0.198576371284237970e0 * wr_6_4 +
      0.640642908838775819e-1 * wr_8_4 + 0.362389185221481391e0 * wr_10_4;
  results[k++] =
      -0.320868889675268207e0 * wr_8_8 - 0.425793236030893137e-1 * wr_10_8;
  results[k++] =
      wr_0_0 + 0.161952975393341412e0 * wr_2_0 -
      0.107892107892107892e0 * wr_4_0 + 0.637756910098525461e-1 * wr_6_0 +
      0.627539729114987415e-1 * wr_8_0 - 0.333251302962205560e0 * wr_10_0;
  results[k++] =
      0.222021089040385224e0 * wr_4_4 - 0.438723344461158819e-1 * wr_6_4 -
      0.648064138298462854e-1 * wr_8_4 + 0.726569054754571007e-1 * wr_10_4;
  results[k++] =
      -0.291617027367828793e0 * wr_8_4 + 0.684268176053781307e-1 * wr_10_4 +
      0.417396985404058319e0 * wr_6_4 - 0.176023862629955505e0 * wr_4_4;
  results[k++] =
      0.372614569480503858e0 * wr_8_8 + 0.163435442098688576e0 * wr_10_8;
  results[k++] =
      -0.134133065468346637e0 * wr_10_0 + 0.262665227782975628e0 * wr_4_0 +
      0.493624023035787742e-1 * wr_6_0 + 0.204452859212980972e0 * wr_2_0 -
      0.196082757764107278e0 * wr_8_0;
  results[k++] =
      0.269819396632783347e0 * wr_4_4 - 0.533174882633308123e-1 * wr_6_4 -
      0.175609963404731618e0 * wr_8_4 - 0.145202816705198507e0 * wr_10_4;
  results[k++] = 0.792932460858518658e-2 * wr_4_4 -
                 0.170475356704907427e0 * wr_6_4 +
                 0.366068661903726315e0 * wr_8_4;
  results[k++] = -0.428232472514541625e-1 * wr_4_0 -
                 0.164694841330123018e0 * wr_6_0 -
                 0.319893821577079391e0 * wr_8_0;
  results[k++] =
      0.847857038670079791e-1 * wr_4_4 - 0.306359304401896421e0 * wr_6_4 -
      0.120397417659690649e0 * wr_8_4 - 0.355152820376035841e0 * wr_10_4;
  results[k++] =
      -0.799367282027144367e-1 * wr_2_0 - 0.134057968620145552e0 * wr_4_0 -
      0.866514966488698712e-1 * wr_6_0 + 0.308025788308940026e-1 * wr_8_0 -
      0.430384771925125789e0 * wr_10_0;
  results[k++] =
      0.863027990777037396e-1 * wr_4_4 - 0.219653060981990693e0 * wr_6_4 -
      0.800671260870104717e-1 * wr_8_4 + 0.184519541367867857e0 * wr_10_4;
  results[k++] =
      -0.270170495540752402e0 * wr_4_4 + 0.701655965459482716e-1 * wr_6_4 -
      0.596785122312007186e-1 * wr_8_4 - 0.459752321981424149e0 * wr_10_4;
  results[k++] =
      0.109559493944349181e0 * wr_2_0 + 0.199307777117321761e0 * wr_4_0 +
      0.162040504214615641e0 * wr_6_0 - 0.623321731207851841e-1 * wr_8_0 -
      0.384918924159944744e0 * wr_10_0;
  results[k++] =
      0.135805358385346081e0 * wr_4_4 + 0.676260407675208085e-1 * wr_6_4 +
      0.166490691646719176e0 * wr_8_4 - 0.329952724492340425e0 * wr_10_4;
  results[k++] =
      0.222021089040385224e0 * wr_4_4 - 0.438723344461158819e-1 * wr_6_4 -
      0.648064138298462854e-1 * wr_8_4 + 0.726569054754571007e-1 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.421077736022687671e0 * wr_2_0 +
      0.127872127872127872e0 * wr_4_0 - 0.296631120976058354e-1 * wr_6_0 -
      0.330284067955256534e-1 * wr_8_0 + 0.912056197580773113e-1 * wr_10_0;
  results[k++] =
      0.220756444308175460e0 * wr_10_8 - 0.187339465961392102e0 * wr_8_8;
  results[k++] =
      0.350108053610407735e0 * wr_4_4 + 0.322853424440124779e-1 * wr_6_4 -
      0.215896563929216224e0 * wr_8_4 - 0.136099614953548837e0 * wr_10_4;
  results[k++] =
      0.369465424970522252e0 * wr_4_4 + 0.301766307323880045e0 * wr_6_4 +
      0.245807486714094368e0 * wr_8_4 + 0.139716372377760457e0 * wr_10_4;
  results[k++] =
      0.746556286249184010e-1 * wr_2_0 + 0.163899877589964028e0 * wr_4_0 +
      0.225307510285958911e0 * wr_6_0 + 0.223747811594214178e0 * wr_8_0 +
      0.140682840633824749e0 * wr_10_0;
  results[k++] =
      0.243014189473190661e-1 * wr_8_4 - 0.570223480044817756e-2 * wr_10_4 -
      0.347830821170048599e-1 * wr_6_4 + 0.146686552191629587e-1 * wr_4_4;
  results[k++] =
      -0.315432043491927653e0 * wr_10_8 + 0.267683558503029836e0 * wr_8_8;
  results[k++] =
      -0.111363091820923687e0 * wr_8_4 + 0.159396106705039596e0 * wr_6_4 +
      0.261309226034651829e-1 * wr_10_4 - 0.672202228850233051e-1 * wr_4_4;
  results[k++] =
      0.423196494917772221e0 * wr_10_8 - 0.359135179963089935e0 * wr_8_8;
  results[k++] =
      -0.236573072502904968e0 * wr_8_4 + 0.338611528214836325e0 * wr_6_4 +
      0.555109645983793795e-1 * wr_10_4 - 0.142798609505309880e0 * wr_4_4;
  results[k++] =
      -0.367020622296547291e0 * wr_10_8 + 0.311462922830319460e0 * wr_8_8;
  results[k++] =
      -0.291617027367828793e0 * wr_8_4 + 0.684268176053781307e-1 * wr_10_4 +
      0.417396985404058319e0 * wr_6_4 - 0.176023862629955505e0 * wr_4_4;
  results[k++] =
      0.220756444308175460e0 * wr_10_8 - 0.187339465961392102e0 * wr_8_8;
  results[k++] =
      wr_0_0 - 0.860026145192226807e0 * wr_2_0 +
      0.461538461538461538e0 * wr_4_0 - 0.163147116536832095e0 * wr_6_0 +
      0.343673962602091258e-1 * wr_8_0 - 0.327404788875149322e-2 * wr_10_0;
  results[k++] =
      -0.202200027879440803e0 * wr_8_4 + 0.474454614409640149e-1 * wr_10_4 +
      0.289412737134312807e0 * wr_6_4 - 0.122050588926448868e0 * wr_4_4;
  results[k++] =
      -0.838382781331133681e-1 * wr_10_8 + 0.711472695703246291e-1 * wr_8_8;
  results[k++] =
      0.108679249431813625e0 * wr_8_8 - 0.776928183707944947e0 * wr_10_8;
  results[k++] =
      0.595545893183664426e-2 * wr_4_4 + 0.273023314238890175e-1 * wr_6_4 +
      0.197984778697600861e0 * wr_8_4 - 0.210674233229976881e0 * wr_10_4;
  results[k++] =
      0.298818532195363441e0 * wr_8_8 + 0.726598410486982524e-1 * wr_10_8;
  results[k++] =
      0.559306062369390965e-1 * wr_4_4 + 0.145256584881209253e0 * wr_6_4 +
      0.207381218400698938e0 * wr_8_4 - 0.363406042241902331e0 * wr_10_4;
  results[k++] =
      0.223647617165223211e-1 * wr_2_0 - 0.180032858995423650e0 * wr_4_0 +
      0.296981956250630586e0 * wr_6_0 - 0.187680238350273749e0 * wr_8_0 +
      0.421446884358401381e-1 * wr_10_0;
  results[k++] =
      -0.423194777409985461e0 * wr_8_8 - 0.290898315178686920e0 * wr_10_8;
  results[k++] =
      0.194025103260773461e0 * wr_4_4 + 0.202655372929825244e0 * wr_6_4 -
      0.267866256892063655e-1 * wr_8_4 - 0.317860596953105196e0 * wr_10_4;
  results[k++] =
      0.263947506272121648e0 * wr_2_0 - 0.141649095963843867e0 * wr_4_0 -
      0.280396984340808462e0 * wr_6_0 + 0.291113014531210714e0 * wr_8_0 -
      0.773716149179274420e-1 * wr_10_0;
  results[k++] =
      0.372614569480503858e0 * wr_8_8 + 0.163435442098688576e0 * wr_10_8;
  results[k++] =
      0.350108053610407735e0 * wr_4_4 + 0.322853424440124779e-1 * wr_6_4 -
      0.215896563929216224e0 * wr_8_4 - 0.136099614953548837e0 * wr_10_4;
  results[k++] =
      wr_0_0 - 0.179565898446728674e0 * wr_2_0 -
      0.400676246830092984e0 * wr_4_0 + 0.627488909757046517e-1 * wr_6_0 +
      0.156730433494360299e0 * wr_8_0 - 0.586810121599306093e-1 * wr_10_0;
  results[k++] =
      -0.193771288881763837e0 * wr_8_8 - 0.287533660566995082e-1 * wr_10_8;
  results[k++] =
      0.332407695585280081e0 * wr_4_4 - 0.171657345682350334e0 * wr_6_4 -
      0.149299969254425162e0 * wr_8_4 - 0.861458986927423610e-2 * wr_10_4;
  results[k++] =
      -0.142977010869661557e0 * wr_8_0 + 0.617030028794734677e-1 * wr_6_0 -
      0.387902235122537847e-2 * wr_4_0 + 0.826332327885268935e-1 * wr_10_0;
  results[k++] =
      -0.179563843011571853e-2 * wr_4_4 + 0.542174092284613969e-1 * wr_6_4 +
      0.172341052445773304e0 * wr_8_4 + 0.698727384619656684e0 * wr_10_4;
  results[k++] =
      0.188505787534176882e-1 * wr_6_0 - 0.255024703218100695e0 * wr_10_0 -
      0.533277406407476256e-1 * wr_4_0 + 0.305761388309415732e0 * wr_8_0;
  results[k++] =
      0.281061871492482654e-1 * wr_4_4 - 0.666468603291635156e-1 * wr_6_4 -
      0.160975799787670650e0 * wr_8_4 - 0.223200275678599055e0 * wr_10_4;
  results[k++] =
      0.142658930362487273e0 * wr_8_8 - 0.396249730700850965e0 * wr_10_8;
  results[k++] =
      -0.452349578199075929e-1 * wr_2_0 + 0.101227192706258443e0 * wr_8_0 +
      0.620377102620514278e-1 * wr_4_0 + 0.240270232869887662e0 * wr_6_0 -
      0.298662113522907016e0 * wr_10_0;
  results[k++] =
      -0.107342921853207633e0 * wr_6_4 - 0.137300015980315883e0 * wr_8_4 -
      0.178682090802005892e0 * wr_10_4 - 0.146251924414988088e0 * wr_4_4;
  results[k++] =
      0.240521670358706308e0 * wr_8_8 - 0.103922540294193157e0 * wr_10_8;
  results[k++] =
      -0.134133065468346637e0 * wr_10_0 + 0.262665227782975628e0 * wr_4_0 +
      0.493624023035787742e-1 * wr_6_0 + 0.204452859212980972e0 * wr_2_0 -
      0.196082757764107278e0 * wr_8_0;
  results[k++] =
      0.369465424970522252e0 * wr_4_4 + 0.301766307323880045e0 * wr_6_4 +
      0.245807486714094368e0 * wr_8_4 + 0.139716372377760457e0 * wr_10_4;
  results[k++] =
      -0.202200027879440803e0 * wr_8_4 + 0.474454614409640149e-1 * wr_10_4 +
      0.289412737134312807e0 * wr_6_4 - 0.122050588926448868e0 * wr_4_4;
  results[k++] =
      -0.193771288881763837e0 * wr_8_8 - 0.287533660566995082e-1 * wr_10_8;
  results[k++] =
      wr_0_0 + 0.274074266050270082e0 * wr_2_0 -
      0.114808268654422501e0 * wr_4_0 - 0.224755118585705753e0 * wr_6_0 -
      0.117453409196978441e0 * wr_8_0 + 0.572058916825810354e-2 * wr_10_0;
  results[k++] =
      -0.467715225804930778e0 * wr_4_4 - 0.192238937812388689e0 * wr_6_4 -
      0.649405874398066226e-1 * wr_8_4 - 0.544216425127226949e-2 * wr_10_4;
  results[k++] =
      0.267677972849983480e-3 * wr_4_4 - 0.285629401410700780e-1 * wr_6_4 +
      0.219512454255914523e0 * wr_8_4 - 0.312480385950038678e0 * wr_10_4;
  results[k++] =
      0.867375766358101093e-2 * wr_4_0 + 0.239151655347571092e-1 * wr_6_0 -
      0.127882526209715826e-1 * wr_8_0 - 0.554320577147131917e0 * wr_10_0;
  results[k++] =
      0.858658200720168463e-2 * wr_4_4 - 0.148344079969205774e0 * wr_6_4 +
      0.670621625075506358e-1 * wr_8_4 + 0.496804191238492839e0 * wr_10_4;
  results[k++] =
      -0.271531564585776493e-1 * wr_4_0 - 0.111065405183052242e0 * wr_6_0 -
      0.257358619565390801e0 * wr_8_0 - 0.389556668860198213e0 * wr_10_0;
  results[k++] =
      -0.174804484231005064e-1 * wr_4_4 + 0.193435914745122854e0 * wr_6_4 -
      0.405435652987835588e0 * wr_8_4 + 0.224244244247355519e0 * wr_10_4;
  results[k++] =
      -0.729632791089659100e-1 * wr_4_4 + 0.240984261881971366e0 * wr_6_4 +
      0.271974504174844829e0 * wr_8_4 + 0.764076759924042832e-1 * wr_10_4;
  results[k++] =
      -0.564179046890883029e-1 * wr_2_0 - 0.111015757628956913e0 * wr_4_0 -
      0.117727354857554910e0 * wr_6_0 - 0.473446841664701433e-1 * wr_8_0 +
      0.779645095264536619e-1 * wr_10_0;
  results[k++] =
      -0.123781889427971317e0 * wr_4_4 + 0.365266953201457389e0 * wr_6_4 -
      0.273424342189654506e-1 * wr_8_4 - 0.176434427859309454e0 * wr_10_4;
  results[k++] =
      0.269819396632783347e0 * wr_4_4 - 0.533174882633308123e-1 * wr_6_4 -
      0.175609963404731618e0 * wr_8_4 - 0.145202816705198507e0 * wr_10_4;
  results[k++] =
      0.746556286249184010e-1 * wr_2_0 + 0.163899877589964028e0 * wr_4_0 +
      0.225307510285958911e0 * wr_6_0 + 0.223747811594214178e0 * wr_8_0 +
      0.140682840633824749e0 * wr_10_0;
  results[k++] =
      -0.838382781331133681e-1 * wr_10_8 + 0.711472695703246291e-1 * wr_8_8;
  results[k++] =
      0.332407695585280081e0 * wr_4_4 - 0.171657345682350334e0 * wr_6_4 -
      0.149299969254425162e0 * wr_8_4 - 0.861458986927423610e-2 * wr_10_4;
  results[k++] =
      -0.467715225804930778e0 * wr_4_4 - 0.192238937812388689e0 * wr_6_4 -
      0.649405874398066226e-1 * wr_8_4 - 0.544216425127226949e-2 * wr_10_4;
  results[k++] =
      wr_0_0 + 0.500894348298769460e0 * wr_2_0 +
      0.286329055559824791e0 * wr_4_0 + 0.142611115853874209e0 * wr_6_0 +
      0.472079618958916562e-1 * wr_8_0 + 0.971420802157036450e-3 * wr_10_0;
  if (k == n_elems)
    return;
#endif
#if (OA_LMAX >= 6)
  cmplx wr_11_0 = wzeta.eval_wr_lm(11, 0);
  cmplx wr_11_4 = wzeta.eval_wr_lm(11, 4);
  cmplx wr_11_8 = wzeta.eval_wr_lm(11, 8);
  cmplx wr_12_0 = wzeta.eval_wr_lm(12, 0);
  cmplx wr_12_4 = wzeta.eval_wr_lm(12, 4);
  cmplx wr_12_8 = wzeta.eval_wr_lm(12, 8);
  cmplx wr_12_12 = wzeta.eval_wr_lm(12, 12);
  results[k++] = 0.579365459502321093e0 * wr_6_4;
  results[k++] = 0.409673245199351323e0 * wr_6_0;
  results[k++] = 0.287084625881607282e0 * wr_6_4;
  results[k++] = -0.128388147753273875e0 * wr_6_4;
  results[k++] = 0.518874521662770826e0 * wr_6_0;
  results[k++] = -0.621059003408118792e0 * wr_6_4;
  results[k++] = 0.564076074817766209e0 * wr_6_4;
  results[k++] = 0.953462589245592318e-1 * wr_6_0;
  results[k++] = 0.245844585947220810e0 * wr_6_4;
  results[k++] = -0.518874521662770826e0 * wr_6_4;
  results[k++] = -0.480384461415261399e0 * wr_6_0;
  results[k++] = -0.686606562325595186e0 * wr_6_4;
  results[k++] = 0.245844585947220810e0 * wr_6_4;
  results[k++] = -0.568398560058805107e0 * wr_6_0;
  results[k++] = -0.801651188547221924e0 * wr_5_4;
  results[k++] = 0.199171839092787678e0 * wr_5_4;
  results[k++] =
      -0.475318754348711283e-1 * wr_7_0 + 0.555052722600963060e-1 * wr_5_0;
  results[k++] =
      -0.239810184608143310e-1 * wr_5_4 - 0.565266863719194946e0 * wr_7_4;
  results[k++] = -0.422507274131718205e0 * wr_5_0;
  results[k++] = -0.314918328648886780e0 * wr_5_0;
  results[k++] =
      0.105313849493799719e0 * wr_5_4 - 0.386150781477265638e0 * wr_7_4;
  results[k++] =
      0.541675992476561801e-2 * wr_5_0 - 0.487056787394848929e0 * wr_7_0;
  results[k++] = -0.308957190326662336e0 * wr_5_4;
  results[k++] =
      -0.478280270566908994e0 * wr_5_4 - 0.556728357273650681e-1 * wr_7_4;
  results[k++] =
      0.244449645093622948e0 * wr_5_4 - 0.248976490373134484e0 * wr_7_4;
  results[k++] = -0.414509567824654461e0 * wr_5_4;
  results[k++] =
      0.499084692066146851e0 * wr_5_4 - 0.373464735559701725e0 * wr_7_4;
  results[k++] =
      0.168530017693897266e0 * wr_7_0 - 0.196800661251332709e0 * wr_5_0;
  results[k++] =
      0.145761606268010360e0 * wr_5_4 + 0.334037014364190408e0 * wr_7_4;
  results[k++] = -0.535129551009506822e0 * wr_5_0;
  results[k++] =
      -0.920450809866306509e-1 * wr_5_0 - 0.262742327332297395e0 * wr_7_0;
  results[k++] =
      -0.152441136709803775e0 * wr_5_4 + 0.558950834602613843e0 * wr_7_4;
  results[k++] =
      -0.164655246464463638e0 * wr_5_0 - 0.470007763585214359e0 * wr_7_0;
  results[k++] =
      0.428446535248487643e0 * wr_5_4 - 0.538618501455241608e-1 * wr_7_4;
  results[k++] =
      0.410586676088519195e0 * wr_5_4 + 0.321170022184797237e0 * wr_7_4;
  results[k++] = 0.466802701261209394e0 * wr_7_4;
  results[k++] =
      0.100063552596183110e0 * wr_5_4 - 0.230622664078822025e0 * wr_7_4;
  results[k++] = -0.415533681968211853e0 * wr_5_4;
  results[k++] =
      0.317331531208767055e0 * wr_7_0 - 0.370563392992776790e0 * wr_5_0;
  results[k++] =
      -0.343075037472627805e0 * wr_5_4 - 0.377382541219890586e0 * wr_7_4;
  results[k++] =
      -0.264743275471132081e0 * wr_5_0 + 0.142505060638885059e0 * wr_7_0;
  results[k++] =
      0.422845686099574283e0 * wr_5_0 - 0.424868003635035468e0 * wr_7_0;
  results[k++] =
      0.140059797549026045e0 * wr_5_4 - 0.513552591013095498e0 * wr_7_4;
  results[k++] =
      -0.151281871697789760e0 * wr_5_0 + 0.172733406835012193e-1 * wr_7_0;
  results[k++] =
      -0.537086155529574661e0 * wr_5_4 + 0.107417231105914932e0 * wr_7_4;
  results[k++] = 0.340168025708304503e0 * wr_7_4;
  results[k++] =
      0.520094925986779433e0 * wr_5_4 - 0.526596112561614176e0 * wr_7_4;
  results[k++] =
      -0.508798329050882807e0 * wr_5_4 - 0.200611912597205221e0 * wr_7_4;
  results[k++] = 0.376069902316805231e0 * wr_7_4;
  results[k++] =
      0.156814520442346322e0 * wr_5_4 + 0.452801927777275003e0 * wr_7_4;
  results[k++] =
      0.364878191557889925e0 * wr_7_0 - 0.426085930313074844e0 * wr_5_0;
  results[k++] =
      0.372563423041124063e0 * wr_5_4 - 0.289284540243696331e-1 * wr_7_4;
  results[k++] = 0.424264068711928515e0 * wr_7_0;
  results[k++] =
      0.454491659000613167e0 * wr_5_0 - 0.729756383115779847e-1 * wr_7_0;
  results[k++] =
      -0.882081677488198059e-1 * wr_5_4 + 0.323429948412339288e0 * wr_7_4;
  results[k++] =
      0.317585701478757867e0 * wr_5_0 + 0.293721278339027433e0 * wr_7_0;
  results[k++] =
      0.930260509419063425e0 * wr_5_4 - 0.186052101883812684e0 * wr_7_4;
  results[k++] = 0.738918128076446638e0 * wr_7_4;
  results[k++] = -0.786795792469443142e-1 * wr_7_4;
  results[k++] =
      0.608998457205862613e0 * wr_5_4 + 0.159692928778426196e0 * wr_7_4;
  results[k++] = -0.264575131106459059e0 * wr_7_4;
  results[k++] = -0.422577127364258289e0 * wr_7_4;
  results[k++] =
      0.242032811116188819e0 * wr_7_0 - 0.282633431859597474e0 * wr_5_0;
  results[k++] =
      -0.218056426736092631e0 * wr_5_4 + 0.194797074550909417e0 * wr_7_4;
  results[k++] = 0.501996015920445330e0 * wr_7_0;
  results[k++] = 0.374165738677394139e0 * wr_7_0;
  results[k++] =
      0.347897705282034949e-1 * wr_5_4 - 0.127562491936746148e0 * wr_7_4;
  results[k++] =
      0.676390445251196129e0 * wr_5_0 + 0.901018490113619821e-1 * wr_7_0;
  results[k++] = 0.381385035698236927e0 * wr_4_4;
  results[k++] =
      -0.355275789424870693e0 * wr_4_4 - 0.440665382472853490e0 * wr_6_4;
  results[k++] =
      -0.114664767979434777e0 * wr_4_0 + 0.954068539474692597e-1 * wr_6_0;
  results[k++] =
      0.148622525703563476e0 * wr_4_4 + 0.329184920171773349e0 * wr_6_4;
  results[k++] = -0.264611003029464870e-1 * wr_4_0 +
                 0.108127767807131828e0 * wr_6_0 -
                 0.753017114798575855e-1 * wr_8_0;
  results[k++] = 0.278924487838274700e-1 * wr_4_4 +
                 0.269851333591720174e-1 * wr_6_4 -
                 0.529794501400201322e0 * wr_8_4;
  results[k++] = 0.603022689155527245e0 * wr_4_0;
  results[k++] =
      0.802486208640681391e-1 * wr_4_0 - 0.311597480180718289e0 * wr_6_0;
  results[k++] =
      -0.725203668379514220e-1 * wr_4_4 + 0.404777000387580261e0 * wr_6_4;
  results[k++] =
      -0.100711219892181327e0 * wr_4_0 - 0.325876445044938553e0 * wr_6_0;
  results[k++] = 0.278924487838274700e-1 * wr_4_4 +
                 0.269851333591720174e-1 * wr_6_4 -
                 0.529794501400201322e0 * wr_8_4;
  results[k++] = 0.113404715584056373e-1 * wr_4_0 -
                 0.636045692983128398e-2 * wr_6_0 -
                 0.527111980359003098e0 * wr_8_0;
  results[k++] =
      0.721568539381251978e0 * wr_4_4 + 0.745829685583969992e-1 * wr_6_4;
  results[k++] =
      0.704178790219530341e0 * wr_4_4 + 0.155968980978980974e-1 * wr_6_4;
  results[k++] = -0.705505178266670113e0 * wr_8_8;
  results[k++] = 0.317239055166818333e0 * wr_4_4 -
                 0.313183228234480671e0 * wr_6_4 -
                 0.640486737491100541e-1 * wr_8_4;
  results[k++] = -0.705505178266670113e0 * wr_8_8;
  results[k++] = -0.663414893741618043e-1 * wr_4_4 +
                 0.305635535280286803e0 * wr_6_4 -
                 0.218767868844046562e0 * wr_8_4;
  results[k++] =
      0.107565086965447564e0 * wr_4_4 + 0.500317762980915550e0 * wr_6_4;
  results[k++] =
      -0.314918328648886780e0 * wr_4_4 - 0.697514487700746313e-2 * wr_6_4;
  results[k++] = 0.328373619073395690e0 * wr_4_0 -
                 0.225517699253106284e0 * wr_6_0 -
                 0.417173957343569563e-1 * wr_8_0;
  results[k++] = 0.283747236988324672e0 * wr_4_4 +
                 0.233432995915043409e0 * wr_6_4 -
                 0.429651565115149172e0 * wr_8_4;
  results[k++] = 0.156368390034950329e-1 * wr_4_0 -
                 0.270621239103727541e0 * wr_6_0 +
                 0.225273936965527564e0 * wr_8_0;
  results[k++] = 0.988960533128038497e-1 * wr_4_4 +
                 0.246031859961452351e0 * wr_6_4 +
                 0.410911053863559023e0 * wr_8_4;
  results[k++] =
      0.416597790450530909e0 * wr_4_0 + 0.288858595137382972e0 * wr_6_0;
  results[k++] =
      -0.406557814090870854e0 * wr_4_0 + 0.281897124066382855e-1 * wr_6_0;
  results[k++] = 0.847857038670079791e-1 * wr_4_4 -
                 0.390608113112417935e0 * wr_6_4 -
                 0.239648193246431863e0 * wr_8_4;
  results[k++] =
      -0.143909899491305438e0 * wr_4_0 - 0.349032774220396211e0 * wr_8_0;
  results[k++] = -0.605612170478628422e-1 * wr_4_4 +
                 0.156243245244967174e0 * wr_6_4 +
                 0.527226025142150100e0 * wr_8_4;
  results[k++] = -0.574534151229195224e-1 * wr_4_0 -
                 0.220961316454618172e0 * wr_6_0 -
                 0.429182598377123103e0 * wr_8_0;
  results[k++] = -0.845154254728516578e-1 * wr_6_4;
  results[k++] = 0.488260141390522419e0 * wr_4_4 -
                 0.344160744880569123e0 * wr_6_4 -
                 0.883248229881962715e-1 * wr_8_4;
  results[k++] = -0.508747019069168314e0 * wr_8_8;
  results[k++] = 0.583582489787608521e0 * wr_4_4 +
                 0.150559758401968193e0 * wr_6_4 +
                 0.323303088259032958e0 * wr_8_4;
  results[k++] = -0.508747019069168314e0 * wr_8_8;
  results[k++] = -0.239197641629189786e0 * wr_4_4 -
                 0.110198459405695718e0 * wr_6_4 +
                 0.383121116148578394e0 * wr_8_4;
  results[k++] = -0.986927542439653481e-1 * wr_6_4;
  results[k++] = 0.114033001364603287e0 * wr_4_4 +
                 0.312583572596594059e0 * wr_6_4 -
                 0.378184297917603156e0 * wr_8_4;
  results[k++] = 0.441647915203156174e0 * wr_4_0 -
                 0.169854315089786830e0 * wr_6_0 -
                 0.172812769764462597e0 * wr_8_0;
  results[k++] = -0.272591011278483599e0 * wr_4_4 +
                 0.586053064745731126e-1 * wr_6_4 -
                 0.197757302956570368e0 * wr_8_4;
  results[k++] = -0.147215971734385391e0 * wr_4_0 -
                 0.254781472634680245e0 * wr_6_0 +
                 0.329915287732155868e0 * wr_8_0;
  results[k++] = -0.186215111454250601e0 * wr_4_4 -
                 0.180157707020677190e0 * wr_6_4 -
                 0.226326238756395124e0 * wr_8_4;
  results[k++] = 0.116774841624228445e0 * wr_6_0;
  results[k++] = -0.502838271441715658e0 * wr_4_0 +
                 0.528362672676503217e-1 * wr_6_0 +
                 0.269836791391323390e0 * wr_8_0;
  results[k++] = -0.556424071751282658e-1 * wr_4_4 +
                 0.143553097082131415e0 * wr_6_4 +
                 0.484404485152584573e0 * wr_8_4;
  results[k++] = 0.300503343947696075e0 * wr_4_0 +
                 0.138685467526631610e0 * wr_6_0 -
                 0.423303106960002068e0 * wr_8_0;
  results[k++] = 0.778993700451795721e-1 * wr_4_4 -
                 0.358882742705328538e0 * wr_6_4 -
                 0.220183856887538443e0 * wr_8_4;
  results[k++] = -0.123169718817530597e0 * wr_4_0 -
                 0.101507368407105913e0 * wr_6_0 +
                 0.563320272220372853e-1 * wr_8_0;
  results[k++] = -0.497050121747708423e0 * wr_8_8;
  results[k++] = -0.727606875108998922e0 * wr_8_8;
  results[k++] = 0.102418311299837831e1 * wr_4_4 +
                 0.825722823844770454e-1 * wr_6_4 -
                 0.552657094637709023e-1 * wr_8_4;
  results[k++] = -0.608759587435070830e0 * wr_8_8;
  results[k++] = 0.512091556499189153e0 * wr_4_4 -
                 0.412861411922385228e0 * wr_6_4 +
                 0.921095157729515035e-1 * wr_8_4;
  results[k++] = 0.297044262893002291e0 * wr_8_8;
  results[k++] =
      -0.481755033277195857e0 * wr_6_4 - 0.111143786045242261e0 * wr_8_4;
  results[k++] =
      0.117536193029634617e0 * wr_6_4 + 0.395123333883980885e0 * wr_8_4;
  results[k++] = -0.247155766371490376e0 * wr_8_8;
  results[k++] = 0.415817290474873366e0 * wr_4_4 -
                 0.648135726588127591e-1 * wr_6_4 -
                 0.450252278744311111e0 * wr_8_4;
  results[k++] = -0.247155766371490376e0 * wr_8_8;
  results[k++] = -0.426085930313074844e0 * wr_4_4 -
                 0.376237788768925816e0 * wr_6_4 -
                 0.171527058875210764e0 * wr_8_4;
  results[k++] =
      -0.145254607840512580e0 * wr_6_4 - 0.368622236091607027e0 * wr_8_4;
  results[k++] =
      -0.248069469178416912e0 * wr_6_4 + 0.770868143769108684e-1 * wr_8_4;
  results[k++] = 0.270837996238280901e0 * wr_4_0 +
                 0.146478042417156726e0 * wr_6_0 -
                 0.325154920371135312e0 * wr_8_0;
  results[k++] = 0.125373630349761571e0 * wr_4_4 +
                 0.128707835892973023e0 * wr_6_4 +
                 0.391933925907621128e0 * wr_8_4;
  results[k++] = -0.406256994357421351e0 * wr_4_0 +
                 0.488260141390522419e-1 * wr_6_0 +
                 0.252898271399771909e0 * wr_8_0;
  results[k++] = 0.214116236257270813e0 * wr_4_4 -
                 0.172626028480170446e0 * wr_6_4 -
                 0.133144677712872691e0 * wr_8_4;
  results[k++] =
      -0.313785816221094451e0 * wr_6_0 - 0.240098019199512373e0 * wr_8_0;
  results[k++] =
      -0.229667700705285826e0 * wr_6_0 + 0.451886800728090428e0 * wr_8_0;
  results[k++] = 0.186895973365331738e-1 * wr_4_4 +
                 0.678061579225700326e-1 * wr_6_4 -
                 0.499210006908877292e0 * wr_8_4;
  results[k++] = 0.605612170478628422e0 * wr_4_0 -
                 0.567727090763490745e-1 * wr_6_0 +
                 0.290827402067355882e-1 * wr_8_0;
  results[k++] = -0.654135906778661082e-1 * wr_4_4 +
                 0.384234894894563519e0 * wr_6_4 -
                 0.554677785454308102e-1 * wr_8_4;
  results[k++] = 0.206855936472014547e0 * wr_4_0 +
                 0.287677164439531283e0 * wr_6_0 +
                 0.212863862169723747e0 * wr_8_0;
  results[k++] = -0.286972021591775718e0 * wr_8_8;
  results[k++] = -0.420084025208402940e0 * wr_8_8;
  results[k++] =
      -0.524404424085075775e0 * wr_6_4 + 0.138266579688743041e0 * wr_8_4;
  results[k++] = -0.351467511677403665e0 * wr_8_8;
  results[k++] = 0.886968593983623929e0 * wr_4_4 +
                 0.333711906235957312e0 * wr_6_4 -
                 0.116994798198167188e0 * wr_8_4;
  results[k++] = 0.171498585142508837e0 * wr_8_8;
  results[k++] = -0.517346169236353207e0 * wr_8_4;
  results[k++] =
      0.328260722659315923e0 * wr_6_4 + 0.454390347867661155e0 * wr_8_4;
  results[k++] = 0.766964988847370441e-1 * wr_8_8;
  results[k++] =
      -0.343303281162797594e0 * wr_6_4 - 0.905167239294726672e-1 * wr_8_4;
  results[k++] = 0.766964988847370441e-1 * wr_8_8;
  results[k++] = 0.396664414010958819e0 * wr_4_4 +
                 0.152286225968293167e-1 * wr_6_4 +
                 0.713477241231741118e-1 * wr_8_4;
  results[k++] = 0.555718930226211302e0 * wr_8_4;
  results[k++] =
      -0.117536193029634617e0 * wr_6_4 + 0.379628301182648302e0 * wr_8_4;
  results[k++] =
      0.356262651597212648e0 * wr_6_0 - 0.311542651220361422e0 * wr_8_0;
  results[k++] =
      -0.368766878920831216e0 * wr_6_4 - 0.324101861776082195e-1 * wr_8_4;
  results[k++] = -0.449134006247032482e0 * wr_4_0 +
                 0.291487624034083076e0 * wr_6_0 +
                 0.718944579739295590e-1 * wr_8_0;
  results[k++] = -0.142028643437691614e0 * wr_4_4 +
                 0.330434927527491369e0 * wr_6_4 +
                 0.107295649594280775e0 * wr_8_4;
  results[k++] = -0.608759587435070835e0 * wr_8_0;
  results[k++] =
      0.271746488194702980e0 * wr_6_0 + 0.594088525786004583e-1 * wr_8_0;
  results[k++] =
      -0.980580675690920161e-1 * wr_6_4 + 0.284398229497260533e0 * wr_8_4;
  results[k++] =
      0.284199280029402554e0 * wr_6_0 + 0.248525060873854212e0 * wr_8_0;
  results[k++] = 0.331707446870809021e-1 * wr_4_4 -
                 0.222859244475209127e0 * wr_6_4 +
                 0.109383934422023282e0 * wr_8_4;
  results[k++] = 0.734265734265734266e0 * wr_4_0 +
                 0.189102339622237201e0 * wr_6_0 +
                 0.279848798118845739e-1 * wr_8_0;
  results[k++] = 0.254545454545454545e0 * wr_5_4;
  results[k++] = -0.232367145608252291e0 * wr_5_4;
  results[k++] = 0.209348266578108314e0 * wr_3_0 -
                 0.197833309023018618e0 * wr_5_0 +
                 0.264022323761829069e-1 * wr_7_0;
  results[k++] =
      0.854737584857450480e-1 * wr_5_4 + 0.313985235253757320e0 * wr_7_4;
  results[k++] = 0.241734556126504740e-1 * wr_3_0 -
                 0.179487179487179487e0 * wr_5_0 +
                 0.137190023726366286e0 * wr_7_0;
  results[k++] =
      0.154796808539710877e0 * wr_5_4 + 0.371512340495306106e0 * wr_7_4;
  results[k++] = 0.748420580346990092e0 * wr_9_8;
  results[k++] =
      0.455481781313936786e-2 * wr_3_0 + 0.399683641013572184e-1 * wr_5_0 -
      0.146059016139472883e0 * wr_7_0 + 0.966008067900516327e-1 * wr_9_0;
  results[k++] = 0.515989361799036255e-1 * wr_5_4 +
                 0.764878348078571390e-1 * wr_7_4 -
                 0.497109304949888494e0 * wr_9_4;
  results[k++] =
      -0.600624975130372640e0 * wr_3_0 + 0.134157234067749426e0 * wr_5_0;
  results[k++] =
      0.328975847479884493e0 * wr_3_0 + 0.367404716757034576e0 * wr_5_0;
  results[k++] =
      -0.375362312136407547e0 * wr_5_4 + 0.214492749792232884e0 * wr_7_4;
  results[k++] = -0.102151494312612438e0 * wr_3_0 -
                 0.193065540707213577e-1 * wr_5_0 +
                 0.270542375270170744e0 * wr_7_0;
  results[k++] =
      0.154796808539710877e0 * wr_5_4 + 0.371512340495306106e0 * wr_7_4;
  results[k++] = -0.310801572162648951e-1 * wr_3_0 -
                 0.146853146853146853e0 * wr_5_0 -
                 0.320110055361521334e0 * wr_7_0;
  results[k++] = 0.565238025780053194e-1 * wr_5_4 -
                 0.149621830353543493e0 * wr_7_4 +
                 0.907593266222561522e-1 * wr_9_4;
  results[k++] =
      0.579911944886672046e-1 * wr_7_4 + 0.608832071758413405e0 * wr_9_4;
  results[k++] =
      0.504720501802592314e-2 * wr_3_0 + 0.163170163170163170e-1 * wr_5_0 -
      0.188300032565600784e-1 * wr_7_0 - 0.552119599212559137e0 * wr_9_0;
  results[k++] = -0.252262489554756509e0 * wr_5_4;
  results[k++] =
      0.607340026116709834e-1 * wr_7_4 - 0.106284504570424221e0 * wr_5_4;
  results[k++] =
      -0.352658389596157399e0 * wr_5_4 - 0.777922918226817792e-1 * wr_7_4;
  results[k++] = -0.541667048320283713e0 * wr_9_8;
  results[k++] = 0.368180323946522604e0 * wr_5_4 -
                 0.220444101522602820e0 * wr_7_4 -
                 0.656867780629727931e-1 * wr_9_4;
  results[k++] =
      -0.403741446985752282e-1 * wr_3_0 + 0.708563363802828139e-1 * wr_5_0 +
      0.951416258892030432e-2 * wr_9_0 - 0.438047865470148453e-1 * wr_7_0;
  results[k++] = 0.663403939432087531e0 * wr_9_8;
  results[k++] = -0.122726774648840868e0 * wr_5_4 +
                 0.324864991717519944e0 * wr_7_4 -
                 0.197060334188918379e0 * wr_9_4;
  results[k++] = -0.338445644890659725e0 * wr_5_4;
  results[k++] =
      0.110907709348032633e0 * wr_5_4 + 0.407416075156038245e0 * wr_7_4;
  results[k++] = -0.432990611098036534e0 * wr_3_0 +
                 0.283916977019020597e0 * wr_5_0 +
                 0.526569247468998598e-1 * wr_7_0;
  results[k++] =
      0.104369311584610485e0 * wr_7_4 - 0.210284835192696681e0 * wr_5_4;
  results[k++] =
      0.103840855978444042e0 * wr_3_0 + 0.260342803762045942e0 * wr_5_0 -
      0.215194858304170603e0 * wr_7_0 - 0.699145310181951962e-1 * wr_9_0;
  results[k++] =
      0.854408526821901649e-1 * wr_7_4 - 0.440640302915247377e0 * wr_9_4;
  results[k++] = 0.663403939432087531e0 * wr_9_8;
  results[k++] =
      -0.296077061122885007e-1 * wr_3_0 + 0.236187787934276046e-1 * wr_5_0 +
      0.289111591210297979e0 * wr_7_0 - 0.256882389900848217e0 * wr_9_0;
  results[k++] = 0.914751369247020209e-1 * wr_5_4 +
                 0.261511273796501071e0 * wr_7_4 +
                 0.440640302915247377e0 * wr_9_4;
  results[k++] = -0.436931448752651484e0 * wr_5_0;
  results[k++] = 0.606060606060606061e0 * wr_3_0 -
                 0.204544624414734780e-1 * wr_5_0 +
                 0.286627993453415340e0 * wr_7_0;
  results[k++] =
      0.219921144740044136e0 * wr_5_4 + 0.174643261999446813e0 * wr_7_4;
  results[k++] = 0.258761382978777737e0 * wr_3_0 +
                 0.237541985526208291e0 * wr_5_0 -
                 0.146853146853146853e0 * wr_7_0;
  results[k++] = -0.336101114425116525e0 * wr_5_4 -
                 0.112692726601362599e0 * wr_7_4 -
                 0.359781300749256995e0 * wr_9_4;
  results[k++] =
      -0.115066312390939400e0 * wr_3_0 - 0.106284504570424221e0 * wr_5_0 +
      0.277430314797760687e-1 * wr_7_0 - 0.399594828734652782e0 * wr_9_0;
  results[k++] = 0.122726774648840868e0 * wr_5_4 -
                 0.324864991717519944e0 * wr_7_4 +
                 0.197060334188918379e0 * wr_9_4;
  results[k++] = -0.914751369247020209e-1 * wr_5_4 -
                 0.261511273796501071e0 * wr_7_4 -
                 0.440640302915247377e0 * wr_9_4;
  results[k++] =
      -0.188412675260017731e-1 * wr_3_0 - 0.944751151737104187e-1 * wr_5_0 -
      0.245306804663283134e0 * wr_7_0 - 0.399594828734652782e0 * wr_9_0;
  results[k++] =
      -0.349825131140720619e0 * wr_5_4 + 0.959520359700262269e-1 * wr_7_4;
  results[k++] =
      0.875918242322174282e-1 * wr_7_4 + 0.273724450725679463e0 * wr_5_4;
  results[k++] = 0.563784938759756705e0 * wr_9_8;
  results[k++] =
      0.317442001548753814e0 * wr_7_4 + 0.100081918732164789e0 * wr_9_4;
  results[k++] = 0.195300831694801327e0 * wr_9_8;
  results[k++] = 0.227570234846765029e0 * wr_5_4 +
                 0.139442545861988375e-1 * wr_7_4 +
                 0.307888160353893009e0 * wr_9_4;
  results[k++] =
      0.145571048913715575e0 * wr_3_0 - 0.255476154010634166e0 * wr_5_0 -
      0.343038010574533735e-1 * wr_9_0 + 0.157940404006017175e0 * wr_7_0;
  results[k++] = 0.159462461331146553e0 * wr_9_8;
  results[k++] = -0.265498607321225867e0 * wr_5_4 -
                 0.167331055034386050e0 * wr_7_4 +
                 0.331571864996500164e0 * wr_9_4;
  results[k++] =
      -0.817015485702651929e-1 * wr_5_4 + 0.410842072810476399e0 * wr_7_4;
  results[k++] = -0.277022454645474569e0 * wr_5_4;
  results[k++] =
      -0.313574755448755935e0 * wr_3_0 - 0.628938814136691911e-1 * wr_5_0 +
      0.215796429946265018e0 * wr_7_0 + 0.464475662026238125e-1 * wr_9_0;
  results[k++] = -0.582284195654862302e-1 * wr_5_4 -
                 0.256633196232003282e0 * wr_7_4 +
                 0.428525174344572995e0 * wr_9_4;
  results[k++] = 0.418984000772063853e0 * wr_3_0 -
                 0.145916364860835338e-1 * wr_7_0 -
                 0.241348633652590397e0 * wr_9_0;
  results[k++] = 0.265744781326194595e0 * wr_5_4 +
                 0.106384757230257640e-1 * wr_7_4 -
                 0.304222694458699988e0 * wr_9_4;
  results[k++] = -0.416382772221781500e0 * wr_9_8;
  results[k++] =
      0.253406669699118414e-1 * wr_3_0 + 0.222363450213740244e0 * wr_5_0 +
      0.148467034674342242e0 * wr_7_0 - 0.316490839757959819e0 * wr_9_0;
  results[k++] = 0.344483975793215216e-1 * wr_5_4 -
                 0.234480689405465819e-1 * wr_7_4 -
                 0.129064173406721207e0 * wr_9_4;
  results[k++] =
      0.216161979245786461e0 * wr_5_0 - 0.253865224967013644e0 * wr_7_0;
  results[k++] =
      0.281897124066382855e0 * wr_5_0 - 0.115873091900464219e0 * wr_7_0;
  results[k++] = 0.237716527440223069e-1 * wr_5_4 -
                 0.349233545459974774e0 * wr_7_4 -
                 0.209933603816280932e0 * wr_9_4;
  results[k++] =
      0.640081789222892623e0 * wr_3_0 - 0.256763195677673753e-1 * wr_5_0 +
      0.117464698151689958e-1 * wr_7_0 - 0.341318510971708916e0 * wr_9_0;
  results[k++] = 0.296450714394221432e0 * wr_5_4 -
                 0.544946166165848221e-2 * wr_7_4 +
                 0.509061935236167779e0 * wr_9_4;
  results[k++] =
      0.194748425112948929e0 * wr_3_0 + 0.234364867867450761e0 * wr_5_0 +
      0.120740824974285833e-1 * wr_7_0 - 0.403853508471478322e0 * wr_9_0;
  results[k++] = 0.157862389477174399e0 * wr_5_4 -
                 0.417871030968991056e0 * wr_7_4 +
                 0.253477004632802777e0 * wr_9_4;
  results[k++] = 0.258860091571773590e0 * wr_5_4 +
                 0.240271207990607266e0 * wr_7_4 +
                 0.377861208727984085e-1 * wr_9_4;
  results[k++] =
      -0.865548556057550795e-1 * wr_3_0 - 0.121522524079418913e0 * wr_5_0 -
      0.643951066529524443e-1 * wr_7_0 + 0.734279106311778768e-1 * wr_9_0;
  results[k++] = -0.329179484668979612e0 * wr_9_8;
  results[k++] = -0.410206327071183497e0 * wr_5_4 +
                 0.193038271562909881e-1 * wr_7_4 +
                 0.199594380158322396e-1 * wr_9_4;
  results[k++] = 0.562180995427831088e0 * wr_9_8;
  results[k++] = 0.142099640014701276e0 * wr_5_4 +
                 0.167176047076119149e0 * wr_7_4 -
                 0.622273693210977249e-1 * wr_9_4;
  results[k++] = -0.513140033030411702e0 * wr_9_8;
  results[k++] = 0.341246677126659639e0 * wr_7_4 -
                 0.790353422301382561e-1 * wr_9_4 -
                 0.464095480892257110e0 * wr_5_4;
  results[k++] = 0.266072609719472735e0 * wr_9_8;
  results[k++] = 0.277746029931765438e0 * wr_7_4;
  results[k++] = -0.340738661069279761e0 * wr_7_4 -
                 0.143929554391056735e0 * wr_9_4 -
                 0.260047462993389716e0 * wr_5_4;
  results[k++] = 0.593436755402409080e0 * wr_9_8;
  results[k++] = -0.388601142723786572e0 * wr_5_4 -
                 0.360517362661395273e-1 * wr_7_4 -
                 0.386267372231625885e0 * wr_9_4;
  results[k++] = 0.426958315519484885e0 * wr_9_8;
  results[k++] = -0.506717345569430690e-1 * wr_5_4 -
                 0.596138053611094929e-1 * wr_7_4 -
                 0.396951640689416170e0 * wr_9_4;
  results[k++] =
      -0.259307639408939264e0 * wr_3_0 + 0.455083060238432004e0 * wr_5_0 +
      0.611058156229580303e-1 * wr_9_0 - 0.281341335627593526e0 * wr_7_0;
  results[k++] = -0.103291853280095015e0 * wr_9_8;
  results[k++] = -0.105096930932918958e0 * wr_5_4 -
                 0.281509636427461494e0 * wr_7_4 -
                 0.152132834918004909e0 * wr_9_4;
  results[k++] = 0.307059789431495385e0 * wr_7_4;
  results[k++] = -0.784072602211731608e-1 * wr_5_4 +
                 0.292989482679413238e0 * wr_7_4 -
                 0.477360328158184660e0 * wr_9_4;
  results[k++] = -0.325428504702557429e0 * wr_5_0 +
                 0.655718404804951973e-1 * wr_7_0 +
                 0.189351854840945324e0 * wr_9_0;
  results[k++] = -0.519869922763622502e-2 * wr_7_4 +
                 0.116463994768077037e0 * wr_9_4 +
                 0.284550014542967620e0 * wr_5_4;
  results[k++] =
      0.456781304015511067e0 * wr_3_0 - 0.876802429029328315e-1 * wr_5_0 +
      0.154873308079117235e0 * wr_7_0 - 0.348149619743734892e0 * wr_9_0;
  results[k++] = -0.110341853688093691e0 * wr_5_4 +
                 0.181739523721566080e0 * wr_7_4 +
                 0.286204272191905852e0 * wr_9_4;
  results[k++] = 0.191508221506286960e0 * wr_9_8;
  results[k++] =
      0.314685314685314685e0 * wr_3_0 + 0.184090161973261302e0 * wr_5_0 -
      0.168604702031420788e0 * wr_7_0 - 0.181269142950291148e0 * wr_9_0;
  results[k++] = -0.264620735089093468e0 * wr_7_4 -
                 0.148402215210617850e0 * wr_9_4 -
                 0.316879169565807524e0 * wr_5_4;
  results[k++] = 0.346410161513775458e0 * wr_7_0;
  results[k++] = -0.227245829500306583e0 * wr_5_0 -
                 0.472195306721975196e-1 * wr_7_0 -
                 0.347087683115568940e0 * wr_9_0;
  results[k++] = -0.673701009370548724e-1 * wr_5_4 +
                 0.581232243378512625e-1 * wr_7_4 +
                 0.468758536618680195e0 * wr_9_4;
  results[k++] = 0.242560086110342797e0 * wr_5_0 +
                 0.527843133806975042e-1 * wr_7_0 -
                 0.423403619090026374e0 * wr_9_0;
  results[k++] = -0.596407570640560308e-1 * wr_5_4 -
                 0.228800858302005234e0 * wr_7_4 -
                 0.262310548307830672e0 * wr_9_4;
  results[k++] =
      0.697744967230571820e0 * wr_3_0 + 0.628668778997312822e-1 * wr_5_0 -
      0.608330277772089063e-1 * wr_7_0 + 0.693661732889459723e-1 * wr_9_0;
  results[k++] = 0.132560067208512173e0 * wr_5_4 -
                 0.350894295551943989e0 * wr_7_4 +
                 0.212849487969996204e0 * wr_9_4;
  results[k++] = -0.355695985656208811e0 * wr_5_4 +
                 0.186815118516916393e-1 * wr_7_4 +
                 0.142783777223080569e0 * wr_9_4;
  results[k++] =
      0.130827181355732216e0 * wr_3_0 + 0.229600771459888160e0 * wr_5_0 +
      0.253470949071703776e0 * wr_7_0 + 0.169561756928534599e0 * wr_9_0;
  results[k++] = 0.832765544443563003e0 * wr_9_8;
  results[k++] = 0.570155592256013002e0 * wr_9_8;
  results[k++] = -0.236832733357835461e0 * wr_5_4 +
                 0.300916884737014468e0 * wr_7_4 -
                 0.806651083792007545e-1 * wr_9_4;
  results[k++] = -0.194745209426130030e0 * wr_9_8;
  results[k++] = 0.820412654142366991e-1 * wr_5_4 -
                 0.405380370282110750e0 * wr_7_4 +
                 0.123748515698159886e0 * wr_9_4;
  results[k++] = -0.329179484668979612e-1 * wr_9_8;
  results[k++] = -0.267945650822833463e0 * wr_5_4 -
                 0.212780369771073633e0 * wr_7_4 +
                 0.847434270652626783e-1 * wr_9_4;
  results[k++] = 0.658358969337959226e-1 * wr_9_8;
  results[k++] =
      -0.106468963263517808e0 * wr_7_4 + 0.225815263514680732e0 * wr_9_4;
  results[k++] =
      0.416538948954411076e-1 * wr_7_4 - 0.463815426209864835e0 * wr_9_4;
  results[k++] = -0.297478221141756141e0 * wr_9_8;
  results[k++] = -0.155043418236510571e0 * wr_5_4 -
                 0.258284094379881138e0 * wr_7_4 -
                 0.369653965089504050e0 * wr_9_4;
  results[k++] = -0.250263019536184014e0 * wr_9_8;
  results[k++] = -0.403589662137938543e0 * wr_5_4 -
                 0.314485451016575488e0 * wr_7_4 -
                 0.910465468000325992e-1 * wr_9_4;
  results[k++] =
      -0.241402274792633789e0 * wr_3_0 + 0.423659272868161692e0 * wr_5_0 +
      0.568864184952848194e-1 * wr_9_0 - 0.261914529662551933e0 * wr_7_0;
  results[k++] = 0.961594822512672710e-1 * wr_9_8;
  results[k++] = -0.293519754282137122e0 * wr_5_4 -
                 0.647470046210596594e-1 * wr_7_4 +
                 0.392749809725630821e-1 * wr_9_4;
  results[k++] =
      0.381220041082815308e-1 * wr_7_4 - 0.630667709053188050e0 * wr_9_4;
  results[k++] =
      0.223717302722254389e0 * wr_7_4 + 0.143929554391056735e0 * wr_9_4;
  results[k++] = 0.719549497456527192e-1 * wr_5_0 -
                 0.391458945036312188e0 * wr_7_0 +
                 0.293070892737119647e0 * wr_9_0;
  results[k++] = 0.555144489605409388e-1 * wr_5_4 -
                 0.315060825630175869e0 * wr_7_4 -
                 0.344129113442721243e0 * wr_9_4;
  results[k++] = 0.373888886446607321e0 * wr_5_0 -
                 0.753363090978005864e-1 * wr_7_0 -
                 0.217548718474397099e0 * wr_9_0;
  results[k++] = -0.275879443698912265e0 * wr_5_4 +
                 0.543148004401219824e-1 * wr_7_4 +
                 0.747879902748175393e-1 * wr_9_4;
  results[k++] = -0.577419013640567696e-1 * wr_9_8;
  results[k++] =
      0.579829508803391582e0 * wr_3_0 - 0.203519331620353122e0 * wr_5_0 -
      0.201311472430042426e0 * wr_7_0 - 0.182182343404670420e-1 * wr_9_0;
  results[k++] = 0.420387723731675831e0 * wr_5_4 +
                 0.153008767093514365e0 * wr_7_4 +
                 0.549723689199513536e-1 * wr_9_4;
  results[k++] =
      -0.723314171714795182e-1 * wr_7_0 + 0.428454337882506349e0 * wr_9_0;
  results[k++] =
      -0.198087744005679250e0 * wr_7_0 - 0.488904386914976992e0 * wr_9_0;
  results[k++] = -0.885704204753535175e-2 * wr_5_4 +
                 0.206316979460235253e0 * wr_7_4 -
                 0.431388673589243214e0 * wr_9_4;
  results[k++] = -0.172200578594916120e0 * wr_5_0 -
                 0.145728897652958224e0 * wr_7_0 +
                 0.333985278798628755e-1 * wr_9_0;
  results[k++] = -0.951132503528516730e-1 * wr_5_4 +
                 0.357351490889271939e0 * wr_7_4 -
                 0.213482028704661578e-1 * wr_9_4;
  results[k++] = 0.203750472332687950e0 * wr_5_0 +
                 0.263921566903487521e0 * wr_7_0 +
                 0.186297592399611604e0 * wr_9_0;
  results[k++] = 0.672202228850233050e-1 * wr_5_4 -
                 0.177935884107414631e0 * wr_7_4 +
                 0.107934390224777098e0 * wr_9_4;
  results[k++] = 0.260535578911571842e0 * wr_5_4 -
                 0.172413250750304896e0 * wr_7_4 -
                 0.777678930658346834e-1 * wr_9_4;
  results[k++] =
      0.773984042698554383e0 * wr_3_0 + 0.271667296443583933e0 * wr_5_0 +
      0.919726672542456513e-1 * wr_7_0 + 0.955372268715956943e-2 * wr_9_0;
  results[k++] =
      0.397210407956955894e0 * wr_4_4 + 0.131381033405365970e0 * wr_6_4;
  results[k++] = -0.356753034006337881e0 * wr_2_0 +
                 0.362601834189757110e0 * wr_4_0 -
                 0.804541234306745050e-1 * wr_6_0;
  results[k++] =
      -0.469985692830179524e0 * wr_4_4 - 0.277593098432936043e0 * wr_6_4;
  results[k++] =
      0.293359328087584267e-1 * wr_2_0 + 0.227067022882212161e0 * wr_4_0 -
      0.247429875510561871e0 * wr_6_0 + 0.352459790847210547e-1 * wr_8_0;
  results[k++] = -0.239349657940453908e0 * wr_4_4 -
                 0.617503562970570240e-1 * wr_6_4 +
                 0.247977443654073918e0 * wr_8_4;
  results[k++] = -0.513677406324456792e0 * wr_8_8;
  results[k++] =
      0.173356834408289512e-1 * wr_2_0 + 0.149091410038888416e-1 * wr_4_0 -
      0.210722235661563988e0 * wr_6_0 + 0.164021661665552927e0 * wr_8_0;
  results[k++] = -0.577428548143196122e-1 * wr_4_4 +
                 0.121660539483443726e0 * wr_6_4 +
                 0.383872585892495272e0 * wr_8_4;
  results[k++] =
      0.267639309629514372e0 * wr_8_8 + 0.825994980523634920e0 * wr_10_8;
  results[k++] =
      -0.984865440866476003e-3 * wr_2_0 + 0.110111303723386986e-1 * wr_4_0 +
      0.457731426530827585e-1 * wr_6_0 - 0.173560328680475106e0 * wr_8_0 +
      0.113416345794624031e0 * wr_10_0;
  results[k++] =
      -0.582654252378364906e-2 * wr_4_4 + 0.644756104425803881e-1 * wr_6_4 +
      0.115833318407970046e0 * wr_8_4 - 0.469823020069091934e0 * wr_10_4;
  results[k++] = -0.735612357920624607e0 * wr_2_0 -
                 0.897206856763321346e-1 * wr_4_0 +
                 0.929004196402306058e-1 * wr_6_0;
  results[k++] =
      0.229329535958869554e0 * wr_4_4 - 0.341337937513496662e0 * wr_6_4;
  results[k++] = 0.174077655955697838e0 * wr_2_0 +
                 0.318476840793350306e0 * wr_4_0 +
                 0.274803147237519398e0 * wr_6_0;
  results[k++] = -0.239349657940453908e0 * wr_4_4 -
                 0.617503562970570240e-1 * wr_6_4 +
                 0.247977443654073918e0 * wr_8_4;
  results[k++] =
      -0.712444082498418935e-1 * wr_2_0 - 0.973144383780909262e-1 * wr_4_0 +
      0.145546985594448160e-1 * wr_6_0 + 0.246721853593047383e0 * wr_8_0;
  results[k++] = -0.632541282330972636e-1 * wr_4_4 +
                 0.237986506547607282e0 * wr_6_4 -
                 0.159284601894817470e0 * wr_8_4;
  results[k++] = 0.942936870577960958e-1 * wr_4_4 +
                 0.191575442292533522e0 * wr_6_4 +
                 0.299183805988875081e0 * wr_8_4;
  results[k++] =
      -0.707726312874111790e-2 * wr_2_0 - 0.547796819441007182e-1 * wr_4_0 -
      0.172053984943113537e0 * wr_6_0 - 0.312487293878685880e0 * wr_8_0;
  results[k++] =
      0.178909692046666099e-1 * wr_4_4 + 0.197978673659658591e-1 * wr_6_4 -
      0.201550608037181632e0 * wr_8_4 + 0.153007015649604880e0 * wr_10_4;
  results[k++] =
      0.139281006358592782e-1 * wr_4_4 + 0.323664995662140156e-1 * wr_6_4 +
      0.119064674624797610e0 * wr_8_4 + 0.655136900728876609e0 * wr_10_4;
  results[k++] =
      0.137332924314639971e-2 * wr_2_0 + 0.921257262949106077e-2 * wr_4_0 +
      0.182364565460363077e-1 * wr_6_0 - 0.296348957549120768e-1 * wr_8_0 -
      0.569345537291568177e0 * wr_10_0;
  results[k++] =
      0.524863881081477966e0 * wr_4_4 - 0.167403477048179115e0 * wr_6_4;
  results[k++] = 0.547609892162514767e0 * wr_8_8;
  results[k++] = -0.167199662847825615e0 * wr_4_4 -
                 0.198074465237062609e0 * wr_6_4 +
                 0.497142875847821664e-1 * wr_8_4;
  results[k++] = -0.311875568125563052e0 * wr_8_8;
  results[k++] = 0.284643577048937686e0 * wr_4_4 -
                 0.189417831741973143e0 * wr_6_4 -
                 0.967085082932820348e-1 * wr_8_4;
  results[k++] =
      0.124113561883208728e0 * wr_2_0 - 0.185017574200321020e0 * wr_4_0 +
      0.941774612669958681e-1 * wr_6_0 - 0.127534792740766975e-1 * wr_8_0 -
      0.206245630813155191e-2 * wr_10_0;
  results[k++] =
      -0.215680905061089985e0 * wr_8_8 - 0.431433127277353921e0 * wr_10_8;
  results[k++] =
      -0.106819946269366900e0 * wr_4_4 + 0.364747739075169052e0 * wr_6_4 -
      0.163821407462700494e0 * wr_8_4 - 0.652531972318183243e-1 * wr_10_4;
  results[k++] =
      0.125373630349761571e-1 * wr_2_0 - 0.747583893461326950e-1 * wr_4_0 +
      0.116538662619445854e0 * wr_6_0 - 0.721445734273737621e-1 * wr_8_0 +
      0.160421452551887111e-1 * wr_10_0;
  results[k++] =
      -0.212387873437931818e0 * wr_8_8 + 0.584163215838902931e0 * wr_10_8;
  results[k++] =
      0.153980946171518966e-1 * wr_4_4 - 0.161021302257499050e0 * wr_6_4 +
      0.330607968711239948e0 * wr_8_4 - 0.181070273836166400e0 * wr_10_4;
  results[k++] =
      -0.234726263406510114e0 * wr_4_4 + 0.748651108699108673e-1 * wr_6_4;
  results[k++] =
      0.402471702203248280e0 * wr_2_0 - 0.173068093297406737e0 * wr_4_0 -
      0.142629916464133841e0 * wr_6_0 + 0.323808517401939763e-1 * wr_8_0;
  results[k++] = -0.149547924777113660e0 * wr_4_4 +
                 0.147635989625663664e0 * wr_6_4 +
                 0.333493579477640291e0 * wr_8_4;
  results[k++] =
      -0.364049352257407976e0 * wr_2_0 - 0.670911345174997871e-1 * wr_4_0 +
      0.167717697771448888e0 * wr_6_0 + 0.995845802969428489e-1 * wr_8_0;
  results[k++] = -0.424321591760082432e0 * wr_4_4 -
                 0.152478413253240966e0 * wr_6_4 +
                 0.181647310778959870e0 * wr_8_4;
  results[k++] =
      -0.215680905061089985e0 * wr_8_8 - 0.431433127277353921e0 * wr_10_8;
  results[k++] =
      -0.827423745888058188e-2 * wr_2_0 + 0.185017574200321020e0 * wr_4_0 +
      0.182076425116192012e0 * wr_6_0 - 0.186200797401519783e0 * wr_8_0 -
      0.928105338659198357e-1 * wr_10_0;
  results[k++] =
      -0.238856661211179450e0 * wr_4_4 - 0.141370794796648608e0 * wr_6_4 +
      0.146526321302515859e-1 * wr_8_4 - 0.437731754278640630e0 * wr_10_4;
  results[k++] =
      0.406691814776396495e0 * wr_8_8 + 0.427097005896870129e0 * wr_10_8;
  results[k++] =
      -0.117853637525690211e-1 * wr_2_0 - 0.390412955411945817e-1 * wr_4_0 +
      0.608603316510151185e-1 * wr_6_0 + 0.288851439339701855e0 * wr_8_0 -
      0.276465325209883024e0 * wr_10_0;
  results[k++] =
      -0.482036608030953358e-1 * wr_4_4 + 0.514363682390440315e-1 * wr_6_4 +
      0.246420630647152021e0 * wr_8_4 + 0.451158062830989080e0 * wr_10_4;
  results[k++] =
      -0.302563743395579521e0 * wr_6_0 - 0.303030303030303030e0 * wr_4_0;
  results[k++] = -0.446859895400485176e-1 * wr_4_4 -
                 0.247042261995184527e0 * wr_6_4 +
                 0.186013831369804239e0 * wr_8_4;
  results[k++] = 0.721568539381251978e0 * wr_2_0 +
                 0.758471767064053339e-1 * wr_4_0 +
                 0.270917642761466587e0 * wr_8_0;
  results[k++] = 0.259842846664438255e0 * wr_4_4 -
                 0.968318579562103128e-1 * wr_6_4 +
                 0.233065498577586415e0 * wr_8_4;
  results[k++] =
      0.148622525703563476e0 * wr_2_0 + 0.246508568748453232e0 * wr_4_0 +
      0.136940926791457713e0 * wr_6_0 - 0.189724428426344998e0 * wr_8_0;
  results[k++] =
      -0.106819946269366900e0 * wr_4_4 + 0.364747739075169052e0 * wr_6_4 -
      0.163821407462700494e0 * wr_8_4 - 0.652531972318183243e-1 * wr_10_4;
  results[k++] =
      -0.238856661211179450e0 * wr_4_4 - 0.141370794796648608e0 * wr_6_4 +
      0.146526321302515859e-1 * wr_8_4 - 0.437731754278640630e0 * wr_10_4;
  results[k++] =
      -0.744681371299252369e-1 * wr_2_0 - 0.123345049466880680e0 * wr_4_0 -
      0.753419690135966946e-1 * wr_6_0 + 0.357097419674147528e-1 * wr_8_0 -
      0.433115824707625901e0 * wr_10_0;
  results[k++] =
      0.604264866984415872e-1 * wr_4_4 - 0.644788999306283732e-1 * wr_6_4 -
      0.308904608321066672e0 * wr_8_4 + 0.286074065191676328e0 * wr_10_4;
  results[k++] =
      -0.705629341411906319e-1 * wr_4_4 - 0.145570590998402988e0 * wr_6_4 -
      0.264530102567037128e0 * wr_8_4 - 0.355614958268834783e0 * wr_10_4;
  results[k++] =
      -0.447274230116665247e-2 * wr_2_0 - 0.355603762888799000e-1 * wr_4_0 -
      0.118787204195795154e0 * wr_6_0 - 0.257377954573086121e0 * wr_8_0 -
      0.377723543456090708e0 * wr_10_0;
  results[k++] = -0.145571048913715575e0 * wr_4_4 -
                 0.362149092112901319e0 * wr_6_4 +
                 0.807955806690993966e-1 * wr_8_4;
  results[k++] = -0.219381727238139196e0 * wr_8_8;
  results[k++] = 0.455210968012462965e0 * wr_4_4 +
                 0.178541910193084675e0 * wr_6_4 +
                 0.139414654563407151e0 * wr_8_4;
  results[k++] =
      -0.351618633425879861e0 * wr_8_8 + 0.561568603175960893e0 * wr_10_8;
  results[k++] =
      0.196136762347117653e0 * wr_4_4 - 0.571705001783192297e-1 * wr_6_4 +
      0.264792752089709365e0 * wr_8_4 + 0.104024767801857585e0 * wr_10_4;
  results[k++] =
      -0.319641293821701425e0 * wr_2_0 + 0.438373658992802195e0 * wr_4_0 -
      0.169780832795588701e0 * wr_6_0 - 0.153277744877502629e-1 * wr_8_0 +
      0.163598423392194285e-1 * wr_10_0;
  results[k++] =
      0.864053958151378419e-1 * wr_8_8 + 0.435555193453038696e0 * wr_10_8;
  results[k++] =
      -0.354333210035189779e0 * wr_4_4 + 0.939369054175058676e-1 * wr_6_4 -
      0.656296094028272953e-1 * wr_8_4 + 0.291739448149034410e0 * wr_10_4;
  results[k++] =
      0.452041052817133550e-1 * wr_2_0 + 0.107818082423432899e0 * wr_4_0 -
      0.300132945463150379e0 * wr_6_0 + 0.216767465615727415e0 * wr_8_0 -
      0.515308743093670511e-1 * wr_10_0;
  results[k++] =
      -0.382887683983609700e0 * wr_8_8 - 0.382950986899473116e-1 * wr_10_8;
  results[k++] =
      0.111037239373174417e0 * wr_4_4 - 0.248815955027742101e0 * wr_6_4 -
      0.198670663877561641e0 * wr_8_4 + 0.296753707626637988e0 * wr_10_4;
  results[k++] = -0.339980723639438973e-1 * wr_4_4 +
                 0.328921466812105770e0 * wr_6_4 +
                 0.345946008340960697e0 * wr_8_4;
  results[k++] = 0.344497956190363613e0 * wr_4_0 -
                 0.201422439784362653e0 * wr_6_0 -
                 0.745202674388156773e-1 * wr_8_0;
  results[k++] = -0.212628754781068335e0 * wr_4_4 +
                 0.694973442869489380e-1 * wr_6_4 -
                 0.852768410829153637e-1 * wr_8_4;
  results[k++] =
      -0.527294050630338820e0 * wr_2_0 + 0.120713832565828803e0 * wr_4_0 -
      0.132179563174007180e0 * wr_6_0 + 0.228019739223110521e0 * wr_8_0 +
      0.771082880489566555e-1 * wr_10_0;
  results[k++] =
      0.152692262398490647e0 * wr_4_4 - 0.934650654546161299e-1 * wr_6_4 -
      0.156424548541921654e0 * wr_8_4 + 0.445407445452165463e0 * wr_10_4;
  results[k++] =
      -0.451237462962703771e-1 * wr_8_8 + 0.595731927337135964e0 * wr_10_8;
  results[k++] =
      0.300468998745692636e0 * wr_2_0 + 0.228933176970568279e0 * wr_4_0 -
      0.886651481977870506e-1 * wr_6_0 + 0.613691302384375973e-1 * wr_8_0 -
      0.281940417615393761e0 * wr_10_0;
  results[k++] =
      0.413772044840637600e0 * wr_4_4 + 0.212076366887454578e0 * wr_6_4 -
      0.562018397884176304e-1 * wr_8_4 - 0.362657522307654482e0 * wr_10_4;
  results[k++] =
      -0.382887683983609700e0 * wr_8_8 - 0.382950986899473116e-1 * wr_10_8;
  results[k++] =
      -0.205473205825969796e-1 * wr_2_0 + 0.882147947100814628e-1 * wr_4_0 +
      0.234649393725735751e0 * wr_6_0 + 0.748833063036149255e-1 * wr_8_0 -
      0.299720391391216521e0 * wr_10_0;
  results[k++] =
      0.181528984590715798e0 * wr_4_4 + 0.161419131899698508e0 * wr_6_4 +
      0.773324510322752798e-1 * wr_8_4 - 0.653463495950632603e-1 * wr_10_4;
  results[k++] = 0.149917407550955652e0 * wr_4_0 +
                 0.555978754295591503e-1 * wr_6_0 -
                 0.246834576156039200e0 * wr_8_0;
  results[k++] = -0.434026628214155438e-1 * wr_4_4 +
                 0.170233031981552526e0 * wr_6_4 +
                 0.208884747529552309e0 * wr_8_4;
  results[k++] = 0.234401169471684534e0 * wr_4_0 +
                 0.164460733406052885e0 * wr_6_0 -
                 0.182536630720838256e0 * wr_8_0;
  results[k++] =
      -0.638757561549346053e-1 * wr_4_4 - 0.186186867007781523e0 * wr_6_4 -
      0.152179263876354604e0 * wr_8_4 - 0.319418232968985912e0 * wr_10_4;
  results[k++] =
      0.735276423986065747e0 * wr_2_0 + 0.100996438357556279e0 * wr_4_0 -
      0.526615984916320773e-1 * wr_6_0 + 0.389336736874899255e-1 * wr_8_0 -
      0.387080533950223294e0 * wr_10_0;
  results[k++] =
      -0.902924626637563730e-1 * wr_4_4 + 0.234585932090031311e0 * wr_6_4 +
      0.702406868253285552e-1 * wr_8_4 - 0.184656171924440309e0 * wr_10_4;
  results[k++] =
      0.282660118120829381e0 * wr_4_4 - 0.749357272454941895e-1 * wr_6_4 +
      0.523543168425695157e-1 * wr_8_4 + 0.460092753217986599e0 * wr_10_4;
  results[k++] =
      0.114033001364603287e0 * wr_2_0 + 0.208521510498855904e0 * wr_4_0 +
      0.173056649188425776e0 * wr_6_0 - 0.546823005306984774e-1 * wr_8_0 -
      0.385203943765203751e0 * wr_10_0;
  results[k++] =
      0.111037239373174417e0 * wr_4_4 - 0.248815955027742101e0 * wr_6_4 -
      0.198670663877561641e0 * wr_8_4 + 0.296753707626637988e0 * wr_10_4;
  results[k++] =
      0.181528984590715798e0 * wr_4_4 + 0.161419131899698508e0 * wr_6_4 +
      0.773324510322752798e-1 * wr_8_4 - 0.653463495950632603e-1 * wr_10_4;
  results[k++] =
      -0.534230335147521471e-1 * wr_2_0 - 0.104550867804540993e0 * wr_4_0 -
      0.109139252895691047e0 * wr_6_0 - 0.394122664755868028e-1 * wr_8_0 +
      0.820287386965434691e-1 * wr_10_0;
  results[k++] = -0.542326144546640431e0 * wr_8_8;
  results[k++] =
      -0.259100110252518288e0 * wr_4_4 + 0.191997414657019674e0 * wr_6_4 -
      0.306606172650243695e-1 * wr_8_4 - 0.419673118010091614e-2 * wr_10_4;
  results[k++] =
      -0.337731025220919950e0 * wr_8_8 - 0.232151698141485836e0 * wr_10_8;
  results[k++] =
      0.468729735734901522e0 * wr_4_4 - 0.270922385675880539e0 * wr_6_4 -
      0.166401430868910441e-1 * wr_8_4 + 0.265726032798166896e-1 * wr_10_4;
  results[k++] =
      -0.536628490140335462e-1 * wr_8_8 + 0.430349618324141414e0 * wr_10_8;
  results[k++] =
      0.195026592623636023e0 * wr_8_4 - 0.574710835834349656e-1 * wr_6_4 -
      0.242365960360069419e0 * wr_4_4 - 0.628109208813164521e-1 * wr_10_4;
  results[k++] =
      0.256764440371588800e0 * wr_8_8 - 0.415285582509099136e0 * wr_10_8;
  results[k++] =
      0.178999124540152798e0 * wr_4_4 - 0.424452081988971752e0 * wr_6_4 +
      0.296546114941122445e0 * wr_8_4 - 0.695834091095953144e-1 * wr_10_4;
  results[k++] =
      -0.190505991050796529e0 * wr_8_8 + 0.224487803399876984e0 * wr_10_8;
  results[k++] =
      -0.657047293576999891e-1 * wr_6_4 + 0.294507544686975754e0 * wr_8_4;
  results[k++] =
      -0.137118448873396351e0 * wr_8_8 - 0.571803660734916702e0 * wr_10_8;
  results[k++] =
      -0.105194378270435030e0 * wr_4_4 - 0.150704788893135041e0 * wr_6_4 -
      0.249793460090007202e0 * wr_8_4 - 0.155052037382011290e0 * wr_10_4;
  results[k++] =
      0.446501893171338769e-1 * wr_8_8 + 0.738879816782880498e-1 * wr_10_8;
  results[k++] =
      -0.390006714583124496e0 * wr_4_4 - 0.246889722243786941e0 * wr_6_4 +
      0.309874042763696102e-1 * wr_8_4 - 0.369548551213489223e0 * wr_10_4;
  results[k++] =
      0.303670013058354917e0 * wr_2_0 - 0.305562056367028683e0 * wr_4_0 -
      0.504054747351161937e-1 * wr_6_0 + 0.154720218159217134e0 * wr_8_0 -
      0.476869157303126697e-1 * wr_10_0;
  results[k++] =
      0.348874174821287365e0 * wr_8_8 + 0.329152829380489505e0 * wr_10_8;
  results[k++] =
      -0.329310492928927275e0 * wr_4_4 + 0.343958279792904658e-1 * wr_6_4 -
      0.220824131875216890e-1 * wr_8_4 - 0.359660779648789987e0 * wr_10_4;
  results[k++] =
      -0.268408906845712749e0 * wr_2_0 + 0.144043334753621368e0 * wr_4_0 +
      0.285136423953022846e0 * wr_6_0 - 0.296033582974355562e0 * wr_8_0 +
      0.786793968024762415e-1 * wr_10_0;
  results[k++] =
      -0.378912726555323334e0 * wr_8_8 - 0.166197926902664987e0 * wr_10_8;
  results[k++] =
      0.356025791926093858e0 * wr_4_4 + 0.328310488510652648e-1 * wr_6_4 -
      0.219545778380051472e0 * wr_8_4 - 0.138400053055029864e0 * wr_10_4;
  results[k++] =
      0.138675049056307280e0 * wr_6_4 + 0.574571190385602655e-1 * wr_8_4;
  results[k++] =
      -0.685171956023266601e-1 * wr_4_0 + 0.340591353853655139e0 * wr_6_0 -
      0.180391252769029731e0 * wr_8_0 - 0.608164126333225769e-1 * wr_10_0;
  results[k++] =
      -0.317172984343407463e-1 * wr_4_4 + 0.299271995686004766e0 * wr_6_4 +
      0.217439280378905104e0 * wr_8_4 - 0.514249430976290814e0 * wr_10_4;
  results[k++] =
      -0.371856811909592590e0 * wr_4_0 + 0.320399530002166475e-1 * wr_6_0 -
      0.456876077048641990e-1 * wr_8_0 + 0.259335285171635548e0 * wr_10_0;
  results[k++] =
      0.195985748180523265e0 * wr_4_4 - 0.113278340176757299e0 * wr_6_4 +
      0.240533941559467271e-1 * wr_8_4 + 0.226972941887885267e0 * wr_10_4;
  results[k++] =
      0.117605460340744508e0 * wr_8_8 - 0.448358457907624251e0 * wr_10_8;
  results[k++] =
      0.614202843114461443e0 * wr_2_0 - 0.105293947036947373e0 * wr_4_0 +
      0.407800369605717137e-1 * wr_6_0 + 0.834498798425816011e-1 * wr_8_0 -
      0.337937604191474161e0 * wr_10_0;
  results[k++] =
      -0.248227123766417456e0 * wr_4_4 + 0.182188541141509864e-1 * wr_6_4 +
      0.113187667558753861e0 * wr_8_4 + 0.202179636932496230e0 * wr_10_4;
  results[k++] =
      0.244587113269135351e0 * wr_8_8 - 0.105679101996274780e0 * wr_10_8;
  results[k++] =
      0.207908645237436683e0 * wr_2_0 + 0.267104954509112070e0 * wr_4_0 +
      0.501967555166906853e-1 * wr_6_0 - 0.199397067265702712e0 * wr_8_0 -
      0.136400263759665445e0 * wr_10_0;
  results[k++] =
      -0.375710353297998808e0 * wr_4_4 - 0.306866944172470816e0 * wr_6_4 -
      0.249962273693171338e0 * wr_8_4 - 0.142077943103204531e0 * wr_10_4;
  results[k++] =
      0.128388147753273875e0 * wr_6_0 + 0.336816534854303884e0 * wr_8_0;
  results[k++] =
      -0.472813569078890394e-2 * wr_4_4 + 0.157663160603229690e0 * wr_6_4 -
      0.276954500452709644e0 * wr_8_4 - 0.229979337010714461e0 * wr_10_4;
  results[k++] =
      -0.153209106994452060e0 * wr_4_0 - 0.132008139426012695e0 * wr_6_0 +
      0.161346841495159061e-1 * wr_8_0 - 0.407968898387358821e0 * wr_10_0;
  results[k++] =
      -0.598746350779867775e-1 * wr_4_4 + 0.252137476108631708e0 * wr_6_4 +
      0.100205908582031194e-1 * wr_8_4 + 0.505201476498194412e0 * wr_10_4;
  results[k++] =
      0.189340220917851595e0 * wr_4_0 + 0.188775655568126042e0 * wr_6_0 -
      0.384551486869569516e-1 * wr_8_0 - 0.396141191557326240e0 * wr_10_0;
  results[k++] =
      -0.296688159938411549e-1 * wr_4_4 - 0.328310488510652648e-1 * wr_6_4 +
      0.334233871563660449e0 * wr_8_4 - 0.253733430600888084e0 * wr_10_4;
  results[k++] =
      -0.123837446831768701e0 * wr_4_4 - 0.409012260448619104e-1 * wr_6_4 -
      0.224210897159783607e0 * wr_8_4 - 0.864556493695712100e-1 * wr_10_4;
  results[k++] =
      0.766045534972260300e0 * wr_2_0 + 0.188422287906398315e0 * wr_4_0 -
      0.199813594260811015e-1 * wr_6_0 - 0.390301074172991600e-1 * wr_8_0 +
      0.882172139296547268e-1 * wr_10_0;
  results[k++] =
      0.125874125874125874e0 * wr_4_4 - 0.371440916416880938e0 * wr_6_4 +
      0.278045925982232797e-1 * wr_8_4 + 0.179416629391614212e0 * wr_10_4;
  results[k++] =
      -0.274380047452732571e0 * wr_4_4 + 0.542186927341744339e-1 * wr_6_4 +
      0.178578229339604489e0 * wr_8_4 + 0.147657122634756129e0 * wr_10_4;
  results[k++] =
      0.759175032645887292e-1 * wr_2_0 + 0.166670212563833827e0 * wr_4_0 +
      0.229115794250528154e0 * wr_6_0 + 0.227529732587084020e0 * wr_8_0 +
      0.143060747190938009e0 * wr_10_0;
  results[k++] =
      0.148316279467535405e0 * wr_8_8 + 0.604151624403738352e0 * wr_10_8;
  results[k++] = 0.146321681927444111e0 * wr_6_4 -
                 0.138074941925558875e0 * wr_8_4 +
                 0.363447581482163961e-1 * wr_10_4;
  results[k++] =
      0.350980376984975558e0 * wr_8_8 + 0.580808996797534227e0 * wr_10_8;
  results[k++] =
      -0.135310619551863770e0 * wr_4_4 - 0.252673796791443850e0 * wr_6_4 +
      0.317037305988824340e0 * wr_8_4 - 0.898585265605033182e-1 * wr_10_4;
  results[k++] =
      -0.464733904856017675e0 * wr_8_8 - 0.319451744552265963e0 * wr_10_8;
  results[k++] =
      -0.337795967251175222e0 * wr_8_4 + 0.995428367325469780e-1 * wr_6_4 +
      0.419790157368864742e0 * wr_4_4 + 0.108791706236629019e0 * wr_10_4;
  results[k++] =
      0.392407990853454017e0 * wr_8_8 + 0.799217476173996425e-1 * wr_10_8;
  results[k++] =
      0.516725963689822825e0 * wr_4_4 - 0.147034514276657968e0 * wr_6_4 -
      0.161427494757629333e0 * wr_8_4 + 0.669566666342611871e-1 * wr_10_4;
  results[k++] =
      -0.197979633387744862e0 * wr_8_8 + 0.144008993025229737e-1 * wr_10_8;
  results[k++] = -0.323829392739457034e-1 * wr_6_4 -
                 0.160428585181873730e0 * wr_8_4 +
                 0.250244698719961631e0 * wr_10_4;
  results[k++] =
      -0.765901973798946233e-1 * wr_8_8 + 0.614215659723707227e0 * wr_10_8;
  results[k++] = 0.957900261779663672e-1 * wr_6_4 +
                 0.903912675643578871e-1 * wr_8_4 -
                 0.425634435840943070e0 * wr_10_4;
  results[k++] =
      -0.207835320541395027e0 * wr_8_8 + 0.259270185193618339e0 * wr_10_8;
  results[k++] =
      -0.605127486791159041e-1 * wr_4_4 - 0.115305262399721776e-1 * wr_6_4 -
      0.193340991162112474e0 * wr_8_4 - 0.324428073708983737e0 * wr_10_4;
  results[k++] =
      0.221248839434354889e0 * wr_4_0 - 0.422324489232775928e0 * wr_6_0 +
      0.279600622658772591e0 * wr_8_0 - 0.641248147901175823e-1 * wr_10_0;
  results[k++] =
      -0.286574277780956889e0 * wr_8_8 - 0.187606902879790921e-1 * wr_10_8;
  results[k++] =
      -0.306571384812760999e0 * wr_4_4 - 0.272609285582349120e0 * wr_6_4 -
      0.272085986908448571e0 * wr_8_4 - 0.889085893345405492e-1 * wr_10_4;
  results[k++] =
      -0.449775168609497938e0 * wr_2_0 + 0.491689171894441618e0 * wr_4_0 -
      0.179734087550908321e0 * wr_8_0 + 0.592948118051692704e-1 * wr_10_0;
  results[k++] =
      0.211649130770300685e0 * wr_8_8 + 0.577320334837208409e-1 * wr_10_8;
  results[k++] =
      -0.552403291136545429e0 * wr_4_4 - 0.275076388226987914e0 * wr_6_4 -
      0.823645061165857486e-1 * wr_8_4 + 0.238598958386517779e-1 * wr_10_4;
  results[k++] = 0.115949522395941157e-1 * wr_6_4 -
                 0.134032845414815591e0 * wr_8_4 -
                 0.698895408521236503e0 * wr_10_4;
  results[k++] = -0.994060080263131886e-1 * wr_6_0 +
                 0.311110852466456211e0 * wr_8_0 -
                 0.201705221800160982e0 * wr_10_0;
  results[k++] = 0.102894993796002545e0 * wr_6_4 +
                 0.323652655930574117e-1 * wr_8_4 -
                 0.516840124606704299e-1 * wr_10_4;
  results[k++] =
      0.685171956023266601e-1 * wr_4_0 - 0.220703197297168530e0 * wr_6_0 -
      0.194822552990552110e0 * wr_8_0 + 0.304082063166612884e0 * wr_10_0;
  results[k++] =
      0.216670396990624721e-1 * wr_4_4 - 0.250192594782165362e0 * wr_6_4 -
      0.290754155018702089e0 * wr_8_4 - 0.269177339772788447e0 * wr_10_4;
  results[k++] =
      -0.688329150436362434e-1 * wr_8_8 + 0.195267455495002832e0 * wr_10_8;
  results[k++] =
      0.318853513711272663e0 * wr_4_0 + 0.135252081535041617e0 * wr_6_0 -
      0.179087726036408272e0 * wr_8_0 - 0.154022823081520117e0 * wr_10_0;
  results[k++] =
      -0.164655246464463638e0 * wr_4_4 + 0.175697607786105353e0 * wr_6_4 +
      0.183154132908268127e0 * wr_8_4 + 0.105663053908119092e0 * wr_10_4;
  results[k++] =
      -0.973444419923854166e-1 * wr_8_8 + 0.743480456522240094e-1 * wr_10_8;
  results[k++] =
      0.689554966923688640e0 * wr_2_0 - 0.560687920095995213e-1 * wr_4_0 -
      0.233077325238891709e0 * wr_6_0 - 0.132265051283518564e0 * wr_8_0 +
      0.262507831448542544e-2 * wr_10_0;
  results[k++] =
      0.415363423913776168e0 * wr_4_4 + 0.984931465531957942e-1 * wr_6_4 +
      0.491520399358324190e-1 * wr_8_4 + 0.267280525741195240e-1 * wr_10_4;
  results[k++] = -0.268078067757441164e-1 * wr_6_0 -
                 0.209750893943706779e-1 * wr_8_0 +
                 0.518055743983947709e0 * wr_10_0;
  results[k++] = 0.273606032182077477e-1 * wr_6_4 -
                 0.284004052967566357e0 * wr_8_4 +
                 0.453525368739913701e0 * wr_10_4;
  results[k++] = -0.792985618476103343e-1 * wr_6_0 -
                 0.248180604629487072e0 * wr_8_0 -
                 0.421418128106533741e0 * wr_10_0;
  results[k++] =
      -0.506033025864778109e-2 * wr_4_4 + 0.168740432688692138e0 * wr_6_4 -
      0.296413074954641531e0 * wr_8_4 - 0.246137478712015368e0 * wr_10_4;
  results[k++] =
      -0.112015185309971685e0 * wr_4_0 - 0.143181005057431659e0 * wr_6_0 -
      0.758345759009985895e-1 * wr_8_0 + 0.669600827035797166e-1 * wr_10_0;
  results[k++] =
      0.117015388326444133e-1 * wr_4_4 - 0.149835423367858956e0 * wr_6_4 +
      0.329005160988409475e0 * wr_8_4 - 0.185851369980642905e0 * wr_10_4;
  results[k++] =
      -0.627970470507514638e-1 * wr_4_4 + 0.353655647203992720e0 * wr_6_4 +
      0.408709947176858602e-1 * wr_8_4 - 0.110820345863515015e0 * wr_10_4;
  results[k++] =
      0.141873618494162336e0 * wr_4_0 + 0.225676149757199308e0 * wr_6_0 +
      0.234785989582071275e0 * wr_8_0 + 0.150771133023507869e0 * wr_10_0;
  results[k++] =
      0.827423745888058188e-1 * wr_4_4 - 0.282532383800987605e0 * wr_6_4 +
      0.126895516571059691e0 * wr_8_4 + 0.505449092331240574e-1 * wr_10_4;
  results[k++] =
      0.231893464517289210e0 * wr_4_4 - 0.247445057790570404e0 * wr_6_4 -
      0.150926150328251546e0 * wr_8_4 - 0.393491584707270921e-1 * wr_10_4;
  results[k++] =
      0.808441211244658469e0 * wr_2_0 + 0.343286006849697834e0 * wr_4_0 +
      0.162656078202523302e0 * wr_6_0 + 0.538433620405003865e-1 * wr_8_0 +
      0.208977480052205812e-2 * wr_10_0;
  results[k++] =
      0.564076074817766209e0 * wr_1_0 + 0.151066216746103968e0 * wr_5_0 -
      0.548316641635209445e0 * wr_3_0 - 0.705629341411906319e-2 * wr_7_0;
  results[k++] =
      -0.652680652680652681e-1 * wr_5_4 - 0.839160839160839161e-1 * wr_7_4;
  results[k++] =
      0.362618862146947448e0 * wr_5_0 - 0.221564683762798918e0 * wr_1_0 -
      0.970079960880569485e-1 * wr_7_0 - 0.167513501006488146e0 * wr_3_0;
  results[k++] =
      -0.312736780069900657e0 * wr_5_4 - 0.262698895258716553e0 * wr_7_4;
  results[k++] = -0.312930365220020188e0 * wr_9_8;
  results[k++] =
      -0.821205308706255274e-1 * wr_3_0 - 0.403908264192096998e-1 * wr_9_0 +
      0.285259832928267683e-1 * wr_1_0 - 0.210088843691975037e0 * wr_5_0 +
      0.268709507519488012e0 * wr_7_0;
  results[k++] = -0.271223530947664150e0 * wr_5_4 -
                 0.140717149585788106e0 * wr_7_4 +
                 0.207851842182261296e0 * wr_9_4;
  results[k++] = -0.147727376814622832e0 * wr_9_8;
  results[k++] = 0.309880676591327159e-1 * wr_3_0 -
                 0.226631541418176971e0 * wr_7_0 +
                 0.182558365153340223e0 * wr_9_0;
  results[k++] = -0.913562608031022134e-1 * wr_5_4 +
                 0.846388886852270507e-1 * wr_7_4 +
                 0.385059211863132472e0 * wr_9_4;
  results[k++] =
      0.279599267263947816e-1 * wr_5_4 - 0.515051281802009134e-1 * wr_7_4 +
      0.346914269323522245e-1 * wr_9_4 - 0.816373931168599845e-2 * wr_11_4;
  results[k++] =
      -0.238026986639503799e0 * wr_9_8 - 0.819535340739305270e0 * wr_11_8;
  results[k++] =
      -0.190989857901795489e-2 * wr_3_0 + 0.172522123677784721e-1 * wr_5_0 +
      0.477147876374578341e-1 * wr_7_0 - 0.194091558531803466e0 * wr_9_0 +
      0.126997979396912083e0 * wr_11_0;
  results[k++] =
      -0.117350838977860736e-1 * wr_5_4 + 0.704910646034060486e-1 * wr_7_4 +
      0.146236733442001602e0 * wr_9_4 - 0.447369934803569073e0 * wr_11_4;
  results[k++] =
      0.286627993453415340e0 * wr_5_4 - 0.573255986906830680e-1 * wr_7_4;
  results[k++] =
      0.825722823844770454e0 * wr_1_0 + 0.267551125285347813e0 * wr_3_0 +
      0.147425531942581787e-1 * wr_5_0 - 0.723054912046430037e-1 * wr_7_0;
  results[k++] =
      -0.312736780069900657e0 * wr_5_4 - 0.262698895258716553e0 * wr_7_4;
  results[k++] =
      0.738548945875996396e-1 * wr_1_0 + 0.215374501294056189e0 * wr_3_0 +
      0.296688159938411549e0 * wr_5_0 + 0.226351990872132880e0 * wr_7_0;
  results[k++] = -0.297110492052472357e0 * wr_5_4 +
                 0.275264132342731741e0 * wr_7_4 -
                 0.379483808607427746e-1 * wr_9_4;
  results[k++] =
      -0.106688280692213413e0 * wr_7_4 - 0.254565477722018474e0 * wr_9_4;
  results[k++] =
      -0.349370517392917382e-1 * wr_1_0 - 0.909979657797767769e-1 * wr_3_0 -
      0.857684112827785404e-1 * wr_5_0 + 0.346421674977529028e-1 * wr_7_0 +
      0.230852801704909912e0 * wr_9_0;
  results[k++] = 0.701295855136233531e-1 * wr_5_4 +
                 0.216576661145013297e0 * wr_7_4 -
                 0.232889485859630812e0 * wr_9_4;
  results[k++] = 0.818937124152615257e-1 * wr_5_4 +
                 0.165232607990792372e0 * wr_7_4 +
                 0.230116893153284736e0 * wr_9_4;
  results[k++] =
      -0.144035986166276147e-1 * wr_3_0 - 0.722234656635415734e-1 * wr_5_0 -
      0.187529886055770711e0 * wr_7_0 - 0.305478573266422169e0 * wr_9_0;
  results[k++] =
      0.286072835090970954e0 * wr_9_8 - 0.227298207160801323e0 * wr_11_8;
  results[k++] =
      -0.997031368386913714e-2 * wr_5_4 + 0.183663673123905158e-1 * wr_7_4 +
      0.221298425257153239e0 * wr_9_4 - 0.206043464814634733e0 * wr_11_4;
  results[k++] =
      0.217111749449505388e-1 * wr_5_4 + 0.559919774896092843e-1 * wr_7_4 +
      0.159557357233583910e0 * wr_9_4 + 0.683368863294938127e0 * wr_11_4;
  results[k++] =
      0.291741826934612532e-2 * wr_3_0 + 0.123698645500568565e-1 * wr_5_0 +
      0.187419965243480277e-1 * wr_7_0 - 0.386712721184322334e-1 * wr_9_0 -
      0.581977853692791841e0 * wr_11_0;
  results[k++] =
      -0.443538443173198257e0 * wr_5_4 + 0.124745187142462009e0 * wr_7_4;
  results[k++] = 0.348196766375067201e0 * wr_9_8;
  results[k++] =
      -0.213306078712600668e0 * wr_7_4 + 0.422250601842034659e-1 * wr_9_4;
  results[k++] =
      -0.331873259151532333e0 * wr_1_0 + 0.393671401969525872e0 * wr_3_0 -
      0.162945874180062189e0 * wr_5_0 + 0.134315143416693299e-1 * wr_7_0 +
      0.497258902930811359e-2 * wr_9_0;
  results[k++] = 0.346728902348319487e0 * wr_9_8;
  results[k++] = 0.282230532963593387e0 * wr_5_4 -
                 0.996107763400917840e-1 * wr_7_4 -
                 0.102993831221756334e0 * wr_9_4;
  results[k++] =
      -0.200858833795035967e-1 * wr_1_0 + 0.166557765594855464e0 * wr_3_0 -
      0.248868778280542986e0 * wr_5_0 + 0.132376338683335889e0 * wr_7_0 -
      0.171028301505348129e-1 * wr_9_0 - 0.388215127218523334e-2 * wr_11_0;
  results[k++] =
      -0.207595765232863755e0 * wr_9_8 - 0.355762681016554790e0 * wr_11_8;
  results[k++] =
      -0.153779596995171299e0 * wr_5_4 + 0.350234871625366211e0 * wr_7_4 -
      0.126375912396425961e0 * wr_9_4 - 0.641436660203899880e-1 * wr_11_4;
  results[k++] =
      -0.188328147361972590e-1 * wr_3_0 + 0.972101638967555948e-1 * wr_5_0 -
      0.150559409279676261e0 * wr_7_0 + 0.950989423402225247e-1 * wr_9_0 -
      0.216845169004070292e-1 * wr_11_0;
  results[k++] =
      -0.298044124426389964e0 * wr_9_8 + 0.513088235320691001e0 * wr_11_8;
  results[k++] =
      0.283161184965947456e-1 * wr_5_4 - 0.187780575293207260e0 * wr_7_4 +
      0.331257523972882489e0 * wr_9_4 - 0.168898120892581208e0 * wr_11_4;
  results[k++] = 0.357082371191175052e0 * wr_5_0 -
                 0.324020503683746263e0 * wr_3_0 -
                 0.844389306188731774e-1 * wr_7_0;
  results[k++] =
      -0.264475229218586354e0 * wr_5_4 - 0.167363230989886677e0 * wr_7_4;
  results[k++] =
      -0.205594405594405594e0 * wr_3_0 + 0.666556464720849457e0 * wr_1_0 +
      0.449427627149482184e-1 * wr_9_0 - 0.208226807008804673e0 * wr_7_0;
  results[k++] =
      0.826742612826512927e-1 * wr_7_4 + 0.283254314777696226e0 * wr_9_4;
  results[k++] = 0.346728902348319487e0 * wr_9_8;
  results[k++] =
      0.288692361444318973e0 * wr_3_0 - 0.886479946550175773e-1 * wr_7_0 -
      0.134259903791319067e0 * wr_9_0 + 0.199123955490919400e0 * wr_1_0 -
      0.543152913933540632e-1 * wr_5_0;
  results[k++] = -0.210362219010863331e0 * wr_5_4 -
                 0.801851281876702582e-1 * wr_7_4 +
                 0.230301207874987380e0 * wr_9_4;
  results[k++] =
      0.795031252357458062e-1 * wr_9_8 - 0.557373002290888495e0 * wr_11_8;
  results[k++] =
      0.216612467818176043e0 * wr_5_0 - 0.157792690889117356e0 * wr_9_0 +
      0.289939854159710157e-1 * wr_3_0 - 0.111506305932026894e0 * wr_11_0 +
      0.124436318806760472e0 * wr_7_0 - 0.314685314685314685e-1 * wr_1_0;
  results[k++] =
      -0.252165197118065308e0 * wr_5_4 - 0.201381166554487997e0 * wr_7_4 -
      0.188390087224644531e-1 * wr_9_4 - 0.430288792642906275e0 * wr_11_4;
  results[k++] =
      -0.991353045258219211e-1 * wr_5_4 + 0.182617666231777223e0 * wr_7_4 -
      0.123002653298351093e0 * wr_9_4 + 0.289455258825626487e-1 * wr_11_4;
  results[k++] =
      -0.160753046156999621e0 * wr_9_8 - 0.207554410610830479e0 * wr_11_8;
  results[k++] =
      -0.289470026574358100e0 * wr_11_0 + 0.902285626923597424e-1 * wr_7_0 -
      0.228547459888918395e-1 * wr_3_0 - 0.393234474775331060e-1 * wr_5_0 +
      0.282109052923182389e0 * wr_9_0;
  results[k++] =
      -0.759801189807899986e-1 * wr_5_4 + 0.999738407641973666e-2 * wr_7_4 +
      0.222214302498489436e0 * wr_9_4 + 0.453201215505346842e0 * wr_11_4;
  results[k++] =
      0.276594815369535215e0 * wr_5_4 - 0.280052250561654405e0 * wr_7_4;
  results[k++] = 0.193639288006876909e0 * wr_3_0 +
                 0.298756546155659134e0 * wr_5_0 +
                 0.235488926440317990e0 * wr_7_0;
  results[k++] =
      -0.109043714232939648e0 * wr_7_4 + 0.231276179549014830e0 * wr_9_4;
  results[k++] =
      0.816361611659769031e0 * wr_1_0 + 0.227819675377736145e0 * wr_3_0 +
      0.268447067337136540e-1 * wr_7_0 + 0.256869284659409143e0 * wr_9_0;
  results[k++] = -0.282230532963593387e0 * wr_5_4 +
                 0.996107763400917840e-1 * wr_7_4 +
                 0.102993831221756334e0 * wr_9_4;
  results[k++] = 0.210362219010863331e0 * wr_5_4 +
                 0.801851281876702582e-1 * wr_7_4 -
                 0.230301207874987380e0 * wr_9_4;
  results[k++] =
      0.663746518303064666e-1 * wr_1_0 + 0.183713320919112073e0 * wr_3_0 +
      0.217261165573416252e0 * wr_5_0 + 0.752164803133482472e-1 * wr_7_0 -
      0.208848739230940771e0 * wr_9_0;
  results[k++] =
      0.258632021039696609e0 * wr_5_4 + 0.140247028952945530e0 * wr_7_4 -
      0.165311630633395135e0 * wr_9_4 - 0.114417237325316845e0 * wr_11_4;
  results[k++] =
      -0.335574592176274342e-1 * wr_5_4 + 0.196527895130985548e-1 * wr_7_4 +
      0.643474649528588950e-1 * wr_9_4 - 0.489905341484006582e0 * wr_11_4;
  results[k++] =
      -0.358284991816769174e-1 * wr_1_0 - 0.990333136888018747e-1 * wr_3_0 -
      0.118379588961379086e0 * wr_5_0 - 0.539721833782064335e-1 * wr_7_0 +
      0.366089192777902016e-1 * wr_9_0 - 0.457039850791803315e0 * wr_11_0;
  results[k++] =
      -0.414088634806111802e0 * wr_9_8 + 0.329012729458085044e0 * wr_11_8;
  results[k++] =
      0.224497257175037930e-1 * wr_5_4 + 0.150649475209564926e0 * wr_7_4 +
      0.236764235096574022e0 * wr_9_4 - 0.340853283659862151e0 * wr_11_4;
  results[k++] =
      -0.676884698648656780e-1 * wr_5_4 - 0.141611404059390037e0 * wr_7_4 -
      0.230958273997303359e0 * wr_9_4 - 0.282620612615084987e0 * wr_11_4;
  results[k++] =
      -0.950162546135325105e-2 * wr_3_0 - 0.490449559092429527e-1 * wr_5_0 -
      0.135644612181373726e0 * wr_7_0 - 0.263888855436456538e0 * wr_9_0 -
      0.361032554393865366e0 * wr_11_0;
  results[k++] = -0.383543651029515973e0 * wr_9_8;
  results[k++] =
      0.343945717171969012e0 * wr_7_4 - 0.680858637284933960e-1 * wr_9_4;
  results[k++] = 0.100435303609284820e0 * wr_9_8;
  results[k++] = 0.214555275008483615e0 * wr_5_4 +
                 0.986007697649281320e-1 * wr_7_4 +
                 0.158334404387846459e0 * wr_9_4;
  results[k++] =
      0.460225404933153255e0 * wr_1_0 - 0.415108256509740998e0 * wr_3_0 +
      0.691187887625315236e-2 * wr_5_0 + 0.101953712981092036e0 * wr_7_0 -
      0.228465726393517965e-1 * wr_9_0 - 0.355805041281158879e-2 * wr_11_0;
  results[k++] =
      0.106203120171730799e0 * wr_9_8 - 0.510840794664558272e0 * wr_11_8;
  results[k++] =
      0.718303523365952197e-2 * wr_5_4 - 0.108015567423451458e0 * wr_7_4 +
      0.220829192838441028e0 * wr_9_4 + 0.104865130170198223e0 * wr_11_4;
  results[k++] =
      -0.258645294420679059e0 * wr_1_0 + 0.328624906167047505e0 * wr_5_0 -
      0.154417248370308887e0 * wr_7_0 - 0.408682633321510024e-1 * wr_9_0 +
      0.279945909419432332e-1 * wr_11_0;
  results[k++] =
      0.114476038700136145e0 * wr_9_8 + 0.513088235320691001e0 * wr_11_8;
  results[k++] =
      -0.338436758935780155e0 * wr_5_4 + 0.371408761206119320e-1 * wr_7_4 -
      0.116147310150493470e0 * wr_9_4 + 0.277527932199303925e0 * wr_11_4;
  results[k++] =
      0.177810952737558353e-1 * wr_1_0 - 0.950637508697422570e-1 * wr_3_0 -
      0.500708900608586538e-1 * wr_5_0 + 0.301583150089689739e0 * wr_7_0 -
      0.249370263890956872e0 * wr_9_0 + 0.637505506324369047e-1 * wr_11_0;
  results[k++] =
      -0.390768499261861186e0 * wr_9_8 - 0.142305072406621916e0 * wr_11_8;
  results[k++] =
      0.160435341253921869e0 * wr_5_4 - 0.225684164251928371e0 * wr_7_4 -
      0.217157452375903539e0 * wr_9_4 + 0.271694680323443074e0 * wr_11_4;
  results[k++] =
      -0.268945549684959574e0 * wr_5_0 + 0.469315720012267945e-1 * wr_3_0 -
      0.315983416690398283e-1 * wr_9_0 + 0.233813602166376798e0 * wr_7_0;
  results[k++] = -0.248995195642712969e0 * wr_5_4 -
                 0.278059892192919354e0 * wr_7_4 -
                 0.291526251637265931e0 * wr_9_4;
  results[k++] = 0.355519713785515216e0 * wr_3_0 -
                 0.103178451079187125e0 * wr_7_0 -
                 0.124115822171530515e0 * wr_9_0;
  results[k++] = 0.250546582587584536e0 * wr_5_4 +
                 0.752253832523997689e-1 * wr_7_4 -
                 0.156449403812792637e0 * wr_9_4;
  results[k++] =
      -0.277313853220142806e0 * wr_9_8 - 0.326061883039758281e0 * wr_11_8;
  results[k++] =
      -0.722610722610722611e-1 * wr_3_0 + 0.721034637318226575e0 * wr_1_0 -
      0.601601836513925823e-2 * wr_5_0 - 0.210785124019036902e0 * wr_9_0 -
      0.102197217479683330e0 * wr_11_0 + 0.958384622073339217e-1 * wr_7_0;
  results[k++] =
      -0.931997557546492719e-3 * wr_5_4 - 0.151362009345896562e-1 * wr_7_4 -
      0.859576467323838454e-1 * wr_9_4 + 0.449005662142729916e0 * wr_11_4;
  results[k++] =
      0.114476038700136145e0 * wr_9_8 + 0.513088235320691001e0 * wr_11_8;
  results[k++] =
      0.109541635389015835e0 * wr_5_0 + 0.298829601313933876e0 * wr_3_0 +
      0.974550894843600827e-1 * wr_9_0 - 0.307940500361375566e0 * wr_11_0 +
      0.155187176652407436e0 * wr_1_0 - 0.957131704774641867e-1 * wr_7_0;
  results[k++] =
      0.184430861647866908e0 * wr_5_4 + 0.130113597803086397e0 * wr_7_4 -
      0.994626141512961168e-1 * wr_9_4 - 0.396101204019562873e0 * wr_11_4;
  results[k++] =
      -0.186665606593392386e0 * wr_5_4 + 0.343857696356249131e0 * wr_7_4 -
      0.231606338431662587e0 * wr_9_4 + 0.545026231863335214e-1 * wr_11_4;
  results[k++] =
      -0.756719944931826828e-1 * wr_9_8 - 0.150312320594096536e0 * wr_11_8;
  results[k++] =
      -0.284173473123959080e0 * wr_11_0 + 0.241451719772256183e-1 * wr_9_0 -
      0.229552952908612533e-1 * wr_1_0 - 0.478156264865613771e-2 * wr_3_0 +
      0.226526354966136281e0 * wr_7_0 + 0.130457777516601046e0 * wr_5_0;
  results[k++] =
      0.190754445034167847e0 * wr_5_4 + 0.219618604480127455e0 * wr_7_4 +
      0.139471899097943869e0 * wr_9_4 - 0.218807608723554767e-1 * wr_11_4;
  results[k++] = 0.101651862954852683e0 * wr_5_4 -
                 0.378391585447751256e0 * wr_7_4 +
                 0.142818112627502117e0 * wr_9_4;
  results[k++] =
      -0.957986701914126867e-1 * wr_3_0 - 0.109796560886748679e0 * wr_5_0 +
      0.127272004495494808e-1 * wr_7_0 + 0.232199441421814040e0 * wr_9_0;
  results[k++] = 0.279496413914333905e0 * wr_5_4 -
                 0.385335129477482406e-1 * wr_7_4 +
                 0.261789924690502775e0 * wr_9_4;
  results[k++] =
      0.165249518427320060e0 * wr_3_0 + 0.220961316454618170e0 * wr_5_0 +
      0.853766561053755653e-1 * wr_7_0 - 0.207685494142662645e0 * wr_9_0;
  results[k++] =
      -0.427094935497076435e-2 * wr_5_4 - 0.269744169787627223e0 * wr_7_4 +
      0.168817466876323925e0 * wr_9_4 + 0.587886409780807896e-1 * wr_11_4;
  results[k++] =
      -0.700343092986057283e-2 * wr_5_4 + 0.155099905760411866e0 * wr_7_4 +
      0.251658221149852917e-1 * wr_9_4 + 0.394366192595455110e0 * wr_11_4;
  results[k++] =
      0.820934047683489226e0 * wr_1_0 + 0.246818549918218765e0 * wr_3_0 +
      0.328777834638350576e-2 * wr_5_0 - 0.415683387819610730e-1 * wr_7_0 +
      0.489035046344096405e-1 * wr_9_0 - 0.418883942372952298e0 * wr_11_0;
  results[k++] =
      0.338436758935780155e0 * wr_5_4 - 0.371408761206119320e-1 * wr_7_4 +
      0.116147310150493470e0 * wr_9_4 - 0.277527932199303925e0 * wr_11_4;
  results[k++] =
      -0.184430861647866908e0 * wr_5_4 - 0.130113597803086397e0 * wr_7_4 +
      0.994626141512961168e-1 * wr_9_4 + 0.396101204019562873e0 * wr_11_4;
  results[k++] =
      0.517290588841358119e-1 * wr_1_0 + 0.149414800656966938e0 * wr_3_0 +
      0.199166609798210609e0 * wr_5_0 + 0.127617560636618915e0 * wr_7_0 -
      0.943113769203484669e-1 * wr_9_0 - 0.369528600433650679e0 * wr_11_0;
  results[k++] =
      0.380456165639223362e0 * wr_9_8 - 0.302290164410642866e0 * wr_11_8;
  results[k++] =
      0.165010789443819655e0 * wr_5_4 + 0.239374204423435748e0 * wr_7_4 +
      0.127961255966830116e-1 * wr_9_4 - 0.293897083461068043e0 * wr_11_4;
  results[k++] =
      0.435335468706637694e-1 * wr_5_4 + 0.240580127443141884e-1 * wr_7_4 -
      0.424399473744601591e-1 * wr_9_4 - 0.123840725153376949e0 * wr_11_4;
  results[k++] =
      -0.251462660899936435e-1 * wr_1_0 - 0.750771320534026525e-1 * wr_3_0 -
      0.109435076424608614e0 * wr_5_0 - 0.969324956909181653e-1 * wr_7_0 -
      0.220414255779468068e-1 * wr_9_0 + 0.867547463956677939e-1 * wr_11_0;
  results[k++] = 0.877058019307029216e-1 * wr_5_4 -
                 0.644895602431639129e-1 * wr_7_4 +
                 0.149362757375590639e-1 * wr_9_4;
  results[k++] = 0.420697734849294311e0 * wr_9_8;
  results[k++] =
      -0.307349423002661913e0 * wr_5_4 + 0.202203567764909154e0 * wr_7_4 -
      0.293342632148986195e-1 * wr_9_4 - 0.627551632841030549e-2 * wr_11_4;
  results[k++] =
      -0.241896531369395396e0 * wr_9_8 - 0.174725521724359172e0 * wr_11_8;
  results[k++] =
      -0.401793648521603129e0 * wr_5_4 + 0.181732324578027730e0 * wr_7_4 +
      0.415439661673954465e-1 * wr_9_4 - 0.299954935600959835e-1 * wr_11_4;
  results[k++] =
      -0.139857830488919132e0 * wr_9_8 + 0.340947310741201982e0 * wr_11_8;
  results[k++] =
      -0.123819955666874713e0 * wr_5_4 - 0.142555870011204439e0 * wr_7_4 +
      0.204840352972238590e0 * wr_9_4 - 0.616243469997248081e-1 * wr_11_4;
  results[k++] =
      0.336488093494028926e0 * wr_9_8 - 0.341789677215323098e0 * wr_11_8;
  results[k++] =
      -0.240192230707630699e0 * wr_1_0 + 0.366899692852671403e0 * wr_3_0 -
      0.270548885590529367e0 * wr_5_0 + 0.116396380455325778e0 * wr_7_0 -
      0.280713866018725487e-1 * wr_9_0 + 0.295424036453342528e-2 * wr_11_0;
  results[k++] =
      0.214634230328170544e0 * wr_5_4 - 0.395378845341366791e0 * wr_7_4 +
      0.266308556223154550e0 * wr_9_4 - 0.626689018504980945e-1 * wr_11_4;
  results[k++] =
      -0.239607238244296284e0 * wr_9_8 + 0.190379123758327363e0 * wr_11_8;
  results[k++] = 0.444087403886916920e0 * wr_9_8;
  results[k++] = 0.830864192103571824e-1 * wr_5_4 +
                 0.120440397594845496e0 * wr_7_4 -
                 0.289056033316044523e0 * wr_9_4;
  results[k++] =
      0.201270080125208879e0 * wr_9_8 - 0.629981827709374182e0 * wr_11_8;
  results[k++] =
      0.109598647660256258e0 * wr_5_4 - 0.721043734606949068e-1 * wr_7_4 -
      0.187124797956408025e0 * wr_9_4 - 0.158386871314664075e0 * wr_11_4;
  results[k++] =
      -0.262381169323325581e0 * wr_3_0 + 0.393991087355633678e0 * wr_5_0 -
      0.149829488023153159e0 * wr_7_0 - 0.321195286215037852e-1 * wr_9_0 +
      0.224710993221853338e-1 * wr_11_0;
  results[k++] =
      0.542941061169911911e-1 * wr_9_8 + 0.215083222605990544e0 * wr_11_8;
  results[k++] =
      -0.909883441372353848e-1 * wr_5_4 - 0.149919117307886075e0 * wr_7_4 +
      0.799667739576573059e-1 * wr_9_4 - 0.353217368253659541e0 * wr_11_4;
  results[k++] =
      0.589732213846098382e0 * wr_1_0 - 0.394113490998446092e0 * wr_3_0 -
      0.332132710502007213e-1 * wr_5_0 - 0.125029768992617290e0 * wr_7_0 +
      0.220551359786190820e0 * wr_9_0 - 0.720806783953456877e-1 * wr_11_0;
  results[k++] =
      0.669268300991271967e-1 * wr_9_8 + 0.169953262083487185e0 * wr_11_8;
  results[k++] =
      -0.109455774989097478e0 * wr_5_4 + 0.992393025702960270e-1 * wr_7_4 +
      0.113173192998560424e-1 * wr_9_4 - 0.332299893006861902e0 * wr_11_4;
  results[k++] =
      0.171565879076879071e0 * wr_1_0 + 0.141115266481796694e0 * wr_3_0 -
      0.264602756236891359e0 * wr_5_0 - 0.152210651364656787e0 * wr_7_0 +
      0.277937575036122709e0 * wr_9_0 - 0.865170392470503117e-1 * wr_11_0;
  results[k++] =
      -0.217525346418272030e0 * wr_9_8 - 0.149789493547071368e0 * wr_11_8;
  results[k++] =
      0.350736873249022470e0 * wr_5_4 + 0.100503548474866088e0 * wr_7_4 -
      0.177294997452683964e0 * wr_9_4 - 0.128199833566096241e0 * wr_11_4;
  results[k++] = -0.219060144016256611e0 * wr_7_0 +
                 0.141697953272994032e0 * wr_9_0 +
                 0.695795410564069898e-1 * wr_5_0;
  results[k++] = -0.608393522183615565e-1 * wr_5_4 +
                 0.173676351488402367e-1 * wr_7_4 +
                 0.871536732634354211e-1 * wr_9_4;
  results[k++] =
      0.189644900311933413e0 * wr_5_0 + 0.187323100365524010e0 * wr_7_0 -
      0.164119304658875249e0 * wr_9_0 - 0.976241233278483035e-1 * wr_11_0 -
      0.645986315177203651e-1 * wr_3_0;
  results[k++] =
      0.238660035032960894e0 * wr_5_4 + 0.219818453319832402e0 * wr_7_4 +
      0.134917987780971373e0 * wr_9_4 - 0.525309823869045433e0 * wr_11_4;
  results[k++] =
      -0.100663966910760362e0 * wr_9_8 + 0.531699956696735589e0 * wr_11_8;
  results[k++] =
      -0.897911290827980772e-1 * wr_7_0 + 0.952819198276088859e-1 * wr_9_0 -
      0.299970239033821047e0 * wr_11_0 + 0.318415226887315331e0 * wr_3_0 +
      0.159377242144146854e0 * wr_5_0;
  results[k++] =
      -0.274340179817221167e0 * wr_5_4 - 0.140924863281343933e0 * wr_7_4 +
      0.780058190919743557e-1 * wr_9_4 + 0.292872369983544911e0 * wr_11_4;
  results[k++] =
      -0.345608664517830554e0 * wr_9_8 - 0.160899726455837186e0 * wr_11_8;
  results[k++] =
      0.939128655686918293e-1 * wr_7_0 - 0.321305722406017034e0 * wr_11_0 +
      0.198233115214629665e-1 * wr_3_0 + 0.761341014315990017e0 * wr_1_0 +
      0.213547935858829310e-1 * wr_9_0 - 0.865358998012456681e-1 * wr_5_0;
  results[k++] =
      0.288768881526684395e-1 * wr_5_4 - 0.997392518430982287e-2 * wr_7_4 +
      0.375353017502701675e-1 * wr_9_4 + 0.140022688329299836e0 * wr_11_4;
  results[k++] =
      -0.214634230328170544e0 * wr_5_4 + 0.395378845341366791e0 * wr_7_4 -
      0.266308556223154550e0 * wr_9_4 + 0.626689018504980945e-1 * wr_11_4;
  results[k++] =
      0.217525346418272030e0 * wr_9_8 + 0.149789493547071368e0 * wr_11_8;
  results[k++] =
      0.102939527446127443e0 * wr_1_0 + 0.245943750153988523e0 * wr_3_0 +
      0.202979233844642911e0 * wr_5_0 - 0.203286195281692414e0 * wr_9_0 -
      0.106774687460993799e0 * wr_11_0 - 0.268607031819982565e-1 * wr_7_0;
  results[k++] =
      -0.164501783049820873e0 * wr_5_4 - 0.222221706926951003e0 * wr_7_4 -
      0.213825812275479674e0 * wr_9_4 - 0.130827921884538798e0 * wr_11_4;
  results[k++] = 0.144043334753621368e-1 * wr_5_4 -
                 0.194176064006107236e0 * wr_7_4 +
                 0.350786768230525569e0 * wr_9_4;
  results[k++] = -0.518615278817878529e-1 * wr_5_0 -
                 0.176340014345247688e0 * wr_7_0 -
                 0.316846255791003472e0 * wr_9_0;
  results[k++] =
      0.128997879721462490e0 * wr_5_4 - 0.276740302606112321e0 * wr_7_4 -
      0.123654378323485684e0 * wr_9_4 - 0.343896004454831543e0 * wr_11_4;
  results[k++] =
      -0.986760395735045441e-1 * wr_3_0 - 0.135975704417422810e0 * wr_5_0 -
      0.735790531576134644e-1 * wr_7_0 + 0.326995276783832381e-1 * wr_9_0 -
      0.447369934803569073e0 * wr_11_0;
  results[k++] =
      0.114764731062619660e0 * wr_5_4 - 0.186870203539462933e0 * wr_7_4 -
      0.111881744007948963e0 * wr_9_4 + 0.175024717743950197e0 * wr_11_4;
  results[k++] =
      -0.307946088090599078e0 * wr_5_4 + 0.994891614484430762e-2 * wr_7_4 -
      0.750525555129010953e-1 * wr_9_4 - 0.469640599941823528e0 * wr_11_4;
  results[k++] =
      0.132377853971580436e0 * wr_3_0 + 0.198778345117435399e0 * wr_5_0 +
      0.134986998776554247e0 * wr_7_0 - 0.891280747872438140e-1 * wr_9_0 -
      0.374128620231080469e0 * wr_11_0;
  results[k++] =
      0.106420766010377131e0 * wr_5_4 + 0.935637117435731952e-1 * wr_7_4 +
      0.192061277322758348e0 * wr_9_4 - 0.307196356421051167e0 * wr_11_4;
  results[k++] =
      0.126532184254161516e0 * wr_5_4 - 0.910490635052560247e-1 * wr_7_4 -
      0.123353588828316684e0 * wr_9_4 + 0.247398661162815746e-1 * wr_11_4;
  results[k++] =
      0.834007294989462682e0 * wr_1_0 + 0.311253346696376553e0 * wr_3_0 +
      0.725910174808589410e-1 * wr_5_0 - 0.401860897749396447e-1 * wr_7_0 -
      0.194941702630911936e-1 * wr_9_0 + 0.980907758784775837e-1 * wr_11_0;
  results[k++] =
      -0.239607238244296284e0 * wr_9_8 + 0.190379123758327363e0 * wr_11_8;
  results[k++] =
      0.350736873249022470e0 * wr_5_4 + 0.100503548474866088e0 * wr_7_4 -
      0.177294997452683964e0 * wr_9_4 - 0.128199833566096241e0 * wr_11_4;
  results[k++] =
      0.164501783049820873e0 * wr_5_4 + 0.222221706926951003e0 * wr_7_4 +
      0.213825812275479674e0 * wr_9_4 + 0.130827921884538798e0 * wr_11_4;
  results[k++] =
      0.343131758153758143e-1 * wr_1_0 + 0.108860348428814592e0 * wr_3_0 +
      0.182438059713893429e0 * wr_5_0 + 0.223839193183318804e0 * wr_7_0 +
      0.208221823695208467e0 * wr_9_0 + 0.125344198323775330e0 * wr_11_0;
  results[k++] =
      0.148932259865245090e-1 * wr_5_4 - 0.529101449521265450e-1 * wr_7_4 +
      0.431173140888510082e-1 * wr_9_4 - 0.110689703689992077e-1 * wr_11_4;
  results[k++] =
      0.104095693055445375e0 * wr_9_8 - 0.451139357197230197e0 * wr_11_8;
  results[k++] =
      -0.136498670850663856e-1 * wr_5_4 + 0.188583689991048749e0 * wr_7_4 -
      0.175006829223877567e0 * wr_9_4 + 0.471012235396505634e-1 * wr_11_4;
  results[k++] =
      0.465530091673857284e-1 * wr_9_8 + 0.504389135009282859e0 * wr_11_8;
  results[k++] =
      0.115987835566314723e0 * wr_5_4 + 0.257538779629152755e0 * wr_7_4 -
      0.311810460649356062e0 * wr_9_4 + 0.904379550250737560e-1 * wr_11_4;
  results[k++] =
      -0.242240868243163532e0 * wr_9_8 - 0.328076702726519914e0 * wr_11_8;
  results[k++] =
      0.357437423676588215e0 * wr_5_4 + 0.105820289904253090e0 * wr_7_4 -
      0.295661582323549771e0 * wr_9_4 + 0.972488110990644679e-1 * wr_11_4;
  results[k++] =
      0.291407237036822342e0 * wr_9_8 + 0.118399417287901254e0 * wr_11_8;
  results[k++] =
      -0.201604444765741299e0 * wr_7_0 + 0.468604415773936179e0 * wr_5_0 +
      0.416025147168921843e0 * wr_1_0 - 0.635488909302242538e0 * wr_3_0 +
      0.486210678333515100e-1 * wr_9_0 - 0.511689440914269369e-2 * wr_11_0;
  results[k++] =
      0.421325044234743165e0 * wr_5_4 - 0.978308926241663692e-1 * wr_7_4 -
      0.133252874406547018e0 * wr_9_4 + 0.559174931822232988e-1 * wr_11_4;
  results[k++] =
      -0.175227251100161188e0 * wr_9_8 - 0.999231257726867093e-2 * wr_11_8;
  results[k++] =
      0.159008797648489132e0 * wr_9_8 - 0.689126751110009372e0 * wr_11_8;
  results[k++] =
      0.974990506076170402e-2 * wr_5_4 + 0.454140314672321475e-1 * wr_7_4 +
      0.197588355575345641e0 * wr_9_4 - 0.253621972905810725e0 * wr_11_4;
  results[k++] =
      0.353925356388514276e0 * wr_9_8 + 0.225569678598615099e0 * wr_11_8;
  results[k++] =
      0.671484675092997541e-1 * wr_5_4 + 0.146299207235743655e0 * wr_7_4 +
      0.128759261291842820e0 * wr_9_4 - 0.396981180403501856e0 * wr_11_4;
  results[k++] =
      0.222057795842163755e-1 * wr_3_0 - 0.183392870631320224e0 * wr_5_0 +
      0.317008323695502170e0 * wr_7_0 - 0.209311576956246695e0 * wr_9_0 +
      0.488120616639241517e-1 * wr_11_0;
  results[k++] =
      -0.353815434363780016e0 * wr_9_8 - 0.299491684458719319e0 * wr_11_8;
  results[k++] =
      0.127058307871741134e0 * wr_5_4 + 0.783665550195771796e-1 * wr_7_4 -
      0.144510911738540145e0 * wr_9_4 - 0.295101579704760944e0 * wr_11_4;
  results[k++] =
      0.262071209180479573e0 * wr_3_0 - 0.216439108472423493e0 * wr_5_0 -
      0.209513484819586401e0 * wr_7_0 + 0.282317945253118206e0 * wr_9_0 -
      0.822966958691454184e-1 * wr_11_0;
  results[k++] =
      0.155763720145458741e0 * wr_9_8 + 0.878988202946440525e-1 * wr_11_8;
  results[k++] = -0.171575416736017021e0 * wr_7_4 -
                 0.237056645032753237e0 * wr_9_4 -
                 0.862135115103075931e-1 * wr_11_4;
  results[k++] =
      0.670820393249936910e0 * wr_1_0 - 0.349071949170052253e0 * wr_3_0 -
      0.290616121689256312e0 * wr_5_0 + 0.125029768992617290e0 * wr_7_0 +
      0.116306381137249065e0 * wr_9_0 - 0.553978547164229122e-1 * wr_11_0;
  results[k++] =
      0.135003384577277560e-1 * wr_9_8 + 0.165775475742377707e-1 * wr_11_8;
  results[k++] =
      -0.253958646161127244e0 * wr_5_4 - 0.227226157091534902e0 * wr_7_4 -
      0.850271279814294769e-1 * wr_9_4 + 0.152153681236758886e-1 * wr_11_4;
  results[k++] =
      0.899247403775270412e-1 * wr_11_0 - 0.156652981522611026e0 * wr_9_0 +
      0.688301340842975476e-1 * wr_7_0 - 0.452488687782805430e-2 * wr_5_0;
  results[k++] =
      -0.349102601724189842e-2 * wr_5_4 + 0.553970707472859145e-1 * wr_7_4 +
      0.183944748473846515e0 * wr_9_4 + 0.708327622006200716e0 * wr_11_4;
  results[k++] =
      -0.622069098862783711e-1 * wr_5_0 + 0.350465888372503872e-1 * wr_7_0 +
      0.307660348143378677e0 * wr_9_0 - 0.264913026190244656e0 * wr_11_0;
  results[k++] =
      0.459002883363466381e-1 * wr_5_4 - 0.252673445460554801e-1 * wr_7_4 -
      0.105766190149274101e0 * wr_9_4 - 0.158386871314664075e0 * wr_11_4;
  results[k++] =
      0.212459296096564042e0 * wr_9_8 - 0.374064993996333362e0 * wr_11_8;
  results[k++] =
      -0.533365573293489541e-1 * wr_3_0 + 0.880990853856254762e-1 * wr_5_0 +
      0.670333527760704051e-1 * wr_9_0 - 0.289198856753577027e0 * wr_11_0 +
      0.243657396548189852e0 * wr_7_0;
  results[k++] =
      -0.181976688274470770e0 * wr_5_4 - 0.185194203733271034e0 * wr_7_4 -
      0.202268898834074362e0 * wr_9_4 - 0.206043464814634733e0 * wr_11_4;
  results[k++] =
      0.286563566125364870e0 * wr_9_8 - 0.420446804837746569e-1 * wr_11_8;
  results[k++] =
      -0.113323524863516220e0 * wr_11_0 - 0.200673207099608471e0 * wr_9_0 +
      0.241070450203080276e0 * wr_3_0 + 0.235294117647058824e0 * wr_5_0;
  results[k++] =
      0.287321409346380878e0 * wr_5_4 + 0.269363821262232074e0 * wr_7_4 +
      0.209370407047336785e0 * wr_9_4 + 0.112128515809692472e0 * wr_11_4;
  results[k++] =
      -0.142372241833052247e0 * wr_5_4 + 0.262264656008254139e0 * wr_7_4 -
      0.176649111890693834e0 * wr_9_4 + 0.415698466923422744e-1 * wr_11_4;
  results[k++] =
      -0.163528656797937099e0 * wr_9_8 - 0.451632316029997358e-1 * wr_11_8;
  results[k++] =
      -0.169422005634402560e0 * wr_5_0 + 0.120349643428577659e0 * wr_3_0 -
      0.890098498153584646e-1 * wr_9_0 + 0.118340770800032759e-1 * wr_11_0 +
      0.796627506815691503e0 * wr_1_0 - 0.207869372806185041e0 * wr_7_0;
  results[k++] =
      -0.109118138344140324e0 * wr_5_4 - 0.478588326070790896e-1 * wr_7_4 -
      0.429806054430749004e-2 * wr_9_4 + 0.107580279915605237e-1 * wr_11_4;
  results[k++] =
      0.556975072304672998e-3 * wr_5_4 - 0.362766658935280440e-1 * wr_7_4 +
      0.230586945300829222e0 * wr_9_4 - 0.295978555129074269e0 * wr_11_4;
  results[k++] =
      0.108288330572506648e-1 * wr_5_0 + 0.256234777429330277e-1 * wr_7_0 -
      0.178522640784377646e-1 * wr_9_0 - 0.563633138827344425e0 * wr_11_0;
  results[k++] =
      0.158247586600459299e-1 * wr_5_4 - 0.166240567417715095e0 * wr_7_4 +
      0.301909180317054782e-1 * wr_9_4 + 0.484408618915229616e0 * wr_11_4;
  results[k++] =
      -0.338996095662131020e-1 * wr_5_0 - 0.122776795828180995e0 * wr_7_0 -
      0.263464581808985563e0 * wr_9_0 - 0.378096603836855470e0 * wr_11_0;
  results[k++] =
      -0.290981702251040865e-1 * wr_5_4 + 0.215364746731855903e0 * wr_7_4 -
      0.397140794294012079e0 * wr_9_4 + 0.207092038837540081e0 * wr_11_4;
  results[k++] =
      -0.112780176849934698e0 * wr_5_4 + 0.208680425914764038e0 * wr_7_4 +
      0.286144228530116407e0 * wr_9_4 + 0.102904861431059145e0 * wr_11_4;
  results[k++] =
      -0.711961768737618392e-1 * wr_3_0 - 0.117598854886725784e0 * wr_5_0 -
      0.111319143346636965e0 * wr_7_0 - 0.351525867570269163e-1 * wr_9_0 +
      0.819768432010388583e-1 * wr_11_0;
  results[k++] = -0.171707384262536435e0 * wr_5_4 +
                 0.345674076212737822e0 * wr_7_4 -
                 0.162939144811295045e0 * wr_11_4;
  results[k++] =
      0.320817641647491647e0 * wr_5_4 + 0.435319990722336527e-1 * wr_7_4 -
      0.121628278839997831e0 * wr_9_4 - 0.126847952198174687e0 * wr_11_4;
  results[k++] =
      0.942111439531991576e-1 * wr_3_0 + 0.176834103333646047e0 * wr_5_0 +
      0.224158735377669682e0 * wr_7_0 + 0.211436622066588478e0 * wr_9_0 +
      0.128199833566096241e0 * wr_11_0;
  results[k++] =
      0.945023692040942921e-1 * wr_9_8 - 0.750865390127240203e-1 * wr_11_8;
  results[k++] =
      0.353516359076819487e0 * wr_5_4 - 0.104356087690868911e0 * wr_7_4 -
      0.133495262736757285e0 * wr_9_4 - 0.116683145162633465e-1 * wr_11_4;
  results[k++] =
      -0.361476392822957049e0 * wr_5_4 - 0.209275806371185660e0 * wr_7_4 -
      0.843340376738546000e-1 * wr_9_4 - 0.140725167950191965e-1 * wr_11_4;
  results[k++] =
      0.852597840088207661e0 * wr_1_0 + 0.415039304202351373e0 * wr_3_0 +
      0.235051500979213274e0 * wr_5_0 + 0.113507187896328151e0 * wr_7_0 +
      0.346744911254870408e-1 * wr_9_0 - 0.149807328814568892e-2 * wr_11_0;
  results[k++] = 0.155866170840147026e0 * wr_6_0 -
                 0.181103026276842471e0 * wr_2_0 -
                 0.863445327529221012e-2 * wr_8_0 + wr_0_0 -
                 0.373808010171646535e0 * wr_4_0;
  results[k++] = 0.394028239919264051e0 * wr_4_4 +
                 0.388990681265819567e-1 * wr_6_4 -
                 0.607487635798344176e-1 * wr_8_4;
  results[k++] = 0.323586350296949994e0 * wr_8_8;
  results[k++] =
      -0.275195443150643465e0 * wr_2_0 + 0.341337937513496661e0 * wr_6_0 -
      0.103323934855864133e0 * wr_8_0 - 0.631134069726171982e-1 * wr_4_0;
  results[k++] = 0.244437174127357473e0 * wr_4_4 -
                 0.197071550108048956e0 * wr_6_4 -
                 0.241816999382577148e0 * wr_8_4;
  results[k++] =
      -0.429839486644807210e0 * wr_8_8 - 0.318379471736894860e0 * wr_10_8;
  results[k++] =
      0.398596835934793581e-1 * wr_2_0 + 0.278744862573402968e0 * wr_8_0 -
      0.118838616102203917e0 * wr_4_0 - 0.189034731115445607e0 * wr_6_0 -
      0.437162901856013941e-1 * wr_10_0;
  results[k++] =
      0.628834848715015160e-1 * wr_4_4 - 0.266272512156133260e0 * wr_6_4 -
      0.186032964252407023e0 * wr_8_4 + 0.181093116140491996e0 * wr_10_4;
  results[k++] =
      -0.516725963689822825e-1 * wr_4_4 + 0.122528761897214973e0 * wr_6_4 -
      0.856054896441973734e-1 * wr_8_4 + 0.200869999902783562e-1 * wr_10_4;
  results[k++] =
      0.229703632909895534e0 * wr_8_8 + 0.558540641134991591e-1 * wr_10_8;
  results[k++] =
      0.409933603182543109e-1 * wr_4_0 + 0.196039048785189780e0 * wr_10_0 -
      0.144905551550035997e-1 * wr_6_0 - 0.235040648858845561e0 * wr_8_0;
  results[k++] =
      0.660055809404572673e-2 * wr_4_4 - 0.114033001364603287e0 * wr_6_4 +
      0.515510943903136888e-1 * wr_8_4 + 0.381896419656247089e0 * wr_10_4;
  results[k++] =
      0.526468013353390584e-2 * wr_4_4 + 0.260628471396737041e-1 * wr_6_4 -
      0.776668396274368308e-1 * wr_8_4 + 0.620199950759436499e-1 * wr_10_4 -
      0.160361915468450967e-1 * wr_12_4;
  results[k++] = 0.509148677599930858e-1 * wr_8_8 -
                 0.178947243233732590e0 * wr_10_8 -
                 0.789283689030702451e0 * wr_12_8;
  results[k++] =
      0.138181360429102848e0 * wr_12_0 - 0.266587441316654061e-2 * wr_4_0 +
      0.227651373725197132e-1 * wr_6_0 + 0.477270393518244369e-1 * wr_8_0 -
      0.209876221902858702e0 * wr_10_0;
  results[k++] =
      0.196887873768193905e-3 * wr_4_4 - 0.174052717744917553e-1 * wr_6_4 +
      0.726143779331416286e-1 * wr_8_4 + 0.169883101827247152e0 * wr_10_4 -
      0.428799485912565999e0 * wr_12_4;
  results[k++] = 0.394028239919264051e0 * wr_4_4 +
                 0.388990681265819567e-1 * wr_6_4 -
                 0.607487635798344176e-1 * wr_8_4;
  results[k++] = -0.916859828471453094e-2 * wr_6_0 +
                 0.439821635243760288e0 * wr_2_0 -
                 0.604411729270454708e-1 * wr_8_0 + wr_0_0 +
                 0.160203432930705658e0 * wr_4_0;
  results[k++] = 0.267767508324743712e0 * wr_4_4 -
                 0.385501905131028820e0 * wr_6_4 +
                 0.100339867689432069e0 * wr_8_4;
  results[k++] = -0.399164233853245182e0 * wr_4_4 -
                 0.310323047518315948e0 * wr_6_4 -
                 0.188468082605800085e0 * wr_8_4;
  results[k++] =
      0.112348069209695395e0 * wr_2_0 + 0.278701258920691817e0 * wr_6_0 +
      0.196848492254895043e0 * wr_8_0 + 0.231893464517289210e0 * wr_4_0;
  results[k++] =
      -0.193089896233618812e0 * wr_4_4 - 0.817615815140575740e-1 * wr_6_4 +
      0.323698376040412385e0 * wr_8_4 - 0.589764998132044962e-1 * wr_10_4;
  results[k++] =
      -0.150320280346130276e0 * wr_4_4 - 0.133667740251507244e0 * wr_6_4 -
      0.191222652192233094e0 * wr_8_4 - 0.252522285592070763e0 * wr_10_4;
  results[k++] =
      -0.555816732216004924e-1 * wr_2_0 - 0.994275197013427472e-1 * wr_4_0 -
      0.753132395956716944e-1 * wr_6_0 + 0.475948334932450143e-1 * wr_8_0 +
      0.219454035039939654e0 * wr_10_0;
  results[k++] =
      -0.276069408872328611e0 * wr_8_8 + 0.325313733399212372e0 * wr_10_8;
  results[k++] =
      0.429941990180123009e-1 * wr_4_4 + 0.111659625011089216e0 * wr_6_4 +
      0.159415210676348272e0 * wr_8_4 - 0.279352446821459748e0 * wr_10_4;
  results[k++] =
      -0.216053979249414220e-1 * wr_4_4 + 0.512318490663036430e-1 * wr_6_4 +
      0.123743081629318306e0 * wr_8_4 + 0.171575416736017021e0 * wr_10_4;
  results[k++] =
      -0.208727974054443782e-1 * wr_4_0 - 0.853766561053755653e-1 * wr_6_0 -
      0.197833144552750241e0 * wr_8_0 - 0.299454593408424293e0 * wr_10_0;
  results[k++] = 0.113849105376756987e0 * wr_8_8 +
                 0.220484314427224788e0 * wr_10_8 -
                 0.352978396440891155e0 * wr_12_8;
  results[k++] =
      0.235443653167489671e-2 * wr_4_4 + 0.118935301819380324e-2 * wr_6_4 +
      0.473640908194154167e-1 * wr_8_4 + 0.223918956876966093e0 * wr_10_4 -
      0.251006100792671977e0 * wr_12_4;
  results[k++] =
      -0.843023510157103941e-3 * wr_4_4 + 0.258069156204119241e-1 * wr_6_4 +
      0.712280728553896537e-1 * wr_8_4 + 0.185785121638104470e0 * wr_10_4 +
      0.701021888783866593e0 * wr_12_4;
  results[k++] =
      0.435829887342648020e-2 * wr_4_0 + 0.147688628401655201e-1 * wr_6_0 +
      0.185777248716753911e-1 * wr_8_0 - 0.462155808526929001e-1 * wr_10_0 -
      0.591657237582726803e0 * wr_12_0;
  results[k++] = 0.323586350296949994e0 * wr_8_8;
  results[k++] = 0.267767508324743712e0 * wr_4_4 -
                 0.385501905131028820e0 * wr_6_4 +
                 0.100339867689432069e0 * wr_8_4;
  results[k++] =
      0.222473340732043765e-1 * wr_6_0 - 0.680202496652033930e0 * wr_2_0 +
      0.116930281741124758e-2 * wr_10_0 - 0.165142033977628267e-1 * wr_8_0 +
      wr_0_0 + 0.167832167832167832e0 * wr_4_0;
  results[k++] =
      -0.279280520918890527e0 * wr_8_8 + 0.244599591885161898e0 * wr_10_8;
  results[k++] =
      0.968979472765805478e-1 * wr_4_4 + 0.861635543630333681e-1 * wr_6_4 -
      0.212128783495645429e0 * wr_8_4 + 0.369950854558370666e-1 * wr_10_4;
  results[k++] =
      0.410622223179715064e0 * wr_4_0 - 0.187165775401069519e0 * wr_6_0 -
      0.285924225838759753e0 * wr_2_0 + 0.965559034444467654e-2 * wr_8_0 +
      0.927515878238567173e-2 * wr_10_0;
  results[k++] =
      0.284252883151198365e-1 * wr_8_8 + 0.337748255956127761e0 * wr_10_8;
  results[k++] =
      -0.845764589061949640e-1 * wr_4_4 + 0.258606682243545565e0 * wr_6_4 -
      0.442474736329024621e-1 * wr_8_4 - 0.104690209063983513e0 * wr_10_4;
  results[k++] = -0.983605001664814825e0 * wr_12_12;
  results[k++] =
      -0.280758633400561614e0 * wr_6_0 + 0.154796679848173692e0 * wr_8_0 -
      0.188076104070710153e-1 * wr_10_0 - 0.229552952908612533e-1 * wr_2_0 +
      0.180031026033474365e0 * wr_4_0 - 0.570591836177075323e-2 * wr_12_0;
  results[k++] = 0.117663580166551069e0 * wr_8_8 -
                 0.176831549491079987e0 * wr_10_8 -
                 0.301892873682766132e0 * wr_12_8;
  results[k++] =
      0.174802704500516155e-1 * wr_4_4 - 0.182869032718592727e0 * wr_6_4 +
      0.334399047690157038e0 * wr_8_4 - 0.100071884224578776e0 * wr_10_4 -
      0.628514958290151321e-1 * wr_12_4;
  results[k++] = -0.567884612487443140e0 * wr_12_12;
  results[k++] =
      -0.221358179119524027e-1 * wr_4_0 + 0.112016598604741903e0 * wr_6_0 -
      0.176131836660457966e0 * wr_8_0 + 0.113808060762078170e0 * wr_10_0 -
      0.265596045579718760e-1 * wr_12_0;
  results[k++] = 0.433606607669281362e-1 * wr_8_8 -
                 0.346558668630361719e0 * wr_10_8 +
                 0.455120631312678830e0 * wr_12_8;
  results[k++] =
      -0.117073216542638478e-2 * wr_4_4 + 0.397420819869103583e-1 * wr_6_4 -
      0.207253770483833586e0 * wr_8_4 + 0.329847097051298856e0 * wr_10_4 -
      0.159357627347831256e0 * wr_12_4;
  results[k++] =
      -0.275195443150643465e0 * wr_2_0 + 0.341337937513496661e0 * wr_6_0 -
      0.103323934855864133e0 * wr_8_0 - 0.631134069726171982e-1 * wr_4_0;
  results[k++] = -0.399164233853245182e0 * wr_4_4 -
                 0.310323047518315948e0 * wr_6_4 -
                 0.188468082605800085e0 * wr_8_4;
  results[k++] =
      -0.279280520918890527e0 * wr_8_8 + 0.244599591885161898e0 * wr_10_8;
  results[k++] =
      0.430115125415284612e-1 * wr_6_0 + 0.453468331101355953e-1 * wr_2_0 +
      0.526186267835061409e-1 * wr_10_0 - 0.241107369607337269e0 * wr_8_0 +
      wr_0_0 - 0.167832167832167832e0 * wr_4_0;
  results[k++] =
      0.216670396990624721e0 * wr_4_4 - 0.333957112213818085e-1 * wr_6_4 +
      0.189733751952239458e-1 * wr_8_4 + 0.248170577737996426e0 * wr_10_4;
  results[k++] =
      -0.544302831573704368e-1 * wr_8_8 + 0.246936583739864682e0 * wr_10_8;
  results[k++] =
      0.214440462283326638e0 * wr_4_0 - 0.977441383708463797e-1 * wr_6_0 +
      0.268774302680777901e0 * wr_2_0 - 0.386589182826761630e-1 * wr_8_0 -
      0.159845192046005622e0 * wr_10_0;
  results[k++] =
      0.264766195974657227e0 * wr_4_4 - 0.826088744188936729e-1 * wr_6_4 -
      0.329801196252664935e-1 * wr_8_4 + 0.260848072508101109e0 * wr_10_4;
  results[k++] =
      0.142797155635060335e0 * wr_4_4 - 0.320114094187738376e0 * wr_6_4 +
      0.195122973451176611e0 * wr_8_4 - 0.247724834192671711e-1 * wr_10_4 -
      0.769385874946465885e-2 * wr_12_4;
  results[k++] = 0.349046586086974118e0 * wr_8_8 +
                 0.129817122465696836e0 * wr_10_8 -
                 0.610608401746661523e0 * wr_12_8;
  results[k++] =
      -0.464293707837052972e-1 * wr_2_0 - 0.133281817542502277e0 * wr_10_0 +
      0.620370786397855503e-1 * wr_4_0 - 0.126948669366166871e0 * wr_12_0 +
      0.227144918428831734e0 * wr_6_0 + 0.834911202107241767e-1 * wr_8_0;
  results[k++] =
      0.729625362506063416e-1 * wr_4_4 - 0.227819941962826482e0 * wr_6_4 -
      0.224321700673915551e0 * wr_8_4 - 0.340979102114509676e-1 * wr_10_4 -
      0.421620651483667001e0 * wr_12_4;
  results[k++] =
      -0.419997614835132868e-1 * wr_4_4 - 0.264025654929548526e-1 * wr_6_4 +
      0.212791457911221035e0 * wr_8_4 - 0.193082399603227469e0 * wr_10_4 +
      0.524162067573024633e-1 * wr_12_4;
  results[k++] = 0.180524826465798776e0 * wr_8_8 +
                 0.332962798757572720e-1 * wr_10_8 -
                 0.437265758704229947e-1 * wr_12_8;
  results[k++] =
      -0.358740222602056405e-1 * wr_6_0 + 0.112814663322953191e0 * wr_8_0 +
      0.273358119869531330e0 * wr_10_0 - 0.298556419145017211e0 * wr_12_0 -
      0.319011088968586535e-1 * wr_4_0;
  results[k++] =
      0.628280809281342104e-2 * wr_4_4 - 0.938029967173293278e-1 * wr_6_4 -
      0.257463066330550766e-1 * wr_8_4 + 0.196682808316713247e0 * wr_10_4 +
      0.451357017478251602e0 * wr_12_4;
  results[k++] = 0.244437174127357473e0 * wr_4_4 -
                 0.197071550108048956e0 * wr_6_4 -
                 0.241816999382577148e0 * wr_8_4;
  results[k++] =
      0.112348069209695395e0 * wr_2_0 + 0.278701258920691817e0 * wr_6_0 +
      0.196848492254895043e0 * wr_8_0 + 0.231893464517289210e0 * wr_4_0;
  results[k++] =
      0.968979472765805478e-1 * wr_4_4 + 0.861635543630333681e-1 * wr_6_4 -
      0.212128783495645429e0 * wr_8_4 + 0.369950854558370666e-1 * wr_10_4;
  results[k++] =
      0.216670396990624721e0 * wr_4_4 - 0.333957112213818085e-1 * wr_6_4 +
      0.189733751952239458e-1 * wr_8_4 + 0.248170577737996426e0 * wr_10_4;
  results[k++] =
      -0.177978672585635012e-1 * wr_6_0 + 0.408121497991220357e0 * wr_2_0 +
      0.245553591656361991e0 * wr_10_0 + 0.462397695137359148e-1 * wr_8_0 +
      wr_0_0 + 0.111888111888111888e0 * wr_4_0;
  results[k++] =
      -0.331901991523271512e0 * wr_4_4 + 0.103555704444048580e0 * wr_6_4 +
      0.413427678862350713e-1 * wr_8_4 + 0.165400720163478844e0 * wr_10_4;
  results[k++] =
      0.387578024948960431e0 * wr_4_4 + 0.233792219057624199e0 * wr_6_4 +
      0.354038312629638140e-1 * wr_8_4 - 0.205607488952767040e0 * wr_10_4;
  results[k++] =
      0.102004335063890890e0 * wr_2_0 + 0.195320965266387935e0 * wr_4_0 +
      0.190777023532801006e0 * wr_6_0 + 0.344466115050293938e-1 * wr_8_0 -
      0.218390108409436855e0 * wr_10_0;
  results[k++] = 0.256891331627355993e0 * wr_8_8 -
                 0.163787683138832981e0 * wr_10_8 -
                 0.138275574030696342e0 * wr_12_8;
  results[k++] =
      0.194023127840100438e0 * wr_4_4 + 0.191584856781810269e0 * wr_6_4 -
      0.220933261672772951e-1 * wr_8_4 - 0.141849388217783692e0 * wr_10_4 -
      0.158550748100677520e0 * wr_12_4;
  results[k++] =
      0.146250435385630013e0 * wr_4_4 + 0.101479067702335753e0 * wr_6_4 +
      0.113243604141144727e0 * wr_8_4 + 0.797391860101438238e-1 * wr_10_4 -
      0.525853341680101390e0 * wr_12_4;
  results[k++] =
      -0.579075993853723820e-1 * wr_2_0 - 0.111296227154540820e0 * wr_6_0 -
      0.390493958333109030e-1 * wr_8_0 - 0.111014627348292370e0 * wr_4_0 +
      0.347926672416669998e-1 * wr_10_0 - 0.474998426475041041e0 * wr_12_0;
  results[k++] = -0.247193799112559010e0 * wr_8_8 -
                 0.141844294425225526e0 * wr_10_8 +
                 0.431100575400451815e0 * wr_12_8;
  results[k++] =
      0.306722890324758227e-1 * wr_4_4 + 0.723064034824943935e-1 * wr_6_4 +
      0.171398061091745438e0 * wr_8_4 + 0.157794048534475185e0 * wr_10_4 -
      0.374683811716415964e0 * wr_12_4;
  results[k++] =
      0.164736617977443768e-1 * wr_4_4 - 0.466017219198997952e-1 * wr_6_4 -
      0.115376258873559208e0 * wr_8_4 - 0.187529699677747931e0 * wr_10_4 -
      0.221971047340948528e0 * wr_12_4;
  results[k++] =
      -0.141943731480154114e-1 * wr_4_0 - 0.598579417640219506e-1 * wr_6_0 -
      0.147901271370562473e0 * wr_8_0 - 0.267587053849099947e0 * wr_10_0 -
      0.347920682308100537e0 * wr_12_0;
  results[k++] =
      -0.429839486644807210e0 * wr_8_8 - 0.318379471736894860e0 * wr_10_8;
  results[k++] =
      -0.193089896233618812e0 * wr_4_4 - 0.817615815140575740e-1 * wr_6_4 +
      0.323698376040412385e0 * wr_8_4 - 0.589764998132044962e-1 * wr_10_4;
  results[k++] =
      0.410622223179715064e0 * wr_4_0 - 0.187165775401069519e0 * wr_6_0 -
      0.285924225838759753e0 * wr_2_0 + 0.965559034444467654e-2 * wr_8_0 +
      0.927515878238567173e-2 * wr_10_0;
  results[k++] =
      -0.544302831573704368e-1 * wr_8_8 + 0.246936583739864682e0 * wr_10_8;
  results[k++] =
      -0.331901991523271512e0 * wr_4_4 + 0.103555704444048580e0 * wr_6_4 +
      0.413427678862350713e-1 * wr_8_4 + 0.165400720163478844e0 * wr_10_4;
  results[k++] =
      -0.761093007767518145e-1 * wr_6_0 - 0.353705298259057644e0 * wr_2_0 -
      0.323846041169984655e-1 * wr_10_0 + 0.153346174407797676e0 * wr_8_0 +
      wr_0_0 - 0.128342245989304813e0 * wr_4_0 -
      0.670115185662365633e-2 * wr_12_0;
  results[k++] = -0.270863348427174461e0 * wr_8_8 -
                 0.240665742104417860e-1 * wr_10_8 -
                 0.457721320634465568e0 * wr_12_8;
  results[k++] =
      -0.132174199070229876e0 * wr_4_4 - 0.630960667448160658e-1 * wr_6_4 -
      0.140544090351126577e0 * wr_8_4 + 0.186495018191322849e0 * wr_10_4 +
      0.104388948261819256e0 * wr_12_4;
  results[k++] = -0.709287653661066483e0 * wr_12_12;
  results[k++] =
      -0.122256470749295139e0 * wr_8_0 - 0.659281424779879009e-1 * wr_10_0 -
      0.289682729751160547e0 * wr_2_0 + 0.142886090212785821e0 * wr_4_0 +
      0.231380491143982060e0 * wr_6_0 + 0.382069651358124518e-1 * wr_12_0;
  results[k++] = 0.101010017034563705e0 * wr_8_8 +
                 0.885521137235884717e-1 * wr_10_8 +
                 0.528695257369330553e0 * wr_12_8;
  results[k++] =
      0.124862852806549130e0 * wr_4_4 - 0.301414251045205940e0 * wr_6_4 +
      0.114827896467922771e-1 * wr_8_4 - 0.150339295751672782e0 * wr_10_4 +
      0.265462455114175133e0 * wr_12_4;
  results[k++] = -0.409507417774094783e0 * wr_12_12;
  results[k++] =
      0.231154238558825858e-1 * wr_2_0 + 0.288660167418604205e0 * wr_8_0 -
      0.268299752956134631e0 * wr_10_0 - 0.125418584509237810e0 * wr_4_0 +
      0.727791322282591577e-1 * wr_12_0;
  results[k++] = 0.156339085733159101e0 * wr_8_8 -
                 0.336413282612427652e0 * wr_10_8 -
                 0.196915292726328621e0 * wr_12_8;
  results[k++] =
      -0.211056742613990988e-1 * wr_4_4 + 0.191056152529998768e0 * wr_6_4 -
      0.203799299048920114e0 * wr_8_4 - 0.228707811823347087e0 * wr_10_4 +
      0.252811722477110759e0 * wr_12_4;
  results[k++] =
      0.398596835934793581e-1 * wr_2_0 + 0.278744862573402968e0 * wr_8_0 -
      0.118838616102203917e0 * wr_4_0 - 0.189034731115445607e0 * wr_6_0 -
      0.437162901856013941e-1 * wr_10_0;
  results[k++] =
      -0.150320280346130276e0 * wr_4_4 - 0.133667740251507244e0 * wr_6_4 -
      0.191222652192233094e0 * wr_8_4 - 0.252522285592070763e0 * wr_10_4;
  results[k++] =
      0.284252883151198365e-1 * wr_8_8 + 0.337748255956127761e0 * wr_10_8;
  results[k++] =
      0.214440462283326638e0 * wr_4_0 - 0.977441383708463797e-1 * wr_6_0 +
      0.268774302680777901e0 * wr_2_0 - 0.386589182826761630e-1 * wr_8_0 -
      0.159845192046005622e0 * wr_10_0;
  results[k++] =
      0.387578024948960431e0 * wr_4_4 + 0.233792219057624199e0 * wr_6_4 +
      0.354038312629638140e-1 * wr_8_4 - 0.205607488952767040e0 * wr_10_4;
  results[k++] = -0.270863348427174461e0 * wr_8_8 -
                 0.240665742104417860e-1 * wr_10_8 -
                 0.457721320634465568e0 * wr_12_8;
  results[k++] =
      0.595036351527332366e-1 * wr_6_0 + 0.160775135572298929e0 * wr_2_0 -
      0.188359432109072708e0 * wr_10_0 + 0.529741329772391975e-1 * wr_8_0 +
      wr_0_0 - 0.105007292173067574e0 * wr_4_0 -
      0.122854450704767033e0 * wr_12_0;
  results[k++] =
      -0.216084696285294710e0 * wr_4_4 + 0.409335177846535740e-1 * wr_6_4 +
      0.547067129732468643e-1 * wr_8_4 - 0.410669465730844484e-1 * wr_10_4 +
      0.446966773021769768e0 * wr_12_4;
  results[k++] =
      0.177561045089668359e0 * wr_4_4 - 0.344431377219889772e0 * wr_6_4 +
      0.122468137104083483e0 * wr_8_4 + 0.583063050343205049e-1 * wr_10_4 -
      0.318715254695662513e-1 * wr_12_4;
  results[k++] = -0.156484045509997089e0 * wr_8_8 +
                 0.139262895366277987e0 * wr_10_8 +
                 0.361346104766516705e0 * wr_12_8;
  results[k++] =
      0.264959032582460578e0 * wr_4_0 + 0.407333085835425103e-1 * wr_6_0 -
      0.325544867296283852e0 * wr_12_0 + 0.114294419996104145e0 * wr_10_0 +
      0.224387277602029723e0 * wr_2_0 - 0.823473522048894390e-1 * wr_8_0;
  results[k++] =
      -0.272175677409703625e0 * wr_4_4 + 0.439970017863616960e-1 * wr_6_4 +
      0.737495518324674036e-1 * wr_8_4 - 0.123726924894873579e0 * wr_10_4 -
      0.415844753273784377e0 * wr_12_4;
  results[k++] =
      -0.131804893517285963e0 * wr_4_4 + 0.994287741776284474e-1 * wr_6_4 +
      0.259259043722046845e0 * wr_8_4 - 0.302968448163156376e0 * wr_10_4 +
      0.886595265359017009e-1 * wr_12_4;
  results[k++] = -0.339917009370036423e0 * wr_8_8 -
                 0.261228425384549983e0 * wr_10_8 -
                 0.225047414927152935e0 * wr_12_8;
  results[k++] =
      -0.354384955969167018e-1 * wr_2_0 + 0.212422987577782883e0 * wr_8_0 +
      0.157613284548269068e0 * wr_6_0 - 0.118780689545176191e-1 * wr_10_0 +
      0.143018576184885278e-1 * wr_4_0 - 0.270671146362399627e0 * wr_12_0;
  results[k++] =
      -0.591506824619384263e-1 * wr_4_4 + 0.167329139647687793e0 * wr_6_4 +
      0.242393462560398694e0 * wr_8_4 + 0.178048790025967987e0 * wr_10_4 +
      0.894607541000394046e-2 * wr_12_4;
  results[k++] =
      0.628834848715015160e-1 * wr_4_4 - 0.266272512156133260e0 * wr_6_4 -
      0.186032964252407023e0 * wr_8_4 + 0.181093116140491996e0 * wr_10_4;
  results[k++] =
      -0.555816732216004924e-1 * wr_2_0 - 0.994275197013427472e-1 * wr_4_0 -
      0.753132395956716944e-1 * wr_6_0 + 0.475948334932450143e-1 * wr_8_0 +
      0.219454035039939654e0 * wr_10_0;
  results[k++] =
      -0.845764589061949640e-1 * wr_4_4 + 0.258606682243545565e0 * wr_6_4 -
      0.442474736329024621e-1 * wr_8_4 - 0.104690209063983513e0 * wr_10_4;
  results[k++] =
      0.264766195974657227e0 * wr_4_4 - 0.826088744188936729e-1 * wr_6_4 -
      0.329801196252664935e-1 * wr_8_4 + 0.260848072508101109e0 * wr_10_4;
  results[k++] =
      0.102004335063890890e0 * wr_2_0 + 0.195320965266387935e0 * wr_4_0 +
      0.190777023532801006e0 * wr_6_0 + 0.344466115050293938e-1 * wr_8_0 -
      0.218390108409436855e0 * wr_10_0;
  results[k++] =
      -0.132174199070229876e0 * wr_4_4 - 0.630960667448160658e-1 * wr_6_4 -
      0.140544090351126577e0 * wr_8_4 + 0.186495018191322849e0 * wr_10_4 +
      0.104388948261819256e0 * wr_12_4;
  results[k++] =
      -0.216084696285294710e0 * wr_4_4 + 0.409335177846535740e-1 * wr_6_4 +
      0.547067129732468643e-1 * wr_8_4 - 0.410669465730844484e-1 * wr_10_4 +
      0.446966773021769768e0 * wr_12_4;
  results[k++] =
      -0.276761093733642962e-1 * wr_6_0 + 0.418015352487977216e0 * wr_2_0 +
      0.515510024719567409e-1 * wr_10_0 - 0.278811226195995775e-1 * wr_8_0 +
      wr_0_0 + 0.124453087019931940e0 * wr_4_0 -
      0.442276022537161318e0 * wr_12_0;
  results[k++] = -0.786754998823386079e-1 * wr_8_8 -
                 0.188105965330072672e0 * wr_10_8 +
                 0.279498490433600812e0 * wr_12_8;
  results[k++] =
      0.353165479751234505e0 * wr_4_4 + 0.266415076075411925e-1 * wr_6_4 -
      0.906684024257380835e-1 * wr_8_4 + 0.115970111459801171e0 * wr_10_4 -
      0.338794203901537611e0 * wr_12_4;
  results[k++] =
      -0.372691895303859840e0 * wr_4_4 - 0.249014220190182366e0 * wr_6_4 -
      0.103229860258265967e0 * wr_8_4 + 0.119051940616717151e0 * wr_10_4 +
      0.334059075956058902e0 * wr_12_4;
  results[k++] =
      0.819346490398702645e-1 * wr_2_0 + 0.165331183625498673e0 * wr_4_0 +
      0.185921266275208658e0 * wr_6_0 - 0.356616534596401006e0 * wr_12_0 +
      0.939656299030015062e-1 * wr_8_0 - 0.119875465587132309e0 * wr_10_0;
  results[k++] = 0.317963247249875956e0 * wr_8_8 -
                 0.651618178316951212e-1 * wr_10_8 -
                 0.308067191135327536e0 * wr_12_8;
  results[k++] =
      0.140905358126258802e0 * wr_4_4 + 0.186014203679800799e0 * wr_6_4 +
      0.132280706731437928e0 * wr_8_4 - 0.107962298288486859e0 * wr_10_4 -
      0.274149631506547829e0 * wr_12_4;
  results[k++] =
      -0.105949643925370352e0 * wr_4_4 - 0.666037690188529811e-1 * wr_6_4 -
      0.789401513656923614e-1 * wr_8_4 - 0.120940259093792649e0 * wr_10_4 -
      0.157327038175406900e0 * wr_12_4;
  results[k++] =
      -0.415484503474404721e-1 * wr_2_0 - 0.864746031917239030e-1 * wr_8_0 -
      0.875643547223788952e-1 * wr_4_0 - 0.109992504465904240e0 * wr_6_0 -
      0.945590424599582920e-2 * wr_10_0 + 0.895054733000829664e-1 * wr_12_0;
  results[k++] =
      -0.516725963689822825e-1 * wr_4_4 + 0.122528761897214973e0 * wr_6_4 -
      0.856054896441973734e-1 * wr_8_4 + 0.200869999902783562e-1 * wr_10_4;
  results[k++] =
      -0.276069408872328611e0 * wr_8_8 + 0.325313733399212372e0 * wr_10_8;
  results[k++] = -0.983605001664814825e0 * wr_12_12;
  results[k++] =
      0.142797155635060335e0 * wr_4_4 - 0.320114094187738376e0 * wr_6_4 +
      0.195122973451176611e0 * wr_8_4 - 0.247724834192671711e-1 * wr_10_4 -
      0.769385874946465885e-2 * wr_12_4;
  results[k++] = 0.256891331627355993e0 * wr_8_8 -
                 0.163787683138832981e0 * wr_10_8 -
                 0.138275574030696342e0 * wr_12_8;
  results[k++] = -0.709287653661066483e0 * wr_12_12;
  results[k++] =
      0.177561045089668359e0 * wr_4_4 - 0.344431377219889772e0 * wr_6_4 +
      0.122468137104083483e0 * wr_8_4 + 0.583063050343205049e-1 * wr_10_4 -
      0.318715254695662513e-1 * wr_12_4;
  results[k++] = -0.786754998823386079e-1 * wr_8_8 -
                 0.188105965330072672e0 * wr_10_8 +
                 0.279498490433600812e0 * wr_12_8;
  results[k++] =
      -0.279067436181423320e-1 * wr_6_0 - 0.782623792124926395e0 * wr_2_0 +
      0.143417532518136062e-1 * wr_10_0 - 0.319125822416227597e-1 * wr_8_0 +
      wr_0_0 + 0.308823529411764706e0 * wr_4_0 -
      0.199892313904967021e-2 * wr_12_0;
  results[k++] = -0.344580954870623124e0 * wr_12_12;
  results[k++] =
      0.816662028846091687e-1 * wr_4_4 - 0.495048102992903486e-1 * wr_6_4 -
      0.187757168745195031e0 * wr_8_4 + 0.207831749572918456e0 * wr_10_4 -
      0.599676941714901063e-1 * wr_12_4;
  results[k++] = -0.660653217438728697e-1 * wr_8_8 +
                 0.367248109648311819e0 * wr_10_8 -
                 0.288041187926713755e0 * wr_12_8;
  results[k++] =
      -0.193649167310370844e0 * wr_2_0 + 0.382070031081369990e0 * wr_4_0 -
      0.338351284742947271e0 * wr_6_0 + 0.165822641529632739e0 * wr_8_0 -
      0.440721126321500989e-1 * wr_10_0 + 0.500100818715202825e-2 * wr_12_0;
  results[k++] = 0.106929137073877639e0 * wr_12_12;
  results[k++] =
      -0.386937361458983477e-1 * wr_4_4 + 0.229864433512654768e0 * wr_6_4 -
      0.373632048256353542e0 * wr_8_4 + 0.244590298755523968e0 * wr_10_4 -
      0.574572096538888089e-1 * wr_12_4;
  results[k++] = 0.781695428665795503e-1 * wr_8_8 -
                 0.256982368662271122e0 * wr_10_8 +
                 0.164096077271940518e0 * wr_12_8;
  results[k++] =
      0.229703632909895534e0 * wr_8_8 + 0.558540641134991591e-1 * wr_10_8;
  results[k++] =
      0.429941990180123009e-1 * wr_4_4 + 0.111659625011089216e0 * wr_6_4 +
      0.159415210676348272e0 * wr_8_4 - 0.279352446821459748e0 * wr_10_4;
  results[k++] =
      -0.280758633400561614e0 * wr_6_0 + 0.154796679848173692e0 * wr_8_0 -
      0.188076104070710153e-1 * wr_10_0 - 0.229552952908612533e-1 * wr_2_0 +
      0.180031026033474365e0 * wr_4_0 - 0.570591836177075323e-2 * wr_12_0;
  results[k++] = 0.349046586086974118e0 * wr_8_8 +
                 0.129817122465696836e0 * wr_10_8 -
                 0.610608401746661523e0 * wr_12_8;
  results[k++] =
      0.194023127840100438e0 * wr_4_4 + 0.191584856781810269e0 * wr_6_4 -
      0.220933261672772951e-1 * wr_8_4 - 0.141849388217783692e0 * wr_10_4 -
      0.158550748100677520e0 * wr_12_4;
  results[k++] =
      -0.122256470749295139e0 * wr_8_0 - 0.659281424779879009e-1 * wr_10_0 -
      0.289682729751160547e0 * wr_2_0 + 0.142886090212785821e0 * wr_4_0 +
      0.231380491143982060e0 * wr_6_0 + 0.382069651358124518e-1 * wr_12_0;
  results[k++] = -0.156484045509997089e0 * wr_8_8 +
                 0.139262895366277987e0 * wr_10_8 +
                 0.361346104766516705e0 * wr_12_8;
  results[k++] =
      0.353165479751234505e0 * wr_4_4 + 0.266415076075411925e-1 * wr_6_4 -
      0.906684024257380835e-1 * wr_8_4 + 0.115970111459801171e0 * wr_10_4 -
      0.338794203901537611e0 * wr_12_4;
  results[k++] = -0.344580954870623124e0 * wr_12_12;
  results[k++] =
      0.107333629300547431e-1 * wr_6_0 - 0.163404967586523093e0 * wr_2_0 +
      0.257048346744043865e0 * wr_10_0 - 0.145535402530477421e0 * wr_8_0 +
      wr_0_0 - 0.268099547511312217e0 * wr_4_0 -
      0.893804203603638252e-1 * wr_12_0;
  results[k++] = -0.179930482533066420e0 * wr_8_8 -
                 0.125952244791846758e0 * wr_10_8 +
                 0.453259189437277095e-1 * wr_12_8;
  results[k++] =
      0.222419855134268289e0 * wr_4_4 - 0.293624407088230836e-1 * wr_6_4 +
      0.138635685736251937e0 * wr_8_4 + 0.377356491012773604e-1 * wr_10_4 -
      0.311403374424270248e0 * wr_12_4;
  results[k++] = -0.198943907052172547e0 * wr_12_12;
  results[k++] =
      -0.617033019930283577e-1 * wr_8_0 + 0.253800522537456089e0 * wr_10_0 +
      0.338499677854773947e-1 * wr_4_0 - 0.899433148599197519e-1 * wr_12_0 +
      0.223035642799942793e0 * wr_2_0 - 0.293771182607064129e0 * wr_6_0;
  results[k++] = 0.278488886157896097e0 * wr_8_8 -
                 0.721328400577933941e-1 * wr_10_8 -
                 0.116922607211205258e0 * wr_12_8;
  results[k++] =
      -0.137851330395406567e0 * wr_4_4 + 0.319769201546237394e0 * wr_6_4 +
      0.137144815270885202e0 * wr_8_4 - 0.147116759618800787e0 * wr_10_4 -
      0.120337952295340908e0 * wr_12_4;
  results[k++] =
      0.409933603182543109e-1 * wr_4_0 + 0.196039048785189780e0 * wr_10_0 -
      0.144905551550035997e-1 * wr_6_0 - 0.235040648858845561e0 * wr_8_0;
  results[k++] =
      -0.216053979249414220e-1 * wr_4_4 + 0.512318490663036430e-1 * wr_6_4 +
      0.123743081629318306e0 * wr_8_4 + 0.171575416736017021e0 * wr_10_4;
  results[k++] = 0.117663580166551069e0 * wr_8_8 -
                 0.176831549491079987e0 * wr_10_8 -
                 0.301892873682766132e0 * wr_12_8;
  results[k++] =
      -0.464293707837052972e-1 * wr_2_0 - 0.133281817542502277e0 * wr_10_0 +
      0.620370786397855503e-1 * wr_4_0 - 0.126948669366166871e0 * wr_12_0 +
      0.227144918428831734e0 * wr_6_0 + 0.834911202107241767e-1 * wr_8_0;
  results[k++] =
      0.146250435385630013e0 * wr_4_4 + 0.101479067702335753e0 * wr_6_4 +
      0.113243604141144727e0 * wr_8_4 + 0.797391860101438238e-1 * wr_10_4 -
      0.525853341680101390e0 * wr_12_4;
  results[k++] = 0.101010017034563705e0 * wr_8_8 +
                 0.885521137235884717e-1 * wr_10_8 +
                 0.528695257369330553e0 * wr_12_8;
  results[k++] =
      0.264959032582460578e0 * wr_4_0 + 0.407333085835425103e-1 * wr_6_0 -
      0.325544867296283852e0 * wr_12_0 + 0.114294419996104145e0 * wr_10_0 +
      0.224387277602029723e0 * wr_2_0 - 0.823473522048894390e-1 * wr_8_0;
  results[k++] =
      -0.372691895303859840e0 * wr_4_4 - 0.249014220190182366e0 * wr_6_4 -
      0.103229860258265967e0 * wr_8_4 + 0.119051940616717151e0 * wr_10_4 +
      0.334059075956058902e0 * wr_12_4;
  results[k++] =
      0.816662028846091687e-1 * wr_4_4 - 0.495048102992903486e-1 * wr_6_4 -
      0.187757168745195031e0 * wr_8_4 + 0.207831749572918456e0 * wr_10_4 -
      0.599676941714901063e-1 * wr_12_4;
  results[k++] = -0.179930482533066420e0 * wr_8_8 -
                 0.125952244791846758e0 * wr_10_8 +
                 0.453259189437277095e-1 * wr_12_8;
  results[k++] =
      -0.384449544949233525e-1 * wr_6_0 + 0.249407582105745773e0 * wr_2_0 -
      0.250586677696523448e-1 * wr_10_0 + 0.109063879968622838e0 * wr_8_0 +
      wr_0_0 - 0.768202385849444673e-1 * wr_4_0 -
      0.304692998480856874e0 * wr_12_0;
  results[k++] =
      0.312956511384181623e0 * wr_4_4 + 0.328829762047506968e-1 * wr_6_4 -
      0.603019740512490067e-1 * wr_8_4 - 0.238390455789426587e-1 * wr_10_4 +
      0.938916501287144907e-1 * wr_12_4;
  results[k++] =
      -0.222278591318725993e0 * wr_4_4 + 0.314397771077243048e0 * wr_6_4 +
      0.108401651917320340e0 * wr_8_4 - 0.267078336863974189e0 * wr_10_4 +
      0.884793756188435767e-1 * wr_12_4;
  results[k++] = 0.390847714332897752e0 * wr_8_8 +
                 0.236957768506769476e0 * wr_10_8 +
                 0.118654086642787759e0 * wr_12_8;
  results[k++] =
      0.158918539009192778e0 * wr_2_0 + 0.149513857826345176e0 * wr_6_0 -
      0.732752732677995289e-1 * wr_8_0 - 0.198375225837664903e0 * wr_10_0 +
      0.249229238447844365e0 * wr_4_0 - 0.861858144808332131e-1 * wr_12_0;
  results[k++] =
      0.249382439876115418e0 * wr_4_4 - 0.141093719872337454e-1 * wr_6_4 -
      0.142700515826236760e0 * wr_8_4 - 0.177429488010353060e0 * wr_10_4 -
      0.119323291116460426e0 * wr_12_4;
  results[k++] =
      0.660055809404572673e-2 * wr_4_4 - 0.114033001364603287e0 * wr_6_4 +
      0.515510943903136888e-1 * wr_8_4 + 0.381896419656247089e0 * wr_10_4;
  results[k++] =
      -0.208727974054443782e-1 * wr_4_0 - 0.853766561053755653e-1 * wr_6_0 -
      0.197833144552750241e0 * wr_8_0 - 0.299454593408424293e0 * wr_10_0;
  results[k++] =
      0.174802704500516155e-1 * wr_4_4 - 0.182869032718592727e0 * wr_6_4 +
      0.334399047690157038e0 * wr_8_4 - 0.100071884224578776e0 * wr_10_4 -
      0.628514958290151321e-1 * wr_12_4;
  results[k++] =
      0.729625362506063416e-1 * wr_4_4 - 0.227819941962826482e0 * wr_6_4 -
      0.224321700673915551e0 * wr_8_4 - 0.340979102114509676e-1 * wr_10_4 -
      0.421620651483667001e0 * wr_12_4;
  results[k++] =
      -0.579075993853723820e-1 * wr_2_0 - 0.111296227154540820e0 * wr_6_0 -
      0.390493958333109030e-1 * wr_8_0 - 0.111014627348292370e0 * wr_4_0 +
      0.347926672416669998e-1 * wr_10_0 - 0.474998426475041041e0 * wr_12_0;
  results[k++] =
      0.124862852806549130e0 * wr_4_4 - 0.301414251045205940e0 * wr_6_4 +
      0.114827896467922771e-1 * wr_8_4 - 0.150339295751672782e0 * wr_10_4 +
      0.265462455114175133e0 * wr_12_4;
  results[k++] =
      -0.272175677409703625e0 * wr_4_4 + 0.439970017863616960e-1 * wr_6_4 +
      0.737495518324674036e-1 * wr_8_4 - 0.123726924894873579e0 * wr_10_4 -
      0.415844753273784377e0 * wr_12_4;
  results[k++] =
      0.819346490398702645e-1 * wr_2_0 + 0.165331183625498673e0 * wr_4_0 +
      0.185921266275208658e0 * wr_6_0 - 0.356616534596401006e0 * wr_12_0 +
      0.939656299030015062e-1 * wr_8_0 - 0.119875465587132309e0 * wr_10_0;
  results[k++] = -0.660653217438728697e-1 * wr_8_8 +
                 0.367248109648311819e0 * wr_10_8 -
                 0.288041187926713755e0 * wr_12_8;
  results[k++] =
      0.222419855134268289e0 * wr_4_4 - 0.293624407088230836e-1 * wr_6_4 +
      0.138635685736251937e0 * wr_8_4 + 0.377356491012773604e-1 * wr_10_4 -
      0.311403374424270248e0 * wr_12_4;
  results[k++] =
      0.312956511384181623e0 * wr_4_4 + 0.328829762047506968e-1 * wr_6_4 -
      0.603019740512490067e-1 * wr_8_4 - 0.238390455789426587e-1 * wr_10_4 +
      0.938916501287144907e-1 * wr_12_4;
  results[k++] =
      0.243940066592153251e-1 * wr_6_0 + 0.455813856951880208e0 * wr_2_0 -
      0.425524547031832271e-2 * wr_10_0 - 0.438359646176136807e-1 * wr_8_0 +
      wr_0_0 + 0.191587823940765117e0 * wr_4_0 +
      0.103658442782147184e0 * wr_12_0;
  results[k++] = -0.266999819050469664e0 * wr_8_8 +
                 0.184671982711307055e0 * wr_10_8 +
                 0.129344955745590487e0 * wr_12_8;
  results[k++] =
      0.325382540224262837e0 * wr_4_4 + 0.128864739246237845e0 * wr_6_4 -
      0.103673396413577334e0 * wr_8_4 - 0.209646639822944286e0 * wr_10_4 -
      0.835689073143725545e-1 * wr_12_4;
  results[k++] =
      0.326215787530260158e0 * wr_4_4 + 0.276845869540331931e0 * wr_6_4 +
      0.254544209876396998e0 * wr_8_4 + 0.201952383208679452e0 * wr_10_4 +
      0.110092102069186451e0 * wr_12_4;
  results[k++] =
      0.217843133799424887e0 * wr_8_0 + 0.190498294305503172e0 * wr_6_0 +
      0.193544900697200635e0 * wr_10_0 + 0.566946709513840841e-1 * wr_2_0 +
      0.112739186282596937e0 * wr_12_0 + 0.129067674647454455e0 * wr_4_0;
  results[k++] =
      0.526468013353390584e-2 * wr_4_4 + 0.260628471396737041e-1 * wr_6_4 -
      0.776668396274368308e-1 * wr_8_4 + 0.620199950759436499e-1 * wr_10_4 -
      0.160361915468450967e-1 * wr_12_4;
  results[k++] = 0.113849105376756987e0 * wr_8_8 +
                 0.220484314427224788e0 * wr_10_8 -
                 0.352978396440891155e0 * wr_12_8;
  results[k++] = -0.567884612487443140e0 * wr_12_12;
  results[k++] =
      -0.419997614835132868e-1 * wr_4_4 - 0.264025654929548526e-1 * wr_6_4 +
      0.212791457911221035e0 * wr_8_4 - 0.193082399603227469e0 * wr_10_4 +
      0.524162067573024633e-1 * wr_12_4;
  results[k++] = -0.247193799112559010e0 * wr_8_8 -
                 0.141844294425225526e0 * wr_10_8 +
                 0.431100575400451815e0 * wr_12_8;
  results[k++] = -0.409507417774094783e0 * wr_12_12;
  results[k++] =
      -0.131804893517285963e0 * wr_4_4 + 0.994287741776284474e-1 * wr_6_4 +
      0.259259043722046845e0 * wr_8_4 - 0.302968448163156376e0 * wr_10_4 +
      0.886595265359017009e-1 * wr_12_4;
  results[k++] = 0.317963247249875956e0 * wr_8_8 -
                 0.651618178316951212e-1 * wr_10_8 -
                 0.308067191135327536e0 * wr_12_8;
  results[k++] =
      -0.193649167310370844e0 * wr_2_0 + 0.382070031081369990e0 * wr_4_0 -
      0.338351284742947271e0 * wr_6_0 + 0.165822641529632739e0 * wr_8_0 -
      0.440721126321500989e-1 * wr_10_0 + 0.500100818715202825e-2 * wr_12_0;
  results[k++] = -0.198943907052172547e0 * wr_12_12;
  results[k++] =
      -0.222278591318725993e0 * wr_4_4 + 0.314397771077243048e0 * wr_6_4 +
      0.108401651917320340e0 * wr_8_4 - 0.267078336863974189e0 * wr_10_4 +
      0.884793756188435767e-1 * wr_12_4;
  results[k++] = -0.266999819050469664e0 * wr_8_8 +
                 0.184671982711307055e0 * wr_10_8 +
                 0.129344955745590487e0 * wr_12_8;
  results[k++] =
      0.362787667035850314e0 * wr_6_0 - 0.559016994374947425e0 * wr_2_0 +
      0.652318454356683376e-1 * wr_10_0 - 0.223388075691359318e0 * wr_8_0 +
      wr_0_0 - 0.132352941176470588e0 * wr_4_0 -
      0.777358998519316193e-2 * wr_12_0;
  results[k++] = 0.617355660738176478e-1 * wr_12_12;
  results[k++] =
      -0.201058550818080874e0 * wr_4_4 + 0.360219079821055604e0 * wr_6_4 -
      0.719055212128923202e-1 * wr_8_4 - 0.115538952131732250e0 * wr_10_4 +
      0.484835210577378377e-1 * wr_12_4;
  results[k++] = 0.135393619849349082e0 * wr_8_8 -
                 0.137578378653302617e0 * wr_10_8 -
                 0.218632879352114973e-1 * wr_12_8;
  results[k++] = 0.509148677599930858e-1 * wr_8_8 -
                 0.178947243233732590e0 * wr_10_8 -
                 0.789283689030702451e0 * wr_12_8;
  results[k++] =
      0.235443653167489671e-2 * wr_4_4 + 0.118935301819380324e-2 * wr_6_4 +
      0.473640908194154167e-1 * wr_8_4 + 0.223918956876966093e0 * wr_10_4 -
      0.251006100792671977e0 * wr_12_4;
  results[k++] =
      -0.221358179119524027e-1 * wr_4_0 + 0.112016598604741903e0 * wr_6_0 -
      0.176131836660457966e0 * wr_8_0 + 0.113808060762078170e0 * wr_10_0 -
      0.265596045579718760e-1 * wr_12_0;
  results[k++] = 0.180524826465798776e0 * wr_8_8 +
                 0.332962798757572720e-1 * wr_10_8 -
                 0.437265758704229947e-1 * wr_12_8;
  results[k++] =
      0.306722890324758227e-1 * wr_4_4 + 0.723064034824943935e-1 * wr_6_4 +
      0.171398061091745438e0 * wr_8_4 + 0.157794048534475185e0 * wr_10_4 -
      0.374683811716415964e0 * wr_12_4;
  results[k++] =
      0.231154238558825858e-1 * wr_2_0 + 0.288660167418604205e0 * wr_8_0 -
      0.268299752956134631e0 * wr_10_0 - 0.125418584509237810e0 * wr_4_0 +
      0.727791322282591577e-1 * wr_12_0;
  results[k++] = -0.339917009370036423e0 * wr_8_8 -
                 0.261228425384549983e0 * wr_10_8 -
                 0.225047414927152935e0 * wr_12_8;
  results[k++] =
      0.140905358126258802e0 * wr_4_4 + 0.186014203679800799e0 * wr_6_4 +
      0.132280706731437928e0 * wr_8_4 - 0.107962298288486859e0 * wr_10_4 -
      0.274149631506547829e0 * wr_12_4;
  results[k++] = 0.106929137073877639e0 * wr_12_12;
  results[k++] =
      -0.617033019930283577e-1 * wr_8_0 + 0.253800522537456089e0 * wr_10_0 +
      0.338499677854773947e-1 * wr_4_0 - 0.899433148599197519e-1 * wr_12_0 +
      0.223035642799942793e0 * wr_2_0 - 0.293771182607064129e0 * wr_6_0;
  results[k++] = 0.390847714332897752e0 * wr_8_8 +
                 0.236957768506769476e0 * wr_10_8 +
                 0.118654086642787759e0 * wr_12_8;
  results[k++] =
      0.325382540224262837e0 * wr_4_4 + 0.128864739246237845e0 * wr_6_4 -
      0.103673396413577334e0 * wr_8_4 - 0.209646639822944286e0 * wr_10_4 -
      0.835689073143725545e-1 * wr_12_4;
  results[k++] = 0.617355660738176478e-1 * wr_12_12;
  results[k++] =
      -0.139533718090711660e0 * wr_6_0 - 0.223606797749978970e-1 * wr_2_0 +
      0.739558612386148629e-1 * wr_10_0 + 0.159562911208113798e0 * wr_8_0 +
      wr_0_0 - 0.397058823529411765e0 * wr_4_0 -
      0.505061246466550007e-1 * wr_12_0;
  results[k++] = -0.259259043722046844e0 * wr_8_8 -
                 0.730554938219604893e-1 * wr_10_8 -
                 0.837300181354143412e-2 * wr_12_8;
  results[k++] =
      0.384997813598871796e0 * wr_4_4 - 0.108910582658438767e0 * wr_6_4 -
      0.187757168745195031e0 * wr_8_4 - 0.833242498287737590e-1 * wr_10_4 +
      0.986135415264503971e-2 * wr_12_4;
  results[k++] =
      0.138181360429102848e0 * wr_12_0 - 0.266587441316654061e-2 * wr_4_0 +
      0.227651373725197132e-1 * wr_6_0 + 0.477270393518244369e-1 * wr_8_0 -
      0.209876221902858702e0 * wr_10_0;
  results[k++] =
      -0.843023510157103941e-3 * wr_4_4 + 0.258069156204119241e-1 * wr_6_4 +
      0.712280728553896537e-1 * wr_8_4 + 0.185785121638104470e0 * wr_10_4 +
      0.701021888783866593e0 * wr_12_4;
  results[k++] = 0.433606607669281362e-1 * wr_8_8 -
                 0.346558668630361719e0 * wr_10_8 +
                 0.455120631312678830e0 * wr_12_8;
  results[k++] =
      -0.358740222602056405e-1 * wr_6_0 + 0.112814663322953191e0 * wr_8_0 +
      0.273358119869531330e0 * wr_10_0 - 0.298556419145017211e0 * wr_12_0 -
      0.319011088968586535e-1 * wr_4_0;
  results[k++] =
      0.164736617977443768e-1 * wr_4_4 - 0.466017219198997952e-1 * wr_6_4 -
      0.115376258873559208e0 * wr_8_4 - 0.187529699677747931e0 * wr_10_4 -
      0.221971047340948528e0 * wr_12_4;
  results[k++] = 0.156339085733159101e0 * wr_8_8 -
                 0.336413282612427652e0 * wr_10_8 -
                 0.196915292726328621e0 * wr_12_8;
  results[k++] =
      -0.354384955969167018e-1 * wr_2_0 + 0.212422987577782883e0 * wr_8_0 +
      0.157613284548269068e0 * wr_6_0 - 0.118780689545176191e-1 * wr_10_0 +
      0.143018576184885278e-1 * wr_4_0 - 0.270671146362399627e0 * wr_12_0;
  results[k++] =
      -0.105949643925370352e0 * wr_4_4 - 0.666037690188529811e-1 * wr_6_4 -
      0.789401513656923614e-1 * wr_8_4 - 0.120940259093792649e0 * wr_10_4 -
      0.157327038175406900e0 * wr_12_4;
  results[k++] =
      -0.386937361458983477e-1 * wr_4_4 + 0.229864433512654768e0 * wr_6_4 -
      0.373632048256353542e0 * wr_8_4 + 0.244590298755523968e0 * wr_10_4 -
      0.574572096538888089e-1 * wr_12_4;
  results[k++] = 0.278488886157896097e0 * wr_8_8 -
                 0.721328400577933941e-1 * wr_10_8 -
                 0.116922607211205258e0 * wr_12_8;
  results[k++] =
      0.158918539009192778e0 * wr_2_0 + 0.149513857826345176e0 * wr_6_0 -
      0.732752732677995289e-1 * wr_8_0 - 0.198375225837664903e0 * wr_10_0 +
      0.249229238447844365e0 * wr_4_0 - 0.861858144808332131e-1 * wr_12_0;
  results[k++] =
      0.326215787530260158e0 * wr_4_4 + 0.276845869540331931e0 * wr_6_4 +
      0.254544209876396998e0 * wr_8_4 + 0.201952383208679452e0 * wr_10_4 +
      0.110092102069186451e0 * wr_12_4;
  results[k++] =
      -0.201058550818080874e0 * wr_4_4 + 0.360219079821055604e0 * wr_6_4 -
      0.719055212128923202e-1 * wr_8_4 - 0.115538952131732250e0 * wr_10_4 +
      0.484835210577378377e-1 * wr_12_4;
  results[k++] = -0.259259043722046844e0 * wr_8_8 -
                 0.730554938219604893e-1 * wr_10_8 -
                 0.837300181354143412e-2 * wr_12_8;
  results[k++] =
      -0.199640550499018221e0 * wr_6_0 + 0.335410196624968455e0 * wr_2_0 -
      0.612663837070562809e-1 * wr_10_0 - 0.179201423356804727e0 * wr_8_0 +
      wr_0_0 - 0.305429864253393665e-1 * wr_4_0 +
      0.162134876834028806e-1 * wr_12_0;
  results[k++] =
      -0.496264789423463641e0 * wr_4_4 - 0.233977464546027362e0 * wr_6_4 -
      0.107564560996772707e0 * wr_8_4 - 0.320982020986474445e-1 * wr_10_4 +
      0.124059744634372071e-2 * wr_12_4;
  results[k++] =
      0.196887873768193905e-3 * wr_4_4 - 0.174052717744917553e-1 * wr_6_4 +
      0.726143779331416286e-1 * wr_8_4 + 0.169883101827247152e0 * wr_10_4 -
      0.428799485912565999e0 * wr_12_4;
  results[k++] =
      0.435829887342648020e-2 * wr_4_0 + 0.147688628401655201e-1 * wr_6_0 +
      0.185777248716753911e-1 * wr_8_0 - 0.462155808526929001e-1 * wr_10_0 -
      0.591657237582726803e0 * wr_12_0;
  results[k++] =
      -0.117073216542638478e-2 * wr_4_4 + 0.397420819869103583e-1 * wr_6_4 -
      0.207253770483833586e0 * wr_8_4 + 0.329847097051298856e0 * wr_10_4 -
      0.159357627347831256e0 * wr_12_4;
  results[k++] =
      0.628280809281342104e-2 * wr_4_4 - 0.938029967173293278e-1 * wr_6_4 -
      0.257463066330550766e-1 * wr_8_4 + 0.196682808316713247e0 * wr_10_4 +
      0.451357017478251602e0 * wr_12_4;
  results[k++] =
      -0.141943731480154114e-1 * wr_4_0 - 0.598579417640219506e-1 * wr_6_0 -
      0.147901271370562473e0 * wr_8_0 - 0.267587053849099947e0 * wr_10_0 -
      0.347920682308100537e0 * wr_12_0;
  results[k++] =
      -0.211056742613990988e-1 * wr_4_4 + 0.191056152529998768e0 * wr_6_4 -
      0.203799299048920114e0 * wr_8_4 - 0.228707811823347087e0 * wr_10_4 +
      0.252811722477110759e0 * wr_12_4;
  results[k++] =
      -0.591506824619384263e-1 * wr_4_4 + 0.167329139647687793e0 * wr_6_4 +
      0.242393462560398694e0 * wr_8_4 + 0.178048790025967987e0 * wr_10_4 +
      0.894607541000394046e-2 * wr_12_4;
  results[k++] =
      -0.415484503474404721e-1 * wr_2_0 - 0.864746031917239030e-1 * wr_8_0 -
      0.875643547223788952e-1 * wr_4_0 - 0.109992504465904240e0 * wr_6_0 -
      0.945590424599582920e-2 * wr_10_0 + 0.895054733000829664e-1 * wr_12_0;
  results[k++] = 0.781695428665795503e-1 * wr_8_8 -
                 0.256982368662271122e0 * wr_10_8 +
                 0.164096077271940518e0 * wr_12_8;
  results[k++] =
      -0.137851330395406567e0 * wr_4_4 + 0.319769201546237394e0 * wr_6_4 +
      0.137144815270885202e0 * wr_8_4 - 0.147116759618800787e0 * wr_10_4 -
      0.120337952295340908e0 * wr_12_4;
  results[k++] =
      0.249382439876115418e0 * wr_4_4 - 0.141093719872337454e-1 * wr_6_4 -
      0.142700515826236760e0 * wr_8_4 - 0.177429488010353060e0 * wr_10_4 -
      0.119323291116460426e0 * wr_12_4;
  results[k++] =
      0.217843133799424887e0 * wr_8_0 + 0.190498294305503172e0 * wr_6_0 +
      0.193544900697200635e0 * wr_10_0 + 0.566946709513840841e-1 * wr_2_0 +
      0.112739186282596937e0 * wr_12_0 + 0.129067674647454455e0 * wr_4_0;
  results[k++] = 0.135393619849349082e0 * wr_8_8 -
                 0.137578378653302617e0 * wr_10_8 -
                 0.218632879352114973e-1 * wr_12_8;
  results[k++] =
      0.384997813598871796e0 * wr_4_4 - 0.108910582658438767e0 * wr_6_4 -
      0.187757168745195031e0 * wr_8_4 - 0.833242498287737590e-1 * wr_10_4 +
      0.986135415264503971e-2 * wr_12_4;
  results[k++] =
      -0.496264789423463641e0 * wr_4_4 - 0.233977464546027362e0 * wr_6_4 -
      0.107564560996772707e0 * wr_8_4 - 0.320982020986474445e-1 * wr_10_4 +
      0.124059744634372071e-2 * wr_12_4;
  results[k++] =
      0.182467169810930632e0 * wr_6_0 + 0.514295634824951631e0 * wr_2_0 +
      0.235944972852417392e-1 * wr_10_0 + 0.859184906505228144e-1 * wr_8_0 +
      wr_0_0 + 0.315610859728506787e0 * wr_4_0 -
      0.342037959348499125e-2 * wr_12_0;
  if (k == n_elems)
    return;
#endif
}
#endif
#endif

// **********************************************************************
